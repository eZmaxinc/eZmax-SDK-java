openapi: 3.0.3
info:
  contact:
    email: support-api@ezmax.ca
    name: API Support department
    url: https://www.ezmax.ca/en/contact
  description: This API expose all the functionnalities for the eZmax and eZsign applications.
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
  termsOfService: https://www.ezmax.ca/TODO
  title: eZmax API Definition
  version: 1.1.4
  x-logo:
    url: https://github.com/eZmaxinc/eZmax-API/raw/master/docs/resources/images/logo.png
    backgroundColor: '#fafafa'
    altText: eZmax Logo
  x-restgeninfo: {}
servers:
- description: The server endpoint where to send your region specific API requests.
  url: https://{sInfrastructureenvironmenttypeDescription}.api.appcluster01.{sInfrastructureregionCode}.ezmax.com/rest
  variables:
    sInfrastructureenvironmenttypeDescription:
      default: prod
      description: The environment on on which to call the API. Should always be "prod"
        unless instructed otherwise by support.
      enum:
      - prod
      - stg
      - qa
      - dev
    sInfrastructureregionCode:
      default: ca-central-1
      description: The region where your services are hosted.
      enum:
      - ca-central-1
- description: The server endpoint where to send your global API requests.
  url: https://{sInfrastructureenvironmenttypeDescription}.api.global.ezmax.com/
  variables:
    sInfrastructureenvironmenttypeDescription:
      default: prod
      description: The environment on on which to call the API. Should always be "prod"
        unless instructed otherwise by support.
      enum:
      - prod
      - stg
      - qa
      - dev
security:
- Authorization: []
tags:
- description: |-
    We publish everything related to our API on github at this location: <a href="https://github.com/eZmaxinc" target="_blank">https://github.com/eZmaxinc</a>. You'll find git repos for the specification, documentation, SDKs and samples.

    Documentation, SDKs and samples are provided in english only for easier maintenance, but we also have french speaking integrators that can help you out.

    Most of our SDKs provide language specific documentation, but you'll find more details on this page about the general use of the API. Both the SDK's specific document (if you choose to use a SDK) and this documentation can be used in complementarity.

    If you find any mistake or omission in the documentation, please notify us. We'll quickly fix the issue.

    ## Onboarding
    We highly recommend to schedule an online meeting with your technical team and an eZmax integrator. During this meeting, we go through requirements, business logic, configuration, api key generation, and we go through the list of functions you might need to implement to achieve your goals. Make sure you take this opportunity to speed up your integration project.

    If you need help understanding how to use this API, don't waste too much time searching in it. Contact support-api@ezmax.ca, we're here to help. We are developpers so we know programmers don't like to waste time in documentation. If you don't find what you need in the documentation, let us know, we'll improve it and put you rapidly up on track.

    ## Open API
    We highly believe in open standards and open source. We have adopted the Open API vision where all of the functionnalities of our applications are accessible with open source definition files. We use our own public API's to build our interfaces so you can do pretty much everything we can do. Open API has a rich toolset from editor, generators, mock servers, validators, etc. Learn more at <a href="https://www.openapis.org/" target="_blank">OpenAPI Initiative</a>

    If you need  our Open API Spec file to use in your toolset, here is a direct link to it: <a href="https://raw.githubusercontent.com/eZmaxinc/eZmax-API/master/specs/ezmax.v1.1.json" target="_blank">ezmax.v1.1.json</a>

    ## SDK
    We provide SDKs for customers. They are generated using <a href="https://openapi-generator.tech/" target="_blank">OpenAPI Generator</a>, we encourage customers to use them as we also provide samples for them. You can choose to build your own implementation manually or can use any compatible OpenAPI 3.0 generator like <a href="https://openapi-generator.tech/" target="_blank">OpenAPI Generator</a>, <a href="https://swagger.io/tools/swagger-codegen/" target="_blank">Swagger Codegen</a> or any commercial generators.

    We try to make it as easy as possible for you to use our SDKs so we publish packages on NPM and Composer. If you don't find your favorite language supported or it we could make your like easier by automating package distribution, let us know !
  name: General_Introduction
  x-displayName: Introduction
- description: "## Authorization\n\nExcept for a few functions that do not require\
    \ authorization, most of the functions require an API key that is sent in the\
    \ request headers. The header name is \"Authorization\". \n\nThere are 4 types\
    \ of API Key that can be used to make requests to the API.\n\n1. **API type key**\
    \ which is static and not session based. It can be generated from the admin console.\
    \ This is the most common type of authentication for \"server to server\" kind\
    \ of integration. Never use this in a web based (client) application as the key\
    \ could be leaked. This type of key begins with the letter **A**.\n\n2. **Delegated\
    \ type key** which has an expiration time. It is commonly used in mobile or web\
    \ application where you cannot use an **API type key** that could be leaked. The\
    \ application would query a server part that will generate a **Delegated type\
    \ key** using an **API type key**. The **Delegated type key** could now be used\
    \ by the mobile or web page application without leaking the **API type key**.\
    \ This type of key begins with the letter **D**.\n\n3. **User type key** which\
    \ are session based and can be retrieved after a successful authentication. This\
    \ type of key is reserved to specific situations where the other types of key\
    \ are not desirable. This type of key begins with the letter **U**.\n\n4. **Special\
    \ type key** which are for special cases where other types of keys cannot be used.\
    \ This type of key is reserved to specific situations. This type of key begins\
    \ with the letter **S**.\n\n## IP restriction\n\nEach API key can be restricted\
    \ to specific IP addresse(s). This is an optional but recommended security feature\
    \ you should put in place if all your requests will be coming from a specific\
    \ range. You can configure the allowed ranges from the eZmax administration console.\n\
    \n## Permissions\n\nEach API Key can be configured to have specific permission(s)\
    \ so we highly recommend to use the \"Least privileges\" principle. For example,\
    \ instead of allowing all permissions to an API Key, you should perhaps create\
    \ an API Keys each for each of your application having just the specific permissions\
    \ needed. You can configure the API Key's permission in eZmax's administration\
    \ console.\n\n## Request Signing\n\nRequest Signing is a process of signing the\
    \ request with a **Secret** that is not transmitted over the Wire. The signing\
    \ process improves security in case your API Key is leaked or during a MITM attack\
    \ (Man in the Middle). It will also prevent request manipulation or replay attack.\
    \ Since all requests must use **https** these kinds of attacks are hard to conduct\
    \ but sometimes customers might not be aware their underlying library does not\
    \ verify SSL Certs validity or that their application can disclose their API key\
    \ if it's not well secured. It takes a bit of effort to sign requests but it's\
    \ highly recommended to do so.\n\nMandatory requirements of signing varies by\
    \ used key type. For **API** type keys (most common type), you can configure if\
    \ signing is mandatory or not in eZmax's administration console. **Delegated**,\
    \ **User** and **Special** type keys must sign requests otherwise requests will\
    \ fail.\n\n### How to sign a request\n\nTo apply a signature to your request you\
    \ will need to send 3 additional HTTP Headers to the request:\n- Ezmax-Date\n\
    - Ezmax-Fingerprint\n- Ezmax-Signature\n\n### Ezmax-Date\n\n**Ezmax-Date** Is\
    \ the date/time when you send the request. It needs to be a <a href=\"https://en.wikipedia.org/wiki/ISO_8601\"\
    \ target=\"_blank\">ISO 8601</a> formatted date/time. It's a format that supports\
    \ timezones so you can either use your local timezone of GMT. Be aware certain\
    \ implementation adds milliseconds to the formatted date which won't be accepted\
    \ by the API (ex: Javascript's toISOString function).\n\nThere is a tolerance\
    \ of Â±5 minutes clock skew between the date/time you specify and the server's\
    \ time so make sure your time is correct. Usage of a NTP server is recommended.\
    \ Compute the date/time as close as possible to the actual sending of the request.\
    \ For example, don't set the current time at the beginning of a long running script\
    \ that sends 50 requests to the server with the same time/date as you might receive\
    \ errors related to clock skew.\n\nExamples:\n- 2000-12-31T23:59:59Z\n- 2000-12-31T23:59:59-05:00\n\
    \n### Ezmax-Fingerprint\n\n**Ezmax-Fingerprint** Is a fingerprint (aka hash) representing\
    \ the request you are sending. Any alteration in any part of the request would\
    \ produce a different fingerprint. The hash is computed using <a href=\"https://en.wikipedia.org/wiki/SHA-2\"\
    \ target=\"_blank\">SHA256</a>. Most programming languages offer an implementation\
    \ of SHA256. To make sure your implementation is producing expected values, try\
    \ to hash the value \"foo\", it should produce the value \"2c26b46b68ffc68ff99b453c1d30413413422d706483bfa0f98a5e886266e7ae\"\
    .\n\nTo compute the Fingerprint, you'll need to concatenate the **Method**, the\
    \ **URL**, the **Body**, the **API Key** and the **Date**. All these values will\
    \ need to be separated by a line Feed caracter (\\n). Make sure your **Method**\
    \ is Uppercase (Shoud be \"GET\", not \"Get\" or \"get\"). Make sure your URL\
    \ Scheme and Host or the **URL** are lowercase (Should be \"https://www.example.com\"\
    , not \"HTTPS://WWW.EXAMPLE.COM\"). Also make sure the the URI part of the **URL**\
    \ is properly URL encoded (Should be \"/Path%20with%20Spaces/?Key=Value%20with%20Spaces\"\
    , not \"/Path with Spaces/?Key=Value with Spaces\". If the **Body** is empty (ex:\
    \ GET request don't have a body), use an empty string.\n\nOnce the SHA256 hash\
    \ is computed, prefix it with \"v1=\" which is future proofing version identifier.\n\
    \nHere is an example implementation in PHP:\n\n    public static function getFingerprintV1\
    \ ($sAuthorization, $dtDate, $sMethod, $sURL, $sBody = '') {\n        $sContentToHash\
    \ = \"$sMethod\\n$sURL\\n$sBody\\n$sAuthorization\\n$dtDate\";\n        return\
    \ 'v1='.hash('sha256', $sContentToHash);\n    }\n\nHere are two examples of what\
    \ a GET and POST requests Fingerprints could look like. You can validate if your\
    \ algorithm work by using these sample values and comparing them to the expected\
    \ values. In the example below the litteral \"\\n\" should be replaced with a\
    \ linefeed character.\n\n    GET\\n\n    https://prod.api.appcluster01.ca-central-1.ezmax.com/rest/1/object/activesession/getCurrent\\\
    n\n    \\n\n    ThisIsMyAuthorizationKey\\n\n    2000-12-31T23:59:59Z\nExpected\
    \ result for **Ezmax-Fingerprint** (GET): v1=8f6f3ed75edb6e2cbe777b4fda5cab1a6adaebadc758780eb82c3d49934f354a\n\
    \n    POST\\n\n    https://prod.api.global.ezmax.com/1/module/sspr/sendUsernames\\\
    n\n    {\"pksCustomerCode\": \"demo\",\"fkiLanguageID\": \"2\",\"eUserTypeSSPR\"\
    : \"Native\",\"sEmailAddress\": \"example@domain.com\"}\\n\n    ThisIsMyAuthorizationKey\\\
    n\n    2000-12-31T23:59:59Z\nExpected result for **Ezmax-Fingerprint** (POST):\
    \ v1=6dbdbc26437f1216f9cd0068a4fc35c272a062b1f638c7557d497ebbf3702ded\n\n### Ezmax-Signature\n\
    \n**Ezmax-Signature** Is the actual signature proving the request was generated\
    \ by the key owner using its secret. The signature is computed using <a href=\"\
    https://en.wikipedia.org/wiki/HMAC\" target=\"_blank\">HMAC</a> and <a href=\"\
    https://en.wikipedia.org/wiki/SHA-2\" target=\"_blank\">SHA256</a>. Don't confuse\
    \ **SHA256 (aka SHA2-256)** and **SHA3-256**, these are 2 distinct algorithms.\
    \ Most programming languages offer an implementation of HMAC with SHA256. To make\
    \ sure your implementation is producing expected values, try to hash the value\
    \ \"foo\" with the key \"bar\", it should produce the value \"147933218aaabc0b8b10a2b3a5c34684c8d94341bcf10a4736dc7270f7741851\"\
    .\n\nTo compute the Signature, you'll need to concatenate the **Ezmax-Fingerprint**,\
    \ the **API Key** and the **Ezmax-Date**. The 3 values are concatenated WITHOUT\
    \ separators. Then calculate the HMAC using SHA256 using your **Secret** as the\
    \ key.\n\nOnce the HMAC-SHA256 hash is computed, prefix it with \"v1=\" which\
    \ is future proofing version identifier.\n\nHere is an example implementation\
    \ in PHP:\n\n    public static function getSignatureV1 ($sAuthorization, $dtDate,\
    \ $sFingerprint, $sSecret) {\n        $sContentToSign = \"$sFingerprint$sAuthorization$dtDate\"\
    ;\n        return 'v1='.hash_hmac('sha256', $sContentToSign, $sSecret);\n    }\n\
    \nHere are two examples of what the GET and POST requests Signature would be.\
    \ You can validate if your algorithm work by using these sample values and comparing\
    \ them to the expected values. For the below examples, we have used the same **API\
    \ Key**, **Fingerprint** and **Date** as in the Fingerprint section above. The\
    \ only new variable is the **Secret** which is \"ThisIsTheSecretAssociatedToTheAuthorizationKey\"\
    \ for this example.\n\n    v1=8f6f3ed75edb6e2cbe777b4fda5cab1a6adaebadc758780eb82c3d49934f354aThisIsMyAuthorizationKey2000-12-31T23:59:59Z\n\
    Expected result for **Ezmax-Signature** (GET): v1=3a95fde64d27527745bcb0dd91be8caf7917c6778197e22d1d56c87245f979f5\n\
    \n    v1=6dbdbc26437f1216f9cd0068a4fc35c272a062b1f638c7557d497ebbf3702dedThisIsMyAuthorizationKey2000-12-31T23:59:59Z\n\
    Expected result for **Ezmax-Signature** (POST): v1=71e05f01eaab704ec76a078a9a5c49abe9d5a490786e43b86156d281acda7cba\n\
    \n### Wrapping up the examples\n\nThe whole process was detailed above but here\
    \ is summary of what your http headers should look like to sign these example\
    \ requests considering the following common variables:\n\n| Variable      | Example\
    \ value                                  |\n| ------------- | ----------------------------------------------\
    \ |\n| Date          | 2000-12-31T23:59:59Z                           |\n| Authorization\
    \ | ThisIsMyAuthorizationKey                       |\n| Secret        | ThisIsTheSecretAssociatedToTheAuthorizationKey\
    \ |\n\nFor a GET request to https://prod.api.appcluster01.ca-central-1.ezmax.com/rest/1/object/activesession/getCurrent:\n\
    \n    Authorization: ThisIsMyAuthorizationKey\n    Ezmax-Date: 2000-12-31T23:59:59Z\n\
    \    Ezmax-Fingerprint: v1=8f6f3ed75edb6e2cbe777b4fda5cab1a6adaebadc758780eb82c3d49934f354a\n\
    \    Ezmax-Signature: v1=3a95fde64d27527745bcb0dd91be8caf7917c6778197e22d1d56c87245f979f5\n\
    \nFor a POST request to https://prod.api.global.ezmax.com/1/module/sspr/sendUsernames\
    \ with this body content = '{\"pksCustomerCode\": \"demo\",\"fkiLanguageID\":\
    \ \"2\",\"eUserTypeSSPR\": \"Native\",\"sEmailAddress\": \"example@domain.com\"\
    }' :\n\n    Authorization: ThisIsMyAuthorizationKey\n    Ezmax-Date: 2000-12-31T23:59:59Z\n\
    \    Ezmax-Fingerprint: v1=6dbdbc26437f1216f9cd0068a4fc35c272a062b1f638c7557d497ebbf3702ded\n\
    \    Ezmax-Signature: v1=71e05f01eaab704ec76a078a9a5c49abe9d5a490786e43b86156d281acda7cba"
  name: General_Security
  x-displayName: Security
- description: "## Variables\n\nWe use a custom type base naming convention for variables.\n\
    \nEach variable name is composed of up to 6 indicators\n1. **Array** (Optional)\
    \ *a_* when we are dealing with an array.\n2. **Key** (Optional) *pk* when we\
    \ are dealing with a primary key or *fk* for foreign key.\n3. **Type** Will always\
    \ be in lowercase and represent the type of the variable.\n4. **Table** The first\
    \ letter in uppercase and the rest in lowercase and represents the table name\
    \ from where the variable was retrieved.\n5. **Field** (Optional) The first letter\
    \ is uppercase and the rest is lowercase and represents the field name.\n6. **Discriminator**\
    \ (Optional) Will be present only when two identical fields are stored in the\
    \ same table to differenciate one from the other. \n\nHere is a summary table\
    \ explaining the convention.\n\n|  | Array | Key | Type | Table | Field | Discriminator\
    \ |\n|---|---|---|---|---|---|---|\n| **Optional** | Yes | Yes | No | No | Yes\
    \ | Yes |\n| **Naming** | Fixed | Fixed | Lowercase | First letter is uppercase\
    \ and the rest is lowercase | First letter is uppercase and the rest is lowercase\
    \ except for the Field *ID* wich is always uppercase | First letter is uppercase\
    \ and the rest is lowercase |\n| **Values** | a_ | pk<br>fki | s (string)<br>t\
    \ (text)<br>c (char)<br>sha (sha-1 string)<br>md5 (md5 string)<br>bin (binary\
    \ string)<br>i (integer)<br>f (float)<br>d (decimal)<br>e (enum)<br>dt (date or\
    \ datetime)<br>b (boolean)<br>obj (object)<br>m (mixed) | Any | Any | Any |\n\n\
    Here are examples of typical variables' names\n\n| Variable name | Array | key\
    \ | Type | Table | Field | Discriminator | Explanation | Example |\n|---|---|---|---|---|---|---|---|---|\n\
    | pkiContactID |  | pk | i | Contact | ID |  | Primary key of type integer for\
    \ the field name *ID* in table *Contact* | 133 |\n| fkiContactID |  | fk | i |\
    \ Contact | ID |  | Foreign key of type integer pointing to the field *pkiContactID*\
    \ in table *Contact* | 133 |\n| fkiContactIDOwner |  | fk | i | Contact | ID |\
    \ Owner | Foreign key of type integer pointing to the field *pkiContactID* in\
    \ table *Contact* with a discriminator of *Owner* | 266 |\n| sContactFirstname\
    \ |  |  | s | Contact | Firstname |  | String for the Field *Firstname* in table\
    \ *Contact* | John |\n| bPurchaseIspaid |  |  | b | Purchase | Ispaid |  | Boolean\
    \ for the field Ispaid in table *Purchase* | true |\n| dPurchaseTotal |  |  |\
    \ d | Purchase | Total |  | Decimal number for the field *Total* in table *Purchase*\
    \ | 2199.78 |\n| objEzsignfolder |  |  | obj | Esignfolder |  |  | Object of type\
    \ *Ezsignfolder* | {\"pkiEzsignfolderID\": 122, \"sEzsignfolderName\": \"Test\"\
    } |\n| a_objEzsignfolder | a_ |  | obj | Ezsignfolder |  |  | Array of objects\
    \ of type *Ezsignfolder* | [{\"pkiEzsignfolderID\": 122, \"sEzsignfolderName\"\
    : \"Test\"}, {\"pkiEzsignfolderID\": 234, \"sEzsignfolderName\": \"Test 2\"}]\
    \ |\n| a_sContactFirstname | a_ |  | s | Contact | Firstname |  | An array of\
    \ string for the field *Firstname* in table *Contact* | ['John', 'Mary', 'Jane']\
    \ |\n| a_pkiContactIDOwner | a_ | pk | i | Contact | ID | Owner | An array of\
    \ foreign keys of type integer pointing to the field *pkiContactID* in table *Contact*\
    \ with a discriminator of *Owner* | [266, 277, 288] |\n\n## List filter\n\nEvery\
    \ GetList Endpoint has a *sFilter* query parameter that can be used to filter\
    \ the returned elements.\n\nThe sFilter parameter's syntax is not documented at\
    \ the endpoint's level since it would be redundant. This section documents the\
    \ syntax.\n\n* Every property returned by the endpoint can be used to build the\
    \ *sFilter* string. Except for rare exceptions.\n* Each filter can be joined by\
    \ the *and* operator\n* Not every property supports every operator. The list of\
    \ valid operators is based on the variable type. For example, only strings support\
    \ the *like* operator. You can refer to the *Variables* article in the *Conventions*\
    \ section of the documentation to learn about variable types.\n* Variables of\
    \ type *Enum* have predetermined list of filters which will be documented at the\
    \ endpoint's level.\n* *sFilter*'s value must be url encoded.\n* String values\
    \ need to be enclosed in single quotes\n\nValid operators for boolean values:\n\
    \n| Operator | Description | Examples |\n|---|---|---|\n| eq | Equals | bEzsigndocumentEzsignclause\
    \ eq true<br>bEzsigndocumentEzsignclause eq false |\n\nValid operators for integer\
    \ values:\n\n| Operator | Description | Examples |\n|---|---|---|\n| eq | Equals\
    \ | iEzsigndocumentPagetotal eq 10 |\n| gt | Greater than | iEzsigndocumentPagetotal\
    \ gt 10 |\n| gte | Greater than or equal to | iEzsigndocumentPagetotal gte 10\
    \ |\n| lt | Less than | iEzsigndocumentPagetotal lt 100 |\n| lte | Less than or\
    \ equal to | iEzsigndocumentPagetotal lte 100 |\n| in | in list | fkiEzsignfoldertypeID\
    \ in '1,2,3' |\n\nValid operators for date and datetime values:\n\n| Operator\
    \ | Description | Examples |\n|---|---|---|\n| eq | Equals | dtEzsigndocumentDuedate\
    \ eq '2005-07-01 18:15:59'<br>dtEzsigndocumentDuedate eq '2005-07-01' |\n| gt\
    \ | Greater than | dtEzsigndocumentDuedate gt '2001-01-01 00:00:00'<br>dtEzsigndocumentDuedate\
    \ gt '2001-01-01' |\n| gte | Greater than or equal to | dtEzsigndocumentDuedate\
    \ gte '2001-01-01 00:00:00'<br>dtEzsigndocumentDuedate gte '2001-01-01' |\n| lt\
    \ | Less than | dtEzsigndocumentDuedate lt '2025-12-31 23:59:59'<br>dtEzsigndocumentDuedate\
    \ lt '2025-12-31' |\n| lte | Less than or equal to | dtEzsigndocumentDuedate lte\
    \ '2025-12-31 23:59:59'<br>dtEzsigndocumentDuedate lte '2025-12-31' |\n| rg |\
    \ In the range of<br>*see range documentation*| dtEzsigndocumentDuedate rg '=m,=m+7d'\
    \ |\n\nValid operators for string values:\n\n| Operator | Description | Examples\
    \ |\n|---|---|---|\n| eq | Equals | sEzsigndocumentName  eq 'Test contract' |\n\
    | like | Search for a partial string with *%* wildcard | sEzsigndocumentName \
    \ like 'Test contra%'<br>sEzsigndocumentName  like '%contract'<br>sEzsigndocumentName\
    \  like '%con%' |\n\nValid operators for enum values (valid values are documented\
    \ at the endpoint's level):\n\n| Operator | Description | Examples |\n|---|---|---|\n\
    | eq | Equals | eEzsigndocumentStep eq 'PartiallySigned' |\n| in | in list | eEzsigndocumentStep\
    \ in 'PartiallySigned,Archived' |\n\nExample of combining multiple filter together:\n\
    \n`sFilter=bEzsigndocumentEzsignclause eq true and iEzsigndocumentPagetotal gt\
    \ 10 and iEzsigndocumentPagetotal lte 100 and dtEzsigndocumentDuedate gt '2001-01-01\
    \ 00:00:00' and dtEzsigndocumentDuedate lte '2025-12-31 23:59:59' and sEzsigndocumentName\
    \  like '%con%' and eEzsigndocumentStep eq 'PartiallySigned' and fkiEzsignfoldertypeID\
    \ in '1,2,3' and dtEzsigndocumentDuedate rg '=m,=m+7d'`\n\nSame example, but properly\
    \ url encoded:\n\n`sFilter=bEzsigndocumentEzsignclause%20eq%20true%20and%20iEzsigndocumentPagetotal%20gt%2010%20and%20iEzsigndocumentPagetotal%20lte%20100%20and%20dtEzsigndocumentDuedate%20gt%20%272001-01-01%2000%3A00%3A00%27%20and%20dtEzsigndocumentDuedate%20lte%20%272025-12-31%2023%3A59%3A59%27%20and%20sEzsigndocumentName%20%20like%20%27%25con%25%27%20and%20eEzsigndocumentStep%20eq%20%27PartiallySigned%27%20and%20fkiEzsignfoldertypeID%20in%20%271%2C2%2C3%27%20and%20dtEzsigndocumentDuedate%20rg%20%27%3Dm%2C%3Dm%2B7d%27`\n\
    \n## Range operator\n\nDates in list filter can use a \"rg\" operator for ranges.\
    \ This allows to filter data based on relative dates. The range operator is just\
    \ another way to compute filters dates.\n\nFor the rest of this section, let's\
    \ assume today's date is February 25th 2019 and the time is 10:15:37. Let's assume\
    \ that we want to filter on dtInvoiceDate.\n\nIf we wanted to get all the invoices\
    \ that were generated in the previous month, we could do (not url encoded for\
    \ readability purposes):\nsFilter=dtInvoiceDate gte '2019-01-01 00:00:00' and\
    \ dtInvoiceDate lte '2019-01-31 23:59:59'\n\nRange operator is useful to transfer\
    \ the complexity of date computation to the api instead of the calling application.\n\
    \nThe general format of the range operator is:\ndtInvoiceDate rg '**[STARTDATE]**,**[ENDDATE]**'\n\
    \nBoth **[STARTDATE]** and **[ENDDATE]** use the same format which is a sequence\
    \ of 1 or more **[SUBSECTION]** so for example, we could have:\ndtInvoiceDate\
    \ rg '**[SUBSECTION]**,**[SUBSECTION][SUBSECTION][SUBSECTION][SUBSECTION]**'\n\
    \nBoth **[STARTDATE]** and **[ENDDATE]** have a starting time equal to current\
    \ time (so in this example 2019-02-25 10:15:37)\n\n**[SUBSECTION]** start with\
    \ an operator which can be either **=** to reset the pointer, **+** to move forward\
    \ in time or **-** to move backward in time. \n\nThe **=** operator can be directly\
    \ followed by a letter representing the **[PERIOD]** (ex: **=m**) to initialize\
    \ the date to the start or end of the period or by a number and a letter representing\
    \ the **[PERIOD]** (ex: **=7m**) to set the **[PERIOD]** to a specific value.\n\
    \nThe **+** and **-** operators are followed by a number then by a letter representing\
    \ the **[PERIOD]** (ex: **+7d** or **-1m**)\n\nHere is a list of valid **[PERIOD]**\n\
    \n| [Period] | Description |\n|---|---|\n| y | year |\n| m | month |\n| w | week\
    \ |\n| d | day |\n| h | hour |\n| i | minute |\n| s | second |\n\n**=** operator\
    \ without a number resets the pointer to either the beginning or the end of the\
    \ **[Period]** depending if it's being used in the **[STARTDATE]** or **[ENDDATE]**.\
    \ This table shows the time when the pointer is reset\n\n| Syntax | Description\
    \ | [STARTDATE] | [ENDDATE] |\n|---|---|---|---|\n| =y | year | 2019-01-01 00:00:00\
    \ | 2019-12-31 23:59:59 |\n| =m | month | 2019-02-01 00:00:00 | 2019-02-28 23:59:59\
    \ |\n| =w | week\\* | 2019-02-24 00:00:00 | 2019-03-02 23:59:59 |\n| =d | day\
    \ | 2019-02-25 00:00:00 | 2019-02-25 23:59:59 |\n| =h | hour | 2019-02-25 10:00:00\
    \ | 2019-02-25 10:59:59 |\n| =i | minute | 2019-02-25 10:15:00 | 2019-02-25 10:15:59\
    \ |\n| =s | second | 2019-02-25 10:15:37 | 2019-02-25 10:15:37 |\n\n\\* Week start\
    \ day is configurable per user\n\n**=** operator with a number resets the **[PERIOD]**\
    \ to a specific value and works the same for both **[STARTDATE]** or **[ENDDATE]**.\
    \ Here are some example. Please note it's not possible to reset the week like\
    \ this (ex: **=7w**)\n\n| Syntax | Description | New Date |\n|---|---|---|\n|\
    \ =2025y | year | **2025**-02-25 10:15:37 |\n| =11m | month | 2019-**11**-25 10:15:37\
    \ |\n| =7d | day | 2019-02-**07** 10:15:37 |\n| =17h | hour | 2019-02-25 **17**:15:37\
    \ |\n| =1i | minute | 2019-02-25 10:**01**:37 |\n| =18s | second | 2019-02-25\
    \ 10:15:**18** |\n\n### Combining [SUBSECTION]\n\nYou can combine multiple [SUBSECTION]\
    \ under the same operator. For example:\n- Instead of using \"=m=7d=8h=6m=32s\"\
    \ you can simplify as \"=m7d8h6m32s\"\n- Instead of using \"+7d+7h+7m+7s\" you\
    \ can simplify as \"+7d7h7m7s\"\n- Instead of using \"=3m=m\" you can simplify\
    \ as \"=3mm\"\n\n### Order of precedence\n\n**[STARTDATE]** and **[ENDDATE]**\
    \ are evaluated from left to right. The order is important. For example, these\
    \ values would give different results in **[ENDDATE]**:\n- \"=m-1m\" would give\
    \ \"2019-01-28 23:59:59\"\n- \"-1m=m\" would give \"2019-01-31 23:59:59\"\n\n\
    ### Examples of use\n\n| Syntax | Explanation | Date From | Date To |\n|---|---|---|---|\n\
    |sFilter=dtInvoice rg '-7d,=s'|Invoices in the last 7 days up to now|2019-02-18\
    \ 10:15:37|2019-02-25 10:15:37|\n|sFilter=dtInvoice rg '=d-7d,=s'|Invoices in\
    \ the last 7 days starting at 00:00:00 up to now|2019-02-18 00:00:00|2019-02-25\
    \ 10:15:37|\n|sFilter=dtInvoice rg '=m-1m,=m-1m'|Invoices in the last month|2019-01-01\
    \ 00:00:00|2019-01-31 23:59:59|\n|sFilter=dtInvoice rg '=m,=m'|Invoices in this\
    \ month|2019-02-01 00:00:00|2019-02-28 23:59:59|\n|sFilter=dtInvoice rg '=m-1m+10d,=s'|Invoices\
    \ since the 10th of last month up to now|2019-01-10 00:00:00|2019-02-25 10:15:37|\n\
    |sFilter=dtInvoice rg '-10h,=d8h+1d1s'|Invoices in the last 10 hours up to 9h00\
    \ tomorrow morning|2019-02-25 00:15:37|2019-02-26 09:00:00|\n|sFilter=dtInvoice\
    \ rg '-1y=4mm,=3mm'|Invoices from last year second semester up to this year first\
    \ quarter|2018-04-01 00:00:00|2019-03-31 23:59:59|\n|sFilter=dtInvoice rg '=w-3w,=w'|Invoices\
    \ in the last 3 weeks (calendar week start day = Sunday) up to the end of the\
    \ week|2019-02-03 00:00:00|2019-03-02 23:59:59|\n|sFilter=dtInvoice rg '=y,=3mm'|Invoices\
    \ in the first semester|2019-01-01 00:00:00|2019-03-31 23:59:59|\n|sFilter=dtInvoice\
    \ rg '=4mm,=6mm'|Invoices in the second semester|2019-04-01 00:00:00|2019-06-30\
    \ 23:59:59|\n|sFilter=dtInvoice rg '=7mm,=9mm'|Invoices in the third semester|2019-07-01\
    \ 00:00:00|2019-09-30 23:59:59|\n|sFilter=dtInvoice rg '=10mm,=y'|Invoices in\
    \ the last semester|2019-10-01 00:00:00|2019-12-31 23:59:59|\n"
  name: General_Conventions
  x-displayName: Conventions
- description: "## Regional requests\nWhen you send your API requests, you'll need\
    \ to send them in the proper region and proper environment where your customer\
    \ data are stored. Based on your requirements (proximity and legislation), we\
    \ will create your environment in one of our supported region's.\n\nThe general\
    \ format of the URL where to send requests is:\nhttps://**{sInfrastructureenvironmenttypeDescription}**.api.appcluster01.**sInfrastructureregionCode}**.ezmax.com/rest/\n\
    \nWhere \"**{sInfrastructureenvironmenttypeDescription}**\" and \"**{sInfrastructureregionCode}**\"\
    \ need to be replaced with one of the values in the table below.\n\nOur SDKs have\
    \ a default value of \"prod\" and \"ca-central-1\". You will need to call \"setHost\"\
    \ to change the default value if needed.\n\nNote: You should always use \"prod\"\
    \ for the environment unless otherwise instructed by eZmax's support.\n\n| sInfrastructureenvironmenttypeDescription\
    \ | Description       |\n| ----------------------------------------- | -----------------\
    \ |\n| prod                                      | Production        |\n| stg\
    \                                       | Staging           |\n| qa          \
    \                              | Quality Assurance |\n| dev                  \
    \                     | Development       |\n\n| sInfrastructureregionCode | Description\
    \                |\n| ------------------------- | -------------------------- |\n\
    | af-south-1\t            | Africa (Cape Town)         |\n| ap-east-1\t      \
    \          | Asia Pacific (Hong Kong)   |\n| ap-northeast-1\t        | Asia Pacific\
    \ (Tokyo)       |\n| ap-northeast-2\t        | Asia Pacific (Seoul)       |\n\
    | ap-northeast-3\t        | Asia Pacific (Osaka-Local) |\n| ap-south-1\t     \
    \       | Asia Pacific (Mumbai)      |\n| ap-southeast-1\t        | Asia Pacific\
    \ (Singapore)   |\n| ap-southeast-2\t        | Asia Pacific (Sydney)      |\n\
    | ca-central-1\t            | Canada (Central)           |\n| eu-central-1\t \
    \           | Europe (Frankfurt)         |\n| eu-north-1\t            | Europe\
    \ (Stockholm)         |\n| eu-south-1\t            | Europe (Milan)          \
    \   |\n| eu-west-1\t                | Europe (Ireland)           |\n| eu-west-2\t\
    \                | Europe (London)            |\n| eu-west-3\t               \
    \ | Europe (Paris)             |\n| sa-east-1\t                | South America\
    \ (SÃ£o Paulo)  |\n| us-east-1\t                | US East (N. Virginia)      |\n\
    | us-east-2\t                | US East (Ohio)             |\n| us-west-1\t   \
    \             | US West (N. California)    |\n| us-west-2\t                | US\
    \ West (Oregon)           |\n\n## Global requests\nSome of the functions needs\
    \ to be called on the global infrastructure instead of the regional servers. These\
    \ functions are all located in the **Global** section of the documentation.\n\n\
    The general format of the URL where to send requests is:\nhttps://**{sInfrastructureenvironmenttypeDescription}**.api.global.ezmax.com/\n\
    \nWhere \"**{sInfrastructureenvironmenttypeDescription}**\" needs to be replaced\
    \ with one of the values in the table below.\n\nOur SDKs have a default value\
    \ of \"prod\". You will need to call \"setHost\" to change the default value if\
    \ needed.\n\nNote: You should always use \"prod\" for the environment unless otherwise\
    \ instructed by eZmax's support.\n\n| sInfrastructureenvironmenttypeDescription\
    \ | Description       |\n| ----------------------------------------- | -----------------\
    \ |\n| prod                                      | Production        |\n| stg\
    \                                       | Staging           |\n| qa          \
    \                              | Quality Assurance |\n| dev                  \
    \                     | Development       |"
  name: General_Servers
  x-displayName: Servers
- description: "We use standard HTTP Status Codes to return details about completed\
    \ function calls.\r\n\r\nYou should always validate the HTTP response's status\
    \ code before trying to read the content of the body. Our SDKs do this automatically.\
    \ In each of the documented function, we document only the function's specific\
    \ return code to facilitate the reading of the documentation. Even if a generic\
    \ return code is not documented at the function's level, it could be returned\
    \ by the API.\r\n\r\n### Generic return codes (Documented at the function's level)\r\
    \n| HTTP Status Code | Meaning              | Detail |\r\n| ---------------- |\
    \ -------------------- | ------ |\r\n| 200              | OK                 \
    \  | The request completed successfully and valid data was returned in the body\
    \ |\r\n| 201              | Created              | The request completed successfully.\
    \ Some elements were created and details about the created items was returned\
    \ in the body |\r\n| 204              | No Content           | The request completed\
    \ successfully. There was no need to return any data in the body |\r\n| 403  \
    \            | Forbidden            | The request is not allowed to be executed.\
    \ Look for detail about the error in the body |\r\n| 404              | Not Found\
    \            | The request failed. The element on which you were trying to work\
    \ does not exists. Look for detail about the error in the body |\r\n| 406    \
    \          | Not Acceptable       | The URL is valid, but one of the Accept header\
    \ is not defined or invalid. For example, you set the header \"Accept: application/json\"\
    \ but the function can only return \"Content-type: image/png\" |\r\n| 422    \
    \          | Unprocessable entity | The request was syntactically valid but failed\
    \ because of an interdependance condition. Look for detail about the error in\
    \ the body |\r\n\r\n### Generic return codes (Undocumented at the function's level)\r\
    \n| HTTP Status Code | Meaning               | Detail |\r\n| ----------------\
    \ | --------------------- | ------ |\r\n| 400              | Bad Request     \
    \      | The request does not meet specifications. For example: an invalid type\
    \ for a variable, a value that does not pass validation or a protocol violation.\
    \ Look for details about the error in the response's body |\r\n| 401         \
    \     | Unauthorized          | The API Key is either not present, expired, invalid\
    \ or inactive. It could also mean you are calling the API from an unauthorized\
    \ IP address |\r\n| 403              | Forbidden             | The Provided API\
    \ Key is valid, but it is not allowed to execute the request. Verify the Key's\
    \ permissions |\r\n| 404              | Not Found             | Your request was\
    \ sent to a URL that does not exist. Make sure you are calling the proper version\
    \ number of the function and look for typos in the URL |\r\n| 405            \
    \  | Method Not Allowed    | The URL is valid, but the Method is not allowed.\
    \ For example, have you call a GET while the function expects a POST ? |\r\n|\
    \ 406              | Not Acceptable       | The URL is valid, but one of the Accept\
    \ header is not defined or invalid. For example, you set the header \"Accept:\
    \ application/json\" but the function can only return \"Content-type: image/png\"\
    \ |\r\n| 429              | Too Many Requests     | Too many requests were received\
    \ from your API Key/IP address. Make sure to optimize your requests or ask for\
    \ a limit increase. For example, make a single request to create 100 objects instead\
    \ of calling 100 requests each creating a single objet |\r\n| 500            \
    \  | Internal Server Error | This should never happen. There is either a temporary\
    \ problem that should resolve quickly or an error you should report to technical\
    \ support. |\r\n| 501              | Not Implemented       | Endpoint not yet\
    \ available in your region or environment |\r\n| 503              | Service Unavailable\
    \   | This should never happen. There is either a temporary problem that should\
    \ resolve quickly or an error you should report to technical support |\r\n\r\n\
    ### Custom return codes (Undocumented at the function's level)\r\nThese codes\
    \ can only be generated for **User** type API Key. The **API**, **Delegated**\
    \ and **Special** types keys will never return such codes. (See Authorization\
    \ section for more information). Most users should not be concerned with these\
    \ status codes.\r\n\r\n| HTTP Status Code | Meaning                          |\
    \ Detail                                                               |\r\n|\
    \ ---------------- | -------------------------------- | --------------------------------------------------------------------\
    \ |\r\n| 350              | Authentication required          | User must authenticate\
    \ because session is invalid                    |\r\n| 351              | Phone\
    \ Validation required        | (2FA) User needs to complete a Voice Call or SMS\
    \ challenge           |\r\n| 352              | Question Validation required \
    \    | (2FA) User needs to complete a question/answer challenge             |\r\
    \n| 353              | Clause Acceptance required       | User need to accept\
    \ electronic signature terms and conditions        |\r\n| 354              | Computer\
    \ Validation required     | User's computer is not authorized                \
    \                    |\r\n| 355              | Password Change required      \
    \   | User must change it's password                                       |\r\
    \n| 356              | Native Application Version Check | The user is not running\
    \ the latest version of the native application |\r\n\r\n### Webhook delivery successful\
    \ code\r\nThese codes will be considered as a succesful delivery when they are\
    \ returned by your webpage during a Webhook delivery.\r\n\r\n| HTTP Status Code\
    \ | Meaning              | Detail |\r\n| ---------------- | --------------------\
    \ | ------ |\r\n| 202              | Accepted             | The request has been\
    \ received but not yet acted upon. It is intended for cases where another process\
    \ or server handles the request, or for batch processing. |\r\n| 204         \
    \     | No Content           | The request completed successfully. There was no\
    \ need to return any data in the body |\r\n"
  name: General_StatusCodes
  x-displayName: Status Codes
- description: "When the API returns an HTTP status code in the range 400-599, a JSON\
    \ object will be returned with 2 properties:\r\n- eErrorCode\r\n- sErrorMessage\r\
    \n\r\nWe highly suggest you use **eErrorCode** to do any error validation logic\
    \ in your code or to create your own error message for your users. **sErrorMessage**\
    \ has more detail for a human to read, but is intended for the developper and\
    \ is always returned in english.\r\n\r\nHere is the complete list of **eErrorCode**\
    \ you could receive for each HTTP status code and examples of situations where\
    \ they could be returned.\r\n\r\n### HTTP 400 (Bad Request)\r\n| eErrorCode  \
    \         | Examples                                                         \
    \              |\r\n| -------------------- | ------------------------------------------------------------------------------\
    \ |\r\n| BADREQUEST           | Unserializable JSON, invalid parameter, invalid\
    \ signature, invalid fingerprint |\r\n| BADREQUEST_CLOCKSKEW | The time on the\
    \ client computer is wrong                                       |\r\n\r\n###\
    \ HTTP 401 (Unauthorized)\r\n| eErrorCode           | Examples               \
    \                                            |\r\n| -------------------- | ------------------------------------------------------------------\
    \ |\r\n| UNAUTHORIZED_BADAUTH | Invalid credentials during Authentication    \
    \                      |\r\n| UNAUTHORIZED_REQUEST | The request is invalid (bad\
    \ ip source, signature, invalid api key) |\r\n\r\n### HTTP 403 (Forbidden)\r\n\
    | eErrorCode              | Examples                                         \
    \   |\r\n| ----------------------- | ---------------------------------------------------\
    \ |\r\n| FORBIDDEN               | Generic Forbidden                         \
    \          |\r\n| FORBIDDEN_CONFIGURATION | A configured setting prevent access\
    \ to the element  |\r\n| FORBIDDEN_MODULE        | Module is not activated   \
    \                          |\r\n| FORBIDDEN_NOACCESS      | Not allowed to access\
    \ the element                   |\r\n| FORBIDDEN_PERMISSION    | Missing a permission\
    \ to access the route            |\r\n| FORBIDDEN_SUBSCRIPTION  | No subscription,\
    \ for example to eZsign              |\r\n\r\n### HTTP 404 (Not Found)\r\n| eErrorCode\
    \      | Examples                                    |\r\n| --------------- |\
    \ ------------------------------------------- |\r\n| NOTFOUND        | Generic\
    \ not found                           |\r\n| NOTFOUND_OBJECT | Object does not\
    \ exist in database           |\r\n| NOTFOUND_ROUTE  | The route does not exist\
    \ (url, API version) |\r\n\r\n### HTTP 405 (Method Not Allowed)\r\n| eErrorCode\
    \       | Examples                                                           \
    \           |\r\n| ---------------- | -----------------------------------------------------------------------------\
    \ |\r\n| METHODNOTALLOWED | The route is valid but the method is not allowed ex:\
    \ POST on a GET only route |\r\n\r\n### HTTP 406 (Not Acceptable)\r\n| eErrorCode\
    \             | Examples                                                     \
    \                                 |\r\n| ---------------------- | ---------------------------------------------------------------------------------------------\
    \ |\r\n| NOTACCEPTABLE_CONTENT  | The route is valid but the Accept header is\
    \ not allowed ex: \"application/json\" vs \"image/png\" |\r\n| NOTACCEPTABLE_LANGUAGE\
    \ | The route is valid but the Accept-Language header is not allowed ex: \"en\"\
    \ vs \"es\"             |\r\n\r\n### HTTP 422 (Unprocessable entity)\r\n| eErrorCode\
    \                            | Examples                                      \
    \                         |\r\n| ------------------------------------- | ----------------------------------------------------------------------\
    \ |\r\n| UNPROCESSABLEENTITY_CANNOTDELETE      | The element cannot be deleted\
    \                                          |\r\n| UNPROCESSABLEENTITY_NOTHINGTODO\
    \       | The request was valid, but no action was necessary                 \
    \    |\r\n| UNPROCESSABLEENTITY_NOTREADY          | The element is not in a state\
    \ that allows the action (Sending a document without signature, downloading an\
    \ unsigned document) |\r\n| UNPROCESSABLEENTITY_PDF_INCOMPATIBLE  | The pdf document\
    \ cannot be signed                                      |\r\n| UNPROCESSABLEENTITY_PDF_PASSWORD\
    \      | The pdf document contains a password and cannot be signed           \
    \   |\r\n| UNPROCESSABLEENTITY_PDF_REPAIRABLE    | The pdf document contains errors\
    \ and can be repaired                   |\r\n| UNPROCESSABLEENTITY_PDF_XFA   \
    \        | The pdf document contains XFA form and cannot be signed           \
    \     |\r\n| UNPROCESSABLEENTITY_TEMPLATE_MISMATCH | The number of pages between\
    \ the document and the template do not match |\r\n| UNPROCESSABLEENTITY_DOWNLOAD_ERROR\
    \    | We cannot retrieve ressource at supplied url                          \
    \ |\r\n\r\n### HTTP 500 (Internal Server Error)\r\n| eErrorCode     | Examples\
    \                  |\r\n| -------------- | ------------------------- |\r\n| ERROR_INTERNAL\
    \ | Unhandled error on server |\r\n\r\n### HTTP 501 (Not Implemented)\r\n| eErrorCode\
    \           | Examples                                                 |\r\n|\
    \ -------------------- | --------------------------------------------------------\
    \ |\r\n| ERROR_NOTIMPLEMENTED | Endpoint not yet available in your region or environment\
    \ |"
  name: General_ErrorCodes
  x-displayName: Error Codes
- description: |
    ## Concept
    A Webhook (also called a web callback or HTTP push API) is a way for your application to be notified of an event in real time.

    For example, if you send a contract for signing and need to be notified as soon as it get signed.

    You could program a loop to query the document status every 5 minutes for many days until you receive a response saying the document is signed. This is a bad approach as it will waste a lot of resources everytime you make a call to the API for no reason.

    A better approach would be to configure a webhook in the eZmax's administration console to watch for a specific event. In this exemple, the event to monitor is "DocumentCompleted" from the module "Ezsign". This way, as soon as the document gets signed, a request will be made to YOUR server to let you know about the event that just happened.

    When you configure eZmax to notify you of events, you must provide your server's URL and a fallback email address. The URL provided must use HTTPS for security reasons.

    ### Types of Webhook:
    Look for purple indicators with the word "EVENT" throughout the documentation to see currently available Webhooks events you can subscribe to. If you have a need for an event that is not available, please send a feature request to technical support.

    ### Important:
    - The event will be delivered using a POST request.
    - Your server will need to reply with a HTTP Status Code 202 or 204 to let eZmax know you've accepted the message and we shall not try to deliver the message again. If the server does not respond with a 202 or 204 Code, the message will be sent over and over until all tries are exhausted.
    - The 202 or 204 response must be returned in less than 30 seconds otherwise a timeout will occur and the event will be retried following the retry schedule.
    - Make sure to secure your Webhook receiving URL to make sure someone does not send forged messages to your application. You can do this by providing a secure token in your URL, for example "?token=mysecuretoken1234", or by validating the webhook message's signature.

    ### Testing
    In eZmax's administration module, you'll find a "Test" button that you can use as many time as you need to test your server code easily with a sample event.

    ## Retries
    eZmax will attempt to deliver the event to your server instantly but will retry many times if your server does not respond successfully for some reason (see schedule below). After all attempts are exhausted, the event will be forwarded to the configured fallback email in the same format as the webhook. The email body will contain the JSON request in the same format as the webhook. This way, you'll be able to send the request to your server using <a href="https://www.postman.com/" target="_blank">Postman</a>, <a href="https://curl.se/" target="_blank">Curl</a> or similar tool.

    ### Retry Delivery schedule
    This is the approximate retry schedule. Since there is a 30 seconds timeout on each try, there could be a cumulative overhead up to 3Â½ minutes.

    | Minutes after previous step | Minutes after event | Method |
    | :-------------------------: | :-----------------: | ------ |
    | N/A                         | 0                   | HTTPS  |
    | 1                           | 1                   | HTTPS  |
    | 5                           | 6                   | HTTPS  |
    | 15                          | 21                  | HTTPS  |
    | 15                          | 36                  | HTTPS  |
    | 15                          | 51                  | HTTPS  |
    | 15                          | 66                  | HTTPS  |
    | 0                           | 66                  | Email  |

    ### Failed attempt reporting
    If you don't receive the event on the first attempt, there will be debugging information about each previous attempt in the body of the event. You'll be able to see the timestamp of each previous attempt and the return code returned by your server or a timeout indication if your server hasn't replied.
  name: General_Webhooks
  x-displayName: Webhooks
- description: "All notable changes to this project will be documented in this section.\n\
    \nVersion numbers are using **MAJOR**.**MINOR**.**PATCH** numbering format for\
    \ example 1.2.23\n\n**MAJOR** will be incremented only if there is an incompatible\
    \ breaking change. New distinct documentation and specification files will be\
    \ published.\n\n**MINOR** will be incremented only if a function becomes deprecated\
    \ or deleted (after being deprecated in a previous version)\n\n**PATCH** will\
    \ be incremented everytime changes and additions are released.\n\nYou can always\
    \ safely update to newer **PATCH** version if you stay in the same **MAJOR**.**MINOR**\
    \ prefix.\n\nYou can safely update to a newer **MINOR** version as long as you\
    \ don't jump more than a version at a time. For example, let say there is a function\
    \ named \"foo\" in version 1.0.23. We might deprecate this function in version\
    \ 1.1.1 but you can continue using it. We might decide to remove it in version\
    \ 1.2.1 so then you would have a breaking change if you try to update to version\
    \ 1.2.1 without having fixed the issue with your deprecated \"foo\" function.\n\
    \nFor each version, there will be the list of changes:\n* **Early Adopters** for\
    \ new features not officially considered final and ready for production use.\n\
    * **Added** for new features.\n* **Changed** for changes in existing functionality.\n\
    * **Deprecated** for soon-to-be removed features.\n* **Removed** for now removed\
    \ features.\n* **Fixed** for any bug fixes.\n* **Security** in case of vulnerabilities.\n\
    \n## 1.1.X Releases\n### [1.1.4] - 2022-01-\n\n#### Added\n- GET /1/object/ezsigndocument/{pkiEzsigndocumentID}\
    \ Added status\n- GET /1/object/ezsignfolder/{pkiEzsignfolderID} Added fkiBillingentityinternalID,\
    \ dtEzsignfolderDuedate, sBillingentityinternalDescriptionX, sEzsignfoldertypeNameX,\
    \ sEzsigntsarequirementDescriptionX, dtEzsignfolderScheduledarchive and dtEzsignfolderScheduleddestruction\
    \ properties\n- GET /1/object/ezsignfolder/{pkiEzsignfolderID}/getEzsigndocuments\n\
    - GET /1/object/ezsignfolder/{pkiEzsignfolderID}/getEzsignfoldersignerassociations\n\
    - GET /1/object/ezsignfoldersignerassociation/{pkiEzsignfoldersignerassociationID}\n\
    - POST /1/object/ezsignsignature bEzsignsignatureCustomdate and a_objEzsignsignaturecustomdate\n\
    \n### [1.1.3] - 2021-12-17\n\n#### Added\n- GET /1/object/ezsignbulksend/getList\n\
    - GET /1/object/ezsigntemplatepackage/getList\n- POST /1/object/ezsignfoldersignerassociation\
    \ bEzsignfoldersignerassociationReceivecopy property\n- Error Code UNPROCESSABLEENTITY_DOWNLOAD_ERROR\
    \ added to documentation\n- Error Code UNPROCESSABLEENTITY_PDF_REPAIRABLE added\
    \ to documentation\n\n#### Changed\n- Changed all the OneOf used back to nullable\
    \ types. When the generators will support 3.1 nullable polymorphism documentation\
    \ will be improved\n\n#### Fixed\n- (AxiosSDK) Fingerprint header on GET requests\
    \ was invalid when url parameters contained utf8 special chars\n- (CsharpSDK)\
    \ OneOf not supported for polymorphism was preventing compilation\n- \n### [1.1.2]\
    \ - 2021-10-26\n\n#### Added\n- GET /1/object/ezsignfolder/getList eEzsignfoldertypePrivacylevel\
    \ property\n- POST /1/object/ezsigndocument returns a sTemporaryFileUrl on error\
    \ 422 if error is recoverable\n- POST /1/object/ezsigndocument sEzsigndocumentUrl\
    \ property\n- POST /1/object/ezsigndocument eEzsigndocumentSource property now\
    \ accept \"Url\" as the source\n- POST /1/object/ezsigndocument bEzsigndocumentForcerepair\
    \ property\n- Support for \"rg\" operator in date fields in sFilter\n- Range operator\
    \ added to convention section of the documentation\n\n### [1.1.1] - 2021-10-22\n\
    \n#### Added\n- GET /1/object/ezsignfolder/{pkiEzsignfolderID}/unsend\n- GET /1/module/list/listpresentation/{sListName}\n\
    - POST /1/module/list/listpresentation/{sListName}\n- Variables convention documentation\
    \ now contains type \"m\" for mixed type\n- POST /1/object/ezsigndocument/ sEzsigndocumentPassword\
    \ property\n- Support for \"in\" operator for integer fields in sFilter\n- Support\
    \ for \"in\" operator for enum fields in sFilter\n\n### [1.1.0] - 2021-10-19\n\
    \n#### Added\n- GET /1/object/ezsigndocument/{pkiEzsigndocumentID}/getEzsignpages\n\
    - GET /1/object/ezsigndocument/{pkiEzsigndocumentID}/getFormData\n- GET /1/object/ezsignfolder/{pkiEzsignfolderID}/getFormsData\n\
    - GET /1/object/ezsignfolder/getList\n- GET /1/object/ezsignfoldertype/getAutocomplete/{sSelector}\n\
    - GET /1/object/ezsignfoldertype/getList\n- POST /2/object/ezsigndocument/{pkiEzsigndocumentID}/applyEzsigntemplate\n\
    - POST /1/object/ezsigndocument/{pkiEzsigndocumentID}/getWordsPositions\n- Status\
    \ Code 406 added to documentation\n- Status Code 501 added to documentation\n\
    - Error Code NOTACCEPTABLE_CONTENT added to documentation\n- Error Code NOTACCEPTABLE_LANGUAGE\
    \ added to documentation\n- Error Code ERROR_NOTIMPLEMENTED added to documentation\n\
    - Variables convention added to documentation\n- List Filter convention added\
    \ to documentation\n\n#### Deprecated\n- POST /1/object/ezsigndocument/{pkiEzsigndocumentID}/applyezsigntemplate\n\
    \ \n#### Removed\n- Support for typescript-angular\n- Support for typescript-aurelia\n\
    - Support for typescript-fetch\n- Support for typescript-jquery\n- Support for\
    \ typescript-node\n\n#### Fixed\n- (AxiosSDK) Fingerprint header on GET requests\
    \ was invalid when url parameters were used\n\n## 1.0.X Releases\nDocumentation\
    \ and changelog for version 1.0x can be found here: [1.0.x Releases Documentation](https://ezmaxinc.github.io/eZmax-API/docs/ezmax.v1.0.html)"
  name: General_Changelog
  x-displayName: Changelog
- description: Customer contains details about the customer code assigned to your
    account
  name: Global_Customer
  x-displayName: Customer
- description: Authenticate contains actions related to authenticating users to the
    platform
  name: Module_Authenticate
  x-displayName: Authenticate
- description: List contains actions related to lists in the system.
  name: Module_List
  x-displayName: List
- description: |-
    Sspr module contains actions related to the Self Service Password Reset portal.

    There is an option in the admin interface to disable the portal if you don't want your users to be able to reset their own password.

    ### Generic return codes (Documented at the function's level)
    | HTTP Status Code | eErrorCode           | Detail |
    | ---------------- | -------------------- | ------ |
    | 200              | OK                   | The request completed successfully and valid data was returned in the body |
    | 201              | Created              | The request completed successfully. Some elements were created and details about the created items
  name: Module_Sspr
  x-displayName: Sspr
- description: User module contains actions that can be called to interract with users
  name: Module_User
  x-displayName: User
- description: Activesession contains detail about the currently executing api request
  name: Object_Activesession
  x-displayName: Activesession
- description: Apikey contains detail about an api key used to access the API
  name: Object_Apikey
  x-displayName: Apikey
- description: Ezsignbulksend contains detail about a batch of Ezsignfolders
  name: Object_Ezsignbulksend
  x-displayName: Ezsignbulksend
- description: Ezsigndocument contains detail about a document to sign
  name: Object_Ezsigndocument
  x-displayName: Ezsigndocument
- description: Ezsignfolder contains detail about the container containing signers,
    documents to sign, etc. Sometimes referred as "Envelopes" in competitor products
  name: Object_Ezsignfolder
  x-displayName: Ezsignfolder
- description: Ezsignfoldersignerassociation contains detail about the signers that
    will be invited to sign the documents. Signers can be users from the system or
    persons outside of the system.
  name: Object_Ezsignfoldersignerassociation
  x-displayName: Ezsignfoldersignerassociation
- description: Ezsignfoldertype contains detail about the types of Ezsignfolders
  name: Object_Ezsignfoldertype
  x-displayName: Ezsignfoldertype
- description: Ezsignsignature contains detail about a specific signature block on
    a page of a Ezsigndocument
  name: Object_Ezsignsignature
  x-displayName: Ezsignsignature
- description: Ezsigntemplatepackage contains detail about a package of ezsign templates
    that can be used as a whole
  name: Object_Ezsigntemplatepackage
  x-displayName: Ezsigntemplatepackage
- description: Franchisebroker contains detail about a brokerage in the franchise
    administration module
  name: Object_Franchisebroker
  x-displayName: Franchisebroker
- description: Franchiseoffice contains detail about a brokerage's office in the franchise
    administration module
  name: Object_Franchiseoffice
  x-displayName: Franchiseoffice
- description: Franchisereferalincome contains detail about a referal income in the
    franchise administration module
  name: Object_Franchisereferalincome
  x-displayName: Franchisereferalincome
- description: Period contains detail about accounting periods
  name: Object_Period
  x-displayName: Period
- description: User contains detail about the users in the system
  name: Object_User
  x-displayName: User
paths:
  /1/object/activesession/getCurrent:
    get:
      description: Retrieve the details about the current activesession
      operationId: Activesession_GetCurrent_V1
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activesession-getCurrent-v1-Response'
          description: OK
      security:
      - Authorization: []
      summary: Get Current Activesession
      tags:
      - Object_Activesession
      x-accepts: application/json
  /1/object/ezsigndocument:
    post:
      description: |-
        The endpoint allows to create one or many elements at once.

        The array can contain simple (Just the object) or compound (The object and its child) objects.

        Creating compound elements allows to reduce the multiple requests to create all child objects.
      operationId: Ezsigndocument_CreateObject_V1
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ezsigndocument-createObject-v1-Request'
              type: array
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ezsigndocument-createObject-v1-Response'
          description: Successful response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: The element you are trying to work on does not exist
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error-sTemporaryFileUrl'
          description: The syntax of the request is valid but the request cannot be
            completed. Look for detail in body. If the error is recoverable sTemporaryFileUrl
            will be set and you can use this url to try a new request without sending
            the file over again
      security:
      - Authorization: []
      summary: Create a new Ezsigndocument
      tags:
      - Object_Ezsigndocument
      x-contentType: application/json
      x-accepts: application/json
  /1/object/ezsignfolder:
    post:
      description: |-
        The endpoint allows to create one or many elements at once.

        The array can contain simple (Just the object) or compound (The object and its child) objects.

        Creating compound elements allows to reduce the multiple requests to create all child objects.
      operationId: Ezsignfolder_CreateObject_V1
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ezsignfolder-createObject-v1-Request'
              type: array
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ezsignfolder-createObject-v1-Response'
          description: Successful response
      security:
      - Authorization: []
      summary: Create a new Ezsignfolder
      tags:
      - Object_Ezsignfolder
      x-contentType: application/json
      x-accepts: application/json
  /1/object/ezsignfoldersignerassociation:
    post:
      description: |-
        The endpoint allows to create one or many elements at once.

        The array can contain simple (Just the object) or compound (The object and its child) objects.

        Creating compound elements allows to reduce the multiple requests to create all child objects.
      operationId: Ezsignfoldersignerassociation_CreateObject_V1
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ezsignfoldersignerassociation-createObject-v1-Request'
              type: array
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ezsignfoldersignerassociation-createObject-v1-Response'
          description: Successful response
      security:
      - Authorization: []
      summary: Create a new Ezsignfoldersignerassociation
      tags:
      - Object_Ezsignfoldersignerassociation
      x-contentType: application/json
      x-accepts: application/json
  /1/object/ezsignsignature:
    post:
      description: |-
        The endpoint allows to create one or many elements at once.

        The array can contain simple (Just the object) or compound (The object and its child) objects.

        Creating compound elements allows to reduce the multiple requests to create all child objects.
      operationId: Ezsignsignature_CreateObject_V1
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ezsignsignature-createObject-v1-Request'
              type: array
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ezsignsignature-createObject-v1-Response'
          description: Successful response
      security:
      - Authorization: []
      summary: Create a new Ezsignsignature
      tags:
      - Object_Ezsignsignature
      x-contentType: application/json
      x-accepts: application/json
  /1/object/franchisereferalincome:
    post:
      description: |-
        The endpoint allows to create one or many elements at once.

        The array can contain simple (Just the object) or compound (The object and its child) objects.

        Creating compound elements allows to reduce the multiple requests to create all child objects.
      operationId: Franchisereferalincome_CreateObject_V1
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/franchisereferalincome-createObject-v1-Request'
              type: array
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/franchisereferalincome-createObject-v1-Response'
          description: Successful response
      security:
      - Authorization: []
      summary: Create a new Franchisereferalincome
      tags:
      - Object_Franchisereferalincome
      x-contentType: application/json
      x-accepts: application/json
  /1/object/franchisebroker/getAutocomplete/{sSelector}:
    get:
      description: Get the list of Franchisebrokers to be used in a dropdown or autocomplete
        control.
      operationId: Franchisebroker_GetAutocomplete_V1
      parameters:
      - description: The type of Franchisebrokers to return
        explode: false
        in: path
        name: sSelector
        required: true
        schema:
          enum:
          - Active
          - All
          type: string
        style: simple
      - description: Allow to filter the returned results
        explode: true
        in: query
        name: sQuery
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-getAutocomplete-v1-Response'
          description: Successful response
      security:
      - Authorization: []
      summary: Retrieve Franchisebrokers and IDs
      tags:
      - Object_Franchisebroker
      x-accepts: application/json
  /1/object/franchiseoffice/getAutocomplete/{sSelector}:
    get:
      description: Get the list of Franchiseoffices to be used in a dropdown or autocomplete
        control.
      operationId: Franchiseoffice_GetAutocomplete_V1
      parameters:
      - description: The type of Franchiseoffices to return
        explode: false
        in: path
        name: sSelector
        required: true
        schema:
          enum:
          - Active
          - All
          type: string
        style: simple
      - description: Allow to filter the returned results
        explode: true
        in: query
        name: sQuery
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-getAutocomplete-v1-Response'
          description: Successful response
      security:
      - Authorization: []
      summary: Retrieve Franchiseoffices and IDs
      tags:
      - Object_Franchiseoffice
      x-accepts: application/json
  /1/module/user/createezsignuser:
    post:
      description: |-
        The endpoint allows to initiate the creation or a user of type Ezsignuser.

        The user will be created only once the email verification process will be completed
      operationId: User_CreateEzsignuser_V1
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/user-createEzsignuser-v1-Request'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user-createEzsignuser-v1-Response'
          description: Successful response
      security:
      - Authorization: []
      summary: Create a new User of type Ezsignuser
      tags:
      - Module_User
      x-contentType: application/json
      x-accepts: application/json
  /1/object/apikey:
    post:
      description: |-
        The endpoint allows to create one or many elements at once.

        The array can contain simple (Just the object) or compound (The object and its child) objects.

        Creating compound elements allows to reduce the multiple requests to create all child objects.
      operationId: Apikey_CreateObject_V1
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/apikey-createObject-v1-Request'
              type: array
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apikey-createObject-v1-Response'
          description: Successful response
      security:
      - Authorization: []
      summary: Create a new Apikey
      tags:
      - Object_Apikey
      x-contentType: application/json
      x-accepts: application/json
  /1/module/sspr/sendUsernames:
    post:
      description: This endpoint returns an email with the username(s) matching the
        email address provided in case of forgotten username
      operationId: Sspr_SendUsernames_V1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sspr-sendUsernames-v1-Request'
        required: true
      responses:
        "204":
          description: |-
            The request was accepted.

            Do not misinterpret as "the email address has an account attached to it". It only means an email will be sent if (and only if) an account exists for that email address.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: You are not allowed to call this function
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: The syntax of the request is valid but the request cannot be
            completed. Look for detail in body.
      security:
      - {}
      summary: Send username(s)
      tags:
      - Module_Sspr
      x-contentType: application/json
      x-accepts: application/json
  /1/module/sspr/unlockAccountRequest:
    post:
      description: |-
        This endpoint sends an email with a link to unlock the user account.

        sEmailAddress must be set if eUserTypeSSPR = EzsignUser

        sUserLoginname must be set if eUserTypeSSPR = Native
      operationId: Sspr_UnlockAccountRequest_V1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sspr-unlockAccountRequest-v1-Request'
        required: true
      responses:
        "204":
          description: |-
            The request was accepted.

            Do not misinterpret as "the account exists". It only means an email will be sent if (and only if) an account exists.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: You are not allowed to call this function
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: The syntax of the request is valid but the request cannot be
            completed. Look for detail in body.
      security:
      - {}
      summary: Unlock Account Request
      tags:
      - Module_Sspr
      x-contentType: application/json
      x-accepts: application/json
  /1/module/sspr/unlockAccount:
    post:
      description: |-
        This endpoint unlocks the user account.

        sEmailAddress must be set if eUserTypeSSPR = EzsignUser

        sUserLoginname must be set if eUserTypeSSPR = Native
      operationId: Sspr_UnlockAccount_V1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sspr-unlockAccount-v1-Request'
        required: true
      responses:
        "204":
          description: The account was unlocked Successfully
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: You are not allowed to call this function
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: The syntax of the request is valid but the request cannot be
            completed. Look for detail in body.
      security:
      - {}
      summary: Unlock Account
      tags:
      - Module_Sspr
      x-contentType: application/json
      x-accepts: application/json
  /1/module/sspr/resetPassword:
    post:
      description: |-
        This endpoint resets the user's password.

        sEmailAddress must be set if eUserTypeSSPR = EzsignUser

        sUserLoginname must be set if eUserTypeSSPR = Native
      operationId: Sspr_ResetPassword_V1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sspr-resetPassword-v1-Request'
        required: true
      responses:
        "204":
          description: The password was reset Successfully
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: You are not allowed to call this function
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: The syntax of the request is valid but the request cannot be
            completed. Look for detail in body.
      security:
      - {}
      summary: Reset Password
      tags:
      - Module_Sspr
      x-contentType: application/json
      x-accepts: application/json
  /1/module/sspr/validateToken:
    post:
      description: |-
        This endpoint validates if a Token is valid and not expired.

        sEmailAddress must be set if eUserTypeSSPR = EzsignUser

        sUserLoginname must be set if eUserTypeSSPR = Native
      operationId: Sspr_ValidateToken_V1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sspr-validateToken-v1-Request'
        required: true
      responses:
        "204":
          description: The token is valid
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: You are not allowed to call this function
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: The syntax of the request is valid but the request cannot be
            completed. Look for detail in body.
      security:
      - {}
      summary: Validate Token
      tags:
      - Module_Sspr
      x-contentType: application/json
      x-accepts: application/json
  /1/module/sspr/resetPasswordRequest:
    post:
      description: |-
        This endpoint sends an email with a link to reset the user's password.

        sEmailAddress must be set if eUserTypeSSPR = EzsignUser

        sUserLoginname must be set if eUserTypeSSPR = Native
      operationId: Sspr_ResetPasswordRequest_V1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sspr-resetPasswordRequest-v1-Request'
        required: true
      responses:
        "204":
          description: |-
            The request was accepted.

            Do not misinterpret as "the account exists". It only means an email will be sent if (and only if) an account exists.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: You are not allowed to call this function
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: The syntax of the request is valid but the request cannot be
            completed. Look for detail in body.
      security:
      - {}
      summary: Reset Password Request
      tags:
      - Module_Sspr
      x-contentType: application/json
      x-accepts: application/json
  /2/module/authenticate/authenticate/{eSessionType}:
    post:
      description: This endpoint authenticates a user.
      operationId: Authenticate_Authenticate_V2
      parameters:
      - explode: false
        in: path
        name: eSessionType
        required: true
        schema:
          enum:
          - ezsignuser
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/authenticate-authenticate-v2-Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authenticate-authenticate-v2-Response'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: Unauthorized
      security:
      - {}
      summary: Authenticate a user
      tags:
      - Module_Authenticate
      x-contentType: application/json
      x-accepts: application/json
  /1/object/ezsigndocument/{pkiEzsigndocumentID}/getEzsignpages:
    get:
      operationId: Ezsigndocument_GetEzsignpages_V1
      parameters:
      - explode: false
        in: path
        name: pkiEzsigndocumentID
        required: true
        schema:
          $ref: '#/components/schemas/Field-pkiEzsigndocumentID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ezsigndocument-getEzsignpages-v1-Response'
          description: Successful response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: The element you are trying to work on does not exist
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: The syntax of the request is valid but the request cannot be
            completed. Look for detail in body.
      security:
      - Authorization: []
      summary: Retrieve an existing Ezsigndocument's Ezsignpages
      tags:
      - Object_Ezsigndocument
      x-accepts: application/json
  /1/object/ezsigndocument/{pkiEzsigndocumentID}:
    delete:
      operationId: Ezsigndocument_DeleteObject_V1
      parameters:
      - explode: false
        in: path
        name: pkiEzsigndocumentID
        required: true
        schema:
          $ref: '#/components/schemas/Field-pkiEzsigndocumentID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ezsigndocument-deleteObject-v1-Response'
          description: Successful response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: The element you are trying to work on does not exist
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: The syntax of the request is valid but the request cannot be
            completed. Look for detail in body.
      security:
      - Authorization: []
      summary: Delete an existing Ezsigndocument
      tags:
      - Object_Ezsigndocument
      x-accepts: application/json
    get:
      description: |-
        ## â ï¸EARLY ADOPTERS WARNING

        ### This endpoint is not officially released. Its definition might still change and it might not be available in every environment and region.
      operationId: Ezsigndocument_GetObject_V1
      parameters:
      - explode: false
        in: path
        name: pkiEzsigndocumentID
        required: true
        schema:
          $ref: '#/components/schemas/Field-pkiEzsigndocumentID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ezsigndocument-getObject-v1-Response'
          description: Successful response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: The element you are trying to work on does not exist
      security:
      - Authorization: []
      summary: Retrieve an existing Ezsigndocument
      tags:
      - Object_Ezsigndocument
      x-accepts: application/json
  /1/object/ezsigndocument/{pkiEzsigndocumentID}/applyezsigntemplate:
    post:
      deprecated: true
      description: |-
        This function is deprecated. Please use *applyEzsigntemplate* instead which is doing the same thing but with a capital "E" to normalize the nomenclature.

        This endpoint applies a predefined template to the ezsign document.
        This allows to automatically apply all the form and signature fields on a document in a single step.

        The document must not already have fields otherwise an error will be returned.
      operationId: Ezsigndocument_ApplyEzsigntemplate_V1
      parameters:
      - explode: false
        in: path
        name: pkiEzsigndocumentID
        required: true
        schema:
          $ref: '#/components/schemas/Field-pkiEzsigndocumentID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ezsigndocument-applyEzsigntemplate-v1-Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ezsigndocument-applyEzsigntemplate-v1-Response'
          description: Successful response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: The element you are trying to work on does not exist
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: The syntax of the request is valid but the request cannot be
            completed. Look for detail in body.
      security:
      - Authorization: []
      summary: Apply an Ezsign Template to the Ezsigndocument.
      tags:
      - Object_Ezsigndocument
      x-contentType: application/json
      x-accepts: application/json
  /1/object/ezsigndocument/{pkiEzsigndocumentID}/getDownloadUrl/{eDocumentType}:
    get:
      description: |-
        This endpoint returns URLs to different files that can be downloaded during the signing process.

        These links will expire after 5 minutes so the download of the file should be made soon after retrieving the link.
      operationId: Ezsigndocument_GetDownloadUrl_V1
      parameters:
      - explode: false
        in: path
        name: pkiEzsigndocumentID
        required: true
        schema:
          $ref: '#/components/schemas/Field-pkiEzsigndocumentID'
        style: simple
      - description: |
          The type of document to retrieve.

          1. **Initial** Is the initial document before any signature were applied.
          2. **Signed** Is the final document once all signatures were applied.
          3. **Proofdocument** Is the evidence report.
          4. **Proof** Is the complete evidence archive including all of the above and more.
        explode: false
        in: path
        name: eDocumentType
        required: true
        schema:
          enum:
          - Initial
          - Signed
          - Proof
          - Proofdocument
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ezsigndocument-getDownloadUrl-v1-Response'
          description: Successful response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: The element you are trying to work on does not exist
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: The syntax of the request is valid but the request cannot be
            completed. Look for detail in body.
      security:
      - Authorization: []
      summary: Retrieve a URL to download documents.
      tags:
      - Object_Ezsigndocument
      x-accepts: application/json
  /1/object/ezsigndocument/{pkiEzsigndocumentID}/getWordsPositions:
    post:
      operationId: Ezsigndocument_GetWordsPositions_V1
      parameters:
      - explode: false
        in: path
        name: pkiEzsigndocumentID
        required: true
        schema:
          $ref: '#/components/schemas/Field-pkiEzsigndocumentID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ezsigndocument-getWordsPositions-v1-Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ezsigndocument-getWordsPositions-v1-Response'
          description: Successful response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: The element you are trying to work on does not exist
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: The syntax of the request is valid but the request cannot be
            completed. Look for detail in body.
      security:
      - Authorization: []
      summary: Retrieve positions X,Y of given words from a Ezsigndocument
      tags:
      - Object_Ezsigndocument
      x-contentType: application/json
      x-accepts: application/json
  /1/object/ezsignfolder/{pkiEzsignfolderID}/send:
    post:
      operationId: Ezsignfolder_Send_V1
      parameters:
      - explode: false
        in: path
        name: pkiEzsignfolderID
        required: true
        schema:
          $ref: '#/components/schemas/Field-pkiEzsignfolderID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ezsignfolder-send-v1-Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ezsignfolder-send-v1-Response'
          description: Successful response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: The element you are trying to work on does not exist
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: The syntax of the request is valid but the request cannot be
            completed. Look for detail in body.
      security:
      - Authorization: []
      summary: Send the Ezsignfolder to the signatories for signature
      tags:
      - Object_Ezsignfolder
      x-contentType: application/json
      x-accepts: application/json
  /1/object/ezsignfoldersignerassociation/{pkiEzsignfoldersignerassociationID}/getInPersonLoginUrl:
    get:
      description: |-
        This endpoint returns a Login Url that can be used in a browser or embedded in an I-Frame to allow in person signing.

        The signer Login type must be configured as In-Person.
      operationId: Ezsignfoldersignerassociation_GetInPersonLoginUrl_V1
      parameters:
      - explode: false
        in: path
        name: pkiEzsignfoldersignerassociationID
        required: true
        schema:
          $ref: '#/components/schemas/Field-pkiEzsignfoldersignerassociationID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ezsignfoldersignerassociation-getInPersonLoginUrl-v1-Response'
          description: Successful response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: The element you are trying to work on does not exist
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: The syntax of the request is valid but the request cannot be
            completed. Look for detail in body.
      security:
      - Authorization: []
      summary: Retrieve a Login Url to allow In-Person signing
      tags:
      - Object_Ezsignfoldersignerassociation
      x-accepts: application/json
  /1/object/ezsignsignature/{pkiEzsignsignatureID}:
    delete:
      operationId: Ezsignsignature_DeleteObject_V1
      parameters:
      - explode: false
        in: path
        name: pkiEzsignsignatureID
        required: true
        schema:
          $ref: '#/components/schemas/Field-pkiEzsignsignatureID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ezsignsignature-deleteObject-v1-Response'
          description: Successful response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: The element you are trying to work on does not exist
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: The syntax of the request is valid but the request cannot be
            completed. Look for detail in body.
      security:
      - Authorization: []
      summary: Delete an existing Ezsignsignature
      tags:
      - Object_Ezsignsignature
      x-accepts: application/json
    get:
      description: |-
        ## â ï¸EARLY ADOPTERS WARNING

        ### This endpoint is not officially released. Its definition might still change and it might not be available in every environment and region.
      operationId: Ezsignsignature_GetObject_V1
      parameters:
      - explode: false
        in: path
        name: pkiEzsignsignatureID
        required: true
        schema:
          $ref: '#/components/schemas/Field-pkiEzsignsignatureID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ezsignsignature-getObject-v1-Response'
          description: Successful response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: The element you are trying to work on does not exist
      security:
      - Authorization: []
      summary: Retrieve an existing Ezsignsignature
      tags:
      - Object_Ezsignsignature
      x-accepts: application/json
  /1/customer/{pksCustomerCode}/endpoint:
    get:
      description: 'Retrieve the customer''s specific server endpoint where to send
        requests. This will help locate the proper region (ie: sInfrastructureregionCode)
        and the proper environment (ie: sInfrastructureenvironmenttypeDescription)
        where the customer''s data is stored.'
      operationId: Global_Customer_GetEndpoint_V1
      parameters:
      - explode: false
        in: path
        name: pksCustomerCode
        required: true
        schema:
          $ref: '#/components/schemas/Field-pksCustomerCode'
        style: simple
      - description: |-
          The infrastructure product Code

          If undefined, "appcluster01" is assumed
        explode: true
        in: query
        name: sInfrastructureproductCode
        required: false
        schema:
          enum:
          - appcluster01
          - ezsignuser
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/global-customer-getEndpoint-v1-Response'
          description: Successful response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: The element you are trying to work on does not exist
      security:
      - {}
      summary: Get customer endpoint
      tags:
      - Global_Customer
      x-accepts: application/json
  /1/object/ezsigndocument/{pkiEzsigndocumentID}/getFormData:
    get:
      operationId: Ezsigndocument_GetFormData_V1
      parameters:
      - explode: false
        in: path
        name: pkiEzsigndocumentID
        required: true
        schema:
          $ref: '#/components/schemas/Field-pkiEzsigndocumentID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ezsigndocument-getFormData-v1-Response'
            application/zip:
              schema:
                $ref: '#/components/schemas/File-Zip'
            text/csv:
              examples:
                Example:
                  value: |-
                    sep=,
                    "sEzsignformfieldgroupLabel.sEzsignformfieldLabel1","sEzsignformfieldgroupLabel.sEzsignformfieldLabel2","sEzsignformfieldgroupLabel.sEzsignformfieldLabel3","sEzsignformfieldgroupLabel.sEzsignformfieldLabel4"
                    "sEzsignformfieldValue01","sEzsignformfieldValue02","sEzsignformfieldValue03","sEzsignformfieldValue04"
                    "sEzsignformfieldValue11","sEzsignformfieldValue12","sEzsignformfieldValue13","sEzsignformfieldValue14"
                    "sEzsignformfieldValue21","sEzsignformfieldValue22","sEzsignformfieldValue23","sEzsignformfieldValue24"
              schema:
                $ref: '#/components/schemas/File-Csv'
          description: Successful response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: The element you are trying to work on does not exist
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: One of the accept header is not defined or invalid.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: The syntax of the request is valid but the request cannot be
            completed. Look for detail in body.
      security:
      - Authorization: []
      summary: Retrieve an existing Ezsigndocument's Form Data
      tags:
      - Object_Ezsigndocument
      x-accepts: application/json
  /2/object/ezsigndocument/{pkiEzsigndocumentID}/applyEzsigntemplate:
    post:
      deprecated: false
      description: |-
        This endpoint applies a predefined template to the ezsign document.
        This allows to automatically apply all the form and signature fields on a document in a single step.

        The document must not already have fields otherwise an error will be returned.
      operationId: Ezsigndocument_ApplyEzsigntemplate_V2
      parameters:
      - explode: false
        in: path
        name: pkiEzsigndocumentID
        required: true
        schema:
          $ref: '#/components/schemas/Field-pkiEzsigndocumentID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ezsigndocument-applyEzsigntemplate-v2-Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ezsigndocument-applyEzsigntemplate-v2-Response'
          description: Successful response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: The element you are trying to work on does not exist
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: The syntax of the request is valid but the request cannot be
            completed. Look for detail in body.
      security:
      - Authorization: []
      summary: Apply an Ezsign Template to the Ezsigndocument.
      tags:
      - Object_Ezsigndocument
      x-contentType: application/json
      x-accepts: application/json
  /1/object/ezsignfolder/{pkiEzsignfolderID}/getFormsData:
    get:
      operationId: Ezsignfolder_GetFormsData_V1
      parameters:
      - explode: false
        in: path
        name: pkiEzsignfolderID
        required: true
        schema:
          $ref: '#/components/schemas/Field-pkiEzsignfolderID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ezsignfolder-getFormsData-v1-Response'
            application/zip:
              schema:
                $ref: '#/components/schemas/File-Zip'
          description: Successful response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: The element you are trying to work on does not exist
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: One of the accept header is not defined or invalid.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: The syntax of the request is valid but the request cannot be
            completed. Look for detail in body.
      security:
      - Authorization: []
      summary: Retrieve an existing Ezsignfolder's forms data
      tags:
      - Object_Ezsignfolder
      x-accepts: application/json
  /1/object/ezsignfoldertype/getList:
    get:
      description: |-
        Enum values that can be filtered in query parameter *sFilter*:

        | Variable | Valid values |
        |---|---|
        | eEzsignfoldertypePrivacylevel | User<br>Usergroup |
      operationId: Ezsignfoldertype_GetList_V1
      parameters:
      - description: Specify how you want the results to be sorted
        explode: true
        in: query
        name: eOrderBy
        required: false
        schema:
          enum:
          - pkiEzsignfoldertypeID_ASC
          - pkiEzsignfoldertypeID_DESC
          - eEzsignfoldertypePrivacylevel_ASC
          - eEzsignfoldertypePrivacylevel_DESC
          - sEzsignfoldertypeNameX_ASC
          - sEzsignfoldertypeNameX_DESC
          - bEzsignfoldertypeIsactive_ASC
          - bEzsignfoldertypeIsactive_DESC
          type: string
        style: form
      - explode: true
        in: query
        name: iRowMax
        required: false
        schema:
          $ref: '#/components/schemas/Field-iRowMax'
        style: form
      - explode: true
        in: query
        name: iRowOffset
        required: false
        schema:
          $ref: '#/components/schemas/Field-iRowOffset'
        style: form
      - explode: false
        in: header
        name: Accept-Language
        required: false
        schema:
          $ref: '#/components/schemas/Header-Accept-Language'
        style: simple
      - explode: true
        in: query
        name: sFilter
        required: false
        schema:
          $ref: '#/components/schemas/Field-sFilter'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ezsignfoldertype-getList-v1-Response'
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: '#/components/schemas/File-Xlsx'
          description: Successful response
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: One of the accept header is not defined or invalid.
      security:
      - Authorization: []
      summary: Retrieve Ezsignfoldertype list
      tags:
      - Object_Ezsignfoldertype
      x-accepts: application/json
  /1/object/period/getAutocomplete/{sSelector}:
    get:
      description: Get the list of Periods to be used in a dropdown or autocomplete
        control.
      operationId: Period_GetAutocomplete_V1
      parameters:
      - description: The types of Periods to return
        explode: false
        in: path
        name: sSelector
        required: true
        schema:
          enum:
          - ActiveNormal
          - ActiveNormalAndEndOfYear
          - AllNormal
          - AllNormalAndEndOfYear
          type: string
        style: simple
      - description: Allow to filter the returned results
        explode: true
        in: query
        name: sQuery
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-getAutocomplete-v1-Response'
          description: Successful response
      security:
      - Authorization: []
      summary: Retrieve Periods and IDs
      tags:
      - Object_Period
      x-accepts: application/json
  /1/object/ezsignfolder/getList:
    get:
      description: |-
        Enum values that can be filtered in query parameter *sFilter*:

        | Variable | Valid values |
        |---|---|
        | eEzsignfolderStep | Unsent<br>Sent<br>PartiallySigned<br>Expired<br>Completed<br>Archived |
        | eEzsignfoldertypePrivacylevel | User<br>Usergroup |
      operationId: Ezsignfolder_GetList_V1
      parameters:
      - description: Specify how you want the results to be sorted
        explode: true
        in: query
        name: eOrderBy
        required: false
        schema:
          enum:
          - pkiEzsignfolderID_ASC
          - pkiEzsignfolderID_DESC
          - sEzsignfolderDescription_ASC
          - sEzsignfolderDescription_DESC
          - dtCreatedDate_ASC
          - dtCreatedDate_DESC
          - fkiEzsignfoldertypeID_ASC
          - fkiEzsignfoldertypeID_DESC
          - sEzsignfoldertypeNameX_ASC
          - sEzsignfoldertypeNameX_DESC
          - eEzsignfolderStep_ASC
          - eEzsignfolderStep_DESC
          - dtEzsignfolderSentdate_ASC
          - dtEzsignfolderSentdate_DESC
          - dtDueDate_ASC
          - dtDueDate_DESC
          - iTotalDocument_ASC
          - iTotalDocument_DESC
          - iTotalDocumentEdm_ASC
          - iTotalDocumentEdm_DESC
          - iTotalSignature_ASC
          - iTotalSignature_DESC
          - iTotalSignatureSigned_ASC
          - iTotalSignatureSigned_DESC
          type: string
        style: form
      - explode: true
        in: query
        name: iRowMax
        required: false
        schema:
          $ref: '#/components/schemas/Field-iRowMax'
        style: form
      - explode: true
        in: query
        name: iRowOffset
        required: false
        schema:
          $ref: '#/components/schemas/Field-iRowOffset'
        style: form
      - explode: false
        in: header
        name: Accept-Language
        required: false
        schema:
          $ref: '#/components/schemas/Header-Accept-Language'
        style: simple
      - explode: true
        in: query
        name: sFilter
        required: false
        schema:
          $ref: '#/components/schemas/Field-sFilter'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ezsignfolder-getList-v1-Response'
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: '#/components/schemas/File-Xlsx'
          description: Successful response
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: One of the accept header is not defined or invalid.
      security:
      - Authorization: []
      summary: Retrieve Ezsignfolder list
      tags:
      - Object_Ezsignfolder
      x-accepts: application/json
  /1/object/ezsignfoldertype/getAutocomplete/{sSelector}:
    get:
      description: Get the list of Ezsignfoldertypes to be used in a dropdown or autocomplete
        control.
      operationId: Ezsignfoldertype_GetAutocomplete_V1
      parameters:
      - description: The type of Ezsignfoldertypes to return
        explode: false
        in: path
        name: sSelector
        required: true
        schema:
          enum:
          - Active
          - All
          type: string
        style: simple
      - description: Allow to filter the returned results
        explode: true
        in: query
        name: sQuery
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: Accept-Language
        required: false
        schema:
          $ref: '#/components/schemas/Header-Accept-Language'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-getAutocomplete-v1-Response'
          description: Successful response
      security:
      - Authorization: []
      summary: Retrieve Ezsignfoldertypes and IDs
      tags:
      - Object_Ezsignfoldertype
      x-accepts: application/json
  /1/object/ezsignfolder/{pkiEzsignfolderID}/unsend:
    post:
      description: |-
        Once an Ezsignfolder has been sent to signatories, it cannot be modified.

        Using this endpoint, you can unsend the Ezsignfolder and make it modifiable again.

        Signatories will receive an email informing them the signature process was aborted and they might receive a new invitation to sign.

        â ï¸ Warning: Any signature previously made by signatories on "Non-completed" Ezsigndocuments will be lost.
      operationId: Ezsignfolder_Unsend_V1
      parameters:
      - explode: false
        in: path
        name: pkiEzsignfolderID
        required: true
        schema:
          $ref: '#/components/schemas/Field-pkiEzsignfolderID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ezsignfolder-unsend-v1-Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ezsignfolder-unsend-v1-Response'
          description: Successful response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: The element you are trying to work on does not exist
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: The syntax of the request is valid but the request cannot be
            completed. Look for detail in body.
      security:
      - Authorization: []
      summary: Unsend the Ezsignfolder
      tags:
      - Object_Ezsignfolder
      x-contentType: application/json
      x-accepts: application/json
  /1/module/list/listpresentation/{sListName}:
    get:
      description: Retrive previously saved Listpresentation
      operationId: List_GetListpresentation_V1
      parameters:
      - description: The list Name
        explode: false
        in: path
        name: sListName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/list-getListpresentation-v1-Response'
          description: Successful response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: The element you are trying to work on does not exist
      security:
      - Authorization: []
      summary: Get all Listpresentation for a specific list
      tags:
      - Module_List
      x-accepts: application/json
    post:
      description: Users can create many Listpresentations for lists in the system.
        They can customize orber by, filters, numbers of rows, etc.
      operationId: List_SaveListpresentation_V1
      parameters:
      - description: The list Name
        explode: false
        in: path
        name: sListName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/list-saveListpresentation-v1-Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/list-saveListpresentation-v1-Response'
          description: Successful response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: The element you are trying to work on does not exist
      security:
      - Authorization: []
      summary: Save all Listpresentation for a specific list
      tags:
      - Module_List
      x-contentType: application/json
      x-accepts: application/json
  /1/object/ezsignbulksend/getList:
    get:
      description: |-
        Enum values that can be filtered in query parameter *sFilter*:

        | Variable | Valid values |
        |---|---|
        | eEzsignfoldertypePrivacylevel | User<br>Usergroup |
      operationId: Ezsignbulksend_GetList_V1
      parameters:
      - description: Specify how you want the results to be sorted
        explode: true
        in: query
        name: eOrderBy
        required: false
        schema:
          enum:
          - pkiEzsignbulksendID_ASC
          - pkiEzsignbulksendID_DESC
          - fkiEzsignfoldertypeID_ASC
          - fkiEzsignfoldertypeID_DESC
          - sEzsignbulksendDescription_ASC
          - sEzsignbulksendDescription_DESC
          - sEzsignfoldertypeNameX_ASC
          - sEzsignfoldertypeNameX_DESC
          - eEzsignfoldertypePrivacylevel_ASC
          - eEzsignfoldertypePrivacylevel_DESC
          - bEzsignbulksendIsactive_ASC
          - bEzsignbulksendIsactive_DESC
          - iEzsignbulksendtransmission_ASC
          - iEzsignbulksendtransmission_DESC
          - iEzsignfolder_ASC
          - iEzsignfolder_DESC
          - iEzsigndocument_ASC
          - iEzsigndocument_DESC
          - iEzsignsignature_ASC
          - iEzsignsignature_DESC
          - iEzsignsignatureSigned_ASC
          - iEzsignsignatureSigned_DESC
          type: string
        style: form
      - explode: true
        in: query
        name: iRowMax
        required: false
        schema:
          $ref: '#/components/schemas/Field-iRowMax'
        style: form
      - explode: true
        in: query
        name: iRowOffset
        required: false
        schema:
          $ref: '#/components/schemas/Field-iRowOffset'
        style: form
      - explode: false
        in: header
        name: Accept-Language
        required: false
        schema:
          $ref: '#/components/schemas/Header-Accept-Language'
        style: simple
      - explode: true
        in: query
        name: sFilter
        required: false
        schema:
          $ref: '#/components/schemas/Field-sFilter'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ezsignbulksend-getList-v1-Response'
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: '#/components/schemas/File-Xlsx'
          description: Successful response
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: One of the accept header is not defined or invalid.
      security:
      - Authorization: []
      summary: Retrieve Ezsignbulksend list
      tags:
      - Object_Ezsignbulksend
      x-accepts: application/json
  /1/object/ezsigntemplatepackage/getList:
    get:
      description: |-
        Enum values that can be filtered in query parameter *sFilter*:

        | Variable | Valid values |
        |---|---|
        | eEzsigntemplatepackageType | Company<br>Department<br>Team<br>User<br>Usergroup |
      operationId: Ezsigntemplatepackage_GetList_V1
      parameters:
      - description: Specify how you want the results to be sorted
        explode: true
        in: query
        name: eOrderBy
        required: false
        schema:
          enum:
          - pkiEzsigntemplatepackageID_ASC
          - pkiEzsigntemplatepackageID_DESC
          - fkiDepartmentID_ASC
          - fkiDepartmentID_DESC
          - fkiTeamID_ASC
          - fkiTeamID_DESC
          - fkiEzsignfoldertypeID_ASC
          - fkiEzsignfoldertypeID_DESC
          - fkiLanguageID_ASC
          - fkiLanguageID_DESC
          - eEzsigntemplatepackageType_ASC
          - eEzsigntemplatepackageType_DESC
          - sEzsigntemplatepackageDescription_ASC
          - sEzsigntemplatepackageDescription_DESC
          - bEzsigntemplatepackageIsactive_ASC
          - bEzsigntemplatepackageIsactive_DESC
          - iEzsigntemplatepackagemembership_ASC
          - iEzsigntemplatepackagemembership_DESC
          type: string
        style: form
      - explode: true
        in: query
        name: iRowMax
        required: false
        schema:
          $ref: '#/components/schemas/Field-iRowMax'
        style: form
      - explode: true
        in: query
        name: iRowOffset
        required: false
        schema:
          $ref: '#/components/schemas/Field-iRowOffset'
        style: form
      - explode: false
        in: header
        name: Accept-Language
        required: false
        schema:
          $ref: '#/components/schemas/Header-Accept-Language'
        style: simple
      - explode: true
        in: query
        name: sFilter
        required: false
        schema:
          $ref: '#/components/schemas/Field-sFilter'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ezsigntemplatepackage-getList-v1-Response'
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: '#/components/schemas/File-Xlsx'
          description: Successful response
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: One of the accept header is not defined or invalid.
      security:
      - Authorization: []
      summary: Retrieve Ezsigntemplatepackage list
      tags:
      - Object_Ezsigntemplatepackage
      x-accepts: application/json
  /1/object/ezsignfolder/{pkiEzsignfolderID}/getEzsigndocuments:
    get:
      operationId: Ezsignfolder_GetEzsigndocuments_V1
      parameters:
      - explode: false
        in: path
        name: pkiEzsignfolderID
        required: true
        schema:
          $ref: '#/components/schemas/Field-pkiEzsignfolderID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ezsignfolder-getEzsigndocuments-v1-Response'
          description: Successful response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: The element you are trying to work on does not exist
      security:
      - Authorization: []
      summary: Retrieve an existing Ezsignfolder's Ezsigndocuments
      tags:
      - Object_Ezsignfolder
      x-accepts: application/json
  /1/object/ezsignfolder/{pkiEzsignfolderID}:
    delete:
      operationId: Ezsignfolder_DeleteObject_V1
      parameters:
      - explode: false
        in: path
        name: pkiEzsignfolderID
        required: true
        schema:
          $ref: '#/components/schemas/Field-pkiEzsignfolderID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ezsignfolder-deleteObject-v1-Response'
          description: Successful response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: The element you are trying to work on does not exist
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: The syntax of the request is valid but the request cannot be
            completed. Look for detail in body.
      security:
      - Authorization: []
      summary: Delete an existing Ezsignfolder
      tags:
      - Object_Ezsignfolder
      x-accepts: application/json
    get:
      operationId: Ezsignfolder_GetObject_V1
      parameters:
      - explode: false
        in: path
        name: pkiEzsignfolderID
        required: true
        schema:
          $ref: '#/components/schemas/Field-pkiEzsignfolderID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ezsignfolder-getObject-v1-Response'
          description: Successful response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: The element you are trying to work on does not exist
      security:
      - Authorization: []
      summary: Retrieve an existing Ezsignfolder
      tags:
      - Object_Ezsignfolder
      x-accepts: application/json
  /1/object/ezsignfoldersignerassociation/{pkiEzsignfoldersignerassociationID}:
    delete:
      operationId: Ezsignfoldersignerassociation_DeleteObject_V1
      parameters:
      - explode: false
        in: path
        name: pkiEzsignfoldersignerassociationID
        required: true
        schema:
          $ref: '#/components/schemas/Field-pkiEzsignfoldersignerassociationID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ezsignfoldersignerassociation-deleteObject-v1-Response'
          description: Successful response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: The element you are trying to work on does not exist
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: The syntax of the request is valid but the request cannot be
            completed. Look for detail in body.
      security:
      - Authorization: []
      summary: Delete an existing Ezsignfoldersignerassociation
      tags:
      - Object_Ezsignfoldersignerassociation
      x-accepts: application/json
    get:
      operationId: Ezsignfoldersignerassociation_GetObject_V1
      parameters:
      - explode: false
        in: path
        name: pkiEzsignfoldersignerassociationID
        required: true
        schema:
          $ref: '#/components/schemas/Field-pkiEzsignfoldersignerassociationID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ezsignfoldersignerassociation-getObject-v1-Response'
          description: Successful response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: The element you are trying to work on does not exist
      security:
      - Authorization: []
      summary: Retrieve an existing Ezsignfoldersignerassociation
      tags:
      - Object_Ezsignfoldersignerassociation
      x-accepts: application/json
  /1/object/ezsignfolder/{pkiEzsignfolderID}/getEzsignfoldersignerassociations:
    get:
      operationId: Ezsignfolder_GetEzsignfoldersignerassociations_V1
      parameters:
      - explode: false
        in: path
        name: pkiEzsignfolderID
        required: true
        schema:
          $ref: '#/components/schemas/Field-pkiEzsignfolderID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ezsignfolder-getEzsignfoldersignerassociations-v1-Response'
          description: Successful response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Common-Response-Error'
          description: The element you are trying to work on does not exist
      security:
      - Authorization: []
      summary: Retrieve an existing Ezsignfolder's Ezsignfoldersignerassociations
      tags:
      - Object_Ezsignfolder
      x-accepts: application/json
components:
  responses:
    Response-Error-404:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Common-Response-Error'
      description: The element you are trying to work on does not exist
    Response-Error-403:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Common-Response-Error'
      description: You are not allowed to call this function
    Response-Webhook-204:
      description: The Webhook event notification was successfully received and processed
        by the receiving web server.
    Response-Error-401:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Common-Response-Error'
      description: Unauthorized
    Response-Error-406:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Common-Response-Error'
      description: One of the accept header is not defined or invalid.
    Response-Error-422:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Common-Response-Error'
      description: The syntax of the request is valid but the request cannot be completed.
        Look for detail in body.
    Response-Error-422-sTemporaryFileUrl:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Common-Response-Error-sTemporaryFileUrl'
      description: The syntax of the request is valid but the request cannot be completed.
        Look for detail in body. If the error is recoverable sTemporaryFileUrl will
        be set and you can use this url to try a new request without sending the file
        over again
  schemas:
    ezsigndocument-createObject-v1-Response:
      allOf:
      - $ref: '#/components/schemas/ezsigndocument_createObject_v1_Response_allOf'
      - $ref: '#/components/schemas/Common-Response'
      description: Response for the /1/object/ezsigndocument/createObject API Request
      type: object
    ezsigndocument-deleteObject-v1-Response:
      allOf:
      - $ref: '#/components/schemas/Common-Response'
      description: Response for the /1/object/ezsigndocument/deleteObject API Request
      type: object
    ezsigndocument-getObject-v1-Response:
      allOf:
      - $ref: '#/components/schemas/ezsigndocument_getObject_v1_Response_allOf'
      - $ref: '#/components/schemas/Common-Response'
      description: Response for the /1/object/ezsigndocument/getDownloadUrl API Request
      type: object
    ezsigndocument-createObject-v1-Request:
      description: Request for the /1/object/ezsigndocument/createObject API Request
      properties:
        objEzsigndocument:
          $ref: '#/components/schemas/ezsigndocument-Request'
        objEzsigndocumentCompound:
          $ref: '#/components/schemas/ezsigndocument-RequestCompound'
      type: object
    activesession-getCurrent-v1-Response:
      allOf:
      - $ref: '#/components/schemas/activesession_getCurrent_v1_Response_allOf'
      - $ref: '#/components/schemas/Common-Response'
      description: Response for the /1/object/activesession/getCurrent API Request
      type: object
    ezsignfolder-deleteObject-v1-Response:
      allOf:
      - $ref: '#/components/schemas/Common-Response'
      description: Response for the /1/object/ezsignfolder/deleteObject API Request
      type: object
    ezsignfolder-getObject-v1-Response:
      allOf:
      - $ref: '#/components/schemas/ezsignfolder_getObject_v1_Response_allOf'
      - $ref: '#/components/schemas/Common-Response'
      description: Response for the /1/object/ezsignfolder/getObject API Request
      type: object
    ezsignfoldersignerassociation-createObject-v1-Response:
      allOf:
      - $ref: '#/components/schemas/ezsignfoldersignerassociation_createObject_v1_Response_allOf'
      - $ref: '#/components/schemas/Common-Response'
      description: Response for the /1/object/ezsignfoldersignerassociation/createObject
        API Request
      type: object
    ezsignfoldersignerassociation-deleteObject-v1-Response:
      allOf:
      - $ref: '#/components/schemas/Common-Response'
      description: Response for the /1/object/ezsignfoldersignerassociation/deleteObject
        API Request
      type: object
    ezsignfoldersignerassociation-getObject-v1-Response:
      allOf:
      - $ref: '#/components/schemas/ezsignfoldersignerassociation_getObject_v1_Response_allOf'
      - $ref: '#/components/schemas/Common-Response'
      description: Response for the /1/object/ezsignfoldersignerassociation/getObject
        API Request
      type: object
    Common-Response-Error:
      description: Generic Error Message
      properties:
        sErrorMessage:
          description: More detail about the error
          type: string
        eErrorCode:
          description: The error code. See documentation for valid values
          type: string
      required:
      - sErrorMessage
      type: object
    Common-Response-objDebug:
      description: This is a generic debug object that is returned by all API requests
      example:
        sMemoryUsage: 11,923MB
        sRunTime: 0.6084s
        iSQLSelects: 3
        iSQLQueries: 6
        a_objQuery:
        - sQuery: SELECT * FROM table
          fDuration: 1.0E-4
        - sQuery: SELECT * FROM table
          fDuration: 1.0E-4
      properties:
        sMemoryUsage:
          description: The peak memory allocated during the API request execution.
            Formatted as a human readable string
          type: string
        sRunTime:
          description: The total server execution time of the API request execution.
            Formatted as a human readable string
          type: string
        iSQLSelects:
          description: The number of SQL SELECT queries that were sent to the database
            server during the API request execution
          type: integer
        iSQLQueries:
          description: The number of SQL INSERT/UPDATE/DELETE queries that were sent
            to the database server during the API request execution
          type: integer
        a_objSQLQuery:
          description: An array of the SQL Queries that were executed during the API
            request execution
          items:
            $ref: '#/components/schemas/Common-Response-objSQLQuery'
          type: array
      required:
      - a_objSQLQuery
      - iSQLQueries
      - iSQLSelects
      - sMemoryUsage
      - sRunTime
      type: object
    Common-Response-objSQLQuery:
      description: Definition of objSQLQuery Object
      example:
        sQuery: SELECT * FROM table
        fDuration: 1.0E-4
      properties:
        sQuery:
          description: The SQL Query
          type: string
        fDuration:
          description: Execution time of the SQL Query in seconds
          format: float
          type: number
      required:
      - fDuration
      - sQuery
      type: object
    ezsignfolder-createObject-v1-Request:
      description: Request for the /1/object/ezsignfolder/createObject API Request
      properties:
        objEzsignfolder:
          $ref: '#/components/schemas/ezsignfolder-Request'
        objEzsignfolderCompound:
          $ref: '#/components/schemas/ezsignfolder-RequestCompound'
      type: object
    ezsignfoldersignerassociation-createObject-v1-Request:
      description: Request for the /1/object/ezsignfoldersignerassociation/createObject
        API Request
      properties:
        objEzsignfoldersignerassociation:
          $ref: '#/components/schemas/ezsignfoldersignerassociation-Request'
        objEzsignfoldersignerassociationCompound:
          $ref: '#/components/schemas/ezsignfoldersignerassociation-RequestCompound'
      type: object
    ezsignfolder-RequestCompound:
      allOf:
      - type: object
      - $ref: '#/components/schemas/ezsignfolder-Request'
      description: An Ezsignfolder Object and children to create a complete structure
      example:
        fkiEzsignfoldertypeID: 1
        sEzsignfolderDescription: Test eZsign Folder
        tEzsignfolderNote: An extra notes we can add to the ezsign folder
        fkiEzsigntsarequirementID: 1
        eEzsignfolderSendreminderfrequency: Daily
      type: object
    ezsignsigner-RequestCompound:
      allOf:
      - $ref: '#/components/schemas/ezsignsigner_RequestCompound_allOf'
      - $ref: '#/components/schemas/ezsignsigner-Request'
      description: An Ezsignsigner Object and children to create a complete structure
      type: object
    ezsignfoldersignerassociation-RequestCompound:
      allOf:
      - $ref: '#/components/schemas/ezsignfoldersignerassociation_RequestCompound_allOf'
      - $ref: '#/components/schemas/ezsignfoldersignerassociation-Request'
      description: An Ezsignfoldersignerassociation Object and children to create
        a complete structure
      type: object
    ezsigndocument-RequestCompound:
      allOf:
      - $ref: '#/components/schemas/ezsigndocument-Request'
      description: An Ezsigndocument Object and children to create a complete structure
      type: object
    ezsignfolder-send-v1-Response:
      allOf:
      - $ref: '#/components/schemas/Common-Response'
      description: Response for the /1/object/ezsignfolder/{pkiEzsignfolderID}/send
        API Request
      type: object
    ezsignfolder-send-v1-Request:
      description: Request for the /1/object/ezsignfolder/{pkiEzsignfolderID}/send
        API Request
      example: |-
        Hi John,

        This is the document I need you to sign.

        Could you sign it before monday please.

        Best Regards.

        Mary
      properties:
        tExtraMessage:
          description: |-
            A custom text message that will be added to the email sent to signatories inviting them to sign.

            You can send an empty string and only the generic message will be sent.
          type: string
      required:
      - tExtraMessage
      type: object
    ezsignsignature-getObject-v1-Response-mPayload:
      description: Payload for the /1/object/ezsignsignature/getObject API Request
      type: object
    ezsignsignature-createObject-v1-Response:
      allOf:
      - $ref: '#/components/schemas/ezsignsignature_createObject_v1_Response_allOf'
      - $ref: '#/components/schemas/Common-Response'
      description: Response for the /1/object/ezsignsignature/createObject API Request
      type: object
    ezsignsignature-deleteObject-v1-Response:
      allOf:
      - $ref: '#/components/schemas/Common-Response'
      description: Response for the /1/object/ezsignsignature/deleteObject API Request
      type: object
    ezsignsignature-getObject-v1-Response:
      allOf:
      - $ref: '#/components/schemas/ezsignsignature_getObject_v1_Response_allOf'
      - $ref: '#/components/schemas/Common-Response'
      description: Response for the /1/object/ezsignsignature/getObject API Request
      type: object
    ezsignsignature-createObject-v1-Request:
      description: Request for the /1/object/ezsignsignature/createObject API Request
      properties:
        objEzsignsignature:
          $ref: '#/components/schemas/ezsignsignature-Request'
        objEzsignsignatureCompound:
          $ref: '#/components/schemas/ezsignsignature-RequestCompound'
      type: object
    Common-Webhook:
      description: This is the base Webhook object
      properties:
        objWebhook:
          $ref: '#/components/schemas/webhook-Response'
        a_objAttempt:
          description: |-
            An array containing details of previous attempts that were made to deliver the message.
            The array is empty if it's the first attempt.
          items:
            $ref: '#/components/schemas/attempt-Response'
          type: array
      required:
      - a_objAttempt
      - objWebhook
      type: object
    Webhook-Ezsign-DocumentCompleted:
      allOf:
      - $ref: '#/components/schemas/Webhook_Ezsign_DocumentCompleted_allOf'
      - $ref: '#/components/schemas/Common-Webhook'
      description: This is the base Webhook object
      type: object
    Webhook-Ezsign-FolderCompleted:
      allOf:
      - $ref: '#/components/schemas/Webhook_Ezsign_FolderCompleted_allOf'
      - $ref: '#/components/schemas/Common-Webhook'
      description: This is the base Webhook object
      type: object
    webhook-Response:
      description: A webhook object
      properties:
        pkiWebhookID:
          description: The Webhook ID. This value is visible in the admin interface.
          type: integer
        eWebhookModule:
          description: The Module generating the Event.
          enum:
          - Ezsign
          - Management
          type: string
        eWebhookEzsignevent:
          description: This Ezsign Event. This property will be set only if the Module
            is "Ezsign".
          enum:
          - DocumentCompleted
          - FolderCompleted
          type: string
        pksCustomerCode:
          description: The customer code assigned to your account
          example: demo
          maxLength: 6
          minLength: 2
          type: string
        sWebhookUrl:
          description: The url being called
          type: string
        sWebhookEmailfailed:
          description: The email that will receive the webhook in case all attempts
            fail.
          type: string
        eWebhookManagementevent:
          description: This Management Event. This property will be set only if the
            Module is "Management".
          enum:
          - UserCreated
          type: string
      required:
      - eWebhookModule
      - pkiWebhookID
      - pksCustomerCode
      - sWebhookEmailfailed
      - sWebhookUrl
      type: object
    attempt-Response:
      description: An Attempt object
      example:
        dtAttemptStart: 2020-12-31 23:59:59
        sAttemptResult: Success
        iAttemptDuration: 1
      properties:
        dtAttemptStart:
          description: |-
            Represent a Date Time.
            The timezone is the one configured in the User's profile.
          example: 2020-12-31 23:59:59
          type: string
        sAttemptResult:
          description: The Success or Failure message of the attempt when we tried
            to call the URL to deliver the webhook event.
          type: string
        iAttemptDuration:
          description: The number of second it took to process the webhook or get
            an error
          type: integer
      required:
      - dtAttemptStart
      - iAttemptDuration
      - sAttemptResult
      type: object
    ezsignfolder-ResponseCompound:
      allOf:
      - $ref: '#/components/schemas/ezsignfolder-Response'
      description: An Ezsignfolder Object and children to create a complete structure
      type: object
    ezsigndocument-Response:
      description: An Ezsigndocument Object
      properties:
        fkiEzsignfolderID:
          description: The unique ID of the Ezsignfolder
          example: 33
          type: integer
        dtEzsigndocumentDuedate:
          description: The maximum date and time at which the Ezsigndocument can be
            signed.
          example: 2020-12-31 23:59:59
          type: string
        fkiLanguageID:
          description: |-
            The unique ID of the Language.

            Valid values:

            |Value|Description|
            |-|-|
            |1|French|
            |2|English|
          example: 2
          maximum: 2
          minimum: 1
          type: integer
        sEzsigndocumentName:
          description: The name of the document that will be presented to Ezsignfoldersignerassociations
          example: 'Contract #123'
          type: string
        pkiEzsigndocumentID:
          description: The unique ID of the Ezsigndocument
          example: 97
          type: integer
        eEzsigndocumentStep:
          $ref: '#/components/schemas/Field-eEzsigndocumentStep'
        dtEzsigndocumentFirstsend:
          description: The date and time when the Ezsigndocument was first sent.
          example: 2020-12-31 23:59:59
          type: string
        dtEzsigndocumentLastsend:
          description: The date and time when the Ezsigndocument was sent the last
            time.
          example: 2020-12-31 23:59:59
          type: string
        iEzsigndocumentOrder:
          description: The order in which the Ezsigndocument will be presented to
            the signatory in the Ezsignfolder.
          example: 1
          type: integer
        iEzsigndocumentPagetotal:
          description: The number of pages in the Ezsigndocument.
          example: 4
          type: integer
        iEzsigndocumentSignaturesigned:
          description: The number of signatures that were signed in the document.
          example: 3
          type: integer
        iEzsigndocumentSignaturetotal:
          description: The number of total signatures that were requested in the Ezsigndocument.
          example: 4
          type: integer
        sEzsigndocumentMD5initial:
          description: MD5 Hash of the initial PDF Document before signatures were
            applied to it.
          example: 012345678901234567890123456789AB
          type: string
        sEzsigndocumentMD5signed:
          description: MD5 Hash of the final PDF Document after all signatures were
            applied to it.
          example: 012345678901234567890123456789AB
          type: string
        objAudit:
          $ref: '#/components/schemas/Common-Audit'
      required:
      - dtEzsigndocumentDuedate
      - dtEzsigndocumentFirstsend
      - dtEzsigndocumentLastsend
      - eEzsigndocumentStep
      - fkiEzsignfolderID
      - fkiLanguageID
      - iEzsigndocumentOrder
      - iEzsigndocumentPagetotal
      - iEzsigndocumentSignaturesigned
      - iEzsigndocumentSignaturetotal
      - objAudit
      - pkiEzsigndocumentID
      - sEzsigndocumentMD5initial
      - sEzsigndocumentMD5signed
      - sEzsigndocumentName
      type: object
    Common-Audit:
      description: |+
        Gives informations about the user that created the object and the last user to have modified it.

        If the object was never modified after creation, both Created and Modified informations will be the same.

        Apikey details will only be provided if the changes were made by an API key.

      example:
        fkiUserIDCreated: 35
        fkiUserIDModified: 35
        fkiApikeyIDCreated: 1
        fkiApikeyIDModified: 1
        dtCreatedDate: 2020-12-31 23:59:59
        dtModifiedDate: 2020-12-31 23:59:59
      properties:
        fkiUserIDCreated:
          description: The unique ID of the User
          example: 70
          type: integer
        fkiUserIDModified:
          description: The unique ID of the User
          example: 70
          type: integer
        fkiApikeyIDCreated:
          description: The unique ID of the Apikey
          example: 99
          type: integer
        fkiApikeyIDModified:
          description: The unique ID of the Apikey
          example: 99
          type: integer
        dtCreatedDate:
          description: |-
            Represent a Date Time.
            The timezone is the one configured in the User's profile.
          example: 2020-12-31 23:59:59
          type: string
        dtModifiedDate:
          description: |-
            Represent a Date Time.
            The timezone is the one configured in the User's profile.
          example: 2020-12-31 23:59:59
          type: string
      required:
      - dtCreatedDate
      - dtModifiedDate
      - fkiUserIDCreated
      - fkiUserIDModified
      type: object
    Field-sEzsigndocumentName:
      description: The name of the document that will be presented to Ezsignfoldersignerassociations
      example: 'Contract #123'
      type: string
    Field-eEzsigndocumentStep:
      description: The signature step of the Ezsigndocument.
      enum:
      - Unsent
      - Unsigned
      - PartiallySigned
      - DeclinedToSign
      - PrematurelyEnded
      - Completed
      example: Completed
      type: string
    Field-dtEzsigndocumentFirstsend:
      description: The date and time when the Ezsigndocument was first sent.
      example: 2020-12-31 23:59:59
      type: string
    Field-dtEzsigndocumentLastsend:
      description: The date and time when the Ezsigndocument was sent the last time.
      example: 2020-12-31 23:59:59
      type: string
    Field-tEzsignfolderNote:
      description: Somes extra notes about the eZsign Folder
      example: An extra notes we can add to the ezsign folder
      type: string
    Field-dtEzsignfolderClose:
      description: The date and time at which the folder was closed. Either by applying
        the last signature or by completing it prematurely.
      example: 2020-12-31 23:59:59
      type: string
    Field-eEzsignfolderSendreminderfrequency:
      description: Frequency at which reminders will be sent to signers that haven't
        signed the documents
      enum:
      - None
      - Daily
      - Weekly
      example: None
      type: string
    Field-sEzsigndocumentMD5initial:
      description: MD5 Hash of the initial PDF Document before signatures were applied
        to it.
      example: 012345678901234567890123456789AB
      type: string
    Field-sEzsigndocumentMD5signed:
      description: MD5 Hash of the final PDF Document after all signatures were applied
        to it.
      example: 012345678901234567890123456789AB
      type: string
    ezsigndocument-getDownloadUrl-v1-Response:
      allOf:
      - $ref: '#/components/schemas/ezsigndocument_getDownloadUrl_v1_Response_allOf'
      - $ref: '#/components/schemas/Common-Response'
      description: Response for the /1/object/ezsigndocument/{pkiEzsigndocument}/getDownloadUrl
        API Request
      type: object
    ezsigndocument-getDownloadUrl-v1-Response-mPayload:
      description: Payload for the /1/object/ezsigndocument/{pkiEzsigndocument}/getDownloadUrl
        API Request
      example:
        sDownloadUrl: http://www.example.com/document.pdf
      properties:
        sDownloadUrl:
          description: |-
            The Url to the requested document.

            Url will expire after 5 minutes.
          type: string
      required:
      - sDownloadUrl
      type: object
    ezsignfoldersignerassociation-getInPersonLoginUrl-v1-Response:
      allOf:
      - $ref: '#/components/schemas/ezsignfoldersignerassociation_getInPersonLoginUrl_v1_Response_allOf'
      - $ref: '#/components/schemas/Common-Response'
      description: Response for the /1/object/ezsignfoldersignerassociation/getInPersonLoginUrl
        API Request
      type: object
    ezsignfoldersignerassociation-getInPersonLoginUrl-v1-Response-mPayload:
      description: Payload for the /1/object/ezsignfoldersignerassociation/getInPersonLoginUrl
        API Request
      properties:
        sLoginUrl:
          description: "The Url to login to the signing application.\r\n\r\nUrl will\
            \ expire after 30 minutes.\r\n"
          type: string
      required:
      - sLoginUrl
      type: object
    franchisereferalincome-createObject-v1-Request:
      description: Request for the /1/object/franchisereferalincome/createObject API
        Request
      properties:
        objFranchisereferalincome:
          $ref: '#/components/schemas/franchisereferalincome-Request'
        objFranchisereferalincomeCompound:
          $ref: '#/components/schemas/franchisereferalincome-RequestCompound'
      type: object
    franchisereferalincome-createObject-v1-Response:
      allOf:
      - $ref: '#/components/schemas/franchisereferalincome_createObject_v1_Response_allOf'
      - $ref: '#/components/schemas/Common-Response'
      description: Response for the /1/object/franchisereferalincome/createObject
        API Request
      type: object
    Field-dFranchisereferalincomeLoan:
      description: The loan amount
      example: "500275.62"
      type: string
    Field-dFranchisereferalincomeFranchiseamount:
      description: The amount that will be given to the franchise
      example: "275.00"
      type: string
    Field-dFranchisereferalincomeFranchisoramount:
      description: The amount that will be kept by the franchisor
      example: "385.00"
      type: string
    Field-dFranchisereferalincomeAgentamount:
      description: The amount that will be given to the agent
      example: "800.00"
      type: string
    address-Request:
      description: An Address Object
      properties:
        fkiAddresstypeID:
          description: |-
            The unique ID of the Addresstype.

            Valid values:

            |Value|Description|
            |-|-|
            |1|Office|
            |2|Home|
            |3|Real Estate Invoice|
            |4|Invoicing|
            |5|Shipping|
          example: 1
          type: integer
        sAddressCivic:
          description: The Civic number.
          example: "2540"
          type: string
        sAddressStreet:
          description: The Street Name
          example: Daniel-Johnson Blvd.
          type: string
        sAddressSuite:
          description: The Suite or appartment number
          example: "610"
          type: string
        sAddressCity:
          description: The City name
          example: Laval
          type: string
        fkiProvinceID:
          description: |-
            The unique ID of the Province.

            Here are some common values (Complete list must be retrieved from API):

            |Value|Description|
            |-|-|
            |1|(Canada) Alberta
            |2|(Canada) British Columbia|
            |3|(Canada) Manitoba|
            |3|(Canada) Manitoba|
            |4|(Canada) New Brunswick|
            |5|(Canada) Newfoundland|
            |6|(Canada) Northwest Territories|
            |7|(Canada) Nova Scotia|
            |8|(Canada) Nunavut|
            |9|(Canada) Ontario|
            |10|(Canada) Prince Edward Island|
            |11|(Canada) Quebec|
            |12|(Canada) Saskatchewan|
            |13|(Canada) Yukon|
            |14|(United-States) Alabama|
            |15|(United-States) Alaska|
            |16|(United-States) Arizona|
            |17|(United-States) Arkansas|
            |18|(United-States) California|
            |19|(United-States) Colorado|
            |20|(United-States) Connecticut|
            |21|(United-States) Delaware|
            |22|(United-States) District of Columbia|
            |23|(United-States) Florida|
            |24|(United-States) Georgia|
            |25|(United-States) Hawaii|
            |26|(United-States) Idaho|
            |27|(United-States) Illinois|
            |28|(United-States) Indiana|
            |29|(United-States) Iowa|
            |30|(United-States) Kansas|
            |31|(United-States) Kentucky|
            |32|(United-States) Louisiane|
            |33|(United-States) Maine|
            |34|(United-States) Maryland|
            |35|(United-States) Massachusetts|
            |36|(United-States) Michigan|
            |37|(United-States) Minnesota|
            |38|(United-States) Mississippi|
            |39|(United-States) Missouri|
            |40|(United-States) Montana|
            |41|(United-States) Nebraska|
            |42|(United-States) Nevada|
            |43|(United-States) New Hampshire|
            |44|(United-States) New Jersey|
            |45|(United-States) New Mexico|
            |46|(United-States) New York|
            |47|(United-States) North Carolina|
            |48|(United-States) North Dakota|
            |49|(United-States) Ohio|
            |50|(United-States) Oklahoma|
            |51|(United-States) Oregon|
            |52|(United-States) Pennsylvania|
            |53|(United-States) Rhode Island|
            |54|(United-States) South Carolina|
            |55|(United-States) South Dakota|
            |56|(United-States) Tennessee|
            |57|(United-States) Texas|
            |58|(United-States) Utah|
            |60|(United-States) Vermont|
            |59|(United-States) Virginia|
            |61|(United-States) Washington|
            |62|(United-States) West Virginia|
            |63|(United-States) Wisconsin|
            |64|(United-States) Wyoming|
          example: 11
          type: integer
        fkiCountryID:
          description: |-
            The unique ID of the Country.

            Here are some common values (Complete list must be retrieved from API):

            |Value|Description|
            |-|-|
            |1|Canada|
            |2|United-States|
          example: 1
          type: integer
        sAddressZip:
          description: |-
            The Postal/Zip Code

            The value must be entered without spaces
          example: H7T2S3
          type: string
      required:
      - fkiAddresstypeID
      - fkiCountryID
      - fkiProvinceID
      - sAddressCity
      - sAddressCivic
      - sAddressStreet
      - sAddressSuite
      - sAddressZip
      type: object
    Field-sAddressZip:
      description: |-
        The Postal/Zip Code

        The value must be entered without spaces
      example: H7T2S3
      type: string
    Field-sAddressCivic:
      description: The Civic number.
      example: "2540"
      type: string
    Field-sAddressStreet:
      description: The Street Name
      example: Daniel-Johnson Blvd.
      type: string
    Field-sAddressSuite:
      description: The Suite or appartment number
      example: "610"
      type: string
    Field-sAddressCity:
      description: The City name
      example: Laval
      type: string
    Field-tFranchisereferalincomeComment:
      description: A comment about the transaction
      example: This is a comment
      type: string
    Field-dtFranchisereferalincomeDisbursed:
      description: The date the amounts were disbursed
      example: 2020-12-31
      type: string
    contact-Request:
      description: A Contact Object
      properties:
        fkiContacttitleID:
          description: |-
            The unique ID of the Contacttitle.

            Valid values:

            |Value|Description|
            |-|-|
            |1|Ms.|
            |2|Mr.|
            |4|(Blank)|
            |5|Me (For Notaries)|
          example: 2
          type: integer
        fkiLanguageID:
          description: |-
            The unique ID of the Language.

            Valid values:

            |Value|Description|
            |-|-|
            |1|French|
            |2|English|
          example: 2
          maximum: 2
          minimum: 1
          type: integer
        sContactFirstname:
          description: The First name of the contact
          example: John
          type: string
        sContactLastname:
          description: The Last name of the contact
          example: Doe
          type: string
        sContactCompany:
          description: The Company name of the contact
          example: eZmax Solutions Inc.
          type: string
        dtContactBirthdate:
          description: The Birth Date of the contact
          example: 1980-01-01
          type: string
      required:
      - fkiContacttitleID
      - fkiLanguageID
      - sContactCompany
      - sContactFirstname
      - sContactLastname
      type: object
    email-Request:
      description: A Contact Object
      properties:
        fkiEmailtypeID:
          description: |-
            The unique ID of the Emailtype.

            Valid values:

            |Value|Description|
            |-|-|
            |1|Office|
            |2|Home|
          example: 1
          type: integer
        sEmailAddress:
          description: The email address.
          example: example@domain.com
          type: string
      required:
      - fkiEmailtypeID
      - sEmailAddress
      type: object
    Field-sEmailAddress:
      description: The email address.
      example: example@domain.com
      type: string
    contact-RequestCompound:
      allOf:
      - $ref: '#/components/schemas/contact_RequestCompound_allOf'
      - $ref: '#/components/schemas/contact-Request'
      description: A Contact Object and children to create a complete structure
      type: object
    franchisereferalincome-Request:
      description: An Franchisereferalincome Object
      properties:
        fkiFranchisebrokerID:
          description: The unique ID of the Franchisebroker
          example: 61
          type: integer
        fkiFranchisereferalincomeprogramID:
          description: The unique ID of the Franchisereferalincomeprogram
          example: 51
          type: integer
        fkiPeriodID:
          description: The unique ID of the Period
          example: 21
          type: integer
        dFranchisereferalincomeLoan:
          description: The loan amount
          example: "500275.62"
          type: string
        dFranchisereferalincomeFranchiseamount:
          description: The amount that will be given to the franchise
          example: "275.00"
          type: string
        dFranchisereferalincomeFranchisoramount:
          description: The amount that will be kept by the franchisor
          example: "385.00"
          type: string
        dFranchisereferalincomeAgentamount:
          description: The amount that will be given to the agent
          example: "800.00"
          type: string
        dtFranchisereferalincomeDisbursed:
          description: The date the amounts were disbursed
          example: 2020-12-31
          type: string
        tFranchisereferalincomeComment:
          description: A comment about the transaction
          example: This is a comment
          type: string
        fkiFranchiseofficeID:
          description: The unique ID of the Franchisereoffice
          example: 50
          type: integer
        sFranchisereferalincomeRemoteid:
          type: string
      required:
      - dFranchisereferalincomeAgentamount
      - dFranchisereferalincomeFranchiseamount
      - dFranchisereferalincomeFranchisoramount
      - dFranchisereferalincomeLoan
      - dtFranchisereferalincomeDisbursed
      - fkiFranchisebrokerID
      - fkiFranchiseofficeID
      - fkiFranchisereferalincomeprogramID
      - fkiPeriodID
      - objAddress
      - sFranchisereferalincomeRemoteid
      - tFranchisereferalincomeComment
      type: object
    franchisereferalincome-RequestCompound:
      allOf:
      - $ref: '#/components/schemas/franchisereferalincome_RequestCompound_allOf'
      - $ref: '#/components/schemas/franchisereferalincome-Request'
      description: A Franchisereferalincome Object and children to create a complete
        structure
      type: object
    Field-sContactFirstname:
      description: The First name of the contact
      example: John
      type: string
    Field-sContactLastname:
      description: The Last name of the contact
      example: Doe
      type: string
    Field-sContactCompany:
      description: The Company name of the contact
      example: eZmax Solutions Inc.
      type: string
    Field-dtContactBirthdate:
      description: The Birth Date of the contact
      example: 1980-01-01
      type: string
    Field-tContactNote:
      description: Some Notes about the contact
      example: This is a note
      type: string
    Field-sPhoneRegion:
      description: |-
        The region of the phone number. (For a North America Number only)

        The region is the "514" section in this sample phone number: (514) 990-1516 x123
      example: "514"
      type: string
    Field-sPhoneExchange:
      description: |-
        The exchange of the phone number. (For a North America Number only)

        The exchange is the "990" section in this sample phone number: (514) 990-1516 x123
      example: "990"
      type: string
    Field-sPhoneExtension:
      description: |-
        The extension of the phone number.

        The extension is the "123" section in this sample phone number: (514) 990-1516 x123.

        It can also be used with international phone numbers
      example: "123"
      type: string
    Field-ePhoneType:
      description: |-
        The type of phone number.

        **Local** refers to a north American phone number. You would then need to specify sPhoneRegion, sPhoneExchange, sPhoneNumber.
        **International** would be used for numbers outside of north america. You would then need to specify sPhoneInternational
      enum:
      - Local
      - International
      example: Local
      type: string
    phone-Request:
      description: A Phone Object
      properties:
        fkiPhonetypeID:
          description: |-
            The unique ID of the Phonetype.

            Valid values:

            |Value|Description|
            |-|-|
            |1|Office|
            |2|Home|
            |3|Mobile|
            |4|Fax|
            |5|Pager|
            |6|Toll Free|
          example: 1
          type: integer
        ePhoneType:
          $ref: '#/components/schemas/Field-ePhoneType'
        sPhoneRegion:
          description: |-
            The region of the phone number. (For a North America Number only)

            The region is the "514" section in this sample phone number: (514) 990-1516 x123
          example: "514"
          type: string
        sPhoneExchange:
          description: |-
            The exchange of the phone number. (For a North America Number only)

            The exchange is the "990" section in this sample phone number: (514) 990-1516 x123
          example: "990"
          type: string
        sPhoneNumber:
          description: |-
            The number of the phone number. (For a North America Number only)

            The number is the "1516" section in this sample phone number: (514) 990-1516 x123
          example: "1516"
          type: string
        sPhoneInternational:
          description: A phone number in E.164 Format
          example: +5149901516
          type: string
        sPhoneExtension:
          description: |-
            The extension of the phone number.

            The extension is the "123" section in this sample phone number: (514) 990-1516 x123.

            It can also be used with international phone numbers
          example: "123"
          type: string
      required:
      - ePhoneType
      - fkiPhonetypeID
      type: object
    Field-sWebsiteAddress:
      description: The URL of the website.
      example: https://www.domain.com
      type: string
    website-Request:
      description: A Website Object
      properties:
        fkiWebsitetypeID:
          description: |-
            The unique ID of the Websitetype.

            Valid values:

            |Value|Description|
            |-|-|
            |1|Website|
            |2|Twitter|
            |3|Facebook|
            |4|Survey|
          example: 1
          type: integer
        sWebsiteAddress:
          description: The URL of the website.
          example: https://www.domain.com
          type: string
      required:
      - fkiWebsitetypeID
      - sWebsiteAddress
      type: object
    contactinformations-RequestCompound:
      allOf:
      - $ref: '#/components/schemas/contactinformations_RequestCompound_allOf'
      - $ref: '#/components/schemas/contactinformations-Request'
      description: A Contactinformations Object and children to create a complete
        structure
      type: object
    contactinformations-Request:
      description: A Contactinformations Object
      properties:
        iAddressDefault:
          description: |-
            The index in the a_objAddress array (zero based index) representing the Address object that should become the default one.

            You can leave the value to 0 if the array is empty.
          type: integer
        iPhoneDefault:
          description: |-
            The index in the a_objPhone array (zero based index) representing the Phone object that should become the default one.

            You can leave the value to 0 if the array is empty.
          type: integer
        iEmailDefault:
          description: |-
            The index in the a_objEmail array (zero based index) representing the Email object that should become the default one.

            You can leave the value to 0 if the array is empty.
          type: integer
        iWebsiteDefault:
          description: |-
            The index in the a_objWebsite array (zero based index) representing the Website object that should become the default one.

            You can leave the value to 0 if the array is empty.
          type: integer
      required:
      - iAddressDefault
      - iEmailDefault
      - iPhoneDefault
      - iWebsiteDefault
      type: object
    Common-getAutocomplete-v1-Response:
      allOf:
      - $ref: '#/components/schemas/Common_getAutocomplete_v1_Response_allOf'
      - $ref: '#/components/schemas/Common-Response'
      description: Response for the /1/object/xxx/getAutocomplete API Request
      type: object
    Field-sFranchisereferalincomeRemoteid:
      description: The internal ID
      example: "12345"
      type: string
    user-createEzsignuser-v1-Response:
      allOf:
      - $ref: '#/components/schemas/user_createEzsignuser_v1_Response_allOf'
      - $ref: '#/components/schemas/Common-Response'
      description: Response for the /1/module/user/createEzsignuser API Request
      type: object
    user-createEzsignuser-v1-Response-mPayload:
      description: Payload for the /1/module/user/createEzsignuser API Request
      example:
        a_sEmailAddressSuccess:
        - someone@example.com
        - someone2@example.com
        a_sEmailAddressFailure:
        - UserAlreadyExists@example.com
      properties:
        a_sEmailAddressSuccess:
          description: An array of email addresses that succeeded.
          items:
            type: string
          type: array
        a_sEmailAddressFailure:
          description: An array of email addresses that failed.
          items:
            type: string
          type: array
      required:
      - a_sEmailAddressFailure
      - a_sEmailAddressSuccess
      type: object
    user-createEzsignuser-v1-Request:
      description: Request for the /1/module/user/createEzsignuser API Request
      properties:
        fkiLanguageID:
          description: |-
            The unique ID of the Language.

            Valid values:

            |Value|Description|
            |-|-|
            |1|French|
            |2|English|
          example: 2
          maximum: 2
          minimum: 1
          type: integer
        sUserFirstname:
          description: The First name of the user
          example: John
          type: string
        sUserLastname:
          description: The Last name of the user
          example: Doe
          type: string
        sEmailAddress:
          description: The email address.
          example: example@domain.com
          type: string
        sPhoneRegion:
          description: |-
            The region of the phone number. (For a North America Number only)

            The region is the "514" section in this sample phone number: (514) 990-1516 x123
          example: "514"
          type: string
        sPhoneExchange:
          description: |-
            The exchange of the phone number. (For a North America Number only)

            The exchange is the "990" section in this sample phone number: (514) 990-1516 x123
          example: "990"
          type: string
        sPhoneNumber:
          description: |-
            The number of the phone number. (For a North America Number only)

            The number is the "1516" section in this sample phone number: (514) 990-1516 x123
          example: "1516"
          type: string
        sPhoneExtension:
          description: |-
            The extension of the phone number.

            The extension is the "123" section in this sample phone number: (514) 990-1516 x123.

            It can also be used with international phone numbers
          example: "123"
          type: string
      required:
      - fkiLanguageID
      - sEmailAddress
      - sPhoneExchange
      - sPhoneNumber
      - sPhoneRegion
      - sUserFirstname
      - sUserLastname
      type: object
    Field-sUserLastname:
      description: The Last name of the user
      example: Doe
      type: string
    Field-sUserFirstname:
      description: The First name of the user
      example: John
      type: string
    ezsigndocument-applyEzsigntemplate-v1-Response:
      allOf:
      - $ref: '#/components/schemas/Common-Response'
      description: Response for the /1/object/ezsigndocument/{pkiEzsigndocument}/applyEzsigntemplate
        API Request
      type: object
    Field-sEzsigntemplatesigner:
      description: The First name of the user
      example: John
      type: string
    ezsigndocument-applyEzsigntemplate-v1-Request:
      description: Request for the /1/object/ezsigndocument/{pkiEzsigndocumentID}/applyezsigntemplate
        API Request
      properties:
        fkiEzsigntemplateID:
          description: The unique ID of the Ezsigndocument
          example: 36
          type: integer
        a_sEzsigntemplatesigner:
          items:
            $ref: '#/components/schemas/Field-sEzsigntemplatesigner'
          type: array
        a_pkiEzsignfoldersignerassociationID:
          items:
            $ref: '#/components/schemas/Field-pkiEzsignfoldersignerassociationID'
          type: array
      required:
      - a_pkiEzsignfoldersignerassociation
      - a_pkiEzsignfoldersignerassociationID
      - a_sEzsigntemplatesigner
      - fkiEzsigntemplateID
      type: object
    Webhook-User-UserCreated:
      allOf:
      - $ref: '#/components/schemas/Webhook_User_UserCreated_allOf'
      - $ref: '#/components/schemas/Common-Webhook'
      description: This is the base Webhook object
      type: object
    user-Response:
      description: A User Object
      properties:
        pkiUserID:
          description: The unique ID of the User
          example: 70
          type: integer
        fkiLanguageID:
          description: |-
            The unique ID of the Language.

            Valid values:

            |Value|Description|
            |-|-|
            |1|French|
            |2|English|
          example: 2
          maximum: 2
          minimum: 1
          type: integer
        eUserType:
          $ref: '#/components/schemas/Field-eUserType'
        sUserFirstname:
          description: The First name of the user
          example: John
          type: string
        sUserLastname:
          description: The Last name of the user
          example: Doe
          type: string
        sUserLoginname:
          description: The Login name of the User.
          example: JohnDoe
          type: string
        objAudit:
          $ref: '#/components/schemas/Common-Audit'
      required:
      - eUserType
      - fkiLanguageID
      - objAudit
      - pkiUserID
      - sUserFirstname
      - sUserLastname
      - sUserLoginname
      type: object
    Field-eUserType:
      description: The user type of the User.
      enum:
      - AgentBroker
      - Assistant
      - Attendance
      - Customer
      - Employee
      - Ezcom
      - EzsignSigner
      - EzsignUser
      - FranchiseCustomerServer
      - Normal
      - RewardAdministration
      - RewardMember
      - RewardRepresentative
      - RewardCustomer
      - RewardDistributorServer
      - Supplier
      - VetrxCustomer
      - Vetrxcustomergroup
      - VetrxCustomerServer
      - VetrxManufacturer
      - VetrxVendor
      example: RewardDistributorServer
      type: string
    Field-sUserLoginname:
      description: The Login name of the User.
      example: JohnDoe
      type: string
    apikey-createObject-v1-Response:
      allOf:
      - $ref: '#/components/schemas/apikey_createObject_v1_Response_allOf'
      - $ref: '#/components/schemas/Common-Response'
      description: Response for the /1/object/apikey/createObject API Request
      type: object
    ezsigndocument-createObject-v1-Response-mPayload:
      description: Payload for the /1/object/ezsigndocument/createObject API Request
      example:
        a_pkiEzsigndocumentID:
        - 95
        - 96
      properties:
        a_pkiEzsigndocumentID:
          description: |-
            An array of unique IDs representing the object that were requested to be created.

            They are returned in the same order as the array containing the objects to be created that was sent in the request.
          items:
            type: integer
          type: array
      required:
      - a_pkiEzsigndocumentID
      type: object
    ezsignfolder-createObject-v1-Response-mPayload:
      description: Payload for the /1/object/ezsignfolder/createObject API Request
      example:
        a_pkiEzsignfolderID:
        - 95
        - 96
      properties:
        a_pkiEzsignfolderID:
          description: |-
            An array of unique IDs representing the object that were requested to be created.

            They are returned in the same order as the array containing the objects to be created that was sent in the request.
          items:
            type: integer
          type: array
      required:
      - a_pkiEzsignfolderID
      type: object
    ezsignfoldersignerassociation-createObject-v1-Response-mPayload:
      description: Payload for the /1/object/ezsignfoldersignerassociation/createObject
        API Request
      example:
        a_pkiEzsignfoldersignerassociationID:
        - 95
        - 96
      properties:
        a_pkiEzsignfoldersignerassociationID:
          description: |-
            An array of unique IDs representing the object that were requested to be created.

            They are returned in the same order as the array containing the objects to be created that was sent in the request.
          items:
            type: integer
          type: array
      required:
      - a_pkiEzsignfoldersignerassociationID
      type: object
    ezsignsignature-createObject-v1-Response-mPayload:
      description: Payload for the /1/object/ezsignsignature/createObject API Request
      example:
        a_pkiEzsignsignatureID:
        - 95
        - 96
      properties:
        a_pkiEzsignsignatureID:
          description: |-
            An array of unique IDs representing the object that were requested to be created.

            They are returned in the same order as the array containing the objects to be created that was sent in the request.
          items:
            type: integer
          type: array
      required:
      - a_pkiEzsignsignatureID
      type: object
    franchisereferalincome-createObject-v1-Response-mPayload:
      description: Payload for the /1/object/franchisereferalincome/createObject API
        Request
      example:
        a_pkiFranchisereferalincomeID:
        - 95
        - 96
      properties:
        a_pkiFranchisereferalincomeID:
          description: |-
            An array of unique IDs representing the object that were requested to be created.

            They are returned in the same order as the array containing the objects to be created that was sent in the request.
          items:
            type: integer
          type: array
      required:
      - a_pkiFranchisereferalincomeID
      type: object
    apikey-createObject-v1-Response-mPayload:
      description: Payload for the /1/object/apikey/createObject API Request
      properties:
        a_objApikey:
          items:
            $ref: '#/components/schemas/apikey-Response'
          type: array
      required:
      - a_objApikey
      type: object
    apikey-createObject-v1-Request:
      description: Request for the /1/object/apikey/createObject API Request
      properties:
        objApikey:
          $ref: '#/components/schemas/apikey-Request'
        objApikeyCompound:
          $ref: '#/components/schemas/apikey-RequestCompound'
      type: object
    apikey-RequestCompound:
      allOf:
      - $ref: '#/components/schemas/apikey-Request'
      description: An Apikey Object and children to create a complete structure
      type: object
    apikey-Request:
      description: An Apikey Object
      properties:
        fkiUserID:
          description: The unique ID of the User
          example: 70
          type: integer
        objApikeyDescription:
          $ref: '#/components/schemas/Multilingual-ApikeyDescription'
      required:
      - fkiUserID
      - objApikeyDescription
      type: object
    Multilingual-ApikeyDescription:
      description: |+
        Description of the API Key

      example:
        sApikeyDescription1: Projet X
        sApikeyDescription2: Project X
      properties:
        sApikeyDescription1:
          description: Value in French
          type: string
        sApikeyDescription2:
          description: Value in English
          type: string
      type: object
    global-customer-getEndpoint-v1-Response:
      description: Response for the /1/customer/{pksCustomerCode}/endpoint API Request
      example:
        sEndpointURL: https://prod.api.appcluster01.ca-central-1.ezmax.com/
      properties:
        sEndpointURL:
          description: The endpoint's URL
          type: string
      required:
      - sEndpointURL
      type: object
    UNUSED-ezsigndocument-editObject-v1-Request:
      description: Request for the /1/object/ezsigndocument/editObject API Request
      properties:
        objEzsigndocument:
          $ref: '#/components/schemas/ezsigndocument-Request'
      type: object
    UNUSED-ezsigndocument-editObject-v1-Response:
      allOf:
      - $ref: '#/components/schemas/Common-Response'
      description: Response for the /1/object/ezsigndocument/editObject API Request
      type: object
    UNUSED-ezsignfolder-editObject-v1-Request:
      description: Request for the /1/object/ezsignfolder/editObject API Request
      properties:
        objEzsignfolder:
          $ref: '#/components/schemas/ezsignfolder-Request'
      type: object
    UNUSED-ezsignfolder-editObject-v1-Response:
      allOf:
      - $ref: '#/components/schemas/Common-Response'
      description: Response for the /1/object/ezsignfolder/editObject API Request
      type: object
    UNUSED-ezsignfoldersignerassociation-editObject-v1-Request:
      description: Request for the /1/object/ezsignfoldersignerassociation/editObject
        API Request
      properties:
        objEzsignfoldersignerassociation:
          $ref: '#/components/schemas/ezsignfoldersignerassociation-Request'
      type: object
    UNUSED-ezsignfoldersignerassociation-editObject-v1-Response:
      allOf:
      - $ref: '#/components/schemas/Common-Response'
      description: Response for the /1/object/ezsignfoldersignerassociation/editObject
        API Request
      type: object
    UNUSED-ezsignsignature-editObject-v1-Request:
      description: Request for the /1/object/ezsignsignature/editObject API Request
      properties:
        objEzsignsignature:
          $ref: '#/components/schemas/ezsignsignature-Request'
      type: object
    UNUSED-ezsignsignature-editObject-v1-Response:
      allOf:
      - $ref: '#/components/schemas/Common-Response'
      description: Response for the /1/object/ezsignsignature/editObject API Request
      type: object
    Field-eUserTypeSSPR:
      description: The user type of the User for SSPR
      enum:
      - EzsignUser
      - Native
      example: Native
      type: string
    Field-binUserSSPRtoken:
      description: Hex Encoded Secret SSPR token
      example: 012345678901234567890123456789012345678901234567890123456789abcd
      type: string
    Field-pksCustomerCode:
      description: The customer code assigned to your account
      example: demo
      maxLength: 6
      minLength: 2
      type: string
    sspr-validateToken-v1-Request:
      description: Request for the /1/module/sspr/validateToken API Request
      properties:
        pksCustomerCode:
          description: The customer code assigned to your account
          example: demo
          maxLength: 6
          minLength: 2
          type: string
        fkiLanguageID:
          description: |-
            The unique ID of the Language.

            Valid values:

            |Value|Description|
            |-|-|
            |1|French|
            |2|English|
          example: 2
          maximum: 2
          minimum: 1
          type: integer
        eUserTypeSSPR:
          $ref: '#/components/schemas/Field-eUserTypeSSPR'
        sEmailAddress:
          description: The email address.
          example: example@domain.com
          type: string
        sUserLoginname:
          description: The Login name of the User.
          example: JohnDoe
          type: string
        binUserSSPRtoken:
          description: Hex Encoded Secret SSPR token
          example: 012345678901234567890123456789012345678901234567890123456789abcd
          type: string
      required:
      - binUserSSPRtoken
      - eUserTypeSSPR
      - fkiLanguageID
      - pksCustomerCode
      type: object
    sspr-unlockAccountRequest-v1-Request:
      description: Request for the /1/module/sspr/unlockAccountRequest API Request
      properties:
        pksCustomerCode:
          description: The customer code assigned to your account
          example: demo
          maxLength: 6
          minLength: 2
          type: string
        fkiLanguageID:
          description: |-
            The unique ID of the Language.

            Valid values:

            |Value|Description|
            |-|-|
            |1|French|
            |2|English|
          example: 2
          maximum: 2
          minimum: 1
          type: integer
        eUserTypeSSPR:
          $ref: '#/components/schemas/Field-eUserTypeSSPR'
        sEmailAddress:
          description: The email address.
          example: example@domain.com
          type: string
        sUserLoginname:
          description: The Login name of the User.
          example: JohnDoe
          type: string
      required:
      - eUserTypeSSPR
      - fkiLanguageID
      - pksCustomerCode
      type: object
    sspr-unlockAccount-v1-Request:
      description: Request for the /1/module/sspr/unlockAccount API Request
      properties:
        pksCustomerCode:
          description: The customer code assigned to your account
          example: demo
          maxLength: 6
          minLength: 2
          type: string
        fkiLanguageID:
          description: |-
            The unique ID of the Language.

            Valid values:

            |Value|Description|
            |-|-|
            |1|French|
            |2|English|
          example: 2
          maximum: 2
          minimum: 1
          type: integer
        eUserTypeSSPR:
          $ref: '#/components/schemas/Field-eUserTypeSSPR'
        sEmailAddress:
          description: The email address.
          example: example@domain.com
          type: string
        sUserLoginname:
          description: The Login name of the User.
          example: JohnDoe
          type: string
        binUserSSPRtoken:
          description: Hex Encoded Secret SSPR token
          example: 012345678901234567890123456789012345678901234567890123456789abcd
          type: string
      required:
      - binUserSSPRtoken
      - eUserTypeSSPR
      - fkiLanguageID
      - pksCustomerCode
      type: object
    sspr-sendUsernames-v1-Request:
      description: Request for the /1/module/sspr/sendUsernames API Request
      properties:
        pksCustomerCode:
          description: The customer code assigned to your account
          example: demo
          maxLength: 6
          minLength: 2
          type: string
        fkiLanguageID:
          description: |-
            The unique ID of the Language.

            Valid values:

            |Value|Description|
            |-|-|
            |1|French|
            |2|English|
          example: 2
          maximum: 2
          minimum: 1
          type: integer
        eUserTypeSSPR:
          $ref: '#/components/schemas/Field-eUserTypeSSPR'
        sEmailAddress:
          description: The email address.
          example: example@domain.com
          type: string
      required:
      - eUserTypeSSPR
      - fkiLanguageID
      - pksCustomerCode
      - sEmailAddress
      type: object
    sspr-resetPasswordRequest-v1-Request:
      description: Request for the /1/module/sspr/resetPasswordRequest API Request
      properties:
        pksCustomerCode:
          description: The customer code assigned to your account
          example: demo
          maxLength: 6
          minLength: 2
          type: string
        fkiLanguageID:
          description: |-
            The unique ID of the Language.

            Valid values:

            |Value|Description|
            |-|-|
            |1|French|
            |2|English|
          example: 2
          maximum: 2
          minimum: 1
          type: integer
        eUserTypeSSPR:
          $ref: '#/components/schemas/Field-eUserTypeSSPR'
        sEmailAddress:
          description: The email address.
          example: example@domain.com
          type: string
        sUserLoginname:
          description: The Login name of the User.
          example: JohnDoe
          type: string
      required:
      - eUserTypeSSPR
      - fkiLanguageID
      - pksCustomerCode
      type: object
    sspr-resetPassword-v1-Request:
      description: Request for the /1/module/sspr/resetPassword API Request
      properties:
        pksCustomerCode:
          description: The customer code assigned to your account
          example: demo
          maxLength: 6
          minLength: 2
          type: string
        fkiLanguageID:
          description: |-
            The unique ID of the Language.

            Valid values:

            |Value|Description|
            |-|-|
            |1|French|
            |2|English|
          example: 2
          maximum: 2
          minimum: 1
          type: integer
        eUserTypeSSPR:
          $ref: '#/components/schemas/Field-eUserTypeSSPR'
        sEmailAddress:
          description: The email address.
          example: example@domain.com
          type: string
        sUserLoginname:
          description: The Login name of the User.
          example: JohnDoe
          type: string
        binUserSSPRtoken:
          description: Hex Encoded Secret SSPR token
          example: 012345678901234567890123456789012345678901234567890123456789abcd
          type: string
        sPassword:
          description: |-
            A Password.

            Must meet complexity requirements
          example: Qwerty1234!
          type: string
      required:
      - binUserSSPRtoken
      - eUserTypeSSPR
      - fkiLanguageID
      - pksCustomerCode
      - sPassword
      type: object
    Field-sPassword:
      description: |-
        A Password.

        Must meet complexity requirements
      example: Qwerty1234!
      type: string
    Field-pkiUserID:
      description: The unique ID of the User
      example: 70
      type: integer
    Field-pkiLanguageID:
      description: |-
        The unique ID of the Language.

        Valid values:

        |Value|Description|
        |-|-|
        |1|French|
        |2|English|
      example: 2
      maximum: 2
      minimum: 1
      type: integer
    Field-pkiEzsignfoldertypeID:
      description: The unique ID of the Ezsignfoldertype.
      example: 5
      type: integer
    Field-pkiEzsigntsarequirementID:
      description: |-
        The unique ID of the Ezsigntsarequirement.

        Determine if a Time Stamping Authority should add a timestamp on each of the signature.
        Valid values:

        |Value|Description|
        |-|-|
        |1|No. TSA Timestamping will requested. This will make all signatures a lot faster since no round-trip to the TSA server will be required. Timestamping will be made using eZsign server's time.|
        |2|Best effort. Timestamping from a Time Stamping Authority will be requested but is not mandatory. In the very improbable case it cannot be completed, the timestamping will be made using eZsign server's time. **Additional fee applies**|
        |3|Mandatory. Timestamping from a Time Stamping Authority will be requested and is mandatory. In the very improbable case it cannot be completed, the signature will fail and the user will be asked to retry. **Additional fee applies**|
      example: 92
      maximum: 3
      minimum: 1
      type: integer
    Field-pkiEzsigntemplateID:
      description: The unique ID of the Ezsigndocument
      example: 36
      type: integer
    Field-pkiEzsignfoldersignerassociationID:
      description: The unique ID of the Ezsignfoldersignerassociation
      example: 20
      type: integer
    Field-pkiFranchisebrokerID:
      description: The unique ID of the Franchisebroker
      example: 61
      type: integer
    Field-pkiFranchisereferalincomeprogramID:
      description: The unique ID of the Franchisereferalincomeprogram
      example: 51
      type: integer
    Field-pkiPeriodID:
      description: The unique ID of the Period
      example: 21
      type: integer
    Field-pkiFranchiseofficeID:
      description: The unique ID of the Franchisereoffice
      example: 50
      type: integer
    Field-pkiAddresstypeID:
      description: |-
        The unique ID of the Addresstype.

        Valid values:

        |Value|Description|
        |-|-|
        |1|Office|
        |2|Home|
        |3|Real Estate Invoice|
        |4|Invoicing|
        |5|Shipping|
      example: 1
      type: integer
    Field-pkiProvinceID:
      description: |-
        The unique ID of the Province.

        Here are some common values (Complete list must be retrieved from API):

        |Value|Description|
        |-|-|
        |1|(Canada) Alberta
        |2|(Canada) British Columbia|
        |3|(Canada) Manitoba|
        |3|(Canada) Manitoba|
        |4|(Canada) New Brunswick|
        |5|(Canada) Newfoundland|
        |6|(Canada) Northwest Territories|
        |7|(Canada) Nova Scotia|
        |8|(Canada) Nunavut|
        |9|(Canada) Ontario|
        |10|(Canada) Prince Edward Island|
        |11|(Canada) Quebec|
        |12|(Canada) Saskatchewan|
        |13|(Canada) Yukon|
        |14|(United-States) Alabama|
        |15|(United-States) Alaska|
        |16|(United-States) Arizona|
        |17|(United-States) Arkansas|
        |18|(United-States) California|
        |19|(United-States) Colorado|
        |20|(United-States) Connecticut|
        |21|(United-States) Delaware|
        |22|(United-States) District of Columbia|
        |23|(United-States) Florida|
        |24|(United-States) Georgia|
        |25|(United-States) Hawaii|
        |26|(United-States) Idaho|
        |27|(United-States) Illinois|
        |28|(United-States) Indiana|
        |29|(United-States) Iowa|
        |30|(United-States) Kansas|
        |31|(United-States) Kentucky|
        |32|(United-States) Louisiane|
        |33|(United-States) Maine|
        |34|(United-States) Maryland|
        |35|(United-States) Massachusetts|
        |36|(United-States) Michigan|
        |37|(United-States) Minnesota|
        |38|(United-States) Mississippi|
        |39|(United-States) Missouri|
        |40|(United-States) Montana|
        |41|(United-States) Nebraska|
        |42|(United-States) Nevada|
        |43|(United-States) New Hampshire|
        |44|(United-States) New Jersey|
        |45|(United-States) New Mexico|
        |46|(United-States) New York|
        |47|(United-States) North Carolina|
        |48|(United-States) North Dakota|
        |49|(United-States) Ohio|
        |50|(United-States) Oklahoma|
        |51|(United-States) Oregon|
        |52|(United-States) Pennsylvania|
        |53|(United-States) Rhode Island|
        |54|(United-States) South Carolina|
        |55|(United-States) South Dakota|
        |56|(United-States) Tennessee|
        |57|(United-States) Texas|
        |58|(United-States) Utah|
        |60|(United-States) Vermont|
        |59|(United-States) Virginia|
        |61|(United-States) Washington|
        |62|(United-States) West Virginia|
        |63|(United-States) Wisconsin|
        |64|(United-States) Wyoming|
      example: 11
      type: integer
    Field-pkiCountryID:
      description: |-
        The unique ID of the Country.

        Here are some common values (Complete list must be retrieved from API):

        |Value|Description|
        |-|-|
        |1|Canada|
        |2|United-States|
      example: 1
      type: integer
    Field-pkiContacttitleID:
      description: |-
        The unique ID of the Contacttitle.

        Valid values:

        |Value|Description|
        |-|-|
        |1|Ms.|
        |2|Mr.|
        |4|(Blank)|
        |5|Me (For Notaries)|
      example: 2
      type: integer
    Field-pkiEmailtypeID:
      description: |-
        The unique ID of the Emailtype.

        Valid values:

        |Value|Description|
        |-|-|
        |1|Office|
        |2|Home|
      example: 1
      type: integer
    Field-pkiWebsitetypeID:
      description: |-
        The unique ID of the Websitetype.

        Valid values:

        |Value|Description|
        |-|-|
        |1|Website|
        |2|Twitter|
        |3|Facebook|
        |4|Survey|
      example: 1
      type: integer
    Field-pkiApikeyID:
      description: The unique ID of the Apikey
      example: 99
      type: integer
    Field-pkiPhonetypeID:
      description: |-
        The unique ID of the Phonetype.

        Valid values:

        |Value|Description|
        |-|-|
        |1|Office|
        |2|Home|
        |3|Mobile|
        |4|Fax|
        |5|Pager|
        |6|Toll Free|
      example: 1
      type: integer
    Field-pkiSecretquestionID:
      description: |-
        The unique ID of the Secretquestion.

        Valid values:

        |Value|Description|
        |-|-|
        |1|The name of the hospital in which you were born|
        |2|The name of your grade school|
        |3|The last name of your favorite teacher|
        |4|Your favorite sports team|
        |5|Your favorite TV show|
        |6|Your favorite movie|
        |7|The name of the street on which you grew up|
        |8|The name of your first employer|
        |9|Your first car|
        |10|Your favorite food|
        |11|The name of your first pet|
        |12|Favorite musician/band|
        |13|What instrument you play|
        |14|Your father's middle name|
        |15|Your mother's maiden name|
        |16|Name of your eldest child|
        |17|Your spouse's middle name|
        |18|Favorite restaurant|
        |19|Childhood nickname|
        |20|Favorite vacation destination|
        |21|Your boat's name|
        |22|Date of Birth (YYYY-MM-DD)|
      example: 7
      type: integer
    Field-pkiTaxassignmentID:
      description: |-
        The unique ID of the Taxassignment.

        Valid values:

        |Value|Description|
        |-|-|
        |1|No tax|
        |2|GST|
        |3|HST (ON)|
        |4|HST (NB)|
        |5|HST (NS)|
        |6|HST (NL)|
        |7|HST (PE)|
        |8|GST + QST (QC)|
        |9|GST + QST (QC) Non-Recoverable|
        |10|GST + PST (BC)|
        |11|GST + PST (SK)|
        |12|GST + RST (MB)|
        |13|GST + PST (BC) Non-Recoverable|
        |14|GST + PST (SK) Non-Recoverable|
        |15|GST + RST (MB) Non-Recoverable|
      example: 1
      maximum: 15
      minimum: 1
      type: integer
    Field-pkiEzsignfolderID:
      description: The unique ID of the Ezsignfolder
      example: 33
      type: integer
    authenticate-authenticate-v2-Request:
      description: Request for the /2/module/authenticate/authenticate API Request
      properties:
        pksCustomerCode:
          description: The customer code assigned to your account
          example: demo
          maxLength: 6
          minLength: 2
          type: string
        sEmailAddress:
          description: The email address.
          example: example@domain.com
          type: string
        sUserLoginname:
          description: The Login name of the User.
          example: JohnDoe
          type: string
        sPassword:
          description: |-
            A Password.

            Must meet complexity requirements
          example: Qwerty1234!
          type: string
        sPasswordEncrypted:
          description: |-
            A Password encrypted and encoded in Base64

            Must meet complexity requirements
          example: VGhpcyBpcyBhbiBlbmNyeXB0ZWQgcGFzc3dvcmQ=
          type: string
      required:
      - pksCustomerCode
      type: object
    authenticate-authenticate-v2-Response:
      allOf:
      - $ref: '#/components/schemas/authenticate_authenticate_v2_Response_allOf'
      - $ref: '#/components/schemas/Common-Response'
      description: Response for the /2/module/authenticate/authenticate API Request
      type: object
    authenticate-authenticate-v2-Response-mPayload:
      description: Payload for the /2/module/authenticate/authenticate API Request
      properties:
        sAuthorization:
          description: The Authorization key
          type: string
        sSecret:
          description: The secret key
          type: string
      required:
      - sAuthorization
      - sSecret
      type: object
    Field-eEzsignsignatureType:
      description: |-
        The type of signature.

        1. **Acknowledgement** is for an acknowledgment of receipt.
        2. **City** is to request the city where the document is signed.
        2. **Handwritten** is for a handwritten kind of signature where users needs to "draw" their signature on screen.
        3. **Initials** is a simple "click to add initials" block.
        4. **Name** is a simple "Click to sign" block. This is the most common block of signature.
      enum:
      - Acknowledgement
      - City
      - Handwritten
      - Initials
      - Name
      example: Name
      type: string
    Field-sPasswordEncrypted:
      description: |-
        A Password encrypted and encoded in Base64

        Must meet complexity requirements
      example: VGhpcyBpcyBhbiBlbmNyeXB0ZWQgcGFzc3dvcmQ=
      type: string
    ezsigndocument-getEzsignpages-v1-Response:
      allOf:
      - $ref: '#/components/schemas/ezsigndocument_getEzsignpages_v1_Response_allOf'
      - $ref: '#/components/schemas/Common-Response'
      description: Response for the /1/object/ezsigndocument/{pkiEzsigndocument}/getEzsignpages
        API Request
      type: object
    ezsigndocument-getEzsignpages-v1-Response-mPayload:
      description: Payload for the /1/object/ezsigndocument/{pkiEzsigndocument}/getEzsignpages
        API Request
      properties:
        a_objEzsignpage:
          items:
            $ref: '#/components/schemas/ezsignpage-Response'
          type: array
      required:
      - a_objEzsignpage
      type: object
    Field-pkiEzsignpageID:
      description: The unique ID of the Ezsignpage
      example: 64
      type: integer
    Field-iEzsignpagePagenumber:
      description: The page number in the Ezsigndocument
      example: 1
      type: integer
    Field-iEzsigndocumentOrder:
      description: The order in which the Ezsigndocument will be presented to the
        signatory in the Ezsignfolder.
      example: 1
      type: integer
    Field-iEzsigndocumentPagetotal:
      description: The number of pages in the Ezsigndocument.
      example: 4
      type: integer
    Field-iEzsigndocumentSignaturesigned:
      description: The number of signatures that were signed in the document.
      example: 3
      type: integer
    Field-iEzsigndocumentSignaturetotal:
      description: The number of total signatures that were requested in the Ezsigndocument.
      example: 4
      type: integer
    Field-iEzsignsignatureX:
      description: |-
        The X coordinate (Horizontal) where to put the signature block on the page.

        Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the signature block 2 inches from the left border of the page, you would use "200" for the X coordinate.
      example: 200
      type: integer
    Field-iEzsignsignatureY:
      description: |-
        The Y coordinate (Vertical) where to put the signature block on the page.

        Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the signature block 3 inches from the top border of the page, you would use "300" for the Y coordinate.
      example: 300
      type: integer
    Field-iEzsignpageWidthimage:
      description: The Width of the page's image in pixels calculated at 100 DPI
      example: 850
      type: integer
    Field-iEzsignpageHeightimage:
      description: The Height of the page's image in pixels calculated at 100 DPI
      example: 1100
      type: integer
    Field-iEzsignpageWidthpdf:
      description: The Width of the page in points calculated at 72 DPI
      example: 612
      type: integer
    Field-iEzsignpageHeightpdf:
      description: The Height of the page in points calculated at 72 DPI
      example: 792
      type: integer
    ezsignpage-Response:
      description: An Ezsignpage Object
      properties:
        pkiEzsignpageID:
          description: The unique ID of the Ezsignpage
          example: 64
          type: integer
        iEzsignpageWidthimage:
          description: The Width of the page's image in pixels calculated at 100 DPI
          example: 850
          type: integer
        iEzsignpageHeightimage:
          description: The Height of the page's image in pixels calculated at 100
            DPI
          example: 1100
          type: integer
        iEzsignpageWidthpdf:
          description: The Width of the page in points calculated at 72 DPI
          example: 612
          type: integer
        iEzsignpageHeightpdf:
          description: The Height of the page in points calculated at 72 DPI
          example: 792
          type: integer
        iEzsignpagePagenumber:
          description: The page number in the Ezsigndocument
          example: 1
          type: integer
        sImageUrl:
          description: |-
            The Url to the Ezsignpage's rasterized image.

            Url will expire after 5 minutes.
          type: string
      required:
      - iEzsignpageHeightimage
      - iEzsignpageHeightpdf
      - iEzsignpagePagenumber
      - iEzsignpageWidthimage
      - iEzsignpageWidthpdf
      - pkiEzsignpageID
      - sImageUrl
      type: object
    Field-pkiEzsigndocumentID:
      description: The unique ID of the Ezsigndocument
      example: 97
      type: integer
    Field-pkiEzsignsignatureID:
      description: The unique ID of the Ezsignsignature
      example: 49
      type: integer
    File-Zip:
      description: A Zip compressed archive
      format: binary
      type: string
    File-Csv:
      description: A Comma separated values text file
      type: string
    Field-dtCreatedDate:
      description: The date and time at which the object was created
      example: 2020-12-31 23:59:59
      type: string
    Field-dtModifiedDate:
      description: The date and time at which the object was last modified
      example: 2020-12-31 23:59:59
      type: string
    Field-sEzsignformfieldgroupLabel:
      description: The Label for the Ezsignformfieldgroup
      example: Allergies
      type: string
    Field-sEzsignformfieldLabel:
      description: The Label for the Ezsignformfield
      example: Peanuts
      type: string
    Field-sEzsignformfieldValue:
      description: The Value for the Ezsignformfield
      example: "Yes"
      type: string
    ezsigndocument-applyEzsigntemplate-v2-Request:
      description: Request for the /2/object/ezsigndocument/{pkiEzsigndocumentID}/applyezsigntemplate
        API Request
      properties:
        fkiEzsigntemplateID:
          description: The unique ID of the Ezsigndocument
          example: 36
          type: integer
        a_sEzsigntemplatesigner:
          items:
            $ref: '#/components/schemas/Field-sEzsigntemplatesigner'
          type: array
        a_pkiEzsignfoldersignerassociationID:
          items:
            $ref: '#/components/schemas/Field-pkiEzsignfoldersignerassociationID'
          type: array
      required:
      - a_pkiEzsignfoldersignerassociation
      - a_pkiEzsignfoldersignerassociationID
      - a_sEzsigntemplatesigner
      - fkiEzsigntemplateID
      type: object
    ezsigndocument-applyEzsigntemplate-v2-Response:
      allOf:
      - $ref: '#/components/schemas/Common-Response'
      description: Response for the /2/object/ezsigndocument/{pkiEzsigndocument}/applyEzsigntemplate
        API Request
      type: object
    ezsigndocument-getFormData-v1-Response:
      allOf:
      - $ref: '#/components/schemas/ezsigndocument_getFormData_v1_Response_allOf'
      - $ref: '#/components/schemas/Common-Response'
      description: Response for the /1/object/ezsigndocument/{pkiEzsigndocument}/getFormData
        API Request
      type: object
    ezsignformfieldgroup-Response:
      description: An Ezsignformfieldgroup Object
      properties:
        sEzsignformfieldgroupLabel:
          description: The Label for the Ezsignformfieldgroup
          example: Allergies
          type: string
      required:
      - sEzsignformfieldgroupLabel
      type: object
    ezsignformfield-Response:
      description: An Ezsignformfield Object
      properties:
        sEzsignformfieldLabel:
          description: The Label for the Ezsignformfield
          example: Peanuts
          type: string
        sEzsignformfieldValue:
          description: The Value for the Ezsignformfield
          example: "Yes"
          type: string
      required:
      - sEzsignformfieldLabel
      - sEzsignformfieldValue
      type: object
    ezsignformfield-ResponseCompound:
      allOf:
      - $ref: '#/components/schemas/ezsignformfield-Response'
      description: An Ezsignformfield Object and children to create a complete structure
      type: object
    ezsigndocument-getFormData-v1-Response-mPayload:
      allOf:
      - type: object
      - $ref: '#/components/schemas/Custom-FormDataDocument-Response'
      description: Payload for the /1/object/ezsigndocument/{pkiEzsigndocument}/getFormData
        API Request
      type: object
    ezsignformfieldgroup-ResponseCompound:
      allOf:
      - $ref: '#/components/schemas/ezsignformfieldgroup-Response'
      - $ref: '#/components/schemas/ezsignformfieldgroup_ResponseCompound_allOf'
      description: An Ezsignformfieldgroup Object and children to create a complete
        structure
      type: object
    Custom-FormDataSigner-Response:
      description: A form Data Signer Object
      properties:
        fkiEzsignfoldersignerassociationID:
          description: The unique ID of the Ezsignfoldersignerassociation
          example: 20
          type: integer
        fkiUserID:
          description: The unique ID of the User
          example: 70
          type: integer
        sContactFirstname:
          description: The First name of the contact
          example: John
          type: string
        sContactLastname:
          description: The Last name of the contact
          example: Doe
          type: string
        a_objEzsignformfieldgroupCompound:
          items:
            $ref: '#/components/schemas/ezsignformfieldgroup-ResponseCompound'
          type: array
          uniqueItems: false
      required:
      - a_objEzsignformfieldgroupCompound
      - fkiEzsignfoldersignerassociationID
      - sContactFirstname
      - sContactLastname
      type: object
    ezsignfolder-getFormsData-v1-Response:
      allOf:
      - $ref: '#/components/schemas/ezsignfolder_getFormsData_v1_Response_allOf'
      - $ref: '#/components/schemas/Common-Response'
      description: Response for the /1/object/ezsignfolder/{pkiEzsignfolder}/getFormsData
        API Request
      type: object
    ezsignfolder-getFormsData-v1-Response-mPayload:
      allOf:
      - type: object
      - $ref: '#/components/schemas/Custom-FormsDataFolder-Response'
      description: Payload for the /1/object/ezsignfolder/{pkiEzsigndocument}/getFormsData
        API Request
      type: object
    Custom-FormDataDocument-Response:
      description: 'A form Data Document Object '
      properties:
        pkiEzsigndocumentID:
          description: The unique ID of the Ezsigndocument
          example: 97
          type: integer
        fkiEzsignfolderID:
          description: The unique ID of the Ezsignfolder
          example: 33
          type: integer
        sEzsigndocumentName:
          description: The name of the document that will be presented to Ezsignfoldersignerassociations
          example: 'Contract #123'
          type: string
        dtModifiedDate:
          description: The date and time at which the object was last modified
          example: 2020-12-31 23:59:59
          type: string
        a_objFormDataSigner:
          items:
            $ref: '#/components/schemas/Custom-FormDataSigner-Response'
          type: array
          uniqueItems: false
      required:
      - a_objFormDataSigner
      - dtModifiedDate
      - fkiEzsignfolderID
      - pkiEzsigndocumentID
      - sEzsigndocumentName
      type: object
    ezsigndocument-getWordsPositions-v1-Response-mPayload:
      description: Payload for the /1/object/ezsigndocument/{pkiEzsigndocumentID}/getWordsPositions
        API Request
      items:
        $ref: '#/components/schemas/Custom-WordPositionWord-Response'
      type: array
    Custom-WordPositionOccurence-Response:
      description: A Word Position Object
      properties:
        iPage:
          description: The page where the word occurence was found
          minimum: 1
          type: integer
        iX:
          description: |-
            The X coordinate (Horizontal) where the Word occurence was found.

            Coordinate is calculated at 100dpi (dot per inch).
          minimum: 0
          type: integer
        iY:
          description: |-
            The Y coordinate (Vertical) where the Word occurence was found.

            Coordinate is calculated at 100dpi (dot per inch).
          minimum: 0
          type: integer
      type: object
    Custom-WordPositionWord-Response:
      description: A Word Position Object
      properties:
        sWord:
          description: The searched word
          type: string
        a_objWordPositionOccurence:
          description: The found occurences for the seached word
          items:
            $ref: '#/components/schemas/Custom-WordPositionOccurence-Response'
          type: array
      required:
      - a_objWordPositionOccurence
      - sWord
      type: object
    ezsigndocument-getWordsPositions-v1-Response:
      allOf:
      - $ref: '#/components/schemas/ezsigndocument_getWordsPositions_v1_Response_allOf'
      - $ref: '#/components/schemas/Common-Response'
      description: Response for the /1/object/ezsigndocument/{pkiEzsigndocumentID}/getWordsPositions
        API Request
      type: object
    Common-getList-v1-Response-mPayload:
      description: Generic List Response
      properties:
        iRowReturned:
          description: The number of rows returned
          example: 100
          type: integer
        iRowFiltered:
          description: The number of rows matching your filters (if any) or the total
            number of rows
          example: 533
          type: integer
      required:
      - iRowFiltered
      - iRowReturned
      type: object
    Field-sEzsignfoldertypeNameX:
      description: The name of the Ezsignfoldertype in the language of the requester
      example: Default
      type: string
    Field-iRowOffset:
      description: The starting element from where to start retrieving the results.
        For example if you started at iRowOffset=0 and asked for iRowMax=100, to get
        the next 100 results, you could specify iRowOffset=100&iRowMax=100,
      example: 0
      type: integer
    Field-iRowMax:
      description: The maximum numbers of results to be returned
      example: 100
      type: integer
    File-Xlsx:
      description: A Microsoft Excel File
      format: binary
      type: string
    Custom-FormsDataFolder-Response:
      description: A forms Data Folder Object
      properties:
        pkiEzsignfolderID:
          description: The unique ID of the Ezsignfolder
          example: 33
          type: integer
        sEzsignfolderDescription:
          description: The description of the Ezsignfolder
          example: Test eZsign Folder
          type: string
        a_objFormDataDocument:
          items:
            $ref: '#/components/schemas/Custom-FormDataDocument-Response'
          type: array
      required:
      - a_objFormDataDocument
      - pkiEzsignfolderID
      - sEzsignfolderDescription
      type: object
    Header-Accept-Language:
      description: |+
        The language of the returned content.

        1. **\*** (or header not defined) Default language
        2. **en** English
        2. **fr** French

      enum:
      - '*'
      - en
      - fr
      type: string
    ezsignfolder-createObject-v1-Response:
      allOf:
      - $ref: '#/components/schemas/ezsignfolder_createObject_v1_Response_allOf'
      - $ref: '#/components/schemas/Common-Response'
      description: Response for the /1/object/ezsignfolder/createObject API Request
      type: object
    ezsigndocument-getWordsPositions-v1-Request:
      description: Request for the /1/object/ezsigndocument/{pkiEzsigndocumentID}/getWordsPositions
        API Request
      properties:
        eGet:
          description: Specify if you want to retrieve *All* words or specific *Words*
            from the document. If you specify *Words*, you must send the list of words
            to search for in *a_sWord*.
          enum:
          - All
          - Words
          type: string
        bWordCaseSensitive:
          description: |-
            IF *true*, words will be searched case-sensitive and results will be returned case-sensitive.
            IF *false*, words will be searched case-insensitive and results will be returned case-insensitive.
          type: boolean
        a_sWord:
          description: Array of words to find in the document
          items:
            type: string
          type: array
      required:
      - bWordCaseSensitive
      - eGet
      - eSearchFor
      type: object
    Field-eEzsignfoldertypePrivacylevel:
      description: |-
        The Privacy level of the Ezsignfolder type.

        * **User** is for personal folders use and cannot be shared
        * **Usergroup** is for shared folders and complex permission can be configured to control access
      enum:
      - User
      - Usergroup
      type: string
    Field-bEzsignfoldertypeIsactive:
      description: Whether the Ezsignfoldertype is active or not
      type: boolean
    ezsignfoldertype-getList-v1-Response:
      allOf:
      - $ref: '#/components/schemas/ezsignfoldertype_getList_v1_Response_allOf'
      - $ref: '#/components/schemas/Common-Response_getList'
      description: Response for the /1/object/ezsignfoldertype/getList API Request
      type: object
    Common-Response_getList:
      description: All API response will inherit this based Response
      properties:
        objDebugPayload:
          $ref: '#/components/schemas/Common-Response-objDebugPayload_getList'
        objDebug:
          $ref: '#/components/schemas/Common-Response-objDebug'
      type: object
    Common-Response-objDebugPayload_getList:
      allOf:
      - $ref: '#/components/schemas/Common-Response-objDebugPayload'
      - $ref: '#/components/schemas/Common_Response_objDebugPayload_getList_allOf'
      description: This is a debug object containing debugging information on the
        actual function
      type: object
    Common-Response-Filter:
      description: Definition of Filters for getList
      properties:
        a_AutoType:
          additionalProperties:
            description: The actual field name being filtered
            type: string
          description: List of filters that can be used in *sFilter* (Automatic types)
          type: object
        a_Enum:
          additionalProperties:
            additionalProperties:
              description: Corresponding sql statement
              type: string
            description: List of valid enum values
            type: object
          description: List of filters that can be used in *sFilter* (Enum types)
          type: object
      type: object
    Common-Response-FilterEnum:
      additionalProperties:
        additionalProperties:
          description: Corresponding sql statement
          type: string
        description: List of valid enum values
        type: object
      description: List of filters that can be used in *sFilter* (Enum types)
      type: object
    Common-getAutocomplete-v1-Response-mPayload:
      description: Generic Autocomplete Response
      items:
        $ref: '#/components/schemas/Custom-AutocompleteElement-Response'
      type: array
    ezsignfoldertype-getList-v1-Response-mPayload:
      allOf:
      - $ref: '#/components/schemas/ezsignfoldertype_getList_v1_Response_mPayload_allOf'
      - $ref: '#/components/schemas/Common-getList-v1-Response-mPayload'
      description: Payload for the /1/object/ezsignfoldertype/getList API Request
      type: object
    ezsignfoldertype-ListElement:
      description: An Ezsignfoldertype List Element
      properties:
        pkiEzsignfoldertypeID:
          description: The unique ID of the Ezsignfoldertype.
          example: 5
          type: integer
        eEzsignfoldertypePrivacylevel:
          $ref: '#/components/schemas/Field-eEzsignfoldertypePrivacylevel'
        sEzsignfoldertypeNameX:
          description: The name of the Ezsignfoldertype in the language of the requester
          example: Default
          type: string
        bEzsignfoldertypeIsactive:
          description: Whether the Ezsignfoldertype is active or not
          type: boolean
      required:
      - bEzsignfoldertypeIsactive
      - eEzsignfoldertypePrivacylevel
      - pkiEzsignfoldertypeID
      - sEzsignfoldertypeNameX
      type: object
    ezsignfolder-getList-v1-Response:
      allOf:
      - $ref: '#/components/schemas/ezsignfolder_getList_v1_Response_allOf'
      - $ref: '#/components/schemas/Common-Response_getList'
      description: Response for the /1/object/ezsignfolder/getList API Request
      type: object
    ezsignfolder-getList-v1-Response-mPayload:
      allOf:
      - $ref: '#/components/schemas/ezsignfolder_getList_v1_Response_mPayload_allOf'
      - $ref: '#/components/schemas/Common-getList-v1-Response-mPayload'
      description: Payload for the /1/object/ezsignfolder/getList API Request
      type: object
    Field-eEzsignfolderStep:
      description: The signature step of the Ezsignfolder.
      enum:
      - Unsent
      - Sent
      - PartiallySigned
      - Expired
      - Completed
      - Archived
      example: Completed
      type: string
    ezsignfolder-unsend-v1-Response:
      allOf:
      - $ref: '#/components/schemas/Common-Response'
      description: Response for the /1/object/ezsignfolder/{pkiEzsignfolderID}/unsend
        API Request
      type: object
    ezsignfolder-unsend-v1-Request:
      description: |-
        Request for the /1/object/ezsignfolder/{pkiEzsignfolderID}/unsend API Request

        Intentionally empty for future-proofing
      type: string
    list-saveListpresentation-v1-Response:
      allOf:
      - type: object
      - $ref: '#/components/schemas/Common-Response'
      description: Response for the POST /1/module/list/listpresentation/{sListName}
        API Request
      type: object
    list-saveListpresentation-v1-Request:
      description: Request for the POST /1/module/list/listpresentation/{sListName}
        API Request
      properties:
        a_objListpresentation:
          items:
            $ref: '#/components/schemas/listpresentation-Request'
          type: array
      required:
      - a_objListpresentation
      type: object
    ezsignfolder-Request:
      description: An Ezsignfolder Object
      properties:
        fkiEzsignfoldertypeID:
          description: The unique ID of the Ezsignfoldertype.
          example: 5
          type: integer
        fkiEzsigntsarequirementID:
          description: |-
            The unique ID of the Ezsigntsarequirement.

            Determine if a Time Stamping Authority should add a timestamp on each of the signature.
            Valid values:

            |Value|Description|
            |-|-|
            |1|No. TSA Timestamping will requested. This will make all signatures a lot faster since no round-trip to the TSA server will be required. Timestamping will be made using eZsign server's time.|
            |2|Best effort. Timestamping from a Time Stamping Authority will be requested but is not mandatory. In the very improbable case it cannot be completed, the timestamping will be made using eZsign server's time. **Additional fee applies**|
            |3|Mandatory. Timestamping from a Time Stamping Authority will be requested and is mandatory. In the very improbable case it cannot be completed, the signature will fail and the user will be asked to retry. **Additional fee applies**|
          example: 92
          maximum: 3
          minimum: 1
          type: integer
        sEzsignfolderDescription:
          description: The description of the Ezsignfolder
          example: Test eZsign Folder
          type: string
        tEzsignfolderNote:
          description: Somes extra notes about the eZsign Folder
          example: An extra notes we can add to the ezsign folder
          type: string
        eEzsignfolderSendreminderfrequency:
          $ref: '#/components/schemas/Field-eEzsignfolderSendreminderfrequency'
      required:
      - eEzsignfolderSendreminderfrequency
      - fkiEzsignfoldertypeID
      - fkiEzsigntsarequirementID
      - sEzsignfolderDescription
      - tEzsignfolderNote
      type: object
    listpresentation-Response:
      $ref: '#/components/schemas/listpresentation-Request'
    list-getListpresentation-v1-Response:
      allOf:
      - $ref: '#/components/schemas/list_getListpresentation_v1_Response_allOf'
      - $ref: '#/components/schemas/Common-Response'
      description: Response for the GET /1/module/list/listpresentation/{sListName}
        API Request
      type: object
    list-getListpresentation-v1-Response-mPayload:
      description: Payload for the GET /1/module/list/listpresentation/{sListName}
        API Request
      properties:
        a_objListpresentation:
          items:
            $ref: '#/components/schemas/listpresentation-Response'
          type: array
      required:
      - a_objListpresentation
      type: object
    listpresentation-Request:
      description: A Listpresentation element
      properties:
        sListpresentationDescription:
          description: A descriptive for the list presentation
          type: string
        sListpresentationFilter:
          description: The filter to apply to the request to limit results.
          example: bField1 eq true and iField2 gte 0 and iField2 lte 1000 and sField3
            eq 'Other' and eField4 eq 'Paid' and sField5 like '%needle%' and iField6
            in '1,2,3' and dtField7 rg '=m,=3mm'
          type: string
        sListpresentationOrderby:
          description: The order by the user chose
          type: string
        a_sColumnName:
          description: An array of column names that the user chose to bee visible
          items:
            type: string
          type: array
        iListpresentationRowMax:
          description: The maximum numbers of results to be returned
          example: 100
          type: integer
        iListpresentationRowOffset:
          description: The starting element from where to start retrieving the results.
            For example if you started at iRowOffset=0 and asked for iRowMax=100,
            to get the next 100 results, you could specify iRowOffset=100&iRowMax=100,
          example: 0
          type: integer
        bListpresentationDefault:
          description: Set to true if the user chose this Listpresentation as the
            default one. A single element should be set to true
          type: boolean
      required:
      - a_sColumnName
      - bListpresentationDefault
      - iListpresentationRowMax
      - iListpresentationRowOffset
      - sListpresentationDescription
      - sListpresentationFilter
      - sListpresentationOrderby
      type: object
    Field-sFilter:
      description: The filter to apply to the request to limit results.
      example: bField1 eq true and iField2 gte 0 and iField2 lte 1000 and sField3
        eq 'Other' and eField4 eq 'Paid' and sField5 like '%needle%' and iField6 in
        '1,2,3' and dtField7 rg '=m,=3mm'
      type: string
    ezsigndocument-Request:
      description: An Ezsigndocument Object
      properties:
        eEzsigndocumentSource:
          description: Indicates where to look for the document binary content.
          enum:
          - Base64
          - Url
          type: string
        eEzsigndocumentFormat:
          description: Indicates the format of the document.
          enum:
          - Pdf
          type: string
        sEzsigndocumentBase64:
          description: |-
            The Base64 encoded binary content of the document.

            This field is Required when eEzsigndocumentSource = Base64.
          format: byte
          type: string
        sEzsigndocumentUrl:
          description: |-
            The url where the document content resides.

            This field is Required when eEzsigndocumentSource = Url.
          example: http://www.example.com/document.pdf
          type: string
        bEzsigndocumentForcerepair:
          default: true
          description: 'Try to repair the document or flatten it if it cannot be used
            for electronic signature. '
          type: boolean
        sEzsigndocumentPassword:
          default: ""
          description: If the source document is password protected, the password
            to open/modify it.
          example: SecretPassword123
          type: string
        fkiEzsignfolderID:
          description: The unique ID of the Ezsignfolder
          example: 33
          type: integer
        dtEzsigndocumentDuedate:
          description: The maximum date and time at which the Ezsigndocument can be
            signed.
          example: 2020-12-31 23:59:59
          type: string
        fkiLanguageID:
          description: |-
            The unique ID of the Language.

            Valid values:

            |Value|Description|
            |-|-|
            |1|French|
            |2|English|
          example: 2
          maximum: 2
          minimum: 1
          type: integer
        sEzsigndocumentName:
          description: The name of the document that will be presented to Ezsignfoldersignerassociations
          example: 'Contract #123'
          type: string
      required:
      - dtEzsigndocumentDuedate
      - eEzsigndocumentFormat
      - eEzsigndocumentSource
      - fkiEzsignfolderID
      - fkiLanguageID
      - sEzsigndocumentName
      type: object
    Common-Response-Error-sTemporaryFileUrl:
      allOf:
      - $ref: '#/components/schemas/Common_Response_Error_sTemporaryFileUrl_allOf'
      - $ref: '#/components/schemas/Common-Response-Error'
      description: Generic Error Message
      type: object
    ezsignfoldersignerassociation-Request:
      description: An Ezsignfoldersignerassociation Object
      properties:
        fkiUserID:
          description: The unique ID of the User
          example: 70
          type: integer
        fkiEzsignfolderID:
          description: The unique ID of the Ezsignfolder
          example: 33
          type: integer
        bEzsignfoldersignerassociationReceivecopy:
          description: If this flag is true. The signatory will receive a copy of
            every signed Ezsigndocument even if it ain't required to sign the document.
          type: boolean
      required:
      - fkiEzsignfolderID
      type: object
    Field-bEzsignfoldersignerassociationReceivecopy:
      description: If this flag is true. The signatory will receive a copy of every
        signed Ezsigndocument even if it ain't required to sign the document.
      type: boolean
    ezsignbulksend-getList-v1-Response:
      allOf:
      - $ref: '#/components/schemas/ezsignbulksend_getList_v1_Response_allOf'
      - $ref: '#/components/schemas/Common-Response_getList'
      description: Response for the /1/object/ezsignbulksend/getList API Request
      type: object
    ezsignbulksend-getList-v1-Response-mPayload:
      allOf:
      - $ref: '#/components/schemas/ezsignbulksend_getList_v1_Response_mPayload_allOf'
      - $ref: '#/components/schemas/Common-getList-v1-Response-mPayload'
      description: Payload for the /1/object/ezsignbulksend/getList API Request
      type: object
    Field-sEzsignbulksendDescription:
      description: The description of the Ezsignbulksend
      example: Test eZsign Bulk Send
      type: string
    Field-sEzsignfolderDescription:
      description: The description of the Ezsignfolder
      example: Test eZsign Folder
      type: string
    Field-bEzsignbulksendIsactive:
      description: Whether the Ezsignbulksend is active or not
      type: boolean
    ezsignbulksend-ListElement:
      description: An Ezsignbulksend List Element
      properties:
        pkiEzsignbulksendID:
          description: The unique ID of the Ezsignbulksend
          example: 8
          type: integer
        fkiEzsignfoldertypeID:
          description: The unique ID of the Ezsignfoldertype.
          example: 5
          type: integer
        sEzsignbulksendDescription:
          description: The description of the Ezsignbulksend
          example: Test eZsign Bulk Send
          type: string
        sEzsignfoldertypeNameX:
          description: The name of the Ezsignfoldertype in the language of the requester
          example: Default
          type: string
        eEzsignfoldertypePrivacylevel:
          $ref: '#/components/schemas/Field-eEzsignfoldertypePrivacylevel'
        bEzsignbulksendIsactive:
          description: Whether the Ezsignbulksend is active or not
          type: boolean
        iEzsignbulksendtransmission:
          description: The total number of Ezsignbulksendtransmissions in the Ezsignbulksend
          type: integer
        iEzsignfolder:
          description: The total number of Ezsignfolders in the Ezsignbulksend
          type: integer
        iEzsigndocument:
          description: The total number of Ezsigndocuments in the Ezsignbulksend
          type: integer
        iEzsignsignature:
          description: The total number of Ezsignsignature in the Ezsignbulksend
          type: integer
        iEzsignsignatureSigned:
          description: The total number of already signed Ezsignsignature blocks in
            the Ezsignbulksend
          type: integer
      required:
      - bEzsignbulksendIsactive
      - eEzsignfoldertypePrivacylevel
      - fkiEzsignfoldertypeID
      - iEzsignbulksendtransmission
      - iEzsigndocument
      - iEzsignfolder
      - iEzsignsignature
      - iEzsignsignatureSigned
      - pkiEzsignbulksendID
      - sEzsignbulksendDescription
      - sEzsignfoldertypeNameX
      type: object
    Field-pkiEzsignbulksendID:
      description: The unique ID of the Ezsignbulksend
      example: 8
      type: integer
    ezsigntemplatepackage-getList-v1-Response:
      allOf:
      - $ref: '#/components/schemas/ezsigntemplatepackage_getList_v1_Response_allOf'
      - $ref: '#/components/schemas/Common-Response_getList'
      description: Response for the /1/object/ezsigntemplatepackage/getList API Request
      type: object
    ezsigntemplatepackage-getList-v1-Response-mPayload:
      allOf:
      - $ref: '#/components/schemas/ezsigntemplatepackage_getList_v1_Response_mPayload_allOf'
      - $ref: '#/components/schemas/Common-getList-v1-Response-mPayload'
      description: Payload for the /1/object/ezsigntemplatepackage/getList API Request
      type: object
    Field-pkiEzsigntemplatepackageID:
      description: The unique ID of the Ezsigntemplatepackage
      example: 99
      type: integer
    Field-pkiDepartmentID:
      description: The unique ID of the Department.
      example: 1
      type: integer
    Field-pkiTeamID:
      description: The unique ID of the Team
      example: 1
      type: integer
    Field-sEzsigntemplatepackageDescription:
      description: The description of the Ezsigntemplatepackage
      example: Package for new clients
      type: string
    Field-bEzsigntemplatepackageIsactive:
      description: Whether the Ezsigntemplatepackage is active or not
      type: boolean
    Field-eEzsigntemplatepackageType:
      description: The type of the Ezsigntemplatepackage.
      enum:
      - Company
      - Department
      - Team
      - User
      - Usergroup
      example: User
      type: string
    Custom-AutocompleteElement-Response:
      description: Generic Autocomplete Response
      properties:
        sCategory:
          description: The Category for the dropdown or an empty string if not categorized
          type: string
        sLabel:
          description: The Description of the element
          type: string
        mValue:
          description: The Unique ID of the element
          type: string
      required:
      - mValue
      - sCategory
      - sLabel
      type: object
    Common-Format-DateTime:
      description: |-
        Represent a Date Time.
        The timezone is the one configured in the User's profile.
      example: 2020-12-31 23:59:59
      type: string
    Common-Format-DateTimeNullable:
      description: |-
        Represent a Date Time.
        The timezone is the one configured in the User's profile.
      example: 2020-12-31 23:59:59
      nullable: true
      type: string
    ezsignfolder-ListElement:
      description: An Ezsignfolder List Element
      properties:
        pkiEzsignfolderID:
          description: The unique ID of the Ezsignfolder
          example: 33
          type: integer
        fkiEzsignfoldertypeID:
          description: The unique ID of the Ezsignfoldertype.
          example: 5
          type: integer
        eEzsignfoldertypePrivacylevel:
          $ref: '#/components/schemas/Field-eEzsignfoldertypePrivacylevel'
        sEzsignfoldertypeNameX:
          description: The name of the Ezsignfoldertype in the language of the requester
          example: Default
          type: string
        sEzsignfolderDescription:
          description: The description of the Ezsignfolder
          example: Test eZsign Folder
          type: string
        eEzsignfolderStep:
          $ref: '#/components/schemas/Field-eEzsignfolderStep'
        dtCreatedDate:
          description: The date and time at which the object was created
          example: 2020-12-31 23:59:59
          type: string
        dtEzsignfolderSentdate:
          description: The date and time at which the Ezsign folder was sent the last
            time.
          example: 2020-12-31 23:59:59
          nullable: true
          type: string
        dtDueDate:
          description: |-
            Represent a Date Time.
            The timezone is the one configured in the User's profile.
          example: 2020-12-31 23:59:59
          nullable: true
          type: string
        iEzsigndocument:
          description: The total number of Ezsigndocument in the folder
          type: integer
        iEzsigndocumentEdm:
          description: The total number of Ezsigndocument in the folder that were
            saved in the edm system
          type: integer
        iEzsignsignature:
          description: The total number of signature blocks in all Ezsigndocuments
            in the folder
          type: integer
        iEzsignsignatureSigned:
          description: The total number of already signed signature blocks in all
            Ezsigndocuments in the folder
          type: integer
      required:
      - dtCreatedDate
      - dtDueDate
      - dtEzsignfolderSentdate
      - eEzsignfolderStep
      - eEzsignfoldertypePrivacylevel
      - fkiEzsignfoldertypeID
      - iEzsigndocument
      - iEzsigndocumentEdm
      - iEzsignsignature
      - iEzsignsignatureSigned
      - pkiEzsignfolderID
      - sEzsignfolderDescription
      - sEzsignfoldertypeNameX
      type: object
    Field-dtEzsignfolderSentdateNullable:
      description: The date and time at which the Ezsign folder was sent the last
        time.
      example: 2020-12-31 23:59:59
      nullable: true
      type: string
    Field-pkiDepartmentIDNullable:
      description: The unique ID of the Department.
      example: 1
      nullable: true
      type: integer
    Field-pkiTeamIDNullable:
      description: The unique ID of the Team
      example: 1
      nullable: true
      type: integer
    Field-pkiEzsignfoldertypeIDNullable:
      description: The unique ID of the Ezsignfoldertype.
      example: 5
      nullable: true
      type: integer
    ezsigntemplatepackage-ListElement:
      description: An Ezsigntemplatepackage List Element
      properties:
        pkiEzsigntemplatepackageID:
          description: The unique ID of the Ezsigntemplatepackage
          example: 99
          type: integer
        fkiDepartmentID:
          description: The unique ID of the Department.
          example: 1
          nullable: true
          type: integer
        fkiTeamID:
          description: The unique ID of the Team
          example: 1
          nullable: true
          type: integer
        fkiEzsignfoldertypeID:
          description: The unique ID of the Ezsignfoldertype.
          example: 5
          nullable: true
          type: integer
        fkiLanguageID:
          description: |-
            The unique ID of the Language.

            Valid values:

            |Value|Description|
            |-|-|
            |1|French|
            |2|English|
          example: 2
          maximum: 2
          minimum: 1
          type: integer
        eEzsigntemplatepackageType:
          $ref: '#/components/schemas/Field-eEzsigntemplatepackageType'
        sEzsigntemplatepackageDescription:
          description: The description of the Ezsigntemplatepackage
          example: Package for new clients
          type: string
        bEzsigntemplatepackageIsactive:
          description: Whether the Ezsigntemplatepackage is active or not
          type: boolean
        iEzsigntemplatepackagemembership:
          description: The total number of Ezsigntemplatepackagemembership in the
            Ezsigntemplatepackage
          type: integer
      required:
      - bEzsigntemplatepackageIsactive
      - eEzsigntemplatepackageType
      - fkiDepartmentID
      - fkiEzsignfoldertypeID
      - fkiLanguageID
      - fkiTeamID
      - iEzsigntemplatepackagemembership
      - pkiEzsigntemplatepackageID
      - sEzsigntemplatepackageDescription
      type: object
    Field-pkiBillingentityinternalID:
      description: The unique ID of the Billingentityinternal.
      example: 1
      type: integer
    Field-dtEzsignfolderDuedate:
      description: The maximum date and time at which the Ezsignfolder can be signed.
      example: 2020-12-31 23:59:59
      type: string
    Field-dtEzsigndocumentDuedate:
      description: The maximum date and time at which the Ezsigndocument can be signed.
      example: 2020-12-31 23:59:59
      type: string
    Field-sBillingentityinternalDescriptionX:
      description: The description of the Billingentityinternal in the language of
        the requester
      example: Default
      type: string
    Field-sEzsigntsarequirementDescriptionX:
      description: The description of the Ezsigntsarequirement in the language of
        the requester
      example: Default
      type: string
    ezsignfolder-getEzsigndocuments-v1-Response:
      allOf:
      - $ref: '#/components/schemas/ezsignfolder_getEzsigndocuments_v1_Response_allOf'
      - $ref: '#/components/schemas/Common-Response'
      description: Response for the /1/object/ezsignfolder/{pkiEzsignfolder}/getEzsigndocuments
        API Request
      type: object
    Field-pkiUserIDNullable:
      description: The unique ID of the User
      example: 70
      nullable: true
      type: integer
    Field-pkiEzsignsignerID:
      description: The unique ID of the Ezsignsigner
      example: 89
      type: integer
    Field-pkiEzsignsignerIDNullable:
      description: The unique ID of the Ezsignsigner
      example: 89
      nullable: true
      type: integer
    ezsignfoldersignerassociation-getObject-v1-Response-mPayload:
      allOf:
      - $ref: '#/components/schemas/ezsignfoldersignerassociation-ResponseCompound'
      description: Payload for the /1/object/ezsignfoldersignerassociation/getObject
        API Request
      type: object
    ezsignfolder-getEzsignfoldersignerassociations-v1-Response:
      allOf:
      - $ref: '#/components/schemas/ezsignfolder_getEzsignfoldersignerassociations_v1_Response_allOf'
      - $ref: '#/components/schemas/Common-Response'
      description: Response for the /1/object/ezsignfolder/{pkiEzsignfolder}/getEzsignfoldersignerassociations
        API Request
      type: object
    ezsignsigner-ResponseCompound:
      allOf:
      - $ref: '#/components/schemas/ezsignsigner_ResponseCompound_allOf'
      - $ref: '#/components/schemas/ezsignsigner-Response'
      description: An Ezsignsigner Object and children to create a complete structure
      type: object
    ezsignsigner-RequestCompound-Contact:
      description: A Ezsignsigner->Contact Object and children to create a complete
        structure
      example:
        sContactFirstname: John
        sContactLastname: Doe
        fkiLanguageID: 1
        sEmailAddress: johh.doe@domain.com
        sPhoneNumber: "5149901516"
        sPhoneNumberCell: "5149901516"
      properties:
        sContactFirstname:
          description: The First name of the contact
          example: John
          type: string
        sContactLastname:
          description: The Last name of the contact
          example: Doe
          type: string
        fkiLanguageID:
          description: |-
            The unique ID of the Language.

            Valid values:

            |Value|Description|
            |-|-|
            |1|French|
            |2|English|
          example: 2
          maximum: 2
          minimum: 1
          type: integer
        sEmailAddress:
          description: The email address.
          example: example@domain.com
          type: string
        sPhoneNumber:
          description: |-
            The Phone number of the contact.
            Use format "5149901516" for North American Numbers (Without "1" for long distance code) you would dial like this: 1-514-990-1516.
            Use format "498945233886" for international numbers (Without "011") you would dial like this: +49 89 452 33 88-6. In this example "49" is the country code of Germany.
          type: string
        sPhoneNumberCell:
          description: |-
            The Cell Phone number of the contact.
            Use format "5149901516" for North American Numbers (Without "1" for long distance code) you would dial like this: 1-514-990-1516.
            Use format "498945233886" for international numbers (Without "011") you would dial like this: +49 89 452 33 88-6. In this example "49" is the country code of Germany.
          type: string
      required:
      - fkiLanguageID
      - sContactFirstname
      - sContactLastname
      type: object
    ezsignfolder-Response:
      description: An Ezsignfolder Object
      properties:
        pkiEzsignfolderID:
          description: The unique ID of the Ezsignfolder
          example: 33
          type: integer
        fkiEzsignfoldertypeID:
          description: The unique ID of the Ezsignfoldertype.
          example: 5
          type: integer
        sEzsignfoldertypeNameX:
          description: The name of the Ezsignfoldertype in the language of the requester
          example: Default
          type: string
        fkiBillingentityinternalID:
          description: The unique ID of the Billingentityinternal.
          example: 1
          type: integer
        sBillingentityinternalDescriptionX:
          description: The description of the Billingentityinternal in the language
            of the requester
          example: Default
          type: string
        fkiEzsigntsarequirementID:
          description: |-
            The unique ID of the Ezsigntsarequirement.

            Determine if a Time Stamping Authority should add a timestamp on each of the signature.
            Valid values:

            |Value|Description|
            |-|-|
            |1|No. TSA Timestamping will requested. This will make all signatures a lot faster since no round-trip to the TSA server will be required. Timestamping will be made using eZsign server's time.|
            |2|Best effort. Timestamping from a Time Stamping Authority will be requested but is not mandatory. In the very improbable case it cannot be completed, the timestamping will be made using eZsign server's time. **Additional fee applies**|
            |3|Mandatory. Timestamping from a Time Stamping Authority will be requested and is mandatory. In the very improbable case it cannot be completed, the signature will fail and the user will be asked to retry. **Additional fee applies**|
          example: 92
          maximum: 3
          minimum: 1
          type: integer
        sEzsigntsarequirementDescriptionX:
          description: The description of the Ezsigntsarequirement in the language
            of the requester
          example: Default
          type: string
        sEzsignfolderDescription:
          description: The description of the Ezsignfolder
          example: Test eZsign Folder
          type: string
        tEzsignfolderNote:
          description: Somes extra notes about the eZsign Folder
          example: An extra notes we can add to the ezsign folder
          type: string
        eEzsignfolderSendreminderfrequency:
          $ref: '#/components/schemas/Field-eEzsignfolderSendreminderfrequency'
        dtEzsignfolderDuedate:
          description: The maximum date and time at which the Ezsignfolder can be
            signed.
          example: 2020-12-31 23:59:59
          type: string
        dtEzsignfolderSentdate:
          description: The date and time at which the Ezsign folder was sent the last
            time.
          example: 2020-12-31 23:59:59
          nullable: true
          type: string
        dtEzsignfolderScheduledarchive:
          description: The scheduled date and time at which the Ezsignfolder should
            be archived.
          example: 2020-12-31 23:59:59
          type: string
        dtEzsignfolderScheduleddestruction:
          description: The scheduled date and time at which the Ezsignfolder should
            be Destroyed.
          example: 2020-12-31 23:59:59
          type: string
        eEzsignfolderStep:
          $ref: '#/components/schemas/Field-eEzsignfolderStep'
        dtEzsignfolderClose:
          description: The date and time at which the folder was closed. Either by
            applying the last signature or by completing it prematurely.
          example: 2020-12-31 23:59:59
          type: string
        objAudit:
          $ref: '#/components/schemas/Common-Audit'
      required:
      - dtEzsignfolderClose
      - dtEzsignfolderDuedate
      - dtEzsignfolderScheduledarchive
      - dtEzsignfolderScheduleddestruction
      - dtEzsignfolderSentdate
      - eEzsignfolderSendreminderfrequency
      - eEzsignfolderStep
      - fkiBillingentityinternalID
      - fkiEzsignfoldertypeID
      - fkiEzsigntsarequirementID
      - objAudit
      - pkiEzsignfolderID
      - sBillingentityinternalDescriptionX
      - sEzsignfolderDescription
      - sEzsignfoldertypeNameX
      - sEzsigntsarequirementDescriptionX
      - tEzsignfolderNote
      type: object
    Computed-dtEzsignfolderScheduledarchive:
      description: The scheduled date and time at which the Ezsignfolder should be
        archived.
      example: 2020-12-31 23:59:59
      type: string
    Computed-dtEzsignfolderScheduleddestruction:
      description: The scheduled date and time at which the Ezsignfolder should be
        Destroyed.
      example: 2020-12-31 23:59:59
      type: string
    Computed-iEzsigndocumentStepsignaturetotal:
      description: The total number of steps in the signature filling phase
      example: 2
      type: integer
    Computed-iEzsigndocumentStepformtotal:
      description: The total number of steps in the form filling phase
      example: 2
      type: integer
    Computed-iEzsigndocumentStepformcurrent:
      description: The current step in the form filling phase
      example: 1
      type: integer
    ezsigndocument-getObject-v1-Response-mPayload:
      allOf:
      - $ref: '#/components/schemas/ezsigndocument-ResponseCompound'
      description: Payload for the /1/object/ezsigndocument/getObject API Request
      type: object
    Computed-iEzsigndocumentStepsignatureCurrent:
      description: The current step in the signature phase
      example: 0
      type: integer
    ezsignfolder-getEzsigndocuments-v1-Response-mPayload:
      description: Payload for the /1/object/ezsignfolder/{pkiEzsignfolder}/getEzsigndocuments
        API Request
      properties:
        a_objEzsigndocument:
          items:
            $ref: '#/components/schemas/ezsigndocument-ResponseCompound'
          type: array
      required:
      - a_objEzsigndocument
      type: object
    ezsigndocument-ResponseCompound:
      allOf:
      - $ref: '#/components/schemas/ezsigndocument_ResponseCompound_allOf'
      - $ref: '#/components/schemas/ezsigndocument-Response'
      description: An Ezsigndocument Object and children to create a complete structure
      type: object
    Field-iEzsignsignatureStep:
      description: The step when the Ezsignsigner will be invited to sign or fill
        form fields
      example: 1
      type: integer
    Custom-Ezsignsignaturestatus-Response:
      description: A Ezsignsignaturestatus Object and children to create a complete
        structure
      properties:
        eEzsignsignaturestatusSteptype:
          description: Type of step
          enum:
          - Form
          - Signature
          type: string
        iEzsignsignaturestatusStep:
          description: The step at which the Ezsignsigner will be invited to sign
            or fill the form fields
          example: 1
          type: integer
        iEzsignsignaturestatusTotal:
          description: The total number of signature or form fields the Ezsignsigner
            must process at the current step
          example: 2
          type: integer
        iEzsignsignaturestatusSigned:
          description: The number of signature or form fields the Ezsignsigner has
            already processed at the current step
          example: 1
          type: integer
      required:
      - eEzsignsignaturestatusSteptype
      - iEzsignsignaturestatusSigned
      - iEzsignsignaturestatusStep
      - iEzsignsignaturestatusTotal
      type: object
    Custom-Ezsignfoldersignerassociationstatus-Response:
      description: A Ezsignfoldersignerassociationstatus Object and children to create
        a complete structure
      properties:
        fkiEzsignfoldersignerassociationID:
          description: The unique ID of the Ezsignfoldersignerassociation
          example: 20
          type: integer
        sEzsignfoldersignerassociationstatusLastname:
          description: The last name of the Ezsignsigner
          example: Doe
          type: string
        sEzsignfoldersignerassociationstatusFirstname:
          description: The first name of the Ezsignsigner
          example: John
          type: string
        a_objEzsignsignaturestatus:
          items:
            $ref: '#/components/schemas/Custom-Ezsignsignaturestatus-Response'
          type: array
      required:
      - a_objEzsignsignaturestatus
      - fkiEzsignfoldersignerassociationID
      - sEzsignfoldersignerassociationstatusFirstname
      - sEzsignfoldersignerassociationstatusLastname
      type: object
    ezsignfolder-getObject-v1-Response-mPayload:
      allOf:
      - $ref: '#/components/schemas/ezsignfolder-ResponseCompound'
      description: Payload for the /1/object/ezsignfolder/getObject API Request
      type: object
    Field-bEzsignsignatureCustomdate:
      description: Whether the Ezsignsignature has a custom date format or not. (Only
        possible when eEzsignsignatureType is "Name" or "Handwritten")
      type: boolean
    ezsignsignature-RequestCompound:
      allOf:
      - $ref: '#/components/schemas/ezsignsignature_RequestCompound_allOf'
      - $ref: '#/components/schemas/ezsignsignature-Request'
      description: An Ezsignsignature Object and children to create a complete structure
      type: object
    ezsignsignature-Request:
      description: An Ezsignsignature Object
      properties:
        fkiEzsignfoldersignerassociationID:
          description: The unique ID of the Ezsignfoldersignerassociation
          example: 20
          type: integer
        iEzsignpagePagenumber:
          description: The page number in the Ezsigndocument
          example: 1
          type: integer
        iEzsignsignatureX:
          description: |-
            The X coordinate (Horizontal) where to put the signature block on the page.

            Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the signature block 2 inches from the left border of the page, you would use "200" for the X coordinate.
          example: 200
          type: integer
        iEzsignsignatureY:
          description: |-
            The Y coordinate (Vertical) where to put the signature block on the page.

            Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the signature block 3 inches from the top border of the page, you would use "300" for the Y coordinate.
          example: 300
          type: integer
        iEzsignsignatureStep:
          description: The step when the Ezsignsigner will be invited to sign or fill
            form fields
          example: 1
          type: integer
        eEzsignsignatureType:
          $ref: '#/components/schemas/Field-eEzsignsignatureType'
        fkiEzsigndocumentID:
          description: The unique ID of the Ezsigndocument
          example: 97
          type: integer
      required:
      - eEzsignsignatureType
      - fkiEzsigndocumentID
      - fkiEzsignfoldersignerassociationID
      - iEzsignpagePagenumber
      - iEzsignsignatureStep
      - iEzsignsignatureX
      - iEzsignsignatureY
      type: object
    ezsignsignaturecustomdate-Request:
      description: An Ezsignsignaturecustomdate Object
      properties:
        iEzsignsignaturecustomdateX:
          description: |-
            The X coordinate (Horizontal) where to put the custom date block on the page.

            Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the custom date block 2 inches from the left border of the page, you would use "200" for the X coordinate.
          example: 200
          type: integer
        iEzsignsignaturecustomdateY:
          description: |-
            The Y coordinate (Vertical) where to put the custom date block on the page.

            Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the custom date block 3 inches from the top border of the page, you would use "300" for the Y coordinate.
          example: 300
          type: integer
        sEzsignsignaturecustomdateFormat:
          description: "The custom date format to use\n\nYou can use the codes below\
            \ and they will be replaced at signature time.\nText values like month\
            \ and day names will be rendered in the proper language.\nOther text will\
            \ be left as-is.\n\nThe codes examples below are based on the following\
            \ datetime: Thursday, January 6, 2022 at 08:07:09 EST\n\nFor example,\
            \ the format \"Signature date: {MM}/{DD}/{YYYY} {hh}:{mm}\" would become\
            \ \"Signature date: 01/06/2022 08:07\"\n\n**Year**\n\n| Code | Example\
            \ |\n| - | - |\n| {YYYY} | 2022 |\n\n**Month**\n\n| Code | Example |\n\
            | - | - |\n| {MonthCapitalize} | Janvier |\n| {Month} | janvier |\n| {MM}\
            \ | 01 |\n| {M} | 1 |\n\n**Day**\n\n| Code | Example |\n| - | - |\n| {DayCapitalize}\
            \ | Jeudi |\n| {Day} | jeudi |\n| {DD} | 06 |\n| {D} | 6 |\n\n**Hour**\n\
            \n| Code | Example |\n| - | - |\n| {hh} | 08 |\n\n**Minute**\n\n| Code\
            \ | Example |\n| - | - |\n| {mm} | 07 |\n\n**Second**\n\n| Code | Example\
            \ |\n| - | - |\n| {ss} | 09 |      \n\n**Timezone**\n\n| Code | Example\
            \ |\n| - | - |\n| {Z} | EST |     \n\n**Time**\n\n| Code | Example |\n\
            | - | - |\n| {Time} | 08:07:09 |  \n| {TimeZ} | 08:07:09 EST |\n   \n\
            **Date**\n\n| Code | Example |\n| - | - |\n| {Date} | 2022-01-06 |  \n\
            | {DateText} | 1er Janvier 2022 |\n\n**Full**\n\n| Code | Example |\n\
            | - | - |\n| {DateTime} | 2022-01-06 08:07:09 |  \n| {DateTimeZ} | 2022-01-06\
            \ 08:07:09 EST |\n"
          example: 'Signature date: {YYYY}/{MM}/{DD} {hh}:{mm}{ss} {Z}'
          type: string
      required:
      - iEzsignsignaturecustomdateX
      - iEzsignsignaturecustomdateY
      - sEzsignsignaturecustomdateFormat
      type: object
    Field-iEzsignsignaturecustomdateX:
      description: |-
        The X coordinate (Horizontal) where to put the custom date block on the page.

        Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the custom date block 2 inches from the left border of the page, you would use "200" for the X coordinate.
      example: 200
      type: integer
    Field-iEzsignsignaturecustomdateY:
      description: |-
        The Y coordinate (Vertical) where to put the custom date block on the page.

        Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the custom date block 3 inches from the top border of the page, you would use "300" for the Y coordinate.
      example: 300
      type: integer
    Field-sEzsignsignaturecustomdateFormat:
      description: "The custom date format to use\n\nYou can use the codes below and\
        \ they will be replaced at signature time.\nText values like month and day\
        \ names will be rendered in the proper language.\nOther text will be left\
        \ as-is.\n\nThe codes examples below are based on the following datetime:\
        \ Thursday, January 6, 2022 at 08:07:09 EST\n\nFor example, the format \"\
        Signature date: {MM}/{DD}/{YYYY} {hh}:{mm}\" would become \"Signature date:\
        \ 01/06/2022 08:07\"\n\n**Year**\n\n| Code | Example |\n| - | - |\n| {YYYY}\
        \ | 2022 |\n\n**Month**\n\n| Code | Example |\n| - | - |\n| {MonthCapitalize}\
        \ | Janvier |\n| {Month} | janvier |\n| {MM} | 01 |\n| {M} | 1 |\n\n**Day**\n\
        \n| Code | Example |\n| - | - |\n| {DayCapitalize} | Jeudi |\n| {Day} | jeudi\
        \ |\n| {DD} | 06 |\n| {D} | 6 |\n\n**Hour**\n\n| Code | Example |\n| - | -\
        \ |\n| {hh} | 08 |\n\n**Minute**\n\n| Code | Example |\n| - | - |\n| {mm}\
        \ | 07 |\n\n**Second**\n\n| Code | Example |\n| - | - |\n| {ss} | 09 |   \
        \   \n\n**Timezone**\n\n| Code | Example |\n| - | - |\n| {Z} | EST |     \n\
        \n**Time**\n\n| Code | Example |\n| - | - |\n| {Time} | 08:07:09 |  \n| {TimeZ}\
        \ | 08:07:09 EST |\n   \n**Date**\n\n| Code | Example |\n| - | - |\n| {Date}\
        \ | 2022-01-06 |  \n| {DateText} | 1er Janvier 2022 |\n\n**Full**\n\n| Code\
        \ | Example |\n| - | - |\n| {DateTime} | 2022-01-06 08:07:09 |  \n| {DateTimeZ}\
        \ | 2022-01-06 08:07:09 EST |\n"
      example: 'Signature date: {YYYY}/{MM}/{DD} {hh}:{mm}{ss} {Z}'
      type: string
    ezsignfoldersignerassociation-Response:
      description: An Ezsignfoldersignerassociation Object
      properties:
        pkiEzsignfoldersignerassociationID:
          description: The unique ID of the Ezsignfoldersignerassociation
          example: 20
          type: integer
        fkiEzsignfolderID:
          description: The unique ID of the Ezsignfolder
          example: 33
          type: integer
        bEzsignfoldersignerassociationReceivecopy:
          description: If this flag is true. The signatory will receive a copy of
            every signed Ezsigndocument even if it ain't required to sign the document.
          type: boolean
      required:
      - bEzsignfoldersignerassociationReceivecopy
      - fkiEzsignfolderID
      - pkiEzsignfoldersignerassociationID
      type: object
    ezsignsigner-Request:
      description: An Ezsignsigner Object
      example:
        fkiTaxassignmentID: 1
        fkiSecretquestionID: 5
        eEzsignsignerLogintype: PasswordQuestion
        sEzsignsignerSecretanswer: This Is My Secret Answer
      properties:
        fkiTaxassignmentID:
          description: |-
            The unique ID of the Taxassignment.

            Valid values:

            |Value|Description|
            |-|-|
            |1|No tax|
            |2|GST|
            |3|HST (ON)|
            |4|HST (NB)|
            |5|HST (NS)|
            |6|HST (NL)|
            |7|HST (PE)|
            |8|GST + QST (QC)|
            |9|GST + QST (QC) Non-Recoverable|
            |10|GST + PST (BC)|
            |11|GST + PST (SK)|
            |12|GST + RST (MB)|
            |13|GST + PST (BC) Non-Recoverable|
            |14|GST + PST (SK) Non-Recoverable|
            |15|GST + RST (MB) Non-Recoverable|
          example: 1
          maximum: 15
          minimum: 1
          type: integer
        fkiSecretquestionID:
          description: |-
            The unique ID of the Secretquestion.

            Valid values:

            |Value|Description|
            |-|-|
            |1|The name of the hospital in which you were born|
            |2|The name of your grade school|
            |3|The last name of your favorite teacher|
            |4|Your favorite sports team|
            |5|Your favorite TV show|
            |6|Your favorite movie|
            |7|The name of the street on which you grew up|
            |8|The name of your first employer|
            |9|Your first car|
            |10|Your favorite food|
            |11|The name of your first pet|
            |12|Favorite musician/band|
            |13|What instrument you play|
            |14|Your father's middle name|
            |15|Your mother's maiden name|
            |16|Name of your eldest child|
            |17|Your spouse's middle name|
            |18|Favorite restaurant|
            |19|Childhood nickname|
            |20|Favorite vacation destination|
            |21|Your boat's name|
            |22|Date of Birth (YYYY-MM-DD)|
          example: 7
          type: integer
        eEzsignsignerLogintype:
          description: |-
            The method the Ezsignsigner will authenticate to the signing platform.

            1. **Password** means the Ezsignsigner will receive a secure link by email.
            2. **PasswordPhone** means the Ezsignsigner will receive a secure link by email and will need to authenticate using SMS or Phone call. **Additional fee applies**.
            3. **PasswordQuestion** means the Ezsignsigner will receive a secure link by email and will need to authenticate using a predefined question and answer.
            4. **InPersonPhone** means the Ezsignsigner will only be able to sign "In-Person" and will need to authenticate using SMS or Phone call. No email will be sent for invitation to sign. **Additional fee applies**.
            5. **InPerson** means the Ezsignsigner will only be able to sign "In-Person" and there won't be any authentication. No email will be sent for invitation to sign. Make sure you evaluate the risk of signature denial and at minimum, we recommend you use a handwritten signature type.
          enum:
          - Password
          - PasswordPhone
          - PasswordQuestion
          - InPersonPhone
          - InPerson
          type: string
        sEzsignsignerSecretanswer:
          description: The predefined answer to the secret question the Ezsignsigner
            will need to provide to successfully authenticate.
          type: string
      required:
      - eEzsignsignerLogintype
      - fkiTaxassignmentID
      type: object
    Field-pkiUserlogintypeID:
      description: The unique ID of the Userlogintype
      example: 2
      type: integer
    Field-pkiUserlogintypeIDNullable:
      description: The unique ID of the Userlogintype
      example: 2
      nullable: true
      type: integer
    ezsignfoldersignerassociation-ResponseCompound:
      allOf:
      - $ref: '#/components/schemas/ezsignfoldersignerassociation_ResponseCompound_allOf'
      - $ref: '#/components/schemas/ezsignfoldersignerassociation-Response'
      description: An Ezsignfoldersignerassociation Object
      type: object
    ezsignfoldersignerassociation-ResponseCompound-User:
      description: A Ezsignfoldersignerassociation->User Object and children to create
        a complete structure
      properties:
        pkiUserID:
          description: The unique ID of the User
          example: 70
          type: integer
        fkiLanguageID:
          description: |-
            The unique ID of the Language.

            Valid values:

            |Value|Description|
            |-|-|
            |1|French|
            |2|English|
          example: 2
          maximum: 2
          minimum: 1
          type: integer
        sUserFirstname:
          description: The First name of the user
          example: John
          type: string
        sUserLastname:
          description: The Last name of the user
          example: Doe
          type: string
        sEmailAddress:
          description: The email address.
          example: example@domain.com
          type: string
      required:
      - fkiLanguageID
      - pkiUserID
      - sEmailAddress
      - sUserFirstname
      - sUserLastname
      type: object
    ezsignsigner-Response:
      description: An Ezsignsigner Object
      properties:
        pkiEzsignsignerID:
          description: The unique ID of the Ezsignsigner
          example: 89
          type: integer
        fkiTaxassignmentID:
          description: |-
            The unique ID of the Taxassignment.

            Valid values:

            |Value|Description|
            |-|-|
            |1|No tax|
            |2|GST|
            |3|HST (ON)|
            |4|HST (NB)|
            |5|HST (NS)|
            |6|HST (NL)|
            |7|HST (PE)|
            |8|GST + QST (QC)|
            |9|GST + QST (QC) Non-Recoverable|
            |10|GST + PST (BC)|
            |11|GST + PST (SK)|
            |12|GST + RST (MB)|
            |13|GST + PST (BC) Non-Recoverable|
            |14|GST + PST (SK) Non-Recoverable|
            |15|GST + RST (MB) Non-Recoverable|
          example: 1
          maximum: 15
          minimum: 1
          type: integer
        fkiSecretquestionID:
          description: |-
            The unique ID of the Secretquestion.

            Valid values:

            |Value|Description|
            |-|-|
            |1|The name of the hospital in which you were born|
            |2|The name of your grade school|
            |3|The last name of your favorite teacher|
            |4|Your favorite sports team|
            |5|Your favorite TV show|
            |6|Your favorite movie|
            |7|The name of the street on which you grew up|
            |8|The name of your first employer|
            |9|Your first car|
            |10|Your favorite food|
            |11|The name of your first pet|
            |12|Favorite musician/band|
            |13|What instrument you play|
            |14|Your father's middle name|
            |15|Your mother's maiden name|
            |16|Name of your eldest child|
            |17|Your spouse's middle name|
            |18|Favorite restaurant|
            |19|Childhood nickname|
            |20|Favorite vacation destination|
            |21|Your boat's name|
            |22|Date of Birth (YYYY-MM-DD)|
          example: 7
          type: integer
        fkiUserlogintypeID:
          description: The unique ID of the Userlogintype
          example: 2
          type: integer
        sUserlogintypeDescriptionX:
          description: The description of the Userlogintype in the language of the
            requester
          example: Email and phone or SMS
          type: string
      required:
      - fkiTaxassignmentID
      - fkiUserlogintypeID
      - pkiEzsignsignerID
      - sUserlogintypeDescriptionX
      type: object
    Field-sUserlogintypeDescriptionX:
      description: The description of the Userlogintype in the language of the requester
      example: Email and phone or SMS
      type: string
    Field-iPhoneNumber:
      description: |-
        The number of the phone number. (For a North America Number only)

        The number is the "1516" section in this sample phone number: (514) 990-1516 x123
      example: "1516"
      type: string
    Field-sPhoneE164:
      description: A phone number in E.164 Format
      example: +5149901516
      type: string
    ezsignfolder-getEzsignfoldersignerassociations-v1-Response-mPayload:
      description: Payload for the /1/object/ezsignfolder/{pkiEzsignfolder}/getEzsignfoldersignerassociations
        API Request
      properties:
        a_objEzsignfoldersignerassociation:
          items:
            $ref: '#/components/schemas/ezsignfoldersignerassociation-ResponseCompound'
          type: array
      required:
      - a_objEzsignfoldersignerassociation
      type: object
    Common-Response:
      description: All API response will inherit this based Response
      properties:
        objDebugPayload:
          $ref: '#/components/schemas/Common-Response-objDebugPayload'
        objDebug:
          $ref: '#/components/schemas/Common-Response-objDebug'
      type: object
    Field-pkiContactID:
      description: The unique ID of the Contact
      example: 21
      type: integer
    ezsignsigner-ResponseCompound-Contact:
      description: A Ezsignsigner->Contact Object and children to create a complete
        structure
      properties:
        pkiContactID:
          description: The unique ID of the Contact
          example: 21
          type: integer
        sContactFirstname:
          description: The First name of the contact
          example: John
          type: string
        sContactLastname:
          description: The Last name of the contact
          example: Doe
          type: string
        fkiLanguageID:
          description: |-
            The unique ID of the Language.

            Valid values:

            |Value|Description|
            |-|-|
            |1|French|
            |2|English|
          example: 2
          maximum: 2
          minimum: 1
          type: integer
        sEmailAddress:
          description: The email address.
          example: example@domain.com
          type: string
        sPhoneE164:
          description: A phone number in E.164 Format
          example: +5149901516
          type: string
        sPhoneE164Cell:
          description: A phone number in E.164 Format
          example: +5149901516
          type: string
      required:
      - fkiLanguageID
      - pkiContactID
      - sContactFirstname
      - sContactLastname
      type: object
    Field-eActivesessionWeekdaystart:
      description: The weekday start of the User.
      enum:
      - Sunday
      - Monday
      - Tuesday
      - Wednesday
      - Thursday
      - Friday
      - Saturday
      example: Sunday
      type: string
    Field-bActivesessionDebug:
      description: Whether the active session is in debug or not
      example: false
      type: boolean
    activesession-getCurrent-v1-Response-mPayload:
      allOf:
      - $ref: '#/components/schemas/activesession-ResponseCompound'
      description: Payload for the /1/object/activesession/getCurrent API Request
      type: object
    Field-sCompanyNameX:
      description: The Name of the Company in the language of the requester
      example: Acme inc.
      type: string
    Field-sDepartmentNameX:
      description: The Name of the Department in the language of the requester
      example: Head Office
      type: string
    Field-eActivesessionSessiontype:
      description: The Type of session for the Activesession
      enum:
      - Normal
      example: Normal
      type: string
    activesession-Response:
      description: An Activesession Object
      properties:
        eActivesessionSessiontype:
          $ref: '#/components/schemas/Field-eActivesessionSessiontype'
        eActivesessionWeekdaystart:
          $ref: '#/components/schemas/Field-eActivesessionWeekdaystart'
        fkiLanguageID:
          description: |-
            The unique ID of the Language.

            Valid values:

            |Value|Description|
            |-|-|
            |1|French|
            |2|English|
          example: 2
          maximum: 2
          minimum: 1
          type: integer
        sCompanyNameX:
          description: The Name of the Company in the language of the requester
          example: Acme inc.
          type: string
        sDepartmentNameX:
          description: The Name of the Department in the language of the requester
          example: Head Office
          type: string
        bActivesessionDebug:
          description: Whether the active session is in debug or not
          example: false
          type: boolean
        pksCustomerCode:
          description: The customer code assigned to your account
          example: demo
          maxLength: 6
          minLength: 2
          type: string
      required:
      - bActivesessionDebug
      - eActivesessionSessiontype
      - eActivesessionWeekdaystart
      - fkiLanguageID
      - pksCustomerCode
      - sCompanyNameX
      - sDepartmentNameX
      type: object
    Field-pkiPermissionID:
      description: The unique ID of the Permission
      example: 53
      type: integer
    Field-eModuleInternalname:
      description: |-
        The Internal name of the Module.

        This is theoretically an enum field but there are so many possibles values we decided not to list them all.
      example: Purchases
      type: string
    apikey-Response:
      description: An Apikey Object
      properties:
        objApikeyDescription:
          $ref: '#/components/schemas/Multilingual-ApikeyDescription'
        sComputedToken:
          description: |-
            The secret token for the API key.

            This will be returned only on creation.
          type: string
        pkiApikeyID:
          description: The unique ID of the Apikey
          example: 99
          type: integer
        objAudit:
          $ref: '#/components/schemas/Common-Audit'
      required:
      - objApikeyDescription
      - objAudit
      - pkiApikeyID
      type: object
    activesession-ResponseCompound:
      allOf:
      - $ref: '#/components/schemas/activesession_ResponseCompound_allOf'
      - $ref: '#/components/schemas/activesession-Response'
      description: Payload for the /1/object/activesession/getCurrent API Request
      type: object
    Field-sApikeyDescriptionX:
      description: The description of the Apikey in the language of the requester
      example: Project X
      type: string
    activesession-ResponseCompound-User:
      description: An Activesession->User Object and children to create a complete
        structure
      properties:
        pkiUserID:
          description: The unique ID of the User
          example: 70
          type: integer
        sAvatarUrl:
          description: The url of the picture used as avatar
          example: http://www.website.com/avatar.jpg
          type: string
        sUserFirstname:
          description: The First name of the user
          example: John
          type: string
        sUserLastname:
          description: The Last name of the user
          example: Doe
          type: string
        sEmailAddress:
          description: The email address.
          example: example@domain.com
          type: string
      required:
      - pkiUserID
      - sAvatarUrl
      - sEmailAddress
      - sUserFirstname
      - sUserLastname
      type: object
    activesession-ResponseCompound-Apikey:
      description: An Activesession->Apikey object and children to create a complete
        structure
      properties:
        pkiApikeyID:
          description: The unique ID of the Apikey
          example: 99
          type: integer
        sApikeyDescriptionX:
          description: The description of the Apikey in the language of the requester
          example: Project X
          type: string
      required:
      - pkiApikeyID
      - sApikeyDescriptionX
      type: object
    Common-Response-objDebugPayload:
      description: This is a debug object containing debugging information on the
        actual function
      properties:
        iVersionMin:
          description: The minimum version of the function that can be called
          example: 1
          type: integer
        iVersionMax:
          description: The maximum version of the function that can be called
          example: 2
          type: integer
        a_RequiredPermission:
          description: |-
            An array of permissions required to access this function.

            If the value "0" is present in the array, anyone can call this function.

            You must have one of the permission to access the function. You don't need to have all of them.
          items:
            example: 117
            type: integer
          type: array
      required:
      - a_RequiredPermission
      - iVersionMax
      - iVersionMin
      type: object
    Computed-sAvatarUrl:
      description: The url of the picture used as avatar
      example: http://www.website.com/avatar.jpg
      type: string
    ezsigndocument_createObject_v1_Response_allOf:
      properties:
        mPayload:
          $ref: '#/components/schemas/ezsigndocument-createObject-v1-Response-mPayload'
      required:
      - mPayload
      type: object
    ezsigndocument_getObject_v1_Response_allOf:
      properties:
        mPayload:
          $ref: '#/components/schemas/ezsigndocument-getObject-v1-Response-mPayload'
      required:
      - mPayload
      type: object
    activesession_getCurrent_v1_Response_allOf:
      properties:
        mPayload:
          $ref: '#/components/schemas/activesession-getCurrent-v1-Response-mPayload'
      required:
      - mPayload
      type: object
    ezsignfolder_getObject_v1_Response_allOf:
      properties:
        mPayload:
          $ref: '#/components/schemas/ezsignfolder-getObject-v1-Response-mPayload'
      required:
      - mPayload
      type: object
    ezsignfoldersignerassociation_createObject_v1_Response_allOf:
      properties:
        mPayload:
          $ref: '#/components/schemas/ezsignfoldersignerassociation-createObject-v1-Response-mPayload'
      required:
      - mPayload
      type: object
    ezsignfoldersignerassociation_getObject_v1_Response_allOf:
      properties:
        mPayload:
          $ref: '#/components/schemas/ezsignfoldersignerassociation-getObject-v1-Response-mPayload'
      required:
      - mPayload
      type: object
    ezsignsigner_RequestCompound_allOf:
      properties:
        objContact:
          $ref: '#/components/schemas/ezsignsigner-RequestCompound-Contact'
      required:
      - objContact
      type: object
    ezsignfoldersignerassociation_RequestCompound_allOf:
      properties:
        objEzsignsigner:
          $ref: '#/components/schemas/ezsignsigner-RequestCompound'
      type: object
    ezsignsignature_createObject_v1_Response_allOf:
      properties:
        mPayload:
          $ref: '#/components/schemas/ezsignsignature-createObject-v1-Response-mPayload'
      required:
      - mPayload
      type: object
    ezsignsignature_getObject_v1_Response_allOf:
      properties:
        mPayload:
          description: Payload for the /1/object/ezsignsignature/getObject API Request
          type: object
      required:
      - mPayload
      type: object
    Webhook_Ezsign_DocumentCompleted_allOf:
      properties:
        objEzsigndocument:
          $ref: '#/components/schemas/ezsigndocument-Response'
      required:
      - objEzsigndocument
      type: object
    Webhook_Ezsign_FolderCompleted_allOf:
      properties:
        objEzsignfolder:
          $ref: '#/components/schemas/ezsignfolder-Response'
      required:
      - objEzsignfolder
      type: object
    ezsigndocument_getDownloadUrl_v1_Response_allOf:
      properties:
        mPayload:
          $ref: '#/components/schemas/ezsigndocument-getDownloadUrl-v1-Response-mPayload'
      required:
      - mPayload
      type: object
    ezsignfoldersignerassociation_getInPersonLoginUrl_v1_Response_allOf:
      properties:
        mPayload:
          $ref: '#/components/schemas/ezsignfoldersignerassociation-getInPersonLoginUrl-v1-Response-mPayload'
      required:
      - mPayload
      type: object
    franchisereferalincome_createObject_v1_Response_allOf:
      properties:
        mPayload:
          $ref: '#/components/schemas/franchisereferalincome-createObject-v1-Response-mPayload'
      required:
      - mPayload
      type: object
    contact_RequestCompound_allOf:
      properties:
        objContactinformations:
          $ref: '#/components/schemas/contactinformations-RequestCompound'
      required:
      - objContactinformations
      type: object
    franchisereferalincome_RequestCompound_allOf:
      properties:
        objAddress:
          $ref: '#/components/schemas/address-Request'
        a_objContact:
          items:
            $ref: '#/components/schemas/contact-RequestCompound'
          type: array
      required:
      - a_objContact
      type: object
    contactinformations_RequestCompound_allOf:
      properties:
        a_objAddress:
          items:
            $ref: '#/components/schemas/address-Request'
          type: array
        a_objPhone:
          items:
            $ref: '#/components/schemas/phone-Request'
          type: array
        a_objEmail:
          items:
            $ref: '#/components/schemas/email-Request'
          type: array
        a_objWebsite:
          items:
            $ref: '#/components/schemas/website-Request'
          type: array
      required:
      - a_objAddress
      - a_objEmail
      - a_objPhone
      - a_objWebsite
      type: object
    Common_getAutocomplete_v1_Response_allOf:
      properties:
        mPayload:
          description: Generic Autocomplete Response
          items:
            $ref: '#/components/schemas/Custom-AutocompleteElement-Response'
          type: array
      required:
      - mPayload
      type: object
    user_createEzsignuser_v1_Response_allOf:
      properties:
        mPayload:
          $ref: '#/components/schemas/user-createEzsignuser-v1-Response-mPayload'
      required:
      - mPayload
      type: object
    Webhook_User_UserCreated_allOf:
      properties:
        objUser:
          $ref: '#/components/schemas/user-Response'
      required:
      - objUser
      type: object
    apikey_createObject_v1_Response_allOf:
      properties:
        mPayload:
          $ref: '#/components/schemas/apikey-createObject-v1-Response-mPayload'
      required:
      - mPayload
      type: object
    authenticate_authenticate_v2_Response_allOf:
      properties:
        mPayload:
          $ref: '#/components/schemas/authenticate-authenticate-v2-Response-mPayload'
      required:
      - mPayload
      type: object
    ezsigndocument_getEzsignpages_v1_Response_allOf:
      properties:
        mPayload:
          $ref: '#/components/schemas/ezsigndocument-getEzsignpages-v1-Response-mPayload'
      required:
      - mPayload
      type: object
    ezsigndocument_getFormData_v1_Response_allOf:
      properties:
        mPayload:
          $ref: '#/components/schemas/ezsigndocument-getFormData-v1-Response-mPayload'
      required:
      - mPayload
      type: object
    ezsignformfieldgroup_ResponseCompound_allOf:
      properties:
        a_objEzsignformfield:
          items:
            $ref: '#/components/schemas/ezsignformfield-Response'
          type: array
      required:
      - a_objEzsignformfield
      type: object
    ezsignfolder_getFormsData_v1_Response_allOf:
      properties:
        mPayload:
          $ref: '#/components/schemas/ezsignfolder-getFormsData-v1-Response-mPayload'
      required:
      - mPayload
      type: object
    ezsigndocument_getWordsPositions_v1_Response_allOf:
      properties:
        mPayload:
          description: Payload for the /1/object/ezsigndocument/{pkiEzsigndocumentID}/getWordsPositions
            API Request
          items:
            $ref: '#/components/schemas/Custom-WordPositionWord-Response'
          type: array
      required:
      - mPayload
      type: object
    ezsignfolder_createObject_v1_Response_allOf:
      properties:
        mPayload:
          $ref: '#/components/schemas/ezsignfolder-createObject-v1-Response-mPayload'
      required:
      - mPayload
      type: object
    ezsignfoldertype_getList_v1_Response_allOf:
      properties:
        mPayload:
          $ref: '#/components/schemas/ezsignfoldertype-getList-v1-Response-mPayload'
      required:
      - mPayload
      type: object
    Common_Response_objDebugPayload_getList_allOf:
      properties:
        a_Filter:
          $ref: '#/components/schemas/Common-Response-Filter'
        a_OrderBy:
          additionalProperties:
            description: Corresponding sql statement
            type: string
          description: List of available values for *eOrderBy*
          type: object
      required:
      - a_Filter
      - a_OrderBy
      type: object
    ezsignfoldertype_getList_v1_Response_mPayload_allOf:
      properties:
        a_objEzsignfoldertype:
          items:
            $ref: '#/components/schemas/ezsignfoldertype-ListElement'
          type: array
      required:
      - a_objEzsignfoldertype
      type: object
    ezsignfolder_getList_v1_Response_allOf:
      properties:
        mPayload:
          $ref: '#/components/schemas/ezsignfolder-getList-v1-Response-mPayload'
      required:
      - mPayload
      type: object
    ezsignfolder_getList_v1_Response_mPayload_allOf:
      properties:
        a_objEzsignfolder:
          items:
            $ref: '#/components/schemas/ezsignfolder-ListElement'
          type: array
      required:
      - a_objEzsignfolder
      type: object
    list_getListpresentation_v1_Response_allOf:
      properties:
        mPayload:
          $ref: '#/components/schemas/list-getListpresentation-v1-Response-mPayload'
      required:
      - mPayload
      type: object
    Common_Response_Error_sTemporaryFileUrl_allOf:
      properties:
        sTemporaryFileUrl:
          description: The Temporary File Url of the document that was uploaded. That
            url can be reused instead of uploading the file again.
          example: http://www.example.com/document.pdf
          type: string
      type: object
    ezsignbulksend_getList_v1_Response_allOf:
      properties:
        mPayload:
          $ref: '#/components/schemas/ezsignbulksend-getList-v1-Response-mPayload'
      required:
      - mPayload
      type: object
    ezsignbulksend_getList_v1_Response_mPayload_allOf:
      properties:
        a_objEzsignbulksend:
          items:
            $ref: '#/components/schemas/ezsignbulksend-ListElement'
          type: array
      required:
      - a_objEzsignbulksend
      type: object
    ezsigntemplatepackage_getList_v1_Response_allOf:
      properties:
        mPayload:
          $ref: '#/components/schemas/ezsigntemplatepackage-getList-v1-Response-mPayload'
      required:
      - mPayload
      type: object
    ezsigntemplatepackage_getList_v1_Response_mPayload_allOf:
      properties:
        a_objEzsigntemplatepackage:
          items:
            $ref: '#/components/schemas/ezsigntemplatepackage-ListElement'
          type: array
      required:
      - a_objEzsigntemplatepackage
      type: object
    ezsignfolder_getEzsigndocuments_v1_Response_allOf:
      properties:
        mPayload:
          $ref: '#/components/schemas/ezsignfolder-getEzsigndocuments-v1-Response-mPayload'
      required:
      - mPayload
      type: object
    ezsignfolder_getEzsignfoldersignerassociations_v1_Response_allOf:
      properties:
        mPayload:
          $ref: '#/components/schemas/ezsignfolder-getEzsignfoldersignerassociations-v1-Response-mPayload'
      required:
      - mPayload
      type: object
    ezsignsigner_ResponseCompound_allOf:
      properties:
        objContact:
          $ref: '#/components/schemas/ezsignsigner-ResponseCompound-Contact'
      required:
      - objContact
      type: object
    ezsigndocument_ResponseCompound_allOf:
      properties:
        iEzsigndocumentStepformtotal:
          description: The total number of steps in the form filling phase
          example: 2
          type: integer
        iEzsigndocumentStepformcurrent:
          description: The current step in the form filling phase
          example: 1
          type: integer
        iEzsigndocumentStepsignaturetotal:
          description: The total number of steps in the signature filling phase
          example: 2
          type: integer
        iEzsigndocumentStepsignatureCurrent:
          description: The current step in the signature phase
          example: 0
          type: integer
        a_objEzsignfoldersignerassociationstatus:
          items:
            $ref: '#/components/schemas/Custom-Ezsignfoldersignerassociationstatus-Response'
          type: array
      required:
      - a_objEzsignfoldersignerassociationstatus
      - iEzsigndocumentStepformcurrent
      - iEzsigndocumentStepformtotal
      - iEzsigndocumentStepsignatureCurrent
      - iEzsigndocumentStepsignaturetotal
      type: object
    ezsignsignature_RequestCompound_allOf:
      properties:
        bEzsignsignatureCustomdate:
          description: Whether the Ezsignsignature has a custom date format or not.
            (Only possible when eEzsignsignatureType is "Name" or "Handwritten")
          type: boolean
        a_objEzsignsignaturecustomdate:
          description: |-
            An array of custom date blocks that will be filled at the time of signature.

            Can only be used if bEzsignsignatureCustomdate is true.

            Use an empty array if you don't want to have a date at all.
          items:
            $ref: '#/components/schemas/ezsignsignaturecustomdate-Request'
          type: array
      type: object
    ezsignfoldersignerassociation_ResponseCompound_allOf:
      properties:
        objUser:
          $ref: '#/components/schemas/ezsignfoldersignerassociation-ResponseCompound-User'
        objEzsignsigner:
          $ref: '#/components/schemas/ezsignsigner-ResponseCompound'
      type: object
    activesession_ResponseCompound_allOf:
      properties:
        a_pkiPermissionID:
          description: An array of permissions granted to the user or api key
          items:
            $ref: '#/components/schemas/Field-pkiPermissionID'
          type: array
        objUserReal:
          $ref: '#/components/schemas/activesession-ResponseCompound-User'
        objUserCloned:
          $ref: '#/components/schemas/activesession-ResponseCompound-User'
        objApikey:
          $ref: '#/components/schemas/activesession-ResponseCompound-Apikey'
        a_eModuleInternalname:
          description: |-
            An Array of Registered modules.

            These are the modules that are Licensed to be used by the User or the API Key.
          items:
            $ref: '#/components/schemas/Field-eModuleInternalname'
          type: array
      required:
      - a_Permissions
      - a_eModuleInternalname
      - a_pkiPermissionID
      - objUserReal
      type: object
  securitySchemes:
    Authorization:
      in: header
      name: Authorization
      type: apiKey
x-webhooks:
  Webhook-Ezsign-DocumentCompleted:
    post:
      summary: Webhook Document Completed
      description: This Webhook will be called when the last signature on an Ezsigndocument
        is made.
      operationId: Webhook_Ezsign_DocumentCompleted
      tags:
      - Object_Ezsigndocument
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Webhook-Ezsign-DocumentCompleted'
      responses:
        "204":
          $ref: '#/components/responses/Response-Webhook-204'
  Webhook-Ezsign-FolderCompleted:
    post:
      summary: Webhook Folder Completed
      description: This Webhook will be called when the last signature on the last
        Ezsigndocument from the folder is made.
      operationId: Webhook_Ezsign_FolderCompleted
      tags:
      - Object_Ezsignfolder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Webhook-Ezsign-FolderCompleted'
      responses:
        "204":
          $ref: '#/components/responses/Response-Webhook-204'
  Webhook-User-UserCreated:
    post:
      summary: Webhook User Created
      description: This Webhook will be called when a user is created in the system.
      operationId: Webhook_User_UserCreated
      tags:
      - Object_User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Webhook-User-UserCreated'
      responses:
        "204":
          $ref: '#/components/responses/Response-Webhook-204'
x-tagGroups:
- name: General
  tags:
  - General_Introduction
  - General_Servers
  - General_Security
  - General_Conventions
  - General_StatusCodes
  - General_ErrorCodes
  - General_Webhooks
  - General_Changelog
- name: Global
  tags:
  - Global_Customer
- name: Module
  tags:
  - Module_Authenticate
  - Module_List
  - Module_Sspr
  - Module_User
- name: Object
  tags:
  - Object_Activesession
  - Object_Apikey
  - Object_Ezsignbulksend
  - Object_Ezsigndocument
  - Object_Ezsignfolder
  - Object_Ezsignfoldersignerassociation
  - Object_Ezsignfoldertype
  - Object_Ezsignsignature
  - Object_Ezsigntemplatepackage
  - Object_Franchisebroker
  - Object_Franchiseoffice
  - Object_Franchisereferalincome
  - Object_Period
  - Object_User
- name: Report
  tags: []

