/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api;

import eZmaxAPI.ApiException;
import com.ezmax.api.model.CommonResponse;
import com.ezmax.api.model.CommonResponseError;
import java.io.File;
import com.ezmax.api.model.HeaderAcceptLanguage;
import com.ezmax.api.model.UsergroupCreateObjectV1Request;
import com.ezmax.api.model.UsergroupCreateObjectV1Response;
import com.ezmax.api.model.UsergroupEditObjectV1Request;
import com.ezmax.api.model.UsergroupEditPermissionsV1Request;
import com.ezmax.api.model.UsergroupEditPermissionsV1Response;
import com.ezmax.api.model.UsergroupEditUsergroupdelegationsV1Request;
import com.ezmax.api.model.UsergroupEditUsergroupdelegationsV1Response;
import com.ezmax.api.model.UsergroupEditUsergroupmembershipsV1Request;
import com.ezmax.api.model.UsergroupEditUsergroupmembershipsV1Response;
import com.ezmax.api.model.UsergroupGetAutocompleteV2Response;
import com.ezmax.api.model.UsergroupGetListV1Response;
import com.ezmax.api.model.UsergroupGetObjectV2Response;
import com.ezmax.api.model.UsergroupGetPermissionsV1Response;
import com.ezmax.api.model.UsergroupGetUsergroupdelegationsV1Response;
import com.ezmax.api.model.UsergroupGetUsergroupmembershipsV1Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ObjectUsergroupApi
 */
@Disabled
public class ObjectUsergroupApiTest {

    private final ObjectUsergroupApi api = new ObjectUsergroupApi();

    /**
     * Create a new Usergroup
     *
     * The endpoint allows to create one or many elements at once.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usergroupCreateObjectV1Test() throws ApiException {
        UsergroupCreateObjectV1Request usergroupCreateObjectV1Request = null;
        UsergroupCreateObjectV1Response response = api.usergroupCreateObjectV1(usergroupCreateObjectV1Request);
        // TODO: test validations
    }

    /**
     * Edit an existing Usergroup
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usergroupEditObjectV1Test() throws ApiException {
        Integer pkiUsergroupID = null;
        UsergroupEditObjectV1Request usergroupEditObjectV1Request = null;
        CommonResponse response = api.usergroupEditObjectV1(pkiUsergroupID, usergroupEditObjectV1Request);
        // TODO: test validations
    }

    /**
     * Edit multiple Permissions
     *
     * Using this endpoint, you can edit multiple Permissions at the same time.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usergroupEditPermissionsV1Test() throws ApiException {
        Integer pkiUsergroupID = null;
        UsergroupEditPermissionsV1Request usergroupEditPermissionsV1Request = null;
        UsergroupEditPermissionsV1Response response = api.usergroupEditPermissionsV1(pkiUsergroupID, usergroupEditPermissionsV1Request);
        // TODO: test validations
    }

    /**
     * Edit multiple Usergroupdelegations
     *
     * Edit multiple Usergroupdelegations
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usergroupEditUsergroupdelegationsV1Test() throws ApiException {
        Integer pkiUsergroupID = null;
        UsergroupEditUsergroupdelegationsV1Request usergroupEditUsergroupdelegationsV1Request = null;
        UsergroupEditUsergroupdelegationsV1Response response = api.usergroupEditUsergroupdelegationsV1(pkiUsergroupID, usergroupEditUsergroupdelegationsV1Request);
        // TODO: test validations
    }

    /**
     * Edit multiple Usergroupmemberships
     *
     * Using this endpoint, you can edit multiple Usergroupmemberships at the same time.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usergroupEditUsergroupmembershipsV1Test() throws ApiException {
        Integer pkiUsergroupID = null;
        UsergroupEditUsergroupmembershipsV1Request usergroupEditUsergroupmembershipsV1Request = null;
        UsergroupEditUsergroupmembershipsV1Response response = api.usergroupEditUsergroupmembershipsV1(pkiUsergroupID, usergroupEditUsergroupmembershipsV1Request);
        // TODO: test validations
    }

    /**
     * Retrieve Usergroups and IDs
     *
     * Get the list of Usergroup to be used in a dropdown or autocomplete control.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usergroupGetAutocompleteV2Test() throws ApiException {
        String sSelector = null;
        String eFilterActive = null;
        String sQuery = null;
        HeaderAcceptLanguage acceptLanguage = null;
        UsergroupGetAutocompleteV2Response response = api.usergroupGetAutocompleteV2(sSelector, eFilterActive, sQuery, acceptLanguage);
        // TODO: test validations
    }

    /**
     * Retrieve Usergroup list
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usergroupGetListV1Test() throws ApiException {
        String eOrderBy = null;
        Integer iRowMax = null;
        Integer iRowOffset = null;
        HeaderAcceptLanguage acceptLanguage = null;
        String sFilter = null;
        UsergroupGetListV1Response response = api.usergroupGetListV1(eOrderBy, iRowMax, iRowOffset, acceptLanguage, sFilter);
        // TODO: test validations
    }

    /**
     * Retrieve an existing Usergroup
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usergroupGetObjectV2Test() throws ApiException {
        Integer pkiUsergroupID = null;
        UsergroupGetObjectV2Response response = api.usergroupGetObjectV2(pkiUsergroupID);
        // TODO: test validations
    }

    /**
     * Retrieve an existing Usergroup&#39;s Permissions
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usergroupGetPermissionsV1Test() throws ApiException {
        Integer pkiUsergroupID = null;
        UsergroupGetPermissionsV1Response response = api.usergroupGetPermissionsV1(pkiUsergroupID);
        // TODO: test validations
    }

    /**
     * Retrieve an existing Usergroup&#39;s Usergroupdelegations
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usergroupGetUsergroupdelegationsV1Test() throws ApiException {
        Integer pkiUsergroupID = null;
        UsergroupGetUsergroupdelegationsV1Response response = api.usergroupGetUsergroupdelegationsV1(pkiUsergroupID);
        // TODO: test validations
    }

    /**
     * Retrieve an existing Usergroup&#39;s Usergroupmemberships
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usergroupGetUsergroupmembershipsV1Test() throws ApiException {
        Integer pkiUsergroupID = null;
        UsergroupGetUsergroupmembershipsV1Response response = api.usergroupGetUsergroupmembershipsV1(pkiUsergroupID);
        // TODO: test validations
    }

}
