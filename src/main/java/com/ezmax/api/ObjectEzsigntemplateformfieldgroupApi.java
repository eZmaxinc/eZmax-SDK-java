/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api;

import eZmaxAPI.ApiCallback;
import eZmaxAPI.ApiClient;
import eZmaxAPI.ApiException;
import eZmaxAPI.ApiResponse;
import eZmaxAPI.Configuration;
import eZmaxAPI.Pair;
import eZmaxAPI.ProgressRequestBody;
import eZmaxAPI.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.ezmax.api.model.CommonResponseError;
import com.ezmax.api.model.EzsigntemplateformfieldgroupCreateObjectV1Request;
import com.ezmax.api.model.EzsigntemplateformfieldgroupCreateObjectV1Response;
import com.ezmax.api.model.EzsigntemplateformfieldgroupDeleteObjectV1Response;
import com.ezmax.api.model.EzsigntemplateformfieldgroupEditObjectV1Request;
import com.ezmax.api.model.EzsigntemplateformfieldgroupEditObjectV1Response;
import com.ezmax.api.model.EzsigntemplateformfieldgroupGetObjectV2Response;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ObjectEzsigntemplateformfieldgroupApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ObjectEzsigntemplateformfieldgroupApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ObjectEzsigntemplateformfieldgroupApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for ezsigntemplateformfieldgroupCreateObjectV1
     * @param ezsigntemplateformfieldgroupCreateObjectV1Request  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call ezsigntemplateformfieldgroupCreateObjectV1Call(EzsigntemplateformfieldgroupCreateObjectV1Request ezsigntemplateformfieldgroupCreateObjectV1Request, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = ezsigntemplateformfieldgroupCreateObjectV1Request;

        // create path and map variables
        String localVarPath = "/1/object/ezsigntemplateformfieldgroup";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Authorization" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call ezsigntemplateformfieldgroupCreateObjectV1ValidateBeforeCall(EzsigntemplateformfieldgroupCreateObjectV1Request ezsigntemplateformfieldgroupCreateObjectV1Request, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ezsigntemplateformfieldgroupCreateObjectV1Request' is set
        if (ezsigntemplateformfieldgroupCreateObjectV1Request == null) {
            throw new ApiException("Missing the required parameter 'ezsigntemplateformfieldgroupCreateObjectV1Request' when calling ezsigntemplateformfieldgroupCreateObjectV1(Async)");
        }

        return ezsigntemplateformfieldgroupCreateObjectV1Call(ezsigntemplateformfieldgroupCreateObjectV1Request, _callback);

    }

    /**
     * Create a new Ezsigntemplateformfieldgroup
     * The endpoint allows to create one or many elements at once.
     * @param ezsigntemplateformfieldgroupCreateObjectV1Request  (required)
     * @return EzsigntemplateformfieldgroupCreateObjectV1Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public EzsigntemplateformfieldgroupCreateObjectV1Response ezsigntemplateformfieldgroupCreateObjectV1(EzsigntemplateformfieldgroupCreateObjectV1Request ezsigntemplateformfieldgroupCreateObjectV1Request) throws ApiException {
        ApiResponse<EzsigntemplateformfieldgroupCreateObjectV1Response> localVarResp = ezsigntemplateformfieldgroupCreateObjectV1WithHttpInfo(ezsigntemplateformfieldgroupCreateObjectV1Request);
        return localVarResp.getData();
    }

    /**
     * Create a new Ezsigntemplateformfieldgroup
     * The endpoint allows to create one or many elements at once.
     * @param ezsigntemplateformfieldgroupCreateObjectV1Request  (required)
     * @return ApiResponse&lt;EzsigntemplateformfieldgroupCreateObjectV1Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EzsigntemplateformfieldgroupCreateObjectV1Response> ezsigntemplateformfieldgroupCreateObjectV1WithHttpInfo(EzsigntemplateformfieldgroupCreateObjectV1Request ezsigntemplateformfieldgroupCreateObjectV1Request) throws ApiException {
        okhttp3.Call localVarCall = ezsigntemplateformfieldgroupCreateObjectV1ValidateBeforeCall(ezsigntemplateformfieldgroupCreateObjectV1Request, null);
        Type localVarReturnType = new TypeToken<EzsigntemplateformfieldgroupCreateObjectV1Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Create a new Ezsigntemplateformfieldgroup (asynchronously)
     * The endpoint allows to create one or many elements at once.
     * @param ezsigntemplateformfieldgroupCreateObjectV1Request  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call ezsigntemplateformfieldgroupCreateObjectV1Async(EzsigntemplateformfieldgroupCreateObjectV1Request ezsigntemplateformfieldgroupCreateObjectV1Request, final ApiCallback<EzsigntemplateformfieldgroupCreateObjectV1Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = ezsigntemplateformfieldgroupCreateObjectV1ValidateBeforeCall(ezsigntemplateformfieldgroupCreateObjectV1Request, _callback);
        Type localVarReturnType = new TypeToken<EzsigntemplateformfieldgroupCreateObjectV1Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for ezsigntemplateformfieldgroupDeleteObjectV1
     * @param pkiEzsigntemplateformfieldgroupID  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The request failed. The element on which you were trying to work does not exists. Look for detail about the error in the body </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call ezsigntemplateformfieldgroupDeleteObjectV1Call(Integer pkiEzsigntemplateformfieldgroupID, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/1/object/ezsigntemplateformfieldgroup/{pkiEzsigntemplateformfieldgroupID}"
            .replace("{" + "pkiEzsigntemplateformfieldgroupID" + "}", localVarApiClient.escapeString(pkiEzsigntemplateformfieldgroupID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Authorization" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call ezsigntemplateformfieldgroupDeleteObjectV1ValidateBeforeCall(Integer pkiEzsigntemplateformfieldgroupID, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pkiEzsigntemplateformfieldgroupID' is set
        if (pkiEzsigntemplateformfieldgroupID == null) {
            throw new ApiException("Missing the required parameter 'pkiEzsigntemplateformfieldgroupID' when calling ezsigntemplateformfieldgroupDeleteObjectV1(Async)");
        }

        return ezsigntemplateformfieldgroupDeleteObjectV1Call(pkiEzsigntemplateformfieldgroupID, _callback);

    }

    /**
     * Delete an existing Ezsigntemplateformfieldgroup
     * 
     * @param pkiEzsigntemplateformfieldgroupID  (required)
     * @return EzsigntemplateformfieldgroupDeleteObjectV1Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The request failed. The element on which you were trying to work does not exists. Look for detail about the error in the body </td><td>  -  </td></tr>
     </table>
     */
    public EzsigntemplateformfieldgroupDeleteObjectV1Response ezsigntemplateformfieldgroupDeleteObjectV1(Integer pkiEzsigntemplateformfieldgroupID) throws ApiException {
        ApiResponse<EzsigntemplateformfieldgroupDeleteObjectV1Response> localVarResp = ezsigntemplateformfieldgroupDeleteObjectV1WithHttpInfo(pkiEzsigntemplateformfieldgroupID);
        return localVarResp.getData();
    }

    /**
     * Delete an existing Ezsigntemplateformfieldgroup
     * 
     * @param pkiEzsigntemplateformfieldgroupID  (required)
     * @return ApiResponse&lt;EzsigntemplateformfieldgroupDeleteObjectV1Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The request failed. The element on which you were trying to work does not exists. Look for detail about the error in the body </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EzsigntemplateformfieldgroupDeleteObjectV1Response> ezsigntemplateformfieldgroupDeleteObjectV1WithHttpInfo(Integer pkiEzsigntemplateformfieldgroupID) throws ApiException {
        okhttp3.Call localVarCall = ezsigntemplateformfieldgroupDeleteObjectV1ValidateBeforeCall(pkiEzsigntemplateformfieldgroupID, null);
        Type localVarReturnType = new TypeToken<EzsigntemplateformfieldgroupDeleteObjectV1Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Delete an existing Ezsigntemplateformfieldgroup (asynchronously)
     * 
     * @param pkiEzsigntemplateformfieldgroupID  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The request failed. The element on which you were trying to work does not exists. Look for detail about the error in the body </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call ezsigntemplateformfieldgroupDeleteObjectV1Async(Integer pkiEzsigntemplateformfieldgroupID, final ApiCallback<EzsigntemplateformfieldgroupDeleteObjectV1Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = ezsigntemplateformfieldgroupDeleteObjectV1ValidateBeforeCall(pkiEzsigntemplateformfieldgroupID, _callback);
        Type localVarReturnType = new TypeToken<EzsigntemplateformfieldgroupDeleteObjectV1Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for ezsigntemplateformfieldgroupEditObjectV1
     * @param pkiEzsigntemplateformfieldgroupID  (required)
     * @param ezsigntemplateformfieldgroupEditObjectV1Request  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The request failed. The element on which you were trying to work does not exists. Look for detail about the error in the body </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> The request was syntactically valid but failed because of an interdependance condition. Look for detail about the error in the body </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call ezsigntemplateformfieldgroupEditObjectV1Call(Integer pkiEzsigntemplateformfieldgroupID, EzsigntemplateformfieldgroupEditObjectV1Request ezsigntemplateformfieldgroupEditObjectV1Request, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = ezsigntemplateformfieldgroupEditObjectV1Request;

        // create path and map variables
        String localVarPath = "/1/object/ezsigntemplateformfieldgroup/{pkiEzsigntemplateformfieldgroupID}"
            .replace("{" + "pkiEzsigntemplateformfieldgroupID" + "}", localVarApiClient.escapeString(pkiEzsigntemplateformfieldgroupID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Authorization" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call ezsigntemplateformfieldgroupEditObjectV1ValidateBeforeCall(Integer pkiEzsigntemplateformfieldgroupID, EzsigntemplateformfieldgroupEditObjectV1Request ezsigntemplateformfieldgroupEditObjectV1Request, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pkiEzsigntemplateformfieldgroupID' is set
        if (pkiEzsigntemplateformfieldgroupID == null) {
            throw new ApiException("Missing the required parameter 'pkiEzsigntemplateformfieldgroupID' when calling ezsigntemplateformfieldgroupEditObjectV1(Async)");
        }

        // verify the required parameter 'ezsigntemplateformfieldgroupEditObjectV1Request' is set
        if (ezsigntemplateformfieldgroupEditObjectV1Request == null) {
            throw new ApiException("Missing the required parameter 'ezsigntemplateformfieldgroupEditObjectV1Request' when calling ezsigntemplateformfieldgroupEditObjectV1(Async)");
        }

        return ezsigntemplateformfieldgroupEditObjectV1Call(pkiEzsigntemplateformfieldgroupID, ezsigntemplateformfieldgroupEditObjectV1Request, _callback);

    }

    /**
     * Edit an existing Ezsigntemplateformfieldgroup
     * 
     * @param pkiEzsigntemplateformfieldgroupID  (required)
     * @param ezsigntemplateformfieldgroupEditObjectV1Request  (required)
     * @return EzsigntemplateformfieldgroupEditObjectV1Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The request failed. The element on which you were trying to work does not exists. Look for detail about the error in the body </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> The request was syntactically valid but failed because of an interdependance condition. Look for detail about the error in the body </td><td>  -  </td></tr>
     </table>
     */
    public EzsigntemplateformfieldgroupEditObjectV1Response ezsigntemplateformfieldgroupEditObjectV1(Integer pkiEzsigntemplateformfieldgroupID, EzsigntemplateformfieldgroupEditObjectV1Request ezsigntemplateformfieldgroupEditObjectV1Request) throws ApiException {
        ApiResponse<EzsigntemplateformfieldgroupEditObjectV1Response> localVarResp = ezsigntemplateformfieldgroupEditObjectV1WithHttpInfo(pkiEzsigntemplateformfieldgroupID, ezsigntemplateformfieldgroupEditObjectV1Request);
        return localVarResp.getData();
    }

    /**
     * Edit an existing Ezsigntemplateformfieldgroup
     * 
     * @param pkiEzsigntemplateformfieldgroupID  (required)
     * @param ezsigntemplateformfieldgroupEditObjectV1Request  (required)
     * @return ApiResponse&lt;EzsigntemplateformfieldgroupEditObjectV1Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The request failed. The element on which you were trying to work does not exists. Look for detail about the error in the body </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> The request was syntactically valid but failed because of an interdependance condition. Look for detail about the error in the body </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EzsigntemplateformfieldgroupEditObjectV1Response> ezsigntemplateformfieldgroupEditObjectV1WithHttpInfo(Integer pkiEzsigntemplateformfieldgroupID, EzsigntemplateformfieldgroupEditObjectV1Request ezsigntemplateformfieldgroupEditObjectV1Request) throws ApiException {
        okhttp3.Call localVarCall = ezsigntemplateformfieldgroupEditObjectV1ValidateBeforeCall(pkiEzsigntemplateformfieldgroupID, ezsigntemplateformfieldgroupEditObjectV1Request, null);
        Type localVarReturnType = new TypeToken<EzsigntemplateformfieldgroupEditObjectV1Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Edit an existing Ezsigntemplateformfieldgroup (asynchronously)
     * 
     * @param pkiEzsigntemplateformfieldgroupID  (required)
     * @param ezsigntemplateformfieldgroupEditObjectV1Request  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The request failed. The element on which you were trying to work does not exists. Look for detail about the error in the body </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> The request was syntactically valid but failed because of an interdependance condition. Look for detail about the error in the body </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call ezsigntemplateformfieldgroupEditObjectV1Async(Integer pkiEzsigntemplateformfieldgroupID, EzsigntemplateformfieldgroupEditObjectV1Request ezsigntemplateformfieldgroupEditObjectV1Request, final ApiCallback<EzsigntemplateformfieldgroupEditObjectV1Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = ezsigntemplateformfieldgroupEditObjectV1ValidateBeforeCall(pkiEzsigntemplateformfieldgroupID, ezsigntemplateformfieldgroupEditObjectV1Request, _callback);
        Type localVarReturnType = new TypeToken<EzsigntemplateformfieldgroupEditObjectV1Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for ezsigntemplateformfieldgroupGetObjectV2
     * @param pkiEzsigntemplateformfieldgroupID  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The request failed. The element on which you were trying to work does not exists. Look for detail about the error in the body </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call ezsigntemplateformfieldgroupGetObjectV2Call(Integer pkiEzsigntemplateformfieldgroupID, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/2/object/ezsigntemplateformfieldgroup/{pkiEzsigntemplateformfieldgroupID}"
            .replace("{" + "pkiEzsigntemplateformfieldgroupID" + "}", localVarApiClient.escapeString(pkiEzsigntemplateformfieldgroupID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Authorization" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call ezsigntemplateformfieldgroupGetObjectV2ValidateBeforeCall(Integer pkiEzsigntemplateformfieldgroupID, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pkiEzsigntemplateformfieldgroupID' is set
        if (pkiEzsigntemplateformfieldgroupID == null) {
            throw new ApiException("Missing the required parameter 'pkiEzsigntemplateformfieldgroupID' when calling ezsigntemplateformfieldgroupGetObjectV2(Async)");
        }

        return ezsigntemplateformfieldgroupGetObjectV2Call(pkiEzsigntemplateformfieldgroupID, _callback);

    }

    /**
     * Retrieve an existing Ezsigntemplateformfieldgroup
     * 
     * @param pkiEzsigntemplateformfieldgroupID  (required)
     * @return EzsigntemplateformfieldgroupGetObjectV2Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The request failed. The element on which you were trying to work does not exists. Look for detail about the error in the body </td><td>  -  </td></tr>
     </table>
     */
    public EzsigntemplateformfieldgroupGetObjectV2Response ezsigntemplateformfieldgroupGetObjectV2(Integer pkiEzsigntemplateformfieldgroupID) throws ApiException {
        ApiResponse<EzsigntemplateformfieldgroupGetObjectV2Response> localVarResp = ezsigntemplateformfieldgroupGetObjectV2WithHttpInfo(pkiEzsigntemplateformfieldgroupID);
        return localVarResp.getData();
    }

    /**
     * Retrieve an existing Ezsigntemplateformfieldgroup
     * 
     * @param pkiEzsigntemplateformfieldgroupID  (required)
     * @return ApiResponse&lt;EzsigntemplateformfieldgroupGetObjectV2Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The request failed. The element on which you were trying to work does not exists. Look for detail about the error in the body </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EzsigntemplateformfieldgroupGetObjectV2Response> ezsigntemplateformfieldgroupGetObjectV2WithHttpInfo(Integer pkiEzsigntemplateformfieldgroupID) throws ApiException {
        okhttp3.Call localVarCall = ezsigntemplateformfieldgroupGetObjectV2ValidateBeforeCall(pkiEzsigntemplateformfieldgroupID, null);
        Type localVarReturnType = new TypeToken<EzsigntemplateformfieldgroupGetObjectV2Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Retrieve an existing Ezsigntemplateformfieldgroup (asynchronously)
     * 
     * @param pkiEzsigntemplateformfieldgroupID  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The request failed. The element on which you were trying to work does not exists. Look for detail about the error in the body </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call ezsigntemplateformfieldgroupGetObjectV2Async(Integer pkiEzsigntemplateformfieldgroupID, final ApiCallback<EzsigntemplateformfieldgroupGetObjectV2Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = ezsigntemplateformfieldgroupGetObjectV2ValidateBeforeCall(pkiEzsigntemplateformfieldgroupID, _callback);
        Type localVarReturnType = new TypeToken<EzsigntemplateformfieldgroupGetObjectV2Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
