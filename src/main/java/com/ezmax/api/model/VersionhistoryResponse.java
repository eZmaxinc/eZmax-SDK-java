/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.ezmax.api.model.FieldEVersionhistoryType;
import com.ezmax.api.model.FieldEVersionhistoryUsertype;
import com.ezmax.api.model.MultilingualVersionhistoryDetail;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * A Versionhistory Object
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-10-02T23:25:33.309251947Z[Etc/UTC]")
public class VersionhistoryResponse {
  public static final String SERIALIZED_NAME_PKI_VERSIONHISTORY_I_D = "pkiVersionhistoryID";
  @SerializedName(SERIALIZED_NAME_PKI_VERSIONHISTORY_I_D)
  private Integer pkiVersionhistoryID;

  public static final String SERIALIZED_NAME_FKI_MODULE_I_D = "fkiModuleID";
  @SerializedName(SERIALIZED_NAME_FKI_MODULE_I_D)
  private Integer fkiModuleID;

  public static final String SERIALIZED_NAME_FKI_MODULESECTION_I_D = "fkiModulesectionID";
  @SerializedName(SERIALIZED_NAME_FKI_MODULESECTION_I_D)
  private Integer fkiModulesectionID;

  public static final String SERIALIZED_NAME_S_MODULE_NAME_X = "sModuleNameX";
  @SerializedName(SERIALIZED_NAME_S_MODULE_NAME_X)
  private String sModuleNameX;

  public static final String SERIALIZED_NAME_S_MODULESECTION_NAME_X = "sModulesectionNameX";
  @SerializedName(SERIALIZED_NAME_S_MODULESECTION_NAME_X)
  private String sModulesectionNameX;

  public static final String SERIALIZED_NAME_E_VERSIONHISTORY_USERTYPE = "eVersionhistoryUsertype";
  @SerializedName(SERIALIZED_NAME_E_VERSIONHISTORY_USERTYPE)
  private FieldEVersionhistoryUsertype eVersionhistoryUsertype;

  public static final String SERIALIZED_NAME_OBJ_VERSIONHISTORY_DETAIL = "objVersionhistoryDetail";
  @SerializedName(SERIALIZED_NAME_OBJ_VERSIONHISTORY_DETAIL)
  private MultilingualVersionhistoryDetail objVersionhistoryDetail;

  public static final String SERIALIZED_NAME_DT_VERSIONHISTORY_DATE = "dtVersionhistoryDate";
  @SerializedName(SERIALIZED_NAME_DT_VERSIONHISTORY_DATE)
  private String dtVersionhistoryDate;

  public static final String SERIALIZED_NAME_DT_VERSIONHISTORY_DATEEND = "dtVersionhistoryDateend";
  @SerializedName(SERIALIZED_NAME_DT_VERSIONHISTORY_DATEEND)
  private String dtVersionhistoryDateend;

  public static final String SERIALIZED_NAME_E_VERSIONHISTORY_TYPE = "eVersionhistoryType";
  @SerializedName(SERIALIZED_NAME_E_VERSIONHISTORY_TYPE)
  private FieldEVersionhistoryType eVersionhistoryType;

  public static final String SERIALIZED_NAME_B_VERSIONHISTORY_DRAFT = "bVersionhistoryDraft";
  @SerializedName(SERIALIZED_NAME_B_VERSIONHISTORY_DRAFT)
  private Boolean bVersionhistoryDraft;

  public VersionhistoryResponse() {
  }

  public VersionhistoryResponse pkiVersionhistoryID(Integer pkiVersionhistoryID) {
    
    this.pkiVersionhistoryID = pkiVersionhistoryID;
    return this;
  }

   /**
   * The unique ID of the Versionhistory
   * minimum: 0
   * @return pkiVersionhistoryID
  **/
  @javax.annotation.Nonnull
  public Integer getPkiVersionhistoryID() {
    return pkiVersionhistoryID;
  }


  public void setPkiVersionhistoryID(Integer pkiVersionhistoryID) {
    this.pkiVersionhistoryID = pkiVersionhistoryID;
  }


  public VersionhistoryResponse fkiModuleID(Integer fkiModuleID) {
    
    this.fkiModuleID = fkiModuleID;
    return this;
  }

   /**
   * The unique ID of the Module
   * minimum: 0
   * @return fkiModuleID
  **/
  @javax.annotation.Nullable
  public Integer getFkiModuleID() {
    return fkiModuleID;
  }


  public void setFkiModuleID(Integer fkiModuleID) {
    this.fkiModuleID = fkiModuleID;
  }


  public VersionhistoryResponse fkiModulesectionID(Integer fkiModulesectionID) {
    
    this.fkiModulesectionID = fkiModulesectionID;
    return this;
  }

   /**
   * The unique ID of the Modulesection
   * minimum: 0
   * @return fkiModulesectionID
  **/
  @javax.annotation.Nullable
  public Integer getFkiModulesectionID() {
    return fkiModulesectionID;
  }


  public void setFkiModulesectionID(Integer fkiModulesectionID) {
    this.fkiModulesectionID = fkiModulesectionID;
  }


  public VersionhistoryResponse sModuleNameX(String sModuleNameX) {
    
    this.sModuleNameX = sModuleNameX;
    return this;
  }

   /**
   * The Name of the Module in the language of the requester
   * @return sModuleNameX
  **/
  @javax.annotation.Nullable
  public String getsModuleNameX() {
    return sModuleNameX;
  }


  public void setsModuleNameX(String sModuleNameX) {
    this.sModuleNameX = sModuleNameX;
  }


  public VersionhistoryResponse sModulesectionNameX(String sModulesectionNameX) {
    
    this.sModulesectionNameX = sModulesectionNameX;
    return this;
  }

   /**
   * The Name of the Modulesection in the language of the requester
   * @return sModulesectionNameX
  **/
  @javax.annotation.Nullable
  public String getsModulesectionNameX() {
    return sModulesectionNameX;
  }


  public void setsModulesectionNameX(String sModulesectionNameX) {
    this.sModulesectionNameX = sModulesectionNameX;
  }


  public VersionhistoryResponse eVersionhistoryUsertype(FieldEVersionhistoryUsertype eVersionhistoryUsertype) {
    
    this.eVersionhistoryUsertype = eVersionhistoryUsertype;
    return this;
  }

   /**
   * Get eVersionhistoryUsertype
   * @return eVersionhistoryUsertype
  **/
  @javax.annotation.Nullable
  public FieldEVersionhistoryUsertype geteVersionhistoryUsertype() {
    return eVersionhistoryUsertype;
  }


  public void seteVersionhistoryUsertype(FieldEVersionhistoryUsertype eVersionhistoryUsertype) {
    this.eVersionhistoryUsertype = eVersionhistoryUsertype;
  }


  public VersionhistoryResponse objVersionhistoryDetail(MultilingualVersionhistoryDetail objVersionhistoryDetail) {
    
    this.objVersionhistoryDetail = objVersionhistoryDetail;
    return this;
  }

   /**
   * Get objVersionhistoryDetail
   * @return objVersionhistoryDetail
  **/
  @javax.annotation.Nonnull
  public MultilingualVersionhistoryDetail getObjVersionhistoryDetail() {
    return objVersionhistoryDetail;
  }


  public void setObjVersionhistoryDetail(MultilingualVersionhistoryDetail objVersionhistoryDetail) {
    this.objVersionhistoryDetail = objVersionhistoryDetail;
  }


  public VersionhistoryResponse dtVersionhistoryDate(String dtVersionhistoryDate) {
    
    this.dtVersionhistoryDate = dtVersionhistoryDate;
    return this;
  }

   /**
   * The date  at which the Versionhistory was published or should be published
   * @return dtVersionhistoryDate
  **/
  @javax.annotation.Nonnull
  public String getDtVersionhistoryDate() {
    return dtVersionhistoryDate;
  }


  public void setDtVersionhistoryDate(String dtVersionhistoryDate) {
    this.dtVersionhistoryDate = dtVersionhistoryDate;
  }


  public VersionhistoryResponse dtVersionhistoryDateend(String dtVersionhistoryDateend) {
    
    this.dtVersionhistoryDateend = dtVersionhistoryDateend;
    return this;
  }

   /**
   * The date  at which the Versionhistory will no longer be visible
   * @return dtVersionhistoryDateend
  **/
  @javax.annotation.Nullable
  public String getDtVersionhistoryDateend() {
    return dtVersionhistoryDateend;
  }


  public void setDtVersionhistoryDateend(String dtVersionhistoryDateend) {
    this.dtVersionhistoryDateend = dtVersionhistoryDateend;
  }


  public VersionhistoryResponse eVersionhistoryType(FieldEVersionhistoryType eVersionhistoryType) {
    
    this.eVersionhistoryType = eVersionhistoryType;
    return this;
  }

   /**
   * Get eVersionhistoryType
   * @return eVersionhistoryType
  **/
  @javax.annotation.Nonnull
  public FieldEVersionhistoryType geteVersionhistoryType() {
    return eVersionhistoryType;
  }


  public void seteVersionhistoryType(FieldEVersionhistoryType eVersionhistoryType) {
    this.eVersionhistoryType = eVersionhistoryType;
  }


  public VersionhistoryResponse bVersionhistoryDraft(Boolean bVersionhistoryDraft) {
    
    this.bVersionhistoryDraft = bVersionhistoryDraft;
    return this;
  }

   /**
   * Whether the Versionhistory is published or still a draft
   * @return bVersionhistoryDraft
  **/
  @javax.annotation.Nonnull
  public Boolean getbVersionhistoryDraft() {
    return bVersionhistoryDraft;
  }


  public void setbVersionhistoryDraft(Boolean bVersionhistoryDraft) {
    this.bVersionhistoryDraft = bVersionhistoryDraft;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VersionhistoryResponse versionhistoryResponse = (VersionhistoryResponse) o;
    return Objects.equals(this.pkiVersionhistoryID, versionhistoryResponse.pkiVersionhistoryID) &&
        Objects.equals(this.fkiModuleID, versionhistoryResponse.fkiModuleID) &&
        Objects.equals(this.fkiModulesectionID, versionhistoryResponse.fkiModulesectionID) &&
        Objects.equals(this.sModuleNameX, versionhistoryResponse.sModuleNameX) &&
        Objects.equals(this.sModulesectionNameX, versionhistoryResponse.sModulesectionNameX) &&
        Objects.equals(this.eVersionhistoryUsertype, versionhistoryResponse.eVersionhistoryUsertype) &&
        Objects.equals(this.objVersionhistoryDetail, versionhistoryResponse.objVersionhistoryDetail) &&
        Objects.equals(this.dtVersionhistoryDate, versionhistoryResponse.dtVersionhistoryDate) &&
        Objects.equals(this.dtVersionhistoryDateend, versionhistoryResponse.dtVersionhistoryDateend) &&
        Objects.equals(this.eVersionhistoryType, versionhistoryResponse.eVersionhistoryType) &&
        Objects.equals(this.bVersionhistoryDraft, versionhistoryResponse.bVersionhistoryDraft);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pkiVersionhistoryID, fkiModuleID, fkiModulesectionID, sModuleNameX, sModulesectionNameX, eVersionhistoryUsertype, objVersionhistoryDetail, dtVersionhistoryDate, dtVersionhistoryDateend, eVersionhistoryType, bVersionhistoryDraft);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VersionhistoryResponse {\n");
    sb.append("    pkiVersionhistoryID: ").append(toIndentedString(pkiVersionhistoryID)).append("\n");
    sb.append("    fkiModuleID: ").append(toIndentedString(fkiModuleID)).append("\n");
    sb.append("    fkiModulesectionID: ").append(toIndentedString(fkiModulesectionID)).append("\n");
    sb.append("    sModuleNameX: ").append(toIndentedString(sModuleNameX)).append("\n");
    sb.append("    sModulesectionNameX: ").append(toIndentedString(sModulesectionNameX)).append("\n");
    sb.append("    eVersionhistoryUsertype: ").append(toIndentedString(eVersionhistoryUsertype)).append("\n");
    sb.append("    objVersionhistoryDetail: ").append(toIndentedString(objVersionhistoryDetail)).append("\n");
    sb.append("    dtVersionhistoryDate: ").append(toIndentedString(dtVersionhistoryDate)).append("\n");
    sb.append("    dtVersionhistoryDateend: ").append(toIndentedString(dtVersionhistoryDateend)).append("\n");
    sb.append("    eVersionhistoryType: ").append(toIndentedString(eVersionhistoryType)).append("\n");
    sb.append("    bVersionhistoryDraft: ").append(toIndentedString(bVersionhistoryDraft)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pkiVersionhistoryID");
    openapiFields.add("fkiModuleID");
    openapiFields.add("fkiModulesectionID");
    openapiFields.add("sModuleNameX");
    openapiFields.add("sModulesectionNameX");
    openapiFields.add("eVersionhistoryUsertype");
    openapiFields.add("objVersionhistoryDetail");
    openapiFields.add("dtVersionhistoryDate");
    openapiFields.add("dtVersionhistoryDateend");
    openapiFields.add("eVersionhistoryType");
    openapiFields.add("bVersionhistoryDraft");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("pkiVersionhistoryID");
    openapiRequiredFields.add("objVersionhistoryDetail");
    openapiRequiredFields.add("dtVersionhistoryDate");
    openapiRequiredFields.add("eVersionhistoryType");
    openapiRequiredFields.add("bVersionhistoryDraft");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to VersionhistoryResponse
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!VersionhistoryResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in VersionhistoryResponse is not found in the empty JSON string", VersionhistoryResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!VersionhistoryResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `VersionhistoryResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : VersionhistoryResponse.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("sModuleNameX") != null && !jsonObj.get("sModuleNameX").isJsonNull()) && !jsonObj.get("sModuleNameX").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sModuleNameX` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sModuleNameX").toString()));
      }
      if ((jsonObj.get("sModulesectionNameX") != null && !jsonObj.get("sModulesectionNameX").isJsonNull()) && !jsonObj.get("sModulesectionNameX").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sModulesectionNameX` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sModulesectionNameX").toString()));
      }
      // validate the required field `objVersionhistoryDetail`
      MultilingualVersionhistoryDetail.validateJsonElement(jsonObj.get("objVersionhistoryDetail"));
      if (!jsonObj.get("dtVersionhistoryDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dtVersionhistoryDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dtVersionhistoryDate").toString()));
      }
      if ((jsonObj.get("dtVersionhistoryDateend") != null && !jsonObj.get("dtVersionhistoryDateend").isJsonNull()) && !jsonObj.get("dtVersionhistoryDateend").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dtVersionhistoryDateend` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dtVersionhistoryDateend").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VersionhistoryResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VersionhistoryResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VersionhistoryResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VersionhistoryResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<VersionhistoryResponse>() {
           @Override
           public void write(JsonWriter out, VersionhistoryResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public VersionhistoryResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of VersionhistoryResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of VersionhistoryResponse
  * @throws IOException if the JSON string is invalid with respect to VersionhistoryResponse
  */
  public static VersionhistoryResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VersionhistoryResponse.class);
  }

 /**
  * Convert an instance of VersionhistoryResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

