/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.ezmax.api.model.CreditcarddetailResponseCompound;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * A Creditcardclient Object
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-05T21:55:04.724341195Z[Etc/UTC]", comments = "Generator version: 7.11.0")
public class CreditcardclientResponse {
  public static final String SERIALIZED_NAME_PKI_CREDITCARDCLIENT_I_D = "pkiCreditcardclientID";
  @SerializedName(SERIALIZED_NAME_PKI_CREDITCARDCLIENT_I_D)
  @javax.annotation.Nonnull
  private Integer pkiCreditcardclientID;

  public static final String SERIALIZED_NAME_FKI_CREDITCARDDETAIL_I_D = "fkiCreditcarddetailID";
  @SerializedName(SERIALIZED_NAME_FKI_CREDITCARDDETAIL_I_D)
  @javax.annotation.Nonnull
  private Integer fkiCreditcarddetailID;

  public static final String SERIALIZED_NAME_B_CREDITCARDCLIENTRELATION_ISDEFAULT = "bCreditcardclientrelationIsdefault";
  @SerializedName(SERIALIZED_NAME_B_CREDITCARDCLIENTRELATION_ISDEFAULT)
  @javax.annotation.Nonnull
  private Boolean bCreditcardclientrelationIsdefault;

  public static final String SERIALIZED_NAME_S_CREDITCARDCLIENT_DESCRIPTION = "sCreditcardclientDescription";
  @SerializedName(SERIALIZED_NAME_S_CREDITCARDCLIENT_DESCRIPTION)
  @javax.annotation.Nonnull
  private String sCreditcardclientDescription;

  public static final String SERIALIZED_NAME_B_CREDITCARDCLIENT_ALLOWEDCOMPANYPAYMENT = "bCreditcardclientAllowedcompanypayment";
  @SerializedName(SERIALIZED_NAME_B_CREDITCARDCLIENT_ALLOWEDCOMPANYPAYMENT)
  @javax.annotation.Nonnull
  private Boolean bCreditcardclientAllowedcompanypayment;

  public static final String SERIALIZED_NAME_B_CREDITCARDCLIENT_ALLOWEDTRANQUILLIT = "bCreditcardclientAllowedtranquillit";
  @SerializedName(SERIALIZED_NAME_B_CREDITCARDCLIENT_ALLOWEDTRANQUILLIT)
  @javax.annotation.Nonnull
  private Boolean bCreditcardclientAllowedtranquillit;

  public static final String SERIALIZED_NAME_OBJ_CREDITCARDDETAIL = "objCreditcarddetail";
  @SerializedName(SERIALIZED_NAME_OBJ_CREDITCARDDETAIL)
  @javax.annotation.Nonnull
  private CreditcarddetailResponseCompound objCreditcarddetail;

  public CreditcardclientResponse() {
  }

  public CreditcardclientResponse pkiCreditcardclientID(@javax.annotation.Nonnull Integer pkiCreditcardclientID) {
    this.pkiCreditcardclientID = pkiCreditcardclientID;
    return this;
  }

  /**
   * The unique ID of the Creditcardclient
   * minimum: 0
   * maximum: 65535
   * @return pkiCreditcardclientID
   */
  @javax.annotation.Nonnull
  public Integer getPkiCreditcardclientID() {
    return pkiCreditcardclientID;
  }

  public void setPkiCreditcardclientID(@javax.annotation.Nonnull Integer pkiCreditcardclientID) {
    this.pkiCreditcardclientID = pkiCreditcardclientID;
  }


  public CreditcardclientResponse fkiCreditcarddetailID(@javax.annotation.Nonnull Integer fkiCreditcarddetailID) {
    this.fkiCreditcarddetailID = fkiCreditcarddetailID;
    return this;
  }

  /**
   * The unique ID of the Creditcarddetail
   * minimum: 0
   * maximum: 65535
   * @return fkiCreditcarddetailID
   */
  @javax.annotation.Nonnull
  public Integer getFkiCreditcarddetailID() {
    return fkiCreditcarddetailID;
  }

  public void setFkiCreditcarddetailID(@javax.annotation.Nonnull Integer fkiCreditcarddetailID) {
    this.fkiCreditcarddetailID = fkiCreditcarddetailID;
  }


  public CreditcardclientResponse bCreditcardclientrelationIsdefault(@javax.annotation.Nonnull Boolean bCreditcardclientrelationIsdefault) {
    this.bCreditcardclientrelationIsdefault = bCreditcardclientrelationIsdefault;
    return this;
  }

  /**
   * Whether if it&#39;s the creditcardclient is the default one
   * @return bCreditcardclientrelationIsdefault
   */
  @javax.annotation.Nonnull
  public Boolean getbCreditcardclientrelationIsdefault() {
    return bCreditcardclientrelationIsdefault;
  }

  public void setbCreditcardclientrelationIsdefault(@javax.annotation.Nonnull Boolean bCreditcardclientrelationIsdefault) {
    this.bCreditcardclientrelationIsdefault = bCreditcardclientrelationIsdefault;
  }


  public CreditcardclientResponse sCreditcardclientDescription(@javax.annotation.Nonnull String sCreditcardclientDescription) {
    this.sCreditcardclientDescription = sCreditcardclientDescription;
    return this;
  }

  /**
   * The description of the Creditcardclient
   * @return sCreditcardclientDescription
   */
  @javax.annotation.Nonnull
  public String getsCreditcardclientDescription() {
    return sCreditcardclientDescription;
  }

  public void setsCreditcardclientDescription(@javax.annotation.Nonnull String sCreditcardclientDescription) {
    this.sCreditcardclientDescription = sCreditcardclientDescription;
  }


  public CreditcardclientResponse bCreditcardclientAllowedcompanypayment(@javax.annotation.Nonnull Boolean bCreditcardclientAllowedcompanypayment) {
    this.bCreditcardclientAllowedcompanypayment = bCreditcardclientAllowedcompanypayment;
    return this;
  }

  /**
   * Whether if it&#39;s an allowedagencypayment
   * @return bCreditcardclientAllowedcompanypayment
   */
  @javax.annotation.Nonnull
  public Boolean getbCreditcardclientAllowedcompanypayment() {
    return bCreditcardclientAllowedcompanypayment;
  }

  public void setbCreditcardclientAllowedcompanypayment(@javax.annotation.Nonnull Boolean bCreditcardclientAllowedcompanypayment) {
    this.bCreditcardclientAllowedcompanypayment = bCreditcardclientAllowedcompanypayment;
  }


  public CreditcardclientResponse bCreditcardclientAllowedtranquillit(@javax.annotation.Nonnull Boolean bCreditcardclientAllowedtranquillit) {
    this.bCreditcardclientAllowedtranquillit = bCreditcardclientAllowedtranquillit;
    return this;
  }

  /**
   * Whether if it&#39;s an allowedtranquillit
   * @return bCreditcardclientAllowedtranquillit
   */
  @javax.annotation.Nonnull
  public Boolean getbCreditcardclientAllowedtranquillit() {
    return bCreditcardclientAllowedtranquillit;
  }

  public void setbCreditcardclientAllowedtranquillit(@javax.annotation.Nonnull Boolean bCreditcardclientAllowedtranquillit) {
    this.bCreditcardclientAllowedtranquillit = bCreditcardclientAllowedtranquillit;
  }


  public CreditcardclientResponse objCreditcarddetail(@javax.annotation.Nonnull CreditcarddetailResponseCompound objCreditcarddetail) {
    this.objCreditcarddetail = objCreditcarddetail;
    return this;
  }

  /**
   * Get objCreditcarddetail
   * @return objCreditcarddetail
   */
  @javax.annotation.Nonnull
  public CreditcarddetailResponseCompound getObjCreditcarddetail() {
    return objCreditcarddetail;
  }

  public void setObjCreditcarddetail(@javax.annotation.Nonnull CreditcarddetailResponseCompound objCreditcarddetail) {
    this.objCreditcarddetail = objCreditcarddetail;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreditcardclientResponse creditcardclientResponse = (CreditcardclientResponse) o;
    return Objects.equals(this.pkiCreditcardclientID, creditcardclientResponse.pkiCreditcardclientID) &&
        Objects.equals(this.fkiCreditcarddetailID, creditcardclientResponse.fkiCreditcarddetailID) &&
        Objects.equals(this.bCreditcardclientrelationIsdefault, creditcardclientResponse.bCreditcardclientrelationIsdefault) &&
        Objects.equals(this.sCreditcardclientDescription, creditcardclientResponse.sCreditcardclientDescription) &&
        Objects.equals(this.bCreditcardclientAllowedcompanypayment, creditcardclientResponse.bCreditcardclientAllowedcompanypayment) &&
        Objects.equals(this.bCreditcardclientAllowedtranquillit, creditcardclientResponse.bCreditcardclientAllowedtranquillit) &&
        Objects.equals(this.objCreditcarddetail, creditcardclientResponse.objCreditcarddetail);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pkiCreditcardclientID, fkiCreditcarddetailID, bCreditcardclientrelationIsdefault, sCreditcardclientDescription, bCreditcardclientAllowedcompanypayment, bCreditcardclientAllowedtranquillit, objCreditcarddetail);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreditcardclientResponse {\n");
    sb.append("    pkiCreditcardclientID: ").append(toIndentedString(pkiCreditcardclientID)).append("\n");
    sb.append("    fkiCreditcarddetailID: ").append(toIndentedString(fkiCreditcarddetailID)).append("\n");
    sb.append("    bCreditcardclientrelationIsdefault: ").append(toIndentedString(bCreditcardclientrelationIsdefault)).append("\n");
    sb.append("    sCreditcardclientDescription: ").append(toIndentedString(sCreditcardclientDescription)).append("\n");
    sb.append("    bCreditcardclientAllowedcompanypayment: ").append(toIndentedString(bCreditcardclientAllowedcompanypayment)).append("\n");
    sb.append("    bCreditcardclientAllowedtranquillit: ").append(toIndentedString(bCreditcardclientAllowedtranquillit)).append("\n");
    sb.append("    objCreditcarddetail: ").append(toIndentedString(objCreditcarddetail)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pkiCreditcardclientID");
    openapiFields.add("fkiCreditcarddetailID");
    openapiFields.add("bCreditcardclientrelationIsdefault");
    openapiFields.add("sCreditcardclientDescription");
    openapiFields.add("bCreditcardclientAllowedcompanypayment");
    openapiFields.add("bCreditcardclientAllowedtranquillit");
    openapiFields.add("objCreditcarddetail");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("pkiCreditcardclientID");
    openapiRequiredFields.add("fkiCreditcarddetailID");
    openapiRequiredFields.add("bCreditcardclientrelationIsdefault");
    openapiRequiredFields.add("sCreditcardclientDescription");
    openapiRequiredFields.add("bCreditcardclientAllowedcompanypayment");
    openapiRequiredFields.add("bCreditcardclientAllowedtranquillit");
    openapiRequiredFields.add("objCreditcarddetail");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreditcardclientResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreditcardclientResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreditcardclientResponse is not found in the empty JSON string", CreditcardclientResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreditcardclientResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreditcardclientResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreditcardclientResponse.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("sCreditcardclientDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sCreditcardclientDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sCreditcardclientDescription").toString()));
      }
      // validate the required field `objCreditcarddetail`
      CreditcarddetailResponseCompound.validateJsonElement(jsonObj.get("objCreditcarddetail"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreditcardclientResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreditcardclientResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreditcardclientResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreditcardclientResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<CreditcardclientResponse>() {
           @Override
           public void write(JsonWriter out, CreditcardclientResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreditcardclientResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreditcardclientResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreditcardclientResponse
   * @throws IOException if the JSON string is invalid with respect to CreditcardclientResponse
   */
  public static CreditcardclientResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreditcardclientResponse.class);
  }

  /**
   * Convert an instance of CreditcardclientResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

