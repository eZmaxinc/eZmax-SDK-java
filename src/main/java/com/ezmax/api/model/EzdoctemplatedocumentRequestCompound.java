/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.ezmax.api.model.FieldEEzdoctemplatedocumentPrivacylevel;
import com.ezmax.api.model.MultilingualEzdoctemplatedocumentName;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * A Ezdoctemplatedocument Object and children
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-04T21:44:04.165556308Z[Etc/UTC]", comments = "Generator version: 7.11.0")
public class EzdoctemplatedocumentRequestCompound {
  public static final String SERIALIZED_NAME_PKI_EZDOCTEMPLATEDOCUMENT_I_D = "pkiEzdoctemplatedocumentID";
  @SerializedName(SERIALIZED_NAME_PKI_EZDOCTEMPLATEDOCUMENT_I_D)
  @javax.annotation.Nullable
  private Integer pkiEzdoctemplatedocumentID;

  public static final String SERIALIZED_NAME_FKI_LANGUAGE_I_D = "fkiLanguageID";
  @SerializedName(SERIALIZED_NAME_FKI_LANGUAGE_I_D)
  @javax.annotation.Nonnull
  private Integer fkiLanguageID;

  public static final String SERIALIZED_NAME_FKI_EZSIGNFOLDERTYPE_I_D = "fkiEzsignfoldertypeID";
  @SerializedName(SERIALIZED_NAME_FKI_EZSIGNFOLDERTYPE_I_D)
  @javax.annotation.Nullable
  private Integer fkiEzsignfoldertypeID;

  public static final String SERIALIZED_NAME_FKI_EZDOCTEMPLATETYPE_I_D = "fkiEzdoctemplatetypeID";
  @SerializedName(SERIALIZED_NAME_FKI_EZDOCTEMPLATETYPE_I_D)
  @javax.annotation.Nonnull
  private Integer fkiEzdoctemplatetypeID;

  public static final String SERIALIZED_NAME_FKI_EZDOCTEMPLATEFIELDTYPECATEGORY_I_D = "fkiEzdoctemplatefieldtypecategoryID";
  @SerializedName(SERIALIZED_NAME_FKI_EZDOCTEMPLATEFIELDTYPECATEGORY_I_D)
  @javax.annotation.Nonnull
  private Integer fkiEzdoctemplatefieldtypecategoryID;

  public static final String SERIALIZED_NAME_E_EZDOCTEMPLATEDOCUMENT_PRIVACYLEVEL = "eEzdoctemplatedocumentPrivacylevel";
  @SerializedName(SERIALIZED_NAME_E_EZDOCTEMPLATEDOCUMENT_PRIVACYLEVEL)
  @javax.annotation.Nullable
  private FieldEEzdoctemplatedocumentPrivacylevel eEzdoctemplatedocumentPrivacylevel;

  public static final String SERIALIZED_NAME_B_EZDOCTEMPLATEDOCUMENT_ISACTIVE = "bEzdoctemplatedocumentIsactive";
  @SerializedName(SERIALIZED_NAME_B_EZDOCTEMPLATEDOCUMENT_ISACTIVE)
  @javax.annotation.Nonnull
  private Boolean bEzdoctemplatedocumentIsactive;

  public static final String SERIALIZED_NAME_OBJ_EZDOCTEMPLATEDOCUMENT_NAME = "objEzdoctemplatedocumentName";
  @SerializedName(SERIALIZED_NAME_OBJ_EZDOCTEMPLATEDOCUMENT_NAME)
  @javax.annotation.Nonnull
  private MultilingualEzdoctemplatedocumentName objEzdoctemplatedocumentName;

  public EzdoctemplatedocumentRequestCompound() {
  }

  public EzdoctemplatedocumentRequestCompound pkiEzdoctemplatedocumentID(@javax.annotation.Nullable Integer pkiEzdoctemplatedocumentID) {
    this.pkiEzdoctemplatedocumentID = pkiEzdoctemplatedocumentID;
    return this;
  }

  /**
   * The unique ID of the Ezdoctemplatedocument
   * minimum: 0
   * maximum: 65535
   * @return pkiEzdoctemplatedocumentID
   */
  @javax.annotation.Nullable
  public Integer getPkiEzdoctemplatedocumentID() {
    return pkiEzdoctemplatedocumentID;
  }

  public void setPkiEzdoctemplatedocumentID(@javax.annotation.Nullable Integer pkiEzdoctemplatedocumentID) {
    this.pkiEzdoctemplatedocumentID = pkiEzdoctemplatedocumentID;
  }


  public EzdoctemplatedocumentRequestCompound fkiLanguageID(@javax.annotation.Nonnull Integer fkiLanguageID) {
    this.fkiLanguageID = fkiLanguageID;
    return this;
  }

  /**
   * The unique ID of the Language.  Valid values:  |Value|Description| |-|-| |1|French| |2|English|
   * minimum: 1
   * maximum: 2
   * @return fkiLanguageID
   */
  @javax.annotation.Nonnull
  public Integer getFkiLanguageID() {
    return fkiLanguageID;
  }

  public void setFkiLanguageID(@javax.annotation.Nonnull Integer fkiLanguageID) {
    this.fkiLanguageID = fkiLanguageID;
  }


  public EzdoctemplatedocumentRequestCompound fkiEzsignfoldertypeID(@javax.annotation.Nullable Integer fkiEzsignfoldertypeID) {
    this.fkiEzsignfoldertypeID = fkiEzsignfoldertypeID;
    return this;
  }

  /**
   * The unique ID of the Ezsignfoldertype.
   * minimum: 0
   * maximum: 65535
   * @return fkiEzsignfoldertypeID
   */
  @javax.annotation.Nullable
  public Integer getFkiEzsignfoldertypeID() {
    return fkiEzsignfoldertypeID;
  }

  public void setFkiEzsignfoldertypeID(@javax.annotation.Nullable Integer fkiEzsignfoldertypeID) {
    this.fkiEzsignfoldertypeID = fkiEzsignfoldertypeID;
  }


  public EzdoctemplatedocumentRequestCompound fkiEzdoctemplatetypeID(@javax.annotation.Nonnull Integer fkiEzdoctemplatetypeID) {
    this.fkiEzdoctemplatetypeID = fkiEzdoctemplatetypeID;
    return this;
  }

  /**
   * The unique ID of the Ezdoctemplatetype
   * minimum: 0
   * maximum: 255
   * @return fkiEzdoctemplatetypeID
   */
  @javax.annotation.Nonnull
  public Integer getFkiEzdoctemplatetypeID() {
    return fkiEzdoctemplatetypeID;
  }

  public void setFkiEzdoctemplatetypeID(@javax.annotation.Nonnull Integer fkiEzdoctemplatetypeID) {
    this.fkiEzdoctemplatetypeID = fkiEzdoctemplatetypeID;
  }


  public EzdoctemplatedocumentRequestCompound fkiEzdoctemplatefieldtypecategoryID(@javax.annotation.Nonnull Integer fkiEzdoctemplatefieldtypecategoryID) {
    this.fkiEzdoctemplatefieldtypecategoryID = fkiEzdoctemplatefieldtypecategoryID;
    return this;
  }

  /**
   * The unique ID of the Ezdoctemplatefieldtypecategory
   * minimum: 0
   * maximum: 255
   * @return fkiEzdoctemplatefieldtypecategoryID
   */
  @javax.annotation.Nonnull
  public Integer getFkiEzdoctemplatefieldtypecategoryID() {
    return fkiEzdoctemplatefieldtypecategoryID;
  }

  public void setFkiEzdoctemplatefieldtypecategoryID(@javax.annotation.Nonnull Integer fkiEzdoctemplatefieldtypecategoryID) {
    this.fkiEzdoctemplatefieldtypecategoryID = fkiEzdoctemplatefieldtypecategoryID;
  }


  public EzdoctemplatedocumentRequestCompound eEzdoctemplatedocumentPrivacylevel(@javax.annotation.Nullable FieldEEzdoctemplatedocumentPrivacylevel eEzdoctemplatedocumentPrivacylevel) {
    this.eEzdoctemplatedocumentPrivacylevel = eEzdoctemplatedocumentPrivacylevel;
    return this;
  }

  /**
   * Get eEzdoctemplatedocumentPrivacylevel
   * @return eEzdoctemplatedocumentPrivacylevel
   */
  @javax.annotation.Nullable
  public FieldEEzdoctemplatedocumentPrivacylevel geteEzdoctemplatedocumentPrivacylevel() {
    return eEzdoctemplatedocumentPrivacylevel;
  }

  public void seteEzdoctemplatedocumentPrivacylevel(@javax.annotation.Nullable FieldEEzdoctemplatedocumentPrivacylevel eEzdoctemplatedocumentPrivacylevel) {
    this.eEzdoctemplatedocumentPrivacylevel = eEzdoctemplatedocumentPrivacylevel;
  }


  public EzdoctemplatedocumentRequestCompound bEzdoctemplatedocumentIsactive(@javax.annotation.Nonnull Boolean bEzdoctemplatedocumentIsactive) {
    this.bEzdoctemplatedocumentIsactive = bEzdoctemplatedocumentIsactive;
    return this;
  }

  /**
   * Whether the ezdoctemplatedocument is active or not
   * @return bEzdoctemplatedocumentIsactive
   */
  @javax.annotation.Nonnull
  public Boolean getbEzdoctemplatedocumentIsactive() {
    return bEzdoctemplatedocumentIsactive;
  }

  public void setbEzdoctemplatedocumentIsactive(@javax.annotation.Nonnull Boolean bEzdoctemplatedocumentIsactive) {
    this.bEzdoctemplatedocumentIsactive = bEzdoctemplatedocumentIsactive;
  }


  public EzdoctemplatedocumentRequestCompound objEzdoctemplatedocumentName(@javax.annotation.Nonnull MultilingualEzdoctemplatedocumentName objEzdoctemplatedocumentName) {
    this.objEzdoctemplatedocumentName = objEzdoctemplatedocumentName;
    return this;
  }

  /**
   * Get objEzdoctemplatedocumentName
   * @return objEzdoctemplatedocumentName
   */
  @javax.annotation.Nonnull
  public MultilingualEzdoctemplatedocumentName getObjEzdoctemplatedocumentName() {
    return objEzdoctemplatedocumentName;
  }

  public void setObjEzdoctemplatedocumentName(@javax.annotation.Nonnull MultilingualEzdoctemplatedocumentName objEzdoctemplatedocumentName) {
    this.objEzdoctemplatedocumentName = objEzdoctemplatedocumentName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EzdoctemplatedocumentRequestCompound ezdoctemplatedocumentRequestCompound = (EzdoctemplatedocumentRequestCompound) o;
    return Objects.equals(this.pkiEzdoctemplatedocumentID, ezdoctemplatedocumentRequestCompound.pkiEzdoctemplatedocumentID) &&
        Objects.equals(this.fkiLanguageID, ezdoctemplatedocumentRequestCompound.fkiLanguageID) &&
        Objects.equals(this.fkiEzsignfoldertypeID, ezdoctemplatedocumentRequestCompound.fkiEzsignfoldertypeID) &&
        Objects.equals(this.fkiEzdoctemplatetypeID, ezdoctemplatedocumentRequestCompound.fkiEzdoctemplatetypeID) &&
        Objects.equals(this.fkiEzdoctemplatefieldtypecategoryID, ezdoctemplatedocumentRequestCompound.fkiEzdoctemplatefieldtypecategoryID) &&
        Objects.equals(this.eEzdoctemplatedocumentPrivacylevel, ezdoctemplatedocumentRequestCompound.eEzdoctemplatedocumentPrivacylevel) &&
        Objects.equals(this.bEzdoctemplatedocumentIsactive, ezdoctemplatedocumentRequestCompound.bEzdoctemplatedocumentIsactive) &&
        Objects.equals(this.objEzdoctemplatedocumentName, ezdoctemplatedocumentRequestCompound.objEzdoctemplatedocumentName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pkiEzdoctemplatedocumentID, fkiLanguageID, fkiEzsignfoldertypeID, fkiEzdoctemplatetypeID, fkiEzdoctemplatefieldtypecategoryID, eEzdoctemplatedocumentPrivacylevel, bEzdoctemplatedocumentIsactive, objEzdoctemplatedocumentName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EzdoctemplatedocumentRequestCompound {\n");
    sb.append("    pkiEzdoctemplatedocumentID: ").append(toIndentedString(pkiEzdoctemplatedocumentID)).append("\n");
    sb.append("    fkiLanguageID: ").append(toIndentedString(fkiLanguageID)).append("\n");
    sb.append("    fkiEzsignfoldertypeID: ").append(toIndentedString(fkiEzsignfoldertypeID)).append("\n");
    sb.append("    fkiEzdoctemplatetypeID: ").append(toIndentedString(fkiEzdoctemplatetypeID)).append("\n");
    sb.append("    fkiEzdoctemplatefieldtypecategoryID: ").append(toIndentedString(fkiEzdoctemplatefieldtypecategoryID)).append("\n");
    sb.append("    eEzdoctemplatedocumentPrivacylevel: ").append(toIndentedString(eEzdoctemplatedocumentPrivacylevel)).append("\n");
    sb.append("    bEzdoctemplatedocumentIsactive: ").append(toIndentedString(bEzdoctemplatedocumentIsactive)).append("\n");
    sb.append("    objEzdoctemplatedocumentName: ").append(toIndentedString(objEzdoctemplatedocumentName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pkiEzdoctemplatedocumentID");
    openapiFields.add("fkiLanguageID");
    openapiFields.add("fkiEzsignfoldertypeID");
    openapiFields.add("fkiEzdoctemplatetypeID");
    openapiFields.add("fkiEzdoctemplatefieldtypecategoryID");
    openapiFields.add("eEzdoctemplatedocumentPrivacylevel");
    openapiFields.add("bEzdoctemplatedocumentIsactive");
    openapiFields.add("objEzdoctemplatedocumentName");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("fkiLanguageID");
    openapiRequiredFields.add("fkiEzdoctemplatetypeID");
    openapiRequiredFields.add("fkiEzdoctemplatefieldtypecategoryID");
    openapiRequiredFields.add("bEzdoctemplatedocumentIsactive");
    openapiRequiredFields.add("objEzdoctemplatedocumentName");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EzdoctemplatedocumentRequestCompound
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EzdoctemplatedocumentRequestCompound.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EzdoctemplatedocumentRequestCompound is not found in the empty JSON string", EzdoctemplatedocumentRequestCompound.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EzdoctemplatedocumentRequestCompound.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EzdoctemplatedocumentRequestCompound` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : EzdoctemplatedocumentRequestCompound.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `eEzdoctemplatedocumentPrivacylevel`
      if (jsonObj.get("eEzdoctemplatedocumentPrivacylevel") != null && !jsonObj.get("eEzdoctemplatedocumentPrivacylevel").isJsonNull()) {
        FieldEEzdoctemplatedocumentPrivacylevel.validateJsonElement(jsonObj.get("eEzdoctemplatedocumentPrivacylevel"));
      }
      // validate the required field `objEzdoctemplatedocumentName`
      MultilingualEzdoctemplatedocumentName.validateJsonElement(jsonObj.get("objEzdoctemplatedocumentName"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EzdoctemplatedocumentRequestCompound.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EzdoctemplatedocumentRequestCompound' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EzdoctemplatedocumentRequestCompound> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EzdoctemplatedocumentRequestCompound.class));

       return (TypeAdapter<T>) new TypeAdapter<EzdoctemplatedocumentRequestCompound>() {
           @Override
           public void write(JsonWriter out, EzdoctemplatedocumentRequestCompound value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EzdoctemplatedocumentRequestCompound read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EzdoctemplatedocumentRequestCompound given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EzdoctemplatedocumentRequestCompound
   * @throws IOException if the JSON string is invalid with respect to EzdoctemplatedocumentRequestCompound
   */
  public static EzdoctemplatedocumentRequestCompound fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EzdoctemplatedocumentRequestCompound.class);
  }

  /**
   * Convert an instance of EzdoctemplatedocumentRequestCompound to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

