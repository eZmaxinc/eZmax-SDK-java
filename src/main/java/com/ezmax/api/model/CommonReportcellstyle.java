/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.ezmax.api.model.EnumFontunderline;
import com.ezmax.api.model.EnumFontweight;
import com.ezmax.api.model.EnumHorizontalalignment;
import com.ezmax.api.model.EnumVerticalalignment;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * Styles applied to a Reportcell 
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-16T17:00:54.231192679Z[Etc/UTC]", comments = "Generator version: 7.10.0")
public class CommonReportcellstyle {
  public static final String SERIALIZED_NAME_B_REPORTCELLSTYLE_BORDERTOP = "bReportcellstyleBordertop";
  @SerializedName(SERIALIZED_NAME_B_REPORTCELLSTYLE_BORDERTOP)
  @javax.annotation.Nonnull
  private Boolean bReportcellstyleBordertop;

  public static final String SERIALIZED_NAME_B_REPORTCELLSTYLE_BORDERBOTTOM = "bReportcellstyleBorderbottom";
  @SerializedName(SERIALIZED_NAME_B_REPORTCELLSTYLE_BORDERBOTTOM)
  @javax.annotation.Nonnull
  private Boolean bReportcellstyleBorderbottom;

  public static final String SERIALIZED_NAME_B_REPORTCELLSTYLE_BORDERLEFT = "bReportcellstyleBorderleft";
  @SerializedName(SERIALIZED_NAME_B_REPORTCELLSTYLE_BORDERLEFT)
  @javax.annotation.Nonnull
  private Boolean bReportcellstyleBorderleft;

  public static final String SERIALIZED_NAME_B_REPORTCELLSTYLE_BORDERRIGHT = "bReportcellstyleBorderright";
  @SerializedName(SERIALIZED_NAME_B_REPORTCELLSTYLE_BORDERRIGHT)
  @javax.annotation.Nonnull
  private Boolean bReportcellstyleBorderright;

  public static final String SERIALIZED_NAME_E_REPORTCELL_HORIZONTALALIGNMENT = "eReportcellHorizontalalignment";
  @SerializedName(SERIALIZED_NAME_E_REPORTCELL_HORIZONTALALIGNMENT)
  @javax.annotation.Nonnull
  private EnumHorizontalalignment eReportcellHorizontalalignment;

  public static final String SERIALIZED_NAME_E_REPORTCELL_VERTICALALIGNMENT = "eReportcellVerticalalignment";
  @SerializedName(SERIALIZED_NAME_E_REPORTCELL_VERTICALALIGNMENT)
  @javax.annotation.Nonnull
  private EnumVerticalalignment eReportcellVerticalalignment;

  public static final String SERIALIZED_NAME_E_REPORTCELL_FONTWEIGHT = "eReportcellFontweight";
  @SerializedName(SERIALIZED_NAME_E_REPORTCELL_FONTWEIGHT)
  @javax.annotation.Nonnull
  private EnumFontweight eReportcellFontweight;

  public static final String SERIALIZED_NAME_E_REPORTCELL_FONTUNDERLINE = "eReportcellFontunderline";
  @SerializedName(SERIALIZED_NAME_E_REPORTCELL_FONTUNDERLINE)
  @javax.annotation.Nonnull
  private EnumFontunderline eReportcellFontunderline;

  public CommonReportcellstyle() {
  }

  public CommonReportcellstyle bReportcellstyleBordertop(@javax.annotation.Nonnull Boolean bReportcellstyleBordertop) {
    this.bReportcellstyleBordertop = bReportcellstyleBordertop;
    return this;
  }

  /**
   * Whether there is a border at the top of the Reportcell
   * @return bReportcellstyleBordertop
   */
  @javax.annotation.Nonnull
  public Boolean getbReportcellstyleBordertop() {
    return bReportcellstyleBordertop;
  }

  public void setbReportcellstyleBordertop(@javax.annotation.Nonnull Boolean bReportcellstyleBordertop) {
    this.bReportcellstyleBordertop = bReportcellstyleBordertop;
  }


  public CommonReportcellstyle bReportcellstyleBorderbottom(@javax.annotation.Nonnull Boolean bReportcellstyleBorderbottom) {
    this.bReportcellstyleBorderbottom = bReportcellstyleBorderbottom;
    return this;
  }

  /**
   * Whether there is a border at the bottom of the Reportcell
   * @return bReportcellstyleBorderbottom
   */
  @javax.annotation.Nonnull
  public Boolean getbReportcellstyleBorderbottom() {
    return bReportcellstyleBorderbottom;
  }

  public void setbReportcellstyleBorderbottom(@javax.annotation.Nonnull Boolean bReportcellstyleBorderbottom) {
    this.bReportcellstyleBorderbottom = bReportcellstyleBorderbottom;
  }


  public CommonReportcellstyle bReportcellstyleBorderleft(@javax.annotation.Nonnull Boolean bReportcellstyleBorderleft) {
    this.bReportcellstyleBorderleft = bReportcellstyleBorderleft;
    return this;
  }

  /**
   * Whether there is a border at the left of the Reportcell
   * @return bReportcellstyleBorderleft
   */
  @javax.annotation.Nonnull
  public Boolean getbReportcellstyleBorderleft() {
    return bReportcellstyleBorderleft;
  }

  public void setbReportcellstyleBorderleft(@javax.annotation.Nonnull Boolean bReportcellstyleBorderleft) {
    this.bReportcellstyleBorderleft = bReportcellstyleBorderleft;
  }


  public CommonReportcellstyle bReportcellstyleBorderright(@javax.annotation.Nonnull Boolean bReportcellstyleBorderright) {
    this.bReportcellstyleBorderright = bReportcellstyleBorderright;
    return this;
  }

  /**
   * Whether there is a border at the right of the Reportcell
   * @return bReportcellstyleBorderright
   */
  @javax.annotation.Nonnull
  public Boolean getbReportcellstyleBorderright() {
    return bReportcellstyleBorderright;
  }

  public void setbReportcellstyleBorderright(@javax.annotation.Nonnull Boolean bReportcellstyleBorderright) {
    this.bReportcellstyleBorderright = bReportcellstyleBorderright;
  }


  public CommonReportcellstyle eReportcellHorizontalalignment(@javax.annotation.Nonnull EnumHorizontalalignment eReportcellHorizontalalignment) {
    this.eReportcellHorizontalalignment = eReportcellHorizontalalignment;
    return this;
  }

  /**
   * Get eReportcellHorizontalalignment
   * @return eReportcellHorizontalalignment
   */
  @javax.annotation.Nonnull
  public EnumHorizontalalignment geteReportcellHorizontalalignment() {
    return eReportcellHorizontalalignment;
  }

  public void seteReportcellHorizontalalignment(@javax.annotation.Nonnull EnumHorizontalalignment eReportcellHorizontalalignment) {
    this.eReportcellHorizontalalignment = eReportcellHorizontalalignment;
  }


  public CommonReportcellstyle eReportcellVerticalalignment(@javax.annotation.Nonnull EnumVerticalalignment eReportcellVerticalalignment) {
    this.eReportcellVerticalalignment = eReportcellVerticalalignment;
    return this;
  }

  /**
   * Get eReportcellVerticalalignment
   * @return eReportcellVerticalalignment
   */
  @javax.annotation.Nonnull
  public EnumVerticalalignment geteReportcellVerticalalignment() {
    return eReportcellVerticalalignment;
  }

  public void seteReportcellVerticalalignment(@javax.annotation.Nonnull EnumVerticalalignment eReportcellVerticalalignment) {
    this.eReportcellVerticalalignment = eReportcellVerticalalignment;
  }


  public CommonReportcellstyle eReportcellFontweight(@javax.annotation.Nonnull EnumFontweight eReportcellFontweight) {
    this.eReportcellFontweight = eReportcellFontweight;
    return this;
  }

  /**
   * Get eReportcellFontweight
   * @return eReportcellFontweight
   */
  @javax.annotation.Nonnull
  public EnumFontweight geteReportcellFontweight() {
    return eReportcellFontweight;
  }

  public void seteReportcellFontweight(@javax.annotation.Nonnull EnumFontweight eReportcellFontweight) {
    this.eReportcellFontweight = eReportcellFontweight;
  }


  public CommonReportcellstyle eReportcellFontunderline(@javax.annotation.Nonnull EnumFontunderline eReportcellFontunderline) {
    this.eReportcellFontunderline = eReportcellFontunderline;
    return this;
  }

  /**
   * Get eReportcellFontunderline
   * @return eReportcellFontunderline
   */
  @javax.annotation.Nonnull
  public EnumFontunderline geteReportcellFontunderline() {
    return eReportcellFontunderline;
  }

  public void seteReportcellFontunderline(@javax.annotation.Nonnull EnumFontunderline eReportcellFontunderline) {
    this.eReportcellFontunderline = eReportcellFontunderline;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommonReportcellstyle commonReportcellstyle = (CommonReportcellstyle) o;
    return Objects.equals(this.bReportcellstyleBordertop, commonReportcellstyle.bReportcellstyleBordertop) &&
        Objects.equals(this.bReportcellstyleBorderbottom, commonReportcellstyle.bReportcellstyleBorderbottom) &&
        Objects.equals(this.bReportcellstyleBorderleft, commonReportcellstyle.bReportcellstyleBorderleft) &&
        Objects.equals(this.bReportcellstyleBorderright, commonReportcellstyle.bReportcellstyleBorderright) &&
        Objects.equals(this.eReportcellHorizontalalignment, commonReportcellstyle.eReportcellHorizontalalignment) &&
        Objects.equals(this.eReportcellVerticalalignment, commonReportcellstyle.eReportcellVerticalalignment) &&
        Objects.equals(this.eReportcellFontweight, commonReportcellstyle.eReportcellFontweight) &&
        Objects.equals(this.eReportcellFontunderline, commonReportcellstyle.eReportcellFontunderline);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bReportcellstyleBordertop, bReportcellstyleBorderbottom, bReportcellstyleBorderleft, bReportcellstyleBorderright, eReportcellHorizontalalignment, eReportcellVerticalalignment, eReportcellFontweight, eReportcellFontunderline);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommonReportcellstyle {\n");
    sb.append("    bReportcellstyleBordertop: ").append(toIndentedString(bReportcellstyleBordertop)).append("\n");
    sb.append("    bReportcellstyleBorderbottom: ").append(toIndentedString(bReportcellstyleBorderbottom)).append("\n");
    sb.append("    bReportcellstyleBorderleft: ").append(toIndentedString(bReportcellstyleBorderleft)).append("\n");
    sb.append("    bReportcellstyleBorderright: ").append(toIndentedString(bReportcellstyleBorderright)).append("\n");
    sb.append("    eReportcellHorizontalalignment: ").append(toIndentedString(eReportcellHorizontalalignment)).append("\n");
    sb.append("    eReportcellVerticalalignment: ").append(toIndentedString(eReportcellVerticalalignment)).append("\n");
    sb.append("    eReportcellFontweight: ").append(toIndentedString(eReportcellFontweight)).append("\n");
    sb.append("    eReportcellFontunderline: ").append(toIndentedString(eReportcellFontunderline)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("bReportcellstyleBordertop");
    openapiFields.add("bReportcellstyleBorderbottom");
    openapiFields.add("bReportcellstyleBorderleft");
    openapiFields.add("bReportcellstyleBorderright");
    openapiFields.add("eReportcellHorizontalalignment");
    openapiFields.add("eReportcellVerticalalignment");
    openapiFields.add("eReportcellFontweight");
    openapiFields.add("eReportcellFontunderline");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("bReportcellstyleBordertop");
    openapiRequiredFields.add("bReportcellstyleBorderbottom");
    openapiRequiredFields.add("bReportcellstyleBorderleft");
    openapiRequiredFields.add("bReportcellstyleBorderright");
    openapiRequiredFields.add("eReportcellHorizontalalignment");
    openapiRequiredFields.add("eReportcellVerticalalignment");
    openapiRequiredFields.add("eReportcellFontweight");
    openapiRequiredFields.add("eReportcellFontunderline");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CommonReportcellstyle
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CommonReportcellstyle.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CommonReportcellstyle is not found in the empty JSON string", CommonReportcellstyle.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CommonReportcellstyle.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CommonReportcellstyle` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CommonReportcellstyle.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `eReportcellHorizontalalignment`
      EnumHorizontalalignment.validateJsonElement(jsonObj.get("eReportcellHorizontalalignment"));
      // validate the required field `eReportcellVerticalalignment`
      EnumVerticalalignment.validateJsonElement(jsonObj.get("eReportcellVerticalalignment"));
      // validate the required field `eReportcellFontweight`
      EnumFontweight.validateJsonElement(jsonObj.get("eReportcellFontweight"));
      // validate the required field `eReportcellFontunderline`
      EnumFontunderline.validateJsonElement(jsonObj.get("eReportcellFontunderline"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CommonReportcellstyle.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CommonReportcellstyle' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CommonReportcellstyle> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CommonReportcellstyle.class));

       return (TypeAdapter<T>) new TypeAdapter<CommonReportcellstyle>() {
           @Override
           public void write(JsonWriter out, CommonReportcellstyle value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CommonReportcellstyle read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CommonReportcellstyle given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CommonReportcellstyle
   * @throws IOException if the JSON string is invalid with respect to CommonReportcellstyle
   */
  public static CommonReportcellstyle fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CommonReportcellstyle.class);
  }

  /**
   * Convert an instance of CommonReportcellstyle to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

