/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.ezmax.api.model.EnumHorizontalalignment;
import com.ezmax.api.model.FieldEEzsignformfieldDependencyrequirement;
import com.ezmax.api.model.TextstylestaticResponseCompound;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * An Ezsignformfield Object
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-29T00:49:27.181642374Z[Etc/UTC]", comments = "Generator version: 7.11.0")
public class EzsignformfieldResponse {
  public static final String SERIALIZED_NAME_PKI_EZSIGNFORMFIELD_I_D = "pkiEzsignformfieldID";
  @SerializedName(SERIALIZED_NAME_PKI_EZSIGNFORMFIELD_I_D)
  @javax.annotation.Nonnull
  private Integer pkiEzsignformfieldID;

  public static final String SERIALIZED_NAME_I_EZSIGNPAGE_PAGENUMBER = "iEzsignpagePagenumber";
  @SerializedName(SERIALIZED_NAME_I_EZSIGNPAGE_PAGENUMBER)
  @javax.annotation.Nonnull
  private Integer iEzsignpagePagenumber;

  public static final String SERIALIZED_NAME_S_EZSIGNFORMFIELD_LABEL = "sEzsignformfieldLabel";
  @SerializedName(SERIALIZED_NAME_S_EZSIGNFORMFIELD_LABEL)
  @javax.annotation.Nonnull
  private String sEzsignformfieldLabel;

  public static final String SERIALIZED_NAME_S_EZSIGNFORMFIELD_VALUE = "sEzsignformfieldValue";
  @SerializedName(SERIALIZED_NAME_S_EZSIGNFORMFIELD_VALUE)
  @javax.annotation.Nullable
  private String sEzsignformfieldValue;

  public static final String SERIALIZED_NAME_I_EZSIGNFORMFIELD_X = "iEzsignformfieldX";
  @SerializedName(SERIALIZED_NAME_I_EZSIGNFORMFIELD_X)
  @javax.annotation.Nonnull
  private Integer iEzsignformfieldX;

  public static final String SERIALIZED_NAME_I_EZSIGNFORMFIELD_Y = "iEzsignformfieldY";
  @SerializedName(SERIALIZED_NAME_I_EZSIGNFORMFIELD_Y)
  @javax.annotation.Nonnull
  private Integer iEzsignformfieldY;

  public static final String SERIALIZED_NAME_I_EZSIGNFORMFIELD_WIDTH = "iEzsignformfieldWidth";
  @SerializedName(SERIALIZED_NAME_I_EZSIGNFORMFIELD_WIDTH)
  @javax.annotation.Nonnull
  private Integer iEzsignformfieldWidth;

  public static final String SERIALIZED_NAME_I_EZSIGNFORMFIELD_HEIGHT = "iEzsignformfieldHeight";
  @SerializedName(SERIALIZED_NAME_I_EZSIGNFORMFIELD_HEIGHT)
  @javax.annotation.Nonnull
  private Integer iEzsignformfieldHeight;

  public static final String SERIALIZED_NAME_B_EZSIGNFORMFIELD_AUTOCOMPLETE = "bEzsignformfieldAutocomplete";
  @SerializedName(SERIALIZED_NAME_B_EZSIGNFORMFIELD_AUTOCOMPLETE)
  @javax.annotation.Nullable
  private Boolean bEzsignformfieldAutocomplete;

  public static final String SERIALIZED_NAME_B_EZSIGNFORMFIELD_SELECTED = "bEzsignformfieldSelected";
  @SerializedName(SERIALIZED_NAME_B_EZSIGNFORMFIELD_SELECTED)
  @javax.annotation.Nullable
  private Boolean bEzsignformfieldSelected;

  public static final String SERIALIZED_NAME_S_EZSIGNFORMFIELD_ENTEREDVALUE = "sEzsignformfieldEnteredvalue";
  @SerializedName(SERIALIZED_NAME_S_EZSIGNFORMFIELD_ENTEREDVALUE)
  @javax.annotation.Nullable
  private String sEzsignformfieldEnteredvalue;

  public static final String SERIALIZED_NAME_E_EZSIGNFORMFIELD_DEPENDENCYREQUIREMENT = "eEzsignformfieldDependencyrequirement";
  @SerializedName(SERIALIZED_NAME_E_EZSIGNFORMFIELD_DEPENDENCYREQUIREMENT)
  @javax.annotation.Nullable
  private FieldEEzsignformfieldDependencyrequirement eEzsignformfieldDependencyrequirement;

  public static final String SERIALIZED_NAME_E_EZSIGNFORMFIELD_HORIZONTALALIGNMENT = "eEzsignformfieldHorizontalalignment";
  @SerializedName(SERIALIZED_NAME_E_EZSIGNFORMFIELD_HORIZONTALALIGNMENT)
  @javax.annotation.Nullable
  private EnumHorizontalalignment eEzsignformfieldHorizontalalignment;

  public static final String SERIALIZED_NAME_OBJ_TEXTSTYLESTATIC = "objTextstylestatic";
  @SerializedName(SERIALIZED_NAME_OBJ_TEXTSTYLESTATIC)
  @javax.annotation.Nullable
  private TextstylestaticResponseCompound objTextstylestatic;

  public EzsignformfieldResponse() {
  }

  public EzsignformfieldResponse pkiEzsignformfieldID(@javax.annotation.Nonnull Integer pkiEzsignformfieldID) {
    this.pkiEzsignformfieldID = pkiEzsignformfieldID;
    return this;
  }

  /**
   * The unique ID of the Ezsignformfield
   * minimum: 0
   * @return pkiEzsignformfieldID
   */
  @javax.annotation.Nonnull
  public Integer getPkiEzsignformfieldID() {
    return pkiEzsignformfieldID;
  }

  public void setPkiEzsignformfieldID(@javax.annotation.Nonnull Integer pkiEzsignformfieldID) {
    this.pkiEzsignformfieldID = pkiEzsignformfieldID;
  }


  public EzsignformfieldResponse iEzsignpagePagenumber(@javax.annotation.Nonnull Integer iEzsignpagePagenumber) {
    this.iEzsignpagePagenumber = iEzsignpagePagenumber;
    return this;
  }

  /**
   * The page number in the Ezsigndocument
   * minimum: 1
   * @return iEzsignpagePagenumber
   */
  @javax.annotation.Nonnull
  public Integer getiEzsignpagePagenumber() {
    return iEzsignpagePagenumber;
  }

  public void setiEzsignpagePagenumber(@javax.annotation.Nonnull Integer iEzsignpagePagenumber) {
    this.iEzsignpagePagenumber = iEzsignpagePagenumber;
  }


  public EzsignformfieldResponse sEzsignformfieldLabel(@javax.annotation.Nonnull String sEzsignformfieldLabel) {
    this.sEzsignformfieldLabel = sEzsignformfieldLabel;
    return this;
  }

  /**
   * The Label for the Ezsignformfield
   * @return sEzsignformfieldLabel
   */
  @javax.annotation.Nonnull
  public String getsEzsignformfieldLabel() {
    return sEzsignformfieldLabel;
  }

  public void setsEzsignformfieldLabel(@javax.annotation.Nonnull String sEzsignformfieldLabel) {
    this.sEzsignformfieldLabel = sEzsignformfieldLabel;
  }


  public EzsignformfieldResponse sEzsignformfieldValue(@javax.annotation.Nullable String sEzsignformfieldValue) {
    this.sEzsignformfieldValue = sEzsignformfieldValue;
    return this;
  }

  /**
   * The value for the Ezsignformfield  This can only be set if eEzsignformfieldgroupType is Checkbox or Radio
   * @return sEzsignformfieldValue
   */
  @javax.annotation.Nullable
  public String getsEzsignformfieldValue() {
    return sEzsignformfieldValue;
  }

  public void setsEzsignformfieldValue(@javax.annotation.Nullable String sEzsignformfieldValue) {
    this.sEzsignformfieldValue = sEzsignformfieldValue;
  }


  public EzsignformfieldResponse iEzsignformfieldX(@javax.annotation.Nonnull Integer iEzsignformfieldX) {
    this.iEzsignformfieldX = iEzsignformfieldX;
    return this;
  }

  /**
   * The X coordinate (Horizontal) where to put the Ezsignformfield on the Ezsignpage.  Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the Ezsignformfield 2 inches from the left border of the page, you would use \&quot;200\&quot; for the X coordinate.
   * minimum: 0
   * @return iEzsignformfieldX
   */
  @javax.annotation.Nonnull
  public Integer getiEzsignformfieldX() {
    return iEzsignformfieldX;
  }

  public void setiEzsignformfieldX(@javax.annotation.Nonnull Integer iEzsignformfieldX) {
    this.iEzsignformfieldX = iEzsignformfieldX;
  }


  public EzsignformfieldResponse iEzsignformfieldY(@javax.annotation.Nonnull Integer iEzsignformfieldY) {
    this.iEzsignformfieldY = iEzsignformfieldY;
    return this;
  }

  /**
   * The Y coordinate (Vertical) where to put the Ezsignformfield on the Ezsignpage.  Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the Ezsignformfield 3 inches from the top border of the page, you would use \&quot;300\&quot; for the Y coordinate.
   * minimum: 0
   * @return iEzsignformfieldY
   */
  @javax.annotation.Nonnull
  public Integer getiEzsignformfieldY() {
    return iEzsignformfieldY;
  }

  public void setiEzsignformfieldY(@javax.annotation.Nonnull Integer iEzsignformfieldY) {
    this.iEzsignformfieldY = iEzsignformfieldY;
  }


  public EzsignformfieldResponse iEzsignformfieldWidth(@javax.annotation.Nonnull Integer iEzsignformfieldWidth) {
    this.iEzsignformfieldWidth = iEzsignformfieldWidth;
    return this;
  }

  /**
   * The Width of the Ezsignformfield in pixels calculated at 100 DPI
   * minimum: 0
   * @return iEzsignformfieldWidth
   */
  @javax.annotation.Nonnull
  public Integer getiEzsignformfieldWidth() {
    return iEzsignformfieldWidth;
  }

  public void setiEzsignformfieldWidth(@javax.annotation.Nonnull Integer iEzsignformfieldWidth) {
    this.iEzsignformfieldWidth = iEzsignformfieldWidth;
  }


  public EzsignformfieldResponse iEzsignformfieldHeight(@javax.annotation.Nonnull Integer iEzsignformfieldHeight) {
    this.iEzsignformfieldHeight = iEzsignformfieldHeight;
    return this;
  }

  /**
   * The Height of the Ezsignformfield in pixels calculated at 100 DPI 
   * minimum: 0
   * @return iEzsignformfieldHeight
   */
  @javax.annotation.Nonnull
  public Integer getiEzsignformfieldHeight() {
    return iEzsignformfieldHeight;
  }

  public void setiEzsignformfieldHeight(@javax.annotation.Nonnull Integer iEzsignformfieldHeight) {
    this.iEzsignformfieldHeight = iEzsignformfieldHeight;
  }


  public EzsignformfieldResponse bEzsignformfieldAutocomplete(@javax.annotation.Nullable Boolean bEzsignformfieldAutocomplete) {
    this.bEzsignformfieldAutocomplete = bEzsignformfieldAutocomplete;
    return this;
  }

  /**
   * Whether the Ezsignformfield allows the use of the autocomplete of the browser.  This can only be set if eEzsignformfieldgroupType is **Text**
   * @return bEzsignformfieldAutocomplete
   */
  @javax.annotation.Nullable
  public Boolean getbEzsignformfieldAutocomplete() {
    return bEzsignformfieldAutocomplete;
  }

  public void setbEzsignformfieldAutocomplete(@javax.annotation.Nullable Boolean bEzsignformfieldAutocomplete) {
    this.bEzsignformfieldAutocomplete = bEzsignformfieldAutocomplete;
  }


  public EzsignformfieldResponse bEzsignformfieldSelected(@javax.annotation.Nullable Boolean bEzsignformfieldSelected) {
    this.bEzsignformfieldSelected = bEzsignformfieldSelected;
    return this;
  }

  /**
   * Whether the Ezsignformfield is selected or not by default.  This can only be set if eEzsignformfieldgroupType is **Checkbox** or **Radio**
   * @return bEzsignformfieldSelected
   */
  @javax.annotation.Nullable
  public Boolean getbEzsignformfieldSelected() {
    return bEzsignformfieldSelected;
  }

  public void setbEzsignformfieldSelected(@javax.annotation.Nullable Boolean bEzsignformfieldSelected) {
    this.bEzsignformfieldSelected = bEzsignformfieldSelected;
  }


  public EzsignformfieldResponse sEzsignformfieldEnteredvalue(@javax.annotation.Nullable String sEzsignformfieldEnteredvalue) {
    this.sEzsignformfieldEnteredvalue = sEzsignformfieldEnteredvalue;
    return this;
  }

  /**
   * This is the value enterred for the Ezsignformfield  This can only be set if eEzsignformfieldgroupType is **Dropdown**, **Text** or **Textarea**
   * @return sEzsignformfieldEnteredvalue
   */
  @javax.annotation.Nullable
  public String getsEzsignformfieldEnteredvalue() {
    return sEzsignformfieldEnteredvalue;
  }

  public void setsEzsignformfieldEnteredvalue(@javax.annotation.Nullable String sEzsignformfieldEnteredvalue) {
    this.sEzsignformfieldEnteredvalue = sEzsignformfieldEnteredvalue;
  }


  public EzsignformfieldResponse eEzsignformfieldDependencyrequirement(@javax.annotation.Nullable FieldEEzsignformfieldDependencyrequirement eEzsignformfieldDependencyrequirement) {
    this.eEzsignformfieldDependencyrequirement = eEzsignformfieldDependencyrequirement;
    return this;
  }

  /**
   * Get eEzsignformfieldDependencyrequirement
   * @return eEzsignformfieldDependencyrequirement
   */
  @javax.annotation.Nullable
  public FieldEEzsignformfieldDependencyrequirement geteEzsignformfieldDependencyrequirement() {
    return eEzsignformfieldDependencyrequirement;
  }

  public void seteEzsignformfieldDependencyrequirement(@javax.annotation.Nullable FieldEEzsignformfieldDependencyrequirement eEzsignformfieldDependencyrequirement) {
    this.eEzsignformfieldDependencyrequirement = eEzsignformfieldDependencyrequirement;
  }


  public EzsignformfieldResponse eEzsignformfieldHorizontalalignment(@javax.annotation.Nullable EnumHorizontalalignment eEzsignformfieldHorizontalalignment) {
    this.eEzsignformfieldHorizontalalignment = eEzsignformfieldHorizontalalignment;
    return this;
  }

  /**
   * Get eEzsignformfieldHorizontalalignment
   * @return eEzsignformfieldHorizontalalignment
   */
  @javax.annotation.Nullable
  public EnumHorizontalalignment geteEzsignformfieldHorizontalalignment() {
    return eEzsignformfieldHorizontalalignment;
  }

  public void seteEzsignformfieldHorizontalalignment(@javax.annotation.Nullable EnumHorizontalalignment eEzsignformfieldHorizontalalignment) {
    this.eEzsignformfieldHorizontalalignment = eEzsignformfieldHorizontalalignment;
  }


  public EzsignformfieldResponse objTextstylestatic(@javax.annotation.Nullable TextstylestaticResponseCompound objTextstylestatic) {
    this.objTextstylestatic = objTextstylestatic;
    return this;
  }

  /**
   * Get objTextstylestatic
   * @return objTextstylestatic
   */
  @javax.annotation.Nullable
  public TextstylestaticResponseCompound getObjTextstylestatic() {
    return objTextstylestatic;
  }

  public void setObjTextstylestatic(@javax.annotation.Nullable TextstylestaticResponseCompound objTextstylestatic) {
    this.objTextstylestatic = objTextstylestatic;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EzsignformfieldResponse ezsignformfieldResponse = (EzsignformfieldResponse) o;
    return Objects.equals(this.pkiEzsignformfieldID, ezsignformfieldResponse.pkiEzsignformfieldID) &&
        Objects.equals(this.iEzsignpagePagenumber, ezsignformfieldResponse.iEzsignpagePagenumber) &&
        Objects.equals(this.sEzsignformfieldLabel, ezsignformfieldResponse.sEzsignformfieldLabel) &&
        Objects.equals(this.sEzsignformfieldValue, ezsignformfieldResponse.sEzsignformfieldValue) &&
        Objects.equals(this.iEzsignformfieldX, ezsignformfieldResponse.iEzsignformfieldX) &&
        Objects.equals(this.iEzsignformfieldY, ezsignformfieldResponse.iEzsignformfieldY) &&
        Objects.equals(this.iEzsignformfieldWidth, ezsignformfieldResponse.iEzsignformfieldWidth) &&
        Objects.equals(this.iEzsignformfieldHeight, ezsignformfieldResponse.iEzsignformfieldHeight) &&
        Objects.equals(this.bEzsignformfieldAutocomplete, ezsignformfieldResponse.bEzsignformfieldAutocomplete) &&
        Objects.equals(this.bEzsignformfieldSelected, ezsignformfieldResponse.bEzsignformfieldSelected) &&
        Objects.equals(this.sEzsignformfieldEnteredvalue, ezsignformfieldResponse.sEzsignformfieldEnteredvalue) &&
        Objects.equals(this.eEzsignformfieldDependencyrequirement, ezsignformfieldResponse.eEzsignformfieldDependencyrequirement) &&
        Objects.equals(this.eEzsignformfieldHorizontalalignment, ezsignformfieldResponse.eEzsignformfieldHorizontalalignment) &&
        Objects.equals(this.objTextstylestatic, ezsignformfieldResponse.objTextstylestatic);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pkiEzsignformfieldID, iEzsignpagePagenumber, sEzsignformfieldLabel, sEzsignformfieldValue, iEzsignformfieldX, iEzsignformfieldY, iEzsignformfieldWidth, iEzsignformfieldHeight, bEzsignformfieldAutocomplete, bEzsignformfieldSelected, sEzsignformfieldEnteredvalue, eEzsignformfieldDependencyrequirement, eEzsignformfieldHorizontalalignment, objTextstylestatic);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EzsignformfieldResponse {\n");
    sb.append("    pkiEzsignformfieldID: ").append(toIndentedString(pkiEzsignformfieldID)).append("\n");
    sb.append("    iEzsignpagePagenumber: ").append(toIndentedString(iEzsignpagePagenumber)).append("\n");
    sb.append("    sEzsignformfieldLabel: ").append(toIndentedString(sEzsignformfieldLabel)).append("\n");
    sb.append("    sEzsignformfieldValue: ").append(toIndentedString(sEzsignformfieldValue)).append("\n");
    sb.append("    iEzsignformfieldX: ").append(toIndentedString(iEzsignformfieldX)).append("\n");
    sb.append("    iEzsignformfieldY: ").append(toIndentedString(iEzsignformfieldY)).append("\n");
    sb.append("    iEzsignformfieldWidth: ").append(toIndentedString(iEzsignformfieldWidth)).append("\n");
    sb.append("    iEzsignformfieldHeight: ").append(toIndentedString(iEzsignformfieldHeight)).append("\n");
    sb.append("    bEzsignformfieldAutocomplete: ").append(toIndentedString(bEzsignformfieldAutocomplete)).append("\n");
    sb.append("    bEzsignformfieldSelected: ").append(toIndentedString(bEzsignformfieldSelected)).append("\n");
    sb.append("    sEzsignformfieldEnteredvalue: ").append(toIndentedString(sEzsignformfieldEnteredvalue)).append("\n");
    sb.append("    eEzsignformfieldDependencyrequirement: ").append(toIndentedString(eEzsignformfieldDependencyrequirement)).append("\n");
    sb.append("    eEzsignformfieldHorizontalalignment: ").append(toIndentedString(eEzsignformfieldHorizontalalignment)).append("\n");
    sb.append("    objTextstylestatic: ").append(toIndentedString(objTextstylestatic)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pkiEzsignformfieldID");
    openapiFields.add("iEzsignpagePagenumber");
    openapiFields.add("sEzsignformfieldLabel");
    openapiFields.add("sEzsignformfieldValue");
    openapiFields.add("iEzsignformfieldX");
    openapiFields.add("iEzsignformfieldY");
    openapiFields.add("iEzsignformfieldWidth");
    openapiFields.add("iEzsignformfieldHeight");
    openapiFields.add("bEzsignformfieldAutocomplete");
    openapiFields.add("bEzsignformfieldSelected");
    openapiFields.add("sEzsignformfieldEnteredvalue");
    openapiFields.add("eEzsignformfieldDependencyrequirement");
    openapiFields.add("eEzsignformfieldHorizontalalignment");
    openapiFields.add("objTextstylestatic");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("pkiEzsignformfieldID");
    openapiRequiredFields.add("iEzsignpagePagenumber");
    openapiRequiredFields.add("sEzsignformfieldLabel");
    openapiRequiredFields.add("iEzsignformfieldX");
    openapiRequiredFields.add("iEzsignformfieldY");
    openapiRequiredFields.add("iEzsignformfieldWidth");
    openapiRequiredFields.add("iEzsignformfieldHeight");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EzsignformfieldResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EzsignformfieldResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EzsignformfieldResponse is not found in the empty JSON string", EzsignformfieldResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EzsignformfieldResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EzsignformfieldResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : EzsignformfieldResponse.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("sEzsignformfieldLabel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sEzsignformfieldLabel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sEzsignformfieldLabel").toString()));
      }
      if ((jsonObj.get("sEzsignformfieldValue") != null && !jsonObj.get("sEzsignformfieldValue").isJsonNull()) && !jsonObj.get("sEzsignformfieldValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sEzsignformfieldValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sEzsignformfieldValue").toString()));
      }
      if ((jsonObj.get("sEzsignformfieldEnteredvalue") != null && !jsonObj.get("sEzsignformfieldEnteredvalue").isJsonNull()) && !jsonObj.get("sEzsignformfieldEnteredvalue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sEzsignformfieldEnteredvalue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sEzsignformfieldEnteredvalue").toString()));
      }
      // validate the optional field `eEzsignformfieldDependencyrequirement`
      if (jsonObj.get("eEzsignformfieldDependencyrequirement") != null && !jsonObj.get("eEzsignformfieldDependencyrequirement").isJsonNull()) {
        FieldEEzsignformfieldDependencyrequirement.validateJsonElement(jsonObj.get("eEzsignformfieldDependencyrequirement"));
      }
      // validate the optional field `eEzsignformfieldHorizontalalignment`
      if (jsonObj.get("eEzsignformfieldHorizontalalignment") != null && !jsonObj.get("eEzsignformfieldHorizontalalignment").isJsonNull()) {
        EnumHorizontalalignment.validateJsonElement(jsonObj.get("eEzsignformfieldHorizontalalignment"));
      }
      // validate the optional field `objTextstylestatic`
      if (jsonObj.get("objTextstylestatic") != null && !jsonObj.get("objTextstylestatic").isJsonNull()) {
        TextstylestaticResponseCompound.validateJsonElement(jsonObj.get("objTextstylestatic"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EzsignformfieldResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EzsignformfieldResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EzsignformfieldResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EzsignformfieldResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<EzsignformfieldResponse>() {
           @Override
           public void write(JsonWriter out, EzsignformfieldResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EzsignformfieldResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EzsignformfieldResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EzsignformfieldResponse
   * @throws IOException if the JSON string is invalid with respect to EzsignformfieldResponse
   */
  public static EzsignformfieldResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EzsignformfieldResponse.class);
  }

  /**
   * Convert an instance of EzsignformfieldResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

