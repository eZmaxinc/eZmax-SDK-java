/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.ezmax.api.model.CommonResponseObjDebug;
import com.ezmax.api.model.CommonResponseObjDebugPayload;
import com.ezmax.api.model.CommonResponseWarning;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * Response for PUT /1/object/ezsigndocument/{pkiEzsigndocumentID}
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-04T23:45:27.899975443Z[Etc/UTC]", comments = "Generator version: 7.11.0")
public class EzsigndocumentEditObjectV1Response {
  public static final String SERIALIZED_NAME_OBJ_DEBUG_PAYLOAD = "objDebugPayload";
  @SerializedName(SERIALIZED_NAME_OBJ_DEBUG_PAYLOAD)
  @javax.annotation.Nonnull
  private CommonResponseObjDebugPayload objDebugPayload;

  public static final String SERIALIZED_NAME_OBJ_DEBUG = "objDebug";
  @SerializedName(SERIALIZED_NAME_OBJ_DEBUG)
  @javax.annotation.Nullable
  private CommonResponseObjDebug objDebug;

  public static final String SERIALIZED_NAME_A_OBJ_WARNING = "a_objWarning";
  @SerializedName(SERIALIZED_NAME_A_OBJ_WARNING)
  @javax.annotation.Nullable
  private List<CommonResponseWarning> aObjWarning = new ArrayList<>();

  public EzsigndocumentEditObjectV1Response() {
  }

  public EzsigndocumentEditObjectV1Response objDebugPayload(@javax.annotation.Nonnull CommonResponseObjDebugPayload objDebugPayload) {
    this.objDebugPayload = objDebugPayload;
    return this;
  }

  /**
   * Get objDebugPayload
   * @return objDebugPayload
   */
  @javax.annotation.Nonnull
  public CommonResponseObjDebugPayload getObjDebugPayload() {
    return objDebugPayload;
  }

  public void setObjDebugPayload(@javax.annotation.Nonnull CommonResponseObjDebugPayload objDebugPayload) {
    this.objDebugPayload = objDebugPayload;
  }


  public EzsigndocumentEditObjectV1Response objDebug(@javax.annotation.Nullable CommonResponseObjDebug objDebug) {
    this.objDebug = objDebug;
    return this;
  }

  /**
   * Get objDebug
   * @return objDebug
   */
  @javax.annotation.Nullable
  public CommonResponseObjDebug getObjDebug() {
    return objDebug;
  }

  public void setObjDebug(@javax.annotation.Nullable CommonResponseObjDebug objDebug) {
    this.objDebug = objDebug;
  }


  public EzsigndocumentEditObjectV1Response aObjWarning(@javax.annotation.Nullable List<CommonResponseWarning> aObjWarning) {
    this.aObjWarning = aObjWarning;
    return this;
  }

  public EzsigndocumentEditObjectV1Response addAObjWarningItem(CommonResponseWarning aObjWarningItem) {
    if (this.aObjWarning == null) {
      this.aObjWarning = new ArrayList<>();
    }
    this.aObjWarning.add(aObjWarningItem);
    return this;
  }

  /**
   * Get aObjWarning
   * @return aObjWarning
   */
  @javax.annotation.Nullable
  public List<CommonResponseWarning> getaObjWarning() {
    return aObjWarning;
  }

  public void setaObjWarning(@javax.annotation.Nullable List<CommonResponseWarning> aObjWarning) {
    this.aObjWarning = aObjWarning;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EzsigndocumentEditObjectV1Response ezsigndocumentEditObjectV1Response = (EzsigndocumentEditObjectV1Response) o;
    return Objects.equals(this.objDebugPayload, ezsigndocumentEditObjectV1Response.objDebugPayload) &&
        Objects.equals(this.objDebug, ezsigndocumentEditObjectV1Response.objDebug) &&
        Objects.equals(this.aObjWarning, ezsigndocumentEditObjectV1Response.aObjWarning);
  }

  @Override
  public int hashCode() {
    return Objects.hash(objDebugPayload, objDebug, aObjWarning);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EzsigndocumentEditObjectV1Response {\n");
    sb.append("    objDebugPayload: ").append(toIndentedString(objDebugPayload)).append("\n");
    sb.append("    objDebug: ").append(toIndentedString(objDebug)).append("\n");
    sb.append("    aObjWarning: ").append(toIndentedString(aObjWarning)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("objDebugPayload");
    openapiFields.add("objDebug");
    openapiFields.add("a_objWarning");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("objDebugPayload");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EzsigndocumentEditObjectV1Response
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EzsigndocumentEditObjectV1Response.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EzsigndocumentEditObjectV1Response is not found in the empty JSON string", EzsigndocumentEditObjectV1Response.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EzsigndocumentEditObjectV1Response.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EzsigndocumentEditObjectV1Response` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : EzsigndocumentEditObjectV1Response.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `objDebugPayload`
      CommonResponseObjDebugPayload.validateJsonElement(jsonObj.get("objDebugPayload"));
      // validate the optional field `objDebug`
      if (jsonObj.get("objDebug") != null && !jsonObj.get("objDebug").isJsonNull()) {
        CommonResponseObjDebug.validateJsonElement(jsonObj.get("objDebug"));
      }
      if (jsonObj.get("a_objWarning") != null && !jsonObj.get("a_objWarning").isJsonNull()) {
        JsonArray jsonArrayaObjWarning = jsonObj.getAsJsonArray("a_objWarning");
        if (jsonArrayaObjWarning != null) {
          // ensure the json data is an array
          if (!jsonObj.get("a_objWarning").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `a_objWarning` to be an array in the JSON string but got `%s`", jsonObj.get("a_objWarning").toString()));
          }

          // validate the optional field `a_objWarning` (array)
          for (int i = 0; i < jsonArrayaObjWarning.size(); i++) {
            CommonResponseWarning.validateJsonElement(jsonArrayaObjWarning.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EzsigndocumentEditObjectV1Response.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EzsigndocumentEditObjectV1Response' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EzsigndocumentEditObjectV1Response> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EzsigndocumentEditObjectV1Response.class));

       return (TypeAdapter<T>) new TypeAdapter<EzsigndocumentEditObjectV1Response>() {
           @Override
           public void write(JsonWriter out, EzsigndocumentEditObjectV1Response value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EzsigndocumentEditObjectV1Response read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EzsigndocumentEditObjectV1Response given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EzsigndocumentEditObjectV1Response
   * @throws IOException if the JSON string is invalid with respect to EzsigndocumentEditObjectV1Response
   */
  public static EzsigndocumentEditObjectV1Response fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EzsigndocumentEditObjectV1Response.class);
  }

  /**
   * Convert an instance of EzsigndocumentEditObjectV1Response to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

