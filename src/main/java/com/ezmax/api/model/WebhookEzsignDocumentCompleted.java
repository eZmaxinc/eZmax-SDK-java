/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.17
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.ezmax.api.model.AttemptResponseCompound;
import com.ezmax.api.model.CustomWebhookResponse;
import com.ezmax.api.model.EzsigndocumentResponse;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * This is the base Webhook object
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-04-08T19:33:54.306225141Z[Etc/UTC]")
public class WebhookEzsignDocumentCompleted {
  public static final String SERIALIZED_NAME_OBJ_EZSIGNDOCUMENT = "objEzsigndocument";
  @SerializedName(SERIALIZED_NAME_OBJ_EZSIGNDOCUMENT)
  private EzsigndocumentResponse objEzsigndocument;

  public static final String SERIALIZED_NAME_OBJ_WEBHOOK = "objWebhook";
  @SerializedName(SERIALIZED_NAME_OBJ_WEBHOOK)
  private CustomWebhookResponse objWebhook;

  public static final String SERIALIZED_NAME_A_OBJ_ATTEMPT = "a_objAttempt";
  @SerializedName(SERIALIZED_NAME_A_OBJ_ATTEMPT)
  private List<AttemptResponseCompound> aObjAttempt = new ArrayList<>();

  public WebhookEzsignDocumentCompleted() {
  }

  public WebhookEzsignDocumentCompleted objEzsigndocument(EzsigndocumentResponse objEzsigndocument) {
    
    this.objEzsigndocument = objEzsigndocument;
    return this;
  }

   /**
   * Get objEzsigndocument
   * @return objEzsigndocument
  **/
  @javax.annotation.Nonnull

  public EzsigndocumentResponse getObjEzsigndocument() {
    return objEzsigndocument;
  }


  public void setObjEzsigndocument(EzsigndocumentResponse objEzsigndocument) {
    this.objEzsigndocument = objEzsigndocument;
  }


  public WebhookEzsignDocumentCompleted objWebhook(CustomWebhookResponse objWebhook) {
    
    this.objWebhook = objWebhook;
    return this;
  }

   /**
   * Get objWebhook
   * @return objWebhook
  **/
  @javax.annotation.Nonnull

  public CustomWebhookResponse getObjWebhook() {
    return objWebhook;
  }


  public void setObjWebhook(CustomWebhookResponse objWebhook) {
    this.objWebhook = objWebhook;
  }


  public WebhookEzsignDocumentCompleted aObjAttempt(List<AttemptResponseCompound> aObjAttempt) {
    
    this.aObjAttempt = aObjAttempt;
    return this;
  }

  public WebhookEzsignDocumentCompleted addAObjAttemptItem(AttemptResponseCompound aObjAttemptItem) {
    if (this.aObjAttempt == null) {
      this.aObjAttempt = new ArrayList<>();
    }
    this.aObjAttempt.add(aObjAttemptItem);
    return this;
  }

   /**
   * An array containing details of previous attempts that were made to deliver the message. The array is empty if it&#39;s the first attempt.
   * @return aObjAttempt
  **/
  @javax.annotation.Nonnull

  public List<AttemptResponseCompound> getaObjAttempt() {
    return aObjAttempt;
  }


  public void setaObjAttempt(List<AttemptResponseCompound> aObjAttempt) {
    this.aObjAttempt = aObjAttempt;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebhookEzsignDocumentCompleted webhookEzsignDocumentCompleted = (WebhookEzsignDocumentCompleted) o;
    return Objects.equals(this.objEzsigndocument, webhookEzsignDocumentCompleted.objEzsigndocument) &&
        Objects.equals(this.objWebhook, webhookEzsignDocumentCompleted.objWebhook) &&
        Objects.equals(this.aObjAttempt, webhookEzsignDocumentCompleted.aObjAttempt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(objEzsigndocument, objWebhook, aObjAttempt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebhookEzsignDocumentCompleted {\n");
    sb.append("    objEzsigndocument: ").append(toIndentedString(objEzsigndocument)).append("\n");
    sb.append("    objWebhook: ").append(toIndentedString(objWebhook)).append("\n");
    sb.append("    aObjAttempt: ").append(toIndentedString(aObjAttempt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("objEzsigndocument");
    openapiFields.add("objWebhook");
    openapiFields.add("a_objAttempt");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("objEzsigndocument");
    openapiRequiredFields.add("objWebhook");
    openapiRequiredFields.add("a_objAttempt");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to WebhookEzsignDocumentCompleted
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!WebhookEzsignDocumentCompleted.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in WebhookEzsignDocumentCompleted is not found in the empty JSON string", WebhookEzsignDocumentCompleted.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!WebhookEzsignDocumentCompleted.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `WebhookEzsignDocumentCompleted` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : WebhookEzsignDocumentCompleted.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      // validate the required field `objEzsigndocument`
      EzsigndocumentResponse.validateJsonObject(jsonObj.getAsJsonObject("objEzsigndocument"));
      // validate the required field `objWebhook`
      CustomWebhookResponse.validateJsonObject(jsonObj.getAsJsonObject("objWebhook"));
      // ensure the json data is an array
      if (!jsonObj.get("a_objAttempt").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `a_objAttempt` to be an array in the JSON string but got `%s`", jsonObj.get("a_objAttempt").toString()));
      }

      JsonArray jsonArrayaObjAttempt = jsonObj.getAsJsonArray("a_objAttempt");
      // validate the required field `a_objAttempt` (array)
      for (int i = 0; i < jsonArrayaObjAttempt.size(); i++) {
        AttemptResponseCompound.validateJsonObject(jsonArrayaObjAttempt.get(i).getAsJsonObject());
      };
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!WebhookEzsignDocumentCompleted.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'WebhookEzsignDocumentCompleted' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<WebhookEzsignDocumentCompleted> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(WebhookEzsignDocumentCompleted.class));

       return (TypeAdapter<T>) new TypeAdapter<WebhookEzsignDocumentCompleted>() {
           @Override
           public void write(JsonWriter out, WebhookEzsignDocumentCompleted value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public WebhookEzsignDocumentCompleted read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of WebhookEzsignDocumentCompleted given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of WebhookEzsignDocumentCompleted
  * @throws IOException if the JSON string is invalid with respect to WebhookEzsignDocumentCompleted
  */
  public static WebhookEzsignDocumentCompleted fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, WebhookEzsignDocumentCompleted.class);
  }

 /**
  * Convert an instance of WebhookEzsignDocumentCompleted to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

