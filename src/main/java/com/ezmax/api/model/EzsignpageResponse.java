/*
 * eZmax API Definition
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.3
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * An Ezsignpage Object
 */
@ApiModel(description = "An Ezsignpage Object")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-17T20:11:08.557587Z[Etc/UTC]")
public class EzsignpageResponse {
  public static final String SERIALIZED_NAME_PKI_EZSIGNPAGE_I_D = "pkiEzsignpageID";
  @SerializedName(SERIALIZED_NAME_PKI_EZSIGNPAGE_I_D)
  private Integer pkiEzsignpageID;

  public static final String SERIALIZED_NAME_I_EZSIGNPAGE_WIDTHIMAGE = "iEzsignpageWidthimage";
  @SerializedName(SERIALIZED_NAME_I_EZSIGNPAGE_WIDTHIMAGE)
  private Integer iEzsignpageWidthimage;

  public static final String SERIALIZED_NAME_I_EZSIGNPAGE_HEIGHTIMAGE = "iEzsignpageHeightimage";
  @SerializedName(SERIALIZED_NAME_I_EZSIGNPAGE_HEIGHTIMAGE)
  private Integer iEzsignpageHeightimage;

  public static final String SERIALIZED_NAME_I_EZSIGNPAGE_WIDTHPDF = "iEzsignpageWidthpdf";
  @SerializedName(SERIALIZED_NAME_I_EZSIGNPAGE_WIDTHPDF)
  private Integer iEzsignpageWidthpdf;

  public static final String SERIALIZED_NAME_I_EZSIGNPAGE_HEIGHTPDF = "iEzsignpageHeightpdf";
  @SerializedName(SERIALIZED_NAME_I_EZSIGNPAGE_HEIGHTPDF)
  private Integer iEzsignpageHeightpdf;

  public static final String SERIALIZED_NAME_I_EZSIGNPAGE_PAGENUMBER = "iEzsignpagePagenumber";
  @SerializedName(SERIALIZED_NAME_I_EZSIGNPAGE_PAGENUMBER)
  private Integer iEzsignpagePagenumber;

  public static final String SERIALIZED_NAME_S_IMAGE_URL = "sImageUrl";
  @SerializedName(SERIALIZED_NAME_S_IMAGE_URL)
  private String sImageUrl;

  public EzsignpageResponse() { 
  }

  public EzsignpageResponse pkiEzsignpageID(Integer pkiEzsignpageID) {
    
    this.pkiEzsignpageID = pkiEzsignpageID;
    return this;
  }

   /**
   * The unique ID of the Ezsignpage
   * @return pkiEzsignpageID
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "64", required = true, value = "The unique ID of the Ezsignpage")

  public Integer getPkiEzsignpageID() {
    return pkiEzsignpageID;
  }


  public void setPkiEzsignpageID(Integer pkiEzsignpageID) {
    this.pkiEzsignpageID = pkiEzsignpageID;
  }


  public EzsignpageResponse iEzsignpageWidthimage(Integer iEzsignpageWidthimage) {
    
    this.iEzsignpageWidthimage = iEzsignpageWidthimage;
    return this;
  }

   /**
   * The Width of the page&#39;s image in pixels calculated at 100 DPI
   * @return iEzsignpageWidthimage
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "850", required = true, value = "The Width of the page's image in pixels calculated at 100 DPI")

  public Integer getiEzsignpageWidthimage() {
    return iEzsignpageWidthimage;
  }


  public void setiEzsignpageWidthimage(Integer iEzsignpageWidthimage) {
    this.iEzsignpageWidthimage = iEzsignpageWidthimage;
  }


  public EzsignpageResponse iEzsignpageHeightimage(Integer iEzsignpageHeightimage) {
    
    this.iEzsignpageHeightimage = iEzsignpageHeightimage;
    return this;
  }

   /**
   * The Height of the page&#39;s image in pixels calculated at 100 DPI
   * @return iEzsignpageHeightimage
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1100", required = true, value = "The Height of the page's image in pixels calculated at 100 DPI")

  public Integer getiEzsignpageHeightimage() {
    return iEzsignpageHeightimage;
  }


  public void setiEzsignpageHeightimage(Integer iEzsignpageHeightimage) {
    this.iEzsignpageHeightimage = iEzsignpageHeightimage;
  }


  public EzsignpageResponse iEzsignpageWidthpdf(Integer iEzsignpageWidthpdf) {
    
    this.iEzsignpageWidthpdf = iEzsignpageWidthpdf;
    return this;
  }

   /**
   * The Width of the page in points calculated at 72 DPI
   * @return iEzsignpageWidthpdf
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "612", required = true, value = "The Width of the page in points calculated at 72 DPI")

  public Integer getiEzsignpageWidthpdf() {
    return iEzsignpageWidthpdf;
  }


  public void setiEzsignpageWidthpdf(Integer iEzsignpageWidthpdf) {
    this.iEzsignpageWidthpdf = iEzsignpageWidthpdf;
  }


  public EzsignpageResponse iEzsignpageHeightpdf(Integer iEzsignpageHeightpdf) {
    
    this.iEzsignpageHeightpdf = iEzsignpageHeightpdf;
    return this;
  }

   /**
   * The Height of the page in points calculated at 72 DPI
   * @return iEzsignpageHeightpdf
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "792", required = true, value = "The Height of the page in points calculated at 72 DPI")

  public Integer getiEzsignpageHeightpdf() {
    return iEzsignpageHeightpdf;
  }


  public void setiEzsignpageHeightpdf(Integer iEzsignpageHeightpdf) {
    this.iEzsignpageHeightpdf = iEzsignpageHeightpdf;
  }


  public EzsignpageResponse iEzsignpagePagenumber(Integer iEzsignpagePagenumber) {
    
    this.iEzsignpagePagenumber = iEzsignpagePagenumber;
    return this;
  }

   /**
   * The page number in the Ezsigndocument
   * @return iEzsignpagePagenumber
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1", required = true, value = "The page number in the Ezsigndocument")

  public Integer getiEzsignpagePagenumber() {
    return iEzsignpagePagenumber;
  }


  public void setiEzsignpagePagenumber(Integer iEzsignpagePagenumber) {
    this.iEzsignpagePagenumber = iEzsignpagePagenumber;
  }


  public EzsignpageResponse sImageUrl(String sImageUrl) {
    
    this.sImageUrl = sImageUrl;
    return this;
  }

   /**
   * The Url to the Ezsignpage&#39;s rasterized image.  Url will expire after 5 minutes.
   * @return sImageUrl
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The Url to the Ezsignpage's rasterized image.  Url will expire after 5 minutes.")

  public String getsImageUrl() {
    return sImageUrl;
  }


  public void setsImageUrl(String sImageUrl) {
    this.sImageUrl = sImageUrl;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EzsignpageResponse ezsignpageResponse = (EzsignpageResponse) o;
    return Objects.equals(this.pkiEzsignpageID, ezsignpageResponse.pkiEzsignpageID) &&
        Objects.equals(this.iEzsignpageWidthimage, ezsignpageResponse.iEzsignpageWidthimage) &&
        Objects.equals(this.iEzsignpageHeightimage, ezsignpageResponse.iEzsignpageHeightimage) &&
        Objects.equals(this.iEzsignpageWidthpdf, ezsignpageResponse.iEzsignpageWidthpdf) &&
        Objects.equals(this.iEzsignpageHeightpdf, ezsignpageResponse.iEzsignpageHeightpdf) &&
        Objects.equals(this.iEzsignpagePagenumber, ezsignpageResponse.iEzsignpagePagenumber) &&
        Objects.equals(this.sImageUrl, ezsignpageResponse.sImageUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pkiEzsignpageID, iEzsignpageWidthimage, iEzsignpageHeightimage, iEzsignpageWidthpdf, iEzsignpageHeightpdf, iEzsignpagePagenumber, sImageUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EzsignpageResponse {\n");
    sb.append("    pkiEzsignpageID: ").append(toIndentedString(pkiEzsignpageID)).append("\n");
    sb.append("    iEzsignpageWidthimage: ").append(toIndentedString(iEzsignpageWidthimage)).append("\n");
    sb.append("    iEzsignpageHeightimage: ").append(toIndentedString(iEzsignpageHeightimage)).append("\n");
    sb.append("    iEzsignpageWidthpdf: ").append(toIndentedString(iEzsignpageWidthpdf)).append("\n");
    sb.append("    iEzsignpageHeightpdf: ").append(toIndentedString(iEzsignpageHeightpdf)).append("\n");
    sb.append("    iEzsignpagePagenumber: ").append(toIndentedString(iEzsignpagePagenumber)).append("\n");
    sb.append("    sImageUrl: ").append(toIndentedString(sImageUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

