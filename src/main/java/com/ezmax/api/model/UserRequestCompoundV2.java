/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.ezmax.api.model.EmailRequest;
import com.ezmax.api.model.FieldEUserEzsignaccess;
import com.ezmax.api.model.FieldEUserLogintype;
import com.ezmax.api.model.FieldEUserType;
import com.ezmax.api.model.PhoneRequestV2;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * A User Object and children
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-20T21:23:27.769116941Z[Etc/UTC]", comments = "Generator version: 7.10.0")
public class UserRequestCompoundV2 {
  public static final String SERIALIZED_NAME_PKI_USER_I_D = "pkiUserID";
  @SerializedName(SERIALIZED_NAME_PKI_USER_I_D)
  @javax.annotation.Nullable
  private Integer pkiUserID;

  public static final String SERIALIZED_NAME_FKI_AGENT_I_D = "fkiAgentID";
  @SerializedName(SERIALIZED_NAME_FKI_AGENT_I_D)
  @javax.annotation.Nullable
  private Integer fkiAgentID;

  public static final String SERIALIZED_NAME_FKI_BROKER_I_D = "fkiBrokerID";
  @SerializedName(SERIALIZED_NAME_FKI_BROKER_I_D)
  @javax.annotation.Nullable
  private Integer fkiBrokerID;

  public static final String SERIALIZED_NAME_FKI_ASSISTANT_I_D = "fkiAssistantID";
  @SerializedName(SERIALIZED_NAME_FKI_ASSISTANT_I_D)
  @javax.annotation.Nullable
  private Integer fkiAssistantID;

  public static final String SERIALIZED_NAME_FKI_EMPLOYEE_I_D = "fkiEmployeeID";
  @SerializedName(SERIALIZED_NAME_FKI_EMPLOYEE_I_D)
  @javax.annotation.Nullable
  private Integer fkiEmployeeID;

  public static final String SERIALIZED_NAME_FKI_COMPANY_I_D_DEFAULT = "fkiCompanyIDDefault";
  @SerializedName(SERIALIZED_NAME_FKI_COMPANY_I_D_DEFAULT)
  @javax.annotation.Nonnull
  private Integer fkiCompanyIDDefault;

  public static final String SERIALIZED_NAME_FKI_DEPARTMENT_I_D_DEFAULT = "fkiDepartmentIDDefault";
  @SerializedName(SERIALIZED_NAME_FKI_DEPARTMENT_I_D_DEFAULT)
  @javax.annotation.Nonnull
  private Integer fkiDepartmentIDDefault;

  public static final String SERIALIZED_NAME_FKI_TIMEZONE_I_D = "fkiTimezoneID";
  @SerializedName(SERIALIZED_NAME_FKI_TIMEZONE_I_D)
  @javax.annotation.Nonnull
  private Integer fkiTimezoneID;

  public static final String SERIALIZED_NAME_FKI_LANGUAGE_I_D = "fkiLanguageID";
  @SerializedName(SERIALIZED_NAME_FKI_LANGUAGE_I_D)
  @javax.annotation.Nonnull
  private Integer fkiLanguageID;

  public static final String SERIALIZED_NAME_OBJ_EMAIL = "objEmail";
  @SerializedName(SERIALIZED_NAME_OBJ_EMAIL)
  @javax.annotation.Nonnull
  private EmailRequest objEmail;

  public static final String SERIALIZED_NAME_FKI_BILLINGENTITYINTERNAL_I_D = "fkiBillingentityinternalID";
  @SerializedName(SERIALIZED_NAME_FKI_BILLINGENTITYINTERNAL_I_D)
  @javax.annotation.Nonnull
  private Integer fkiBillingentityinternalID;

  public static final String SERIALIZED_NAME_OBJ_PHONE_HOME = "objPhoneHome";
  @SerializedName(SERIALIZED_NAME_OBJ_PHONE_HOME)
  @javax.annotation.Nullable
  private PhoneRequestV2 objPhoneHome;

  public static final String SERIALIZED_NAME_OBJ_PHONE_S_M_S = "objPhoneSMS";
  @SerializedName(SERIALIZED_NAME_OBJ_PHONE_S_M_S)
  @javax.annotation.Nullable
  private PhoneRequestV2 objPhoneSMS;

  public static final String SERIALIZED_NAME_FKI_SECRETQUESTION_I_D = "fkiSecretquestionID";
  @SerializedName(SERIALIZED_NAME_FKI_SECRETQUESTION_I_D)
  @javax.annotation.Nullable
  private Integer fkiSecretquestionID;

  public static final String SERIALIZED_NAME_S_USER_SECRETRESPONSE = "sUserSecretresponse";
  @SerializedName(SERIALIZED_NAME_S_USER_SECRETRESPONSE)
  @javax.annotation.Nullable
  private String sUserSecretresponse;

  public static final String SERIALIZED_NAME_FKI_MODULE_I_D_FORM = "fkiModuleIDForm";
  @SerializedName(SERIALIZED_NAME_FKI_MODULE_I_D_FORM)
  @javax.annotation.Nullable
  private Integer fkiModuleIDForm;

  public static final String SERIALIZED_NAME_E_USER_TYPE = "eUserType";
  @SerializedName(SERIALIZED_NAME_E_USER_TYPE)
  @javax.annotation.Nonnull
  private FieldEUserType eUserType;

  public static final String SERIALIZED_NAME_E_USER_LOGINTYPE = "eUserLogintype";
  @SerializedName(SERIALIZED_NAME_E_USER_LOGINTYPE)
  @javax.annotation.Nonnull
  private FieldEUserLogintype eUserLogintype;

  public static final String SERIALIZED_NAME_S_USER_FIRSTNAME = "sUserFirstname";
  @SerializedName(SERIALIZED_NAME_S_USER_FIRSTNAME)
  @javax.annotation.Nonnull
  private String sUserFirstname;

  public static final String SERIALIZED_NAME_S_USER_LASTNAME = "sUserLastname";
  @SerializedName(SERIALIZED_NAME_S_USER_LASTNAME)
  @javax.annotation.Nonnull
  private String sUserLastname;

  public static final String SERIALIZED_NAME_S_USER_LOGINNAME = "sUserLoginname";
  @SerializedName(SERIALIZED_NAME_S_USER_LOGINNAME)
  @javax.annotation.Nonnull
  private String sUserLoginname;

  public static final String SERIALIZED_NAME_S_USER_JOBTITLE = "sUserJobtitle";
  @SerializedName(SERIALIZED_NAME_S_USER_JOBTITLE)
  @javax.annotation.Nullable
  private String sUserJobtitle;

  public static final String SERIALIZED_NAME_E_USER_EZSIGNACCESS = "eUserEzsignaccess";
  @SerializedName(SERIALIZED_NAME_E_USER_EZSIGNACCESS)
  @javax.annotation.Nonnull
  private FieldEUserEzsignaccess eUserEzsignaccess;

  public static final String SERIALIZED_NAME_B_USER_ISACTIVE = "bUserIsactive";
  @SerializedName(SERIALIZED_NAME_B_USER_ISACTIVE)
  @javax.annotation.Nonnull
  private Boolean bUserIsactive;

  public static final String SERIALIZED_NAME_B_USER_VALIDATEBYADMINISTRATION = "bUserValidatebyadministration";
  @SerializedName(SERIALIZED_NAME_B_USER_VALIDATEBYADMINISTRATION)
  @javax.annotation.Nullable
  private Boolean bUserValidatebyadministration;

  public static final String SERIALIZED_NAME_B_USER_VALIDATEBYDIRECTOR = "bUserValidatebydirector";
  @SerializedName(SERIALIZED_NAME_B_USER_VALIDATEBYDIRECTOR)
  @javax.annotation.Nullable
  private Boolean bUserValidatebydirector;

  public static final String SERIALIZED_NAME_B_USER_ATTACHMENTAUTOVERIFIED = "bUserAttachmentautoverified";
  @SerializedName(SERIALIZED_NAME_B_USER_ATTACHMENTAUTOVERIFIED)
  @javax.annotation.Nullable
  private Boolean bUserAttachmentautoverified;

  public static final String SERIALIZED_NAME_B_USER_CHANGEPASSWORD = "bUserChangepassword";
  @SerializedName(SERIALIZED_NAME_B_USER_CHANGEPASSWORD)
  @javax.annotation.Nullable
  private Boolean bUserChangepassword;

  public UserRequestCompoundV2() {
  }

  public UserRequestCompoundV2 pkiUserID(@javax.annotation.Nullable Integer pkiUserID) {
    this.pkiUserID = pkiUserID;
    return this;
  }

  /**
   * The unique ID of the User
   * minimum: 0
   * @return pkiUserID
   */
  @javax.annotation.Nullable
  public Integer getPkiUserID() {
    return pkiUserID;
  }

  public void setPkiUserID(@javax.annotation.Nullable Integer pkiUserID) {
    this.pkiUserID = pkiUserID;
  }


  public UserRequestCompoundV2 fkiAgentID(@javax.annotation.Nullable Integer fkiAgentID) {
    this.fkiAgentID = fkiAgentID;
    return this;
  }

  /**
   * The unique ID of the Agent.
   * minimum: 0
   * @return fkiAgentID
   */
  @javax.annotation.Nullable
  public Integer getFkiAgentID() {
    return fkiAgentID;
  }

  public void setFkiAgentID(@javax.annotation.Nullable Integer fkiAgentID) {
    this.fkiAgentID = fkiAgentID;
  }


  public UserRequestCompoundV2 fkiBrokerID(@javax.annotation.Nullable Integer fkiBrokerID) {
    this.fkiBrokerID = fkiBrokerID;
    return this;
  }

  /**
   * The unique ID of the Broker.
   * minimum: 0
   * @return fkiBrokerID
   */
  @javax.annotation.Nullable
  public Integer getFkiBrokerID() {
    return fkiBrokerID;
  }

  public void setFkiBrokerID(@javax.annotation.Nullable Integer fkiBrokerID) {
    this.fkiBrokerID = fkiBrokerID;
  }


  public UserRequestCompoundV2 fkiAssistantID(@javax.annotation.Nullable Integer fkiAssistantID) {
    this.fkiAssistantID = fkiAssistantID;
    return this;
  }

  /**
   * The unique ID of the Assistant.
   * minimum: 0
   * @return fkiAssistantID
   */
  @javax.annotation.Nullable
  public Integer getFkiAssistantID() {
    return fkiAssistantID;
  }

  public void setFkiAssistantID(@javax.annotation.Nullable Integer fkiAssistantID) {
    this.fkiAssistantID = fkiAssistantID;
  }


  public UserRequestCompoundV2 fkiEmployeeID(@javax.annotation.Nullable Integer fkiEmployeeID) {
    this.fkiEmployeeID = fkiEmployeeID;
    return this;
  }

  /**
   * The unique ID of the Employee.
   * minimum: 0
   * @return fkiEmployeeID
   */
  @javax.annotation.Nullable
  public Integer getFkiEmployeeID() {
    return fkiEmployeeID;
  }

  public void setFkiEmployeeID(@javax.annotation.Nullable Integer fkiEmployeeID) {
    this.fkiEmployeeID = fkiEmployeeID;
  }


  public UserRequestCompoundV2 fkiCompanyIDDefault(@javax.annotation.Nonnull Integer fkiCompanyIDDefault) {
    this.fkiCompanyIDDefault = fkiCompanyIDDefault;
    return this;
  }

  /**
   * The unique ID of the Company
   * minimum: 1
   * maximum: 255
   * @return fkiCompanyIDDefault
   */
  @javax.annotation.Nonnull
  public Integer getFkiCompanyIDDefault() {
    return fkiCompanyIDDefault;
  }

  public void setFkiCompanyIDDefault(@javax.annotation.Nonnull Integer fkiCompanyIDDefault) {
    this.fkiCompanyIDDefault = fkiCompanyIDDefault;
  }


  public UserRequestCompoundV2 fkiDepartmentIDDefault(@javax.annotation.Nonnull Integer fkiDepartmentIDDefault) {
    this.fkiDepartmentIDDefault = fkiDepartmentIDDefault;
    return this;
  }

  /**
   * The unique ID of the Department
   * minimum: 0
   * @return fkiDepartmentIDDefault
   */
  @javax.annotation.Nonnull
  public Integer getFkiDepartmentIDDefault() {
    return fkiDepartmentIDDefault;
  }

  public void setFkiDepartmentIDDefault(@javax.annotation.Nonnull Integer fkiDepartmentIDDefault) {
    this.fkiDepartmentIDDefault = fkiDepartmentIDDefault;
  }


  public UserRequestCompoundV2 fkiTimezoneID(@javax.annotation.Nonnull Integer fkiTimezoneID) {
    this.fkiTimezoneID = fkiTimezoneID;
    return this;
  }

  /**
   * The unique ID of the Timezone
   * minimum: 0
   * @return fkiTimezoneID
   */
  @javax.annotation.Nonnull
  public Integer getFkiTimezoneID() {
    return fkiTimezoneID;
  }

  public void setFkiTimezoneID(@javax.annotation.Nonnull Integer fkiTimezoneID) {
    this.fkiTimezoneID = fkiTimezoneID;
  }


  public UserRequestCompoundV2 fkiLanguageID(@javax.annotation.Nonnull Integer fkiLanguageID) {
    this.fkiLanguageID = fkiLanguageID;
    return this;
  }

  /**
   * The unique ID of the Language.  Valid values:  |Value|Description| |-|-| |1|French| |2|English|
   * minimum: 1
   * maximum: 2
   * @return fkiLanguageID
   */
  @javax.annotation.Nonnull
  public Integer getFkiLanguageID() {
    return fkiLanguageID;
  }

  public void setFkiLanguageID(@javax.annotation.Nonnull Integer fkiLanguageID) {
    this.fkiLanguageID = fkiLanguageID;
  }


  public UserRequestCompoundV2 objEmail(@javax.annotation.Nonnull EmailRequest objEmail) {
    this.objEmail = objEmail;
    return this;
  }

  /**
   * An Email Object and children to create a complete structure
   * @return objEmail
   */
  @javax.annotation.Nonnull
  public EmailRequest getObjEmail() {
    return objEmail;
  }

  public void setObjEmail(@javax.annotation.Nonnull EmailRequest objEmail) {
    this.objEmail = objEmail;
  }


  public UserRequestCompoundV2 fkiBillingentityinternalID(@javax.annotation.Nonnull Integer fkiBillingentityinternalID) {
    this.fkiBillingentityinternalID = fkiBillingentityinternalID;
    return this;
  }

  /**
   * The unique ID of the Billingentityinternal.
   * minimum: 0
   * @return fkiBillingentityinternalID
   */
  @javax.annotation.Nonnull
  public Integer getFkiBillingentityinternalID() {
    return fkiBillingentityinternalID;
  }

  public void setFkiBillingentityinternalID(@javax.annotation.Nonnull Integer fkiBillingentityinternalID) {
    this.fkiBillingentityinternalID = fkiBillingentityinternalID;
  }


  public UserRequestCompoundV2 objPhoneHome(@javax.annotation.Nullable PhoneRequestV2 objPhoneHome) {
    this.objPhoneHome = objPhoneHome;
    return this;
  }

  /**
   * A Phone Object and children to create a complete structure
   * @return objPhoneHome
   */
  @javax.annotation.Nullable
  public PhoneRequestV2 getObjPhoneHome() {
    return objPhoneHome;
  }

  public void setObjPhoneHome(@javax.annotation.Nullable PhoneRequestV2 objPhoneHome) {
    this.objPhoneHome = objPhoneHome;
  }


  public UserRequestCompoundV2 objPhoneSMS(@javax.annotation.Nullable PhoneRequestV2 objPhoneSMS) {
    this.objPhoneSMS = objPhoneSMS;
    return this;
  }

  /**
   * A Phone Object and children to create a complete structure
   * @return objPhoneSMS
   */
  @javax.annotation.Nullable
  public PhoneRequestV2 getObjPhoneSMS() {
    return objPhoneSMS;
  }

  public void setObjPhoneSMS(@javax.annotation.Nullable PhoneRequestV2 objPhoneSMS) {
    this.objPhoneSMS = objPhoneSMS;
  }


  public UserRequestCompoundV2 fkiSecretquestionID(@javax.annotation.Nullable Integer fkiSecretquestionID) {
    this.fkiSecretquestionID = fkiSecretquestionID;
    return this;
  }

  /**
   * The unique ID of the Secretquestion.  Valid values:  |Value|Description| |-|-| |1|The name of the hospital in which you were born| |2|The name of your grade school| |3|The last name of your favorite teacher| |4|Your favorite sports team| |5|Your favorite TV show| |6|Your favorite movie| |7|The name of the street on which you grew up| |8|The name of your first employer| |9|Your first car| |10|Your favorite food| |11|The name of your first pet| |12|Favorite musician/band| |13|What instrument you play| |14|Your father&#39;s middle name| |15|Your mother&#39;s maiden name| |16|Name of your eldest child| |17|Your spouse&#39;s middle name| |18|Favorite restaurant| |19|Childhood nickname| |20|Favorite vacation destination| |21|Your boat&#39;s name| |22|Date of Birth (YYYY-MM-DD)| |22|Secret Code| |22|Your reference code|
   * minimum: 0
   * @return fkiSecretquestionID
   */
  @javax.annotation.Nullable
  public Integer getFkiSecretquestionID() {
    return fkiSecretquestionID;
  }

  public void setFkiSecretquestionID(@javax.annotation.Nullable Integer fkiSecretquestionID) {
    this.fkiSecretquestionID = fkiSecretquestionID;
  }


  public UserRequestCompoundV2 sUserSecretresponse(@javax.annotation.Nullable String sUserSecretresponse) {
    this.sUserSecretresponse = sUserSecretresponse;
    return this;
  }

  /**
   * The answer to the Secretquestion
   * @return sUserSecretresponse
   */
  @javax.annotation.Nullable
  public String getsUserSecretresponse() {
    return sUserSecretresponse;
  }

  public void setsUserSecretresponse(@javax.annotation.Nullable String sUserSecretresponse) {
    this.sUserSecretresponse = sUserSecretresponse;
  }


  public UserRequestCompoundV2 fkiModuleIDForm(@javax.annotation.Nullable Integer fkiModuleIDForm) {
    this.fkiModuleIDForm = fkiModuleIDForm;
    return this;
  }

  /**
   * The unique ID of the Module
   * minimum: 0
   * @return fkiModuleIDForm
   */
  @javax.annotation.Nullable
  public Integer getFkiModuleIDForm() {
    return fkiModuleIDForm;
  }

  public void setFkiModuleIDForm(@javax.annotation.Nullable Integer fkiModuleIDForm) {
    this.fkiModuleIDForm = fkiModuleIDForm;
  }


  public UserRequestCompoundV2 eUserType(@javax.annotation.Nonnull FieldEUserType eUserType) {
    this.eUserType = eUserType;
    return this;
  }

  /**
   * Get eUserType
   * @return eUserType
   */
  @javax.annotation.Nonnull
  public FieldEUserType geteUserType() {
    return eUserType;
  }

  public void seteUserType(@javax.annotation.Nonnull FieldEUserType eUserType) {
    this.eUserType = eUserType;
  }


  public UserRequestCompoundV2 eUserLogintype(@javax.annotation.Nonnull FieldEUserLogintype eUserLogintype) {
    this.eUserLogintype = eUserLogintype;
    return this;
  }

  /**
   * Get eUserLogintype
   * @return eUserLogintype
   */
  @javax.annotation.Nonnull
  public FieldEUserLogintype geteUserLogintype() {
    return eUserLogintype;
  }

  public void seteUserLogintype(@javax.annotation.Nonnull FieldEUserLogintype eUserLogintype) {
    this.eUserLogintype = eUserLogintype;
  }


  public UserRequestCompoundV2 sUserFirstname(@javax.annotation.Nonnull String sUserFirstname) {
    this.sUserFirstname = sUserFirstname;
    return this;
  }

  /**
   * The first name of the user
   * @return sUserFirstname
   */
  @javax.annotation.Nonnull
  public String getsUserFirstname() {
    return sUserFirstname;
  }

  public void setsUserFirstname(@javax.annotation.Nonnull String sUserFirstname) {
    this.sUserFirstname = sUserFirstname;
  }


  public UserRequestCompoundV2 sUserLastname(@javax.annotation.Nonnull String sUserLastname) {
    this.sUserLastname = sUserLastname;
    return this;
  }

  /**
   * The last name of the user
   * @return sUserLastname
   */
  @javax.annotation.Nonnull
  public String getsUserLastname() {
    return sUserLastname;
  }

  public void setsUserLastname(@javax.annotation.Nonnull String sUserLastname) {
    this.sUserLastname = sUserLastname;
  }


  public UserRequestCompoundV2 sUserLoginname(@javax.annotation.Nonnull String sUserLoginname) {
    this.sUserLoginname = sUserLoginname;
    return this;
  }

  /**
   * The login name of the User.
   * @return sUserLoginname
   */
  @javax.annotation.Nonnull
  public String getsUserLoginname() {
    return sUserLoginname;
  }

  public void setsUserLoginname(@javax.annotation.Nonnull String sUserLoginname) {
    this.sUserLoginname = sUserLoginname;
  }


  public UserRequestCompoundV2 sUserJobtitle(@javax.annotation.Nullable String sUserJobtitle) {
    this.sUserJobtitle = sUserJobtitle;
    return this;
  }

  /**
   * The job title of the user
   * @return sUserJobtitle
   */
  @javax.annotation.Nullable
  public String getsUserJobtitle() {
    return sUserJobtitle;
  }

  public void setsUserJobtitle(@javax.annotation.Nullable String sUserJobtitle) {
    this.sUserJobtitle = sUserJobtitle;
  }


  public UserRequestCompoundV2 eUserEzsignaccess(@javax.annotation.Nonnull FieldEUserEzsignaccess eUserEzsignaccess) {
    this.eUserEzsignaccess = eUserEzsignaccess;
    return this;
  }

  /**
   * Get eUserEzsignaccess
   * @return eUserEzsignaccess
   */
  @javax.annotation.Nonnull
  public FieldEUserEzsignaccess geteUserEzsignaccess() {
    return eUserEzsignaccess;
  }

  public void seteUserEzsignaccess(@javax.annotation.Nonnull FieldEUserEzsignaccess eUserEzsignaccess) {
    this.eUserEzsignaccess = eUserEzsignaccess;
  }


  public UserRequestCompoundV2 bUserIsactive(@javax.annotation.Nonnull Boolean bUserIsactive) {
    this.bUserIsactive = bUserIsactive;
    return this;
  }

  /**
   * Whether the User is active or not
   * @return bUserIsactive
   */
  @javax.annotation.Nonnull
  public Boolean getbUserIsactive() {
    return bUserIsactive;
  }

  public void setbUserIsactive(@javax.annotation.Nonnull Boolean bUserIsactive) {
    this.bUserIsactive = bUserIsactive;
  }


  public UserRequestCompoundV2 bUserValidatebyadministration(@javax.annotation.Nullable Boolean bUserValidatebyadministration) {
    this.bUserValidatebyadministration = bUserValidatebyadministration;
    return this;
  }

  /**
   * Whether if the transactions in which the User is implicated must be validated by administrative personnel or not
   * @return bUserValidatebyadministration
   */
  @javax.annotation.Nullable
  public Boolean getbUserValidatebyadministration() {
    return bUserValidatebyadministration;
  }

  public void setbUserValidatebyadministration(@javax.annotation.Nullable Boolean bUserValidatebyadministration) {
    this.bUserValidatebyadministration = bUserValidatebyadministration;
  }


  public UserRequestCompoundV2 bUserValidatebydirector(@javax.annotation.Nullable Boolean bUserValidatebydirector) {
    this.bUserValidatebydirector = bUserValidatebydirector;
    return this;
  }

  /**
   * Whether if the transactions in which the User is implicated must be validated by a director or not
   * @return bUserValidatebydirector
   */
  @javax.annotation.Nullable
  public Boolean getbUserValidatebydirector() {
    return bUserValidatebydirector;
  }

  public void setbUserValidatebydirector(@javax.annotation.Nullable Boolean bUserValidatebydirector) {
    this.bUserValidatebydirector = bUserValidatebydirector;
  }


  public UserRequestCompoundV2 bUserAttachmentautoverified(@javax.annotation.Nullable Boolean bUserAttachmentautoverified) {
    this.bUserAttachmentautoverified = bUserAttachmentautoverified;
    return this;
  }

  /**
   * Whether if Attachments uploaded by the User must be validated or not
   * @return bUserAttachmentautoverified
   */
  @javax.annotation.Nullable
  public Boolean getbUserAttachmentautoverified() {
    return bUserAttachmentautoverified;
  }

  public void setbUserAttachmentautoverified(@javax.annotation.Nullable Boolean bUserAttachmentautoverified) {
    this.bUserAttachmentautoverified = bUserAttachmentautoverified;
  }


  public UserRequestCompoundV2 bUserChangepassword(@javax.annotation.Nullable Boolean bUserChangepassword) {
    this.bUserChangepassword = bUserChangepassword;
    return this;
  }

  /**
   * Whether if the User is forced to change its password
   * @return bUserChangepassword
   */
  @javax.annotation.Nullable
  public Boolean getbUserChangepassword() {
    return bUserChangepassword;
  }

  public void setbUserChangepassword(@javax.annotation.Nullable Boolean bUserChangepassword) {
    this.bUserChangepassword = bUserChangepassword;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserRequestCompoundV2 userRequestCompoundV2 = (UserRequestCompoundV2) o;
    return Objects.equals(this.pkiUserID, userRequestCompoundV2.pkiUserID) &&
        Objects.equals(this.fkiAgentID, userRequestCompoundV2.fkiAgentID) &&
        Objects.equals(this.fkiBrokerID, userRequestCompoundV2.fkiBrokerID) &&
        Objects.equals(this.fkiAssistantID, userRequestCompoundV2.fkiAssistantID) &&
        Objects.equals(this.fkiEmployeeID, userRequestCompoundV2.fkiEmployeeID) &&
        Objects.equals(this.fkiCompanyIDDefault, userRequestCompoundV2.fkiCompanyIDDefault) &&
        Objects.equals(this.fkiDepartmentIDDefault, userRequestCompoundV2.fkiDepartmentIDDefault) &&
        Objects.equals(this.fkiTimezoneID, userRequestCompoundV2.fkiTimezoneID) &&
        Objects.equals(this.fkiLanguageID, userRequestCompoundV2.fkiLanguageID) &&
        Objects.equals(this.objEmail, userRequestCompoundV2.objEmail) &&
        Objects.equals(this.fkiBillingentityinternalID, userRequestCompoundV2.fkiBillingentityinternalID) &&
        Objects.equals(this.objPhoneHome, userRequestCompoundV2.objPhoneHome) &&
        Objects.equals(this.objPhoneSMS, userRequestCompoundV2.objPhoneSMS) &&
        Objects.equals(this.fkiSecretquestionID, userRequestCompoundV2.fkiSecretquestionID) &&
        Objects.equals(this.sUserSecretresponse, userRequestCompoundV2.sUserSecretresponse) &&
        Objects.equals(this.fkiModuleIDForm, userRequestCompoundV2.fkiModuleIDForm) &&
        Objects.equals(this.eUserType, userRequestCompoundV2.eUserType) &&
        Objects.equals(this.eUserLogintype, userRequestCompoundV2.eUserLogintype) &&
        Objects.equals(this.sUserFirstname, userRequestCompoundV2.sUserFirstname) &&
        Objects.equals(this.sUserLastname, userRequestCompoundV2.sUserLastname) &&
        Objects.equals(this.sUserLoginname, userRequestCompoundV2.sUserLoginname) &&
        Objects.equals(this.sUserJobtitle, userRequestCompoundV2.sUserJobtitle) &&
        Objects.equals(this.eUserEzsignaccess, userRequestCompoundV2.eUserEzsignaccess) &&
        Objects.equals(this.bUserIsactive, userRequestCompoundV2.bUserIsactive) &&
        Objects.equals(this.bUserValidatebyadministration, userRequestCompoundV2.bUserValidatebyadministration) &&
        Objects.equals(this.bUserValidatebydirector, userRequestCompoundV2.bUserValidatebydirector) &&
        Objects.equals(this.bUserAttachmentautoverified, userRequestCompoundV2.bUserAttachmentautoverified) &&
        Objects.equals(this.bUserChangepassword, userRequestCompoundV2.bUserChangepassword);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pkiUserID, fkiAgentID, fkiBrokerID, fkiAssistantID, fkiEmployeeID, fkiCompanyIDDefault, fkiDepartmentIDDefault, fkiTimezoneID, fkiLanguageID, objEmail, fkiBillingentityinternalID, objPhoneHome, objPhoneSMS, fkiSecretquestionID, sUserSecretresponse, fkiModuleIDForm, eUserType, eUserLogintype, sUserFirstname, sUserLastname, sUserLoginname, sUserJobtitle, eUserEzsignaccess, bUserIsactive, bUserValidatebyadministration, bUserValidatebydirector, bUserAttachmentautoverified, bUserChangepassword);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserRequestCompoundV2 {\n");
    sb.append("    pkiUserID: ").append(toIndentedString(pkiUserID)).append("\n");
    sb.append("    fkiAgentID: ").append(toIndentedString(fkiAgentID)).append("\n");
    sb.append("    fkiBrokerID: ").append(toIndentedString(fkiBrokerID)).append("\n");
    sb.append("    fkiAssistantID: ").append(toIndentedString(fkiAssistantID)).append("\n");
    sb.append("    fkiEmployeeID: ").append(toIndentedString(fkiEmployeeID)).append("\n");
    sb.append("    fkiCompanyIDDefault: ").append(toIndentedString(fkiCompanyIDDefault)).append("\n");
    sb.append("    fkiDepartmentIDDefault: ").append(toIndentedString(fkiDepartmentIDDefault)).append("\n");
    sb.append("    fkiTimezoneID: ").append(toIndentedString(fkiTimezoneID)).append("\n");
    sb.append("    fkiLanguageID: ").append(toIndentedString(fkiLanguageID)).append("\n");
    sb.append("    objEmail: ").append(toIndentedString(objEmail)).append("\n");
    sb.append("    fkiBillingentityinternalID: ").append(toIndentedString(fkiBillingentityinternalID)).append("\n");
    sb.append("    objPhoneHome: ").append(toIndentedString(objPhoneHome)).append("\n");
    sb.append("    objPhoneSMS: ").append(toIndentedString(objPhoneSMS)).append("\n");
    sb.append("    fkiSecretquestionID: ").append(toIndentedString(fkiSecretquestionID)).append("\n");
    sb.append("    sUserSecretresponse: ").append(toIndentedString(sUserSecretresponse)).append("\n");
    sb.append("    fkiModuleIDForm: ").append(toIndentedString(fkiModuleIDForm)).append("\n");
    sb.append("    eUserType: ").append(toIndentedString(eUserType)).append("\n");
    sb.append("    eUserLogintype: ").append(toIndentedString(eUserLogintype)).append("\n");
    sb.append("    sUserFirstname: ").append(toIndentedString(sUserFirstname)).append("\n");
    sb.append("    sUserLastname: ").append(toIndentedString(sUserLastname)).append("\n");
    sb.append("    sUserLoginname: ").append(toIndentedString(sUserLoginname)).append("\n");
    sb.append("    sUserJobtitle: ").append(toIndentedString(sUserJobtitle)).append("\n");
    sb.append("    eUserEzsignaccess: ").append(toIndentedString(eUserEzsignaccess)).append("\n");
    sb.append("    bUserIsactive: ").append(toIndentedString(bUserIsactive)).append("\n");
    sb.append("    bUserValidatebyadministration: ").append(toIndentedString(bUserValidatebyadministration)).append("\n");
    sb.append("    bUserValidatebydirector: ").append(toIndentedString(bUserValidatebydirector)).append("\n");
    sb.append("    bUserAttachmentautoverified: ").append(toIndentedString(bUserAttachmentautoverified)).append("\n");
    sb.append("    bUserChangepassword: ").append(toIndentedString(bUserChangepassword)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pkiUserID");
    openapiFields.add("fkiAgentID");
    openapiFields.add("fkiBrokerID");
    openapiFields.add("fkiAssistantID");
    openapiFields.add("fkiEmployeeID");
    openapiFields.add("fkiCompanyIDDefault");
    openapiFields.add("fkiDepartmentIDDefault");
    openapiFields.add("fkiTimezoneID");
    openapiFields.add("fkiLanguageID");
    openapiFields.add("objEmail");
    openapiFields.add("fkiBillingentityinternalID");
    openapiFields.add("objPhoneHome");
    openapiFields.add("objPhoneSMS");
    openapiFields.add("fkiSecretquestionID");
    openapiFields.add("sUserSecretresponse");
    openapiFields.add("fkiModuleIDForm");
    openapiFields.add("eUserType");
    openapiFields.add("eUserLogintype");
    openapiFields.add("sUserFirstname");
    openapiFields.add("sUserLastname");
    openapiFields.add("sUserLoginname");
    openapiFields.add("sUserJobtitle");
    openapiFields.add("eUserEzsignaccess");
    openapiFields.add("bUserIsactive");
    openapiFields.add("bUserValidatebyadministration");
    openapiFields.add("bUserValidatebydirector");
    openapiFields.add("bUserAttachmentautoverified");
    openapiFields.add("bUserChangepassword");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("fkiCompanyIDDefault");
    openapiRequiredFields.add("fkiDepartmentIDDefault");
    openapiRequiredFields.add("fkiTimezoneID");
    openapiRequiredFields.add("fkiLanguageID");
    openapiRequiredFields.add("objEmail");
    openapiRequiredFields.add("fkiBillingentityinternalID");
    openapiRequiredFields.add("eUserType");
    openapiRequiredFields.add("eUserLogintype");
    openapiRequiredFields.add("sUserFirstname");
    openapiRequiredFields.add("sUserLastname");
    openapiRequiredFields.add("sUserLoginname");
    openapiRequiredFields.add("eUserEzsignaccess");
    openapiRequiredFields.add("bUserIsactive");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UserRequestCompoundV2
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UserRequestCompoundV2.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UserRequestCompoundV2 is not found in the empty JSON string", UserRequestCompoundV2.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UserRequestCompoundV2.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UserRequestCompoundV2` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : UserRequestCompoundV2.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `objEmail`
      EmailRequest.validateJsonElement(jsonObj.get("objEmail"));
      // validate the optional field `objPhoneHome`
      if (jsonObj.get("objPhoneHome") != null && !jsonObj.get("objPhoneHome").isJsonNull()) {
        PhoneRequestV2.validateJsonElement(jsonObj.get("objPhoneHome"));
      }
      // validate the optional field `objPhoneSMS`
      if (jsonObj.get("objPhoneSMS") != null && !jsonObj.get("objPhoneSMS").isJsonNull()) {
        PhoneRequestV2.validateJsonElement(jsonObj.get("objPhoneSMS"));
      }
      if ((jsonObj.get("sUserSecretresponse") != null && !jsonObj.get("sUserSecretresponse").isJsonNull()) && !jsonObj.get("sUserSecretresponse").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sUserSecretresponse` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sUserSecretresponse").toString()));
      }
      // validate the required field `eUserType`
      FieldEUserType.validateJsonElement(jsonObj.get("eUserType"));
      // validate the required field `eUserLogintype`
      FieldEUserLogintype.validateJsonElement(jsonObj.get("eUserLogintype"));
      if (!jsonObj.get("sUserFirstname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sUserFirstname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sUserFirstname").toString()));
      }
      if (!jsonObj.get("sUserLastname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sUserLastname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sUserLastname").toString()));
      }
      if (!jsonObj.get("sUserLoginname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sUserLoginname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sUserLoginname").toString()));
      }
      if ((jsonObj.get("sUserJobtitle") != null && !jsonObj.get("sUserJobtitle").isJsonNull()) && !jsonObj.get("sUserJobtitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sUserJobtitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sUserJobtitle").toString()));
      }
      // validate the required field `eUserEzsignaccess`
      FieldEUserEzsignaccess.validateJsonElement(jsonObj.get("eUserEzsignaccess"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UserRequestCompoundV2.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UserRequestCompoundV2' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UserRequestCompoundV2> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UserRequestCompoundV2.class));

       return (TypeAdapter<T>) new TypeAdapter<UserRequestCompoundV2>() {
           @Override
           public void write(JsonWriter out, UserRequestCompoundV2 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UserRequestCompoundV2 read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UserRequestCompoundV2 given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UserRequestCompoundV2
   * @throws IOException if the JSON string is invalid with respect to UserRequestCompoundV2
   */
  public static UserRequestCompoundV2 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UserRequestCompoundV2.class);
  }

  /**
   * Convert an instance of UserRequestCompoundV2 to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

