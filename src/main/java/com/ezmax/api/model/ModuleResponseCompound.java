/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.ezmax.api.model.ModulesectionResponseCompound;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * A Module Object
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-09-24T21:29:12.733426105Z[Etc/UTC]")
public class ModuleResponseCompound {
  public static final String SERIALIZED_NAME_PKI_MODULE_I_D = "pkiModuleID";
  @SerializedName(SERIALIZED_NAME_PKI_MODULE_I_D)
  private Integer pkiModuleID;

  public static final String SERIALIZED_NAME_FKI_MODULEGROUP_I_D = "fkiModulegroupID";
  @SerializedName(SERIALIZED_NAME_FKI_MODULEGROUP_I_D)
  private Integer fkiModulegroupID;

  public static final String SERIALIZED_NAME_E_MODULE_INTERNALNAME = "eModuleInternalname";
  @SerializedName(SERIALIZED_NAME_E_MODULE_INTERNALNAME)
  private String eModuleInternalname;

  public static final String SERIALIZED_NAME_S_MODULE_NAME_X = "sModuleNameX";
  @SerializedName(SERIALIZED_NAME_S_MODULE_NAME_X)
  private String sModuleNameX;

  public static final String SERIALIZED_NAME_B_MODULE_REGISTERED = "bModuleRegistered";
  @SerializedName(SERIALIZED_NAME_B_MODULE_REGISTERED)
  private Boolean bModuleRegistered;

  public static final String SERIALIZED_NAME_B_MODULE_REGISTEREDAPI = "bModuleRegisteredapi";
  @SerializedName(SERIALIZED_NAME_B_MODULE_REGISTEREDAPI)
  private Boolean bModuleRegisteredapi;

  public static final String SERIALIZED_NAME_A_OBJ_MODULESECTION = "a_objModulesection";
  @SerializedName(SERIALIZED_NAME_A_OBJ_MODULESECTION)
  private List<ModulesectionResponseCompound> aObjModulesection = new ArrayList<>();

  public ModuleResponseCompound() {
  }

  public ModuleResponseCompound pkiModuleID(Integer pkiModuleID) {
    
    this.pkiModuleID = pkiModuleID;
    return this;
  }

   /**
   * The unique ID of the Module
   * minimum: 0
   * @return pkiModuleID
  **/
  @javax.annotation.Nonnull
  public Integer getPkiModuleID() {
    return pkiModuleID;
  }


  public void setPkiModuleID(Integer pkiModuleID) {
    this.pkiModuleID = pkiModuleID;
  }


  public ModuleResponseCompound fkiModulegroupID(Integer fkiModulegroupID) {
    
    this.fkiModulegroupID = fkiModulegroupID;
    return this;
  }

   /**
   * The unique ID of the Modulegroup
   * minimum: 1
   * maximum: 255
   * @return fkiModulegroupID
  **/
  @javax.annotation.Nonnull
  public Integer getFkiModulegroupID() {
    return fkiModulegroupID;
  }


  public void setFkiModulegroupID(Integer fkiModulegroupID) {
    this.fkiModulegroupID = fkiModulegroupID;
  }


  public ModuleResponseCompound eModuleInternalname(String eModuleInternalname) {
    
    this.eModuleInternalname = eModuleInternalname;
    return this;
  }

   /**
   * The Internal name of the Module.  This is theoretically an enum field but there are so many possibles values we decided not to list them all.
   * @return eModuleInternalname
  **/
  @javax.annotation.Nonnull
  public String geteModuleInternalname() {
    return eModuleInternalname;
  }


  public void seteModuleInternalname(String eModuleInternalname) {
    this.eModuleInternalname = eModuleInternalname;
  }


  public ModuleResponseCompound sModuleNameX(String sModuleNameX) {
    
    this.sModuleNameX = sModuleNameX;
    return this;
  }

   /**
   * The Name of the Module in the language of the requester
   * @return sModuleNameX
  **/
  @javax.annotation.Nonnull
  public String getsModuleNameX() {
    return sModuleNameX;
  }


  public void setsModuleNameX(String sModuleNameX) {
    this.sModuleNameX = sModuleNameX;
  }


  public ModuleResponseCompound bModuleRegistered(Boolean bModuleRegistered) {
    
    this.bModuleRegistered = bModuleRegistered;
    return this;
  }

   /**
   * Whether the Module is registered or not
   * @return bModuleRegistered
  **/
  @javax.annotation.Nonnull
  public Boolean getbModuleRegistered() {
    return bModuleRegistered;
  }


  public void setbModuleRegistered(Boolean bModuleRegistered) {
    this.bModuleRegistered = bModuleRegistered;
  }


  public ModuleResponseCompound bModuleRegisteredapi(Boolean bModuleRegisteredapi) {
    
    this.bModuleRegisteredapi = bModuleRegisteredapi;
    return this;
  }

   /**
   * Whether the Module is registered or not for api use
   * @return bModuleRegisteredapi
  **/
  @javax.annotation.Nonnull
  public Boolean getbModuleRegisteredapi() {
    return bModuleRegisteredapi;
  }


  public void setbModuleRegisteredapi(Boolean bModuleRegisteredapi) {
    this.bModuleRegisteredapi = bModuleRegisteredapi;
  }


  public ModuleResponseCompound aObjModulesection(List<ModulesectionResponseCompound> aObjModulesection) {
    
    this.aObjModulesection = aObjModulesection;
    return this;
  }

  public ModuleResponseCompound addAObjModulesectionItem(ModulesectionResponseCompound aObjModulesectionItem) {
    if (this.aObjModulesection == null) {
      this.aObjModulesection = new ArrayList<>();
    }
    this.aObjModulesection.add(aObjModulesectionItem);
    return this;
  }

   /**
   * Get aObjModulesection
   * @return aObjModulesection
  **/
  @javax.annotation.Nonnull
  public List<ModulesectionResponseCompound> getaObjModulesection() {
    return aObjModulesection;
  }


  public void setaObjModulesection(List<ModulesectionResponseCompound> aObjModulesection) {
    this.aObjModulesection = aObjModulesection;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModuleResponseCompound moduleResponseCompound = (ModuleResponseCompound) o;
    return Objects.equals(this.pkiModuleID, moduleResponseCompound.pkiModuleID) &&
        Objects.equals(this.fkiModulegroupID, moduleResponseCompound.fkiModulegroupID) &&
        Objects.equals(this.eModuleInternalname, moduleResponseCompound.eModuleInternalname) &&
        Objects.equals(this.sModuleNameX, moduleResponseCompound.sModuleNameX) &&
        Objects.equals(this.bModuleRegistered, moduleResponseCompound.bModuleRegistered) &&
        Objects.equals(this.bModuleRegisteredapi, moduleResponseCompound.bModuleRegisteredapi) &&
        Objects.equals(this.aObjModulesection, moduleResponseCompound.aObjModulesection);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pkiModuleID, fkiModulegroupID, eModuleInternalname, sModuleNameX, bModuleRegistered, bModuleRegisteredapi, aObjModulesection);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModuleResponseCompound {\n");
    sb.append("    pkiModuleID: ").append(toIndentedString(pkiModuleID)).append("\n");
    sb.append("    fkiModulegroupID: ").append(toIndentedString(fkiModulegroupID)).append("\n");
    sb.append("    eModuleInternalname: ").append(toIndentedString(eModuleInternalname)).append("\n");
    sb.append("    sModuleNameX: ").append(toIndentedString(sModuleNameX)).append("\n");
    sb.append("    bModuleRegistered: ").append(toIndentedString(bModuleRegistered)).append("\n");
    sb.append("    bModuleRegisteredapi: ").append(toIndentedString(bModuleRegisteredapi)).append("\n");
    sb.append("    aObjModulesection: ").append(toIndentedString(aObjModulesection)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pkiModuleID");
    openapiFields.add("fkiModulegroupID");
    openapiFields.add("eModuleInternalname");
    openapiFields.add("sModuleNameX");
    openapiFields.add("bModuleRegistered");
    openapiFields.add("bModuleRegisteredapi");
    openapiFields.add("a_objModulesection");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("pkiModuleID");
    openapiRequiredFields.add("fkiModulegroupID");
    openapiRequiredFields.add("eModuleInternalname");
    openapiRequiredFields.add("sModuleNameX");
    openapiRequiredFields.add("bModuleRegistered");
    openapiRequiredFields.add("bModuleRegisteredapi");
    openapiRequiredFields.add("a_objModulesection");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ModuleResponseCompound
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ModuleResponseCompound.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModuleResponseCompound is not found in the empty JSON string", ModuleResponseCompound.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ModuleResponseCompound.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ModuleResponseCompound` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ModuleResponseCompound.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("eModuleInternalname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `eModuleInternalname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("eModuleInternalname").toString()));
      }
      if (!jsonObj.get("sModuleNameX").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sModuleNameX` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sModuleNameX").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("a_objModulesection").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `a_objModulesection` to be an array in the JSON string but got `%s`", jsonObj.get("a_objModulesection").toString()));
      }

      JsonArray jsonArrayaObjModulesection = jsonObj.getAsJsonArray("a_objModulesection");
      // validate the required field `a_objModulesection` (array)
      for (int i = 0; i < jsonArrayaObjModulesection.size(); i++) {
        ModulesectionResponseCompound.validateJsonElement(jsonArrayaObjModulesection.get(i));
      };
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModuleResponseCompound.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModuleResponseCompound' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModuleResponseCompound> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModuleResponseCompound.class));

       return (TypeAdapter<T>) new TypeAdapter<ModuleResponseCompound>() {
           @Override
           public void write(JsonWriter out, ModuleResponseCompound value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModuleResponseCompound read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ModuleResponseCompound given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ModuleResponseCompound
  * @throws IOException if the JSON string is invalid with respect to ModuleResponseCompound
  */
  public static ModuleResponseCompound fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModuleResponseCompound.class);
  }

 /**
  * Convert an instance of ModuleResponseCompound to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

