/*
 * eZmax API Definition
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.4
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Generic Autocomplete Response
 */
@ApiModel(description = "Generic Autocomplete Response")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-25T21:43:39.288250Z[Etc/UTC]")
public class CustomAutocompleteElementResponse {
  public static final String SERIALIZED_NAME_S_CATEGORY = "sCategory";
  @SerializedName(SERIALIZED_NAME_S_CATEGORY)
  private String sCategory;

  public static final String SERIALIZED_NAME_S_LABEL = "sLabel";
  @SerializedName(SERIALIZED_NAME_S_LABEL)
  private String sLabel;

  public static final String SERIALIZED_NAME_M_VALUE = "mValue";
  @SerializedName(SERIALIZED_NAME_M_VALUE)
  private String mValue;

  public CustomAutocompleteElementResponse() { 
  }

  public CustomAutocompleteElementResponse sCategory(String sCategory) {
    
    this.sCategory = sCategory;
    return this;
  }

   /**
   * The Category for the dropdown or an empty string if not categorized
   * @return sCategory
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The Category for the dropdown or an empty string if not categorized")

  public String getsCategory() {
    return sCategory;
  }


  public void setsCategory(String sCategory) {
    this.sCategory = sCategory;
  }


  public CustomAutocompleteElementResponse sLabel(String sLabel) {
    
    this.sLabel = sLabel;
    return this;
  }

   /**
   * The Description of the element
   * @return sLabel
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The Description of the element")

  public String getsLabel() {
    return sLabel;
  }


  public void setsLabel(String sLabel) {
    this.sLabel = sLabel;
  }


  public CustomAutocompleteElementResponse mValue(String mValue) {
    
    this.mValue = mValue;
    return this;
  }

   /**
   * The Unique ID of the element
   * @return mValue
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The Unique ID of the element")

  public String getmValue() {
    return mValue;
  }


  public void setmValue(String mValue) {
    this.mValue = mValue;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomAutocompleteElementResponse customAutocompleteElementResponse = (CustomAutocompleteElementResponse) o;
    return Objects.equals(this.sCategory, customAutocompleteElementResponse.sCategory) &&
        Objects.equals(this.sLabel, customAutocompleteElementResponse.sLabel) &&
        Objects.equals(this.mValue, customAutocompleteElementResponse.mValue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sCategory, sLabel, mValue);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomAutocompleteElementResponse {\n");
    sb.append("    sCategory: ").append(toIndentedString(sCategory)).append("\n");
    sb.append("    sLabel: ").append(toIndentedString(sLabel)).append("\n");
    sb.append("    mValue: ").append(toIndentedString(mValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

