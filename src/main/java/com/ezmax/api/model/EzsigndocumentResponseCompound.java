/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.ezmax.api.model.CommonAudit;
import com.ezmax.api.model.ComputedEEzsigndocumentSteptype;
import com.ezmax.api.model.CustomEzsignfoldersignerassociationstatusResponse;
import com.ezmax.api.model.EzsigndocumentResponse;
import com.ezmax.api.model.EzsigndocumentdependencyResponse;
import com.ezmax.api.model.FieldEEzsigndocumentStep;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * An Ezsigndocument Object and children to create a complete structure
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-17T15:03:32.455495633Z[Etc/UTC]", comments = "Generator version: 7.10.0")
public class EzsigndocumentResponseCompound extends EzsigndocumentResponse {
  public static final String SERIALIZED_NAME_E_EZSIGNDOCUMENT_STEPTYPE = "eEzsigndocumentSteptype";
  @SerializedName(SERIALIZED_NAME_E_EZSIGNDOCUMENT_STEPTYPE)
  @javax.annotation.Nonnull
  private ComputedEEzsigndocumentSteptype eEzsigndocumentSteptype;

  public static final String SERIALIZED_NAME_I_EZSIGNDOCUMENT_STEPFORMTOTAL = "iEzsigndocumentStepformtotal";
  @SerializedName(SERIALIZED_NAME_I_EZSIGNDOCUMENT_STEPFORMTOTAL)
  @javax.annotation.Nonnull
  private Integer iEzsigndocumentStepformtotal;

  public static final String SERIALIZED_NAME_I_EZSIGNDOCUMENT_STEPFORMCURRENT = "iEzsigndocumentStepformcurrent";
  @SerializedName(SERIALIZED_NAME_I_EZSIGNDOCUMENT_STEPFORMCURRENT)
  @javax.annotation.Nonnull
  private Integer iEzsigndocumentStepformcurrent;

  public static final String SERIALIZED_NAME_I_EZSIGNDOCUMENT_STEPSIGNATURETOTAL = "iEzsigndocumentStepsignaturetotal";
  @SerializedName(SERIALIZED_NAME_I_EZSIGNDOCUMENT_STEPSIGNATURETOTAL)
  @javax.annotation.Nonnull
  private Integer iEzsigndocumentStepsignaturetotal;

  public static final String SERIALIZED_NAME_I_EZSIGNDOCUMENT_STEPSIGNATURE_CURRENT = "iEzsigndocumentStepsignatureCurrent";
  @SerializedName(SERIALIZED_NAME_I_EZSIGNDOCUMENT_STEPSIGNATURE_CURRENT)
  @javax.annotation.Nonnull
  private Integer iEzsigndocumentStepsignatureCurrent;

  public static final String SERIALIZED_NAME_A_OBJ_EZSIGNFOLDERSIGNERASSOCIATIONSTATUS = "a_objEzsignfoldersignerassociationstatus";
  @SerializedName(SERIALIZED_NAME_A_OBJ_EZSIGNFOLDERSIGNERASSOCIATIONSTATUS)
  @javax.annotation.Nonnull
  private List<CustomEzsignfoldersignerassociationstatusResponse> aObjEzsignfoldersignerassociationstatus = new ArrayList<>();

  public static final String SERIALIZED_NAME_A_OBJ_EZSIGNDOCUMENTDEPENDENCY = "a_objEzsigndocumentdependency";
  @SerializedName(SERIALIZED_NAME_A_OBJ_EZSIGNDOCUMENTDEPENDENCY)
  @javax.annotation.Nullable
  private List<EzsigndocumentdependencyResponse> aObjEzsigndocumentdependency = new ArrayList<>();

  public EzsigndocumentResponseCompound() {
  }

  public EzsigndocumentResponseCompound eEzsigndocumentSteptype(@javax.annotation.Nonnull ComputedEEzsigndocumentSteptype eEzsigndocumentSteptype) {
    this.eEzsigndocumentSteptype = eEzsigndocumentSteptype;
    return this;
  }

  /**
   * Get eEzsigndocumentSteptype
   * @return eEzsigndocumentSteptype
   */
  @javax.annotation.Nonnull
  public ComputedEEzsigndocumentSteptype geteEzsigndocumentSteptype() {
    return eEzsigndocumentSteptype;
  }

  public void seteEzsigndocumentSteptype(@javax.annotation.Nonnull ComputedEEzsigndocumentSteptype eEzsigndocumentSteptype) {
    this.eEzsigndocumentSteptype = eEzsigndocumentSteptype;
  }


  public EzsigndocumentResponseCompound iEzsigndocumentStepformtotal(@javax.annotation.Nonnull Integer iEzsigndocumentStepformtotal) {
    this.iEzsigndocumentStepformtotal = iEzsigndocumentStepformtotal;
    return this;
  }

  /**
   * The total number of steps in the form filling phase
   * @return iEzsigndocumentStepformtotal
   */
  @javax.annotation.Nonnull
  public Integer getiEzsigndocumentStepformtotal() {
    return iEzsigndocumentStepformtotal;
  }

  public void setiEzsigndocumentStepformtotal(@javax.annotation.Nonnull Integer iEzsigndocumentStepformtotal) {
    this.iEzsigndocumentStepformtotal = iEzsigndocumentStepformtotal;
  }


  public EzsigndocumentResponseCompound iEzsigndocumentStepformcurrent(@javax.annotation.Nonnull Integer iEzsigndocumentStepformcurrent) {
    this.iEzsigndocumentStepformcurrent = iEzsigndocumentStepformcurrent;
    return this;
  }

  /**
   * The current step in the form filling phase
   * @return iEzsigndocumentStepformcurrent
   */
  @javax.annotation.Nonnull
  public Integer getiEzsigndocumentStepformcurrent() {
    return iEzsigndocumentStepformcurrent;
  }

  public void setiEzsigndocumentStepformcurrent(@javax.annotation.Nonnull Integer iEzsigndocumentStepformcurrent) {
    this.iEzsigndocumentStepformcurrent = iEzsigndocumentStepformcurrent;
  }


  public EzsigndocumentResponseCompound iEzsigndocumentStepsignaturetotal(@javax.annotation.Nonnull Integer iEzsigndocumentStepsignaturetotal) {
    this.iEzsigndocumentStepsignaturetotal = iEzsigndocumentStepsignaturetotal;
    return this;
  }

  /**
   * The total number of steps in the signature filling phase
   * @return iEzsigndocumentStepsignaturetotal
   */
  @javax.annotation.Nonnull
  public Integer getiEzsigndocumentStepsignaturetotal() {
    return iEzsigndocumentStepsignaturetotal;
  }

  public void setiEzsigndocumentStepsignaturetotal(@javax.annotation.Nonnull Integer iEzsigndocumentStepsignaturetotal) {
    this.iEzsigndocumentStepsignaturetotal = iEzsigndocumentStepsignaturetotal;
  }


  public EzsigndocumentResponseCompound iEzsigndocumentStepsignatureCurrent(@javax.annotation.Nonnull Integer iEzsigndocumentStepsignatureCurrent) {
    this.iEzsigndocumentStepsignatureCurrent = iEzsigndocumentStepsignatureCurrent;
    return this;
  }

  /**
   * The current step in the signature phase
   * @return iEzsigndocumentStepsignatureCurrent
   */
  @javax.annotation.Nonnull
  public Integer getiEzsigndocumentStepsignatureCurrent() {
    return iEzsigndocumentStepsignatureCurrent;
  }

  public void setiEzsigndocumentStepsignatureCurrent(@javax.annotation.Nonnull Integer iEzsigndocumentStepsignatureCurrent) {
    this.iEzsigndocumentStepsignatureCurrent = iEzsigndocumentStepsignatureCurrent;
  }


  public EzsigndocumentResponseCompound aObjEzsignfoldersignerassociationstatus(@javax.annotation.Nonnull List<CustomEzsignfoldersignerassociationstatusResponse> aObjEzsignfoldersignerassociationstatus) {
    this.aObjEzsignfoldersignerassociationstatus = aObjEzsignfoldersignerassociationstatus;
    return this;
  }

  public EzsigndocumentResponseCompound addAObjEzsignfoldersignerassociationstatusItem(CustomEzsignfoldersignerassociationstatusResponse aObjEzsignfoldersignerassociationstatusItem) {
    if (this.aObjEzsignfoldersignerassociationstatus == null) {
      this.aObjEzsignfoldersignerassociationstatus = new ArrayList<>();
    }
    this.aObjEzsignfoldersignerassociationstatus.add(aObjEzsignfoldersignerassociationstatusItem);
    return this;
  }

  /**
   * Get aObjEzsignfoldersignerassociationstatus
   * @return aObjEzsignfoldersignerassociationstatus
   */
  @javax.annotation.Nonnull
  public List<CustomEzsignfoldersignerassociationstatusResponse> getaObjEzsignfoldersignerassociationstatus() {
    return aObjEzsignfoldersignerassociationstatus;
  }

  public void setaObjEzsignfoldersignerassociationstatus(@javax.annotation.Nonnull List<CustomEzsignfoldersignerassociationstatusResponse> aObjEzsignfoldersignerassociationstatus) {
    this.aObjEzsignfoldersignerassociationstatus = aObjEzsignfoldersignerassociationstatus;
  }


  public EzsigndocumentResponseCompound aObjEzsigndocumentdependency(@javax.annotation.Nullable List<EzsigndocumentdependencyResponse> aObjEzsigndocumentdependency) {
    this.aObjEzsigndocumentdependency = aObjEzsigndocumentdependency;
    return this;
  }

  public EzsigndocumentResponseCompound addAObjEzsigndocumentdependencyItem(EzsigndocumentdependencyResponse aObjEzsigndocumentdependencyItem) {
    if (this.aObjEzsigndocumentdependency == null) {
      this.aObjEzsigndocumentdependency = new ArrayList<>();
    }
    this.aObjEzsigndocumentdependency.add(aObjEzsigndocumentdependencyItem);
    return this;
  }

  /**
   * Get aObjEzsigndocumentdependency
   * @return aObjEzsigndocumentdependency
   */
  @javax.annotation.Nullable
  public List<EzsigndocumentdependencyResponse> getaObjEzsigndocumentdependency() {
    return aObjEzsigndocumentdependency;
  }

  public void setaObjEzsigndocumentdependency(@javax.annotation.Nullable List<EzsigndocumentdependencyResponse> aObjEzsigndocumentdependency) {
    this.aObjEzsigndocumentdependency = aObjEzsigndocumentdependency;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EzsigndocumentResponseCompound ezsigndocumentResponseCompound = (EzsigndocumentResponseCompound) o;
    return Objects.equals(this.eEzsigndocumentSteptype, ezsigndocumentResponseCompound.eEzsigndocumentSteptype) &&
        Objects.equals(this.iEzsigndocumentStepformtotal, ezsigndocumentResponseCompound.iEzsigndocumentStepformtotal) &&
        Objects.equals(this.iEzsigndocumentStepformcurrent, ezsigndocumentResponseCompound.iEzsigndocumentStepformcurrent) &&
        Objects.equals(this.iEzsigndocumentStepsignaturetotal, ezsigndocumentResponseCompound.iEzsigndocumentStepsignaturetotal) &&
        Objects.equals(this.iEzsigndocumentStepsignatureCurrent, ezsigndocumentResponseCompound.iEzsigndocumentStepsignatureCurrent) &&
        Objects.equals(this.aObjEzsignfoldersignerassociationstatus, ezsigndocumentResponseCompound.aObjEzsignfoldersignerassociationstatus) &&
        Objects.equals(this.aObjEzsigndocumentdependency, ezsigndocumentResponseCompound.aObjEzsigndocumentdependency) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(eEzsigndocumentSteptype, iEzsigndocumentStepformtotal, iEzsigndocumentStepformcurrent, iEzsigndocumentStepsignaturetotal, iEzsigndocumentStepsignatureCurrent, aObjEzsignfoldersignerassociationstatus, aObjEzsigndocumentdependency, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EzsigndocumentResponseCompound {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    eEzsigndocumentSteptype: ").append(toIndentedString(eEzsigndocumentSteptype)).append("\n");
    sb.append("    iEzsigndocumentStepformtotal: ").append(toIndentedString(iEzsigndocumentStepformtotal)).append("\n");
    sb.append("    iEzsigndocumentStepformcurrent: ").append(toIndentedString(iEzsigndocumentStepformcurrent)).append("\n");
    sb.append("    iEzsigndocumentStepsignaturetotal: ").append(toIndentedString(iEzsigndocumentStepsignaturetotal)).append("\n");
    sb.append("    iEzsigndocumentStepsignatureCurrent: ").append(toIndentedString(iEzsigndocumentStepsignatureCurrent)).append("\n");
    sb.append("    aObjEzsignfoldersignerassociationstatus: ").append(toIndentedString(aObjEzsignfoldersignerassociationstatus)).append("\n");
    sb.append("    aObjEzsigndocumentdependency: ").append(toIndentedString(aObjEzsigndocumentdependency)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pkiEzsigndocumentID");
    openapiFields.add("fkiEzsignfolderID");
    openapiFields.add("fkiEzsignfoldersignerassociationIDDeclinedtosign");
    openapiFields.add("dtEzsigndocumentDuedate");
    openapiFields.add("dtEzsignformCompleted");
    openapiFields.add("fkiLanguageID");
    openapiFields.add("sEzsigndocumentName");
    openapiFields.add("eEzsigndocumentStep");
    openapiFields.add("dtEzsigndocumentFirstsend");
    openapiFields.add("dtEzsigndocumentLastsend");
    openapiFields.add("iEzsigndocumentOrder");
    openapiFields.add("iEzsigndocumentPagetotal");
    openapiFields.add("iEzsigndocumentSignaturesigned");
    openapiFields.add("iEzsigndocumentSignaturetotal");
    openapiFields.add("iEzsigndocumentFormfieldtotal");
    openapiFields.add("sEzsigndocumentMD5initial");
    openapiFields.add("tEzsigndocumentDeclinedtosignreason");
    openapiFields.add("sEzsigndocumentMD5signed");
    openapiFields.add("bEzsigndocumentEzsignform");
    openapiFields.add("bEzsigndocumentHassignedsignatures");
    openapiFields.add("objAudit");
    openapiFields.add("sEzsigndocumentExternalid");
    openapiFields.add("iEzsigndocumentEzsignsignatureattachmenttotal");
    openapiFields.add("iEzsigndocumentEzsigndiscussiontotal");
    openapiFields.add("eEzsigndocumentSteptype");
    openapiFields.add("iEzsigndocumentStepformtotal");
    openapiFields.add("iEzsigndocumentStepformcurrent");
    openapiFields.add("iEzsigndocumentStepsignaturetotal");
    openapiFields.add("iEzsigndocumentStepsignatureCurrent");
    openapiFields.add("a_objEzsignfoldersignerassociationstatus");
    openapiFields.add("a_objEzsigndocumentdependency");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("eEzsigndocumentSteptype");
    openapiRequiredFields.add("iEzsigndocumentStepformtotal");
    openapiRequiredFields.add("iEzsigndocumentStepformcurrent");
    openapiRequiredFields.add("iEzsigndocumentStepsignaturetotal");
    openapiRequiredFields.add("iEzsigndocumentStepsignatureCurrent");
    openapiRequiredFields.add("a_objEzsignfoldersignerassociationstatus");
    openapiRequiredFields.add("pkiEzsigndocumentID");
    openapiRequiredFields.add("fkiEzsignfolderID");
    openapiRequiredFields.add("dtEzsigndocumentDuedate");
    openapiRequiredFields.add("sEzsigndocumentName");
    openapiRequiredFields.add("eEzsigndocumentStep");
    openapiRequiredFields.add("iEzsigndocumentOrder");
    openapiRequiredFields.add("iEzsigndocumentPagetotal");
    openapiRequiredFields.add("iEzsigndocumentSignaturesigned");
    openapiRequiredFields.add("iEzsigndocumentSignaturetotal");
    openapiRequiredFields.add("iEzsigndocumentFormfieldtotal");
    openapiRequiredFields.add("iEzsigndocumentEzsignsignatureattachmenttotal");
    openapiRequiredFields.add("iEzsigndocumentEzsigndiscussiontotal");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EzsigndocumentResponseCompound
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EzsigndocumentResponseCompound.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EzsigndocumentResponseCompound is not found in the empty JSON string", EzsigndocumentResponseCompound.openapiRequiredFields.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `eEzsigndocumentSteptype`
      ComputedEEzsigndocumentSteptype.validateJsonElement(jsonObj.get("eEzsigndocumentSteptype"));
      // ensure the json data is an array
      if (!jsonObj.get("a_objEzsignfoldersignerassociationstatus").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `a_objEzsignfoldersignerassociationstatus` to be an array in the JSON string but got `%s`", jsonObj.get("a_objEzsignfoldersignerassociationstatus").toString()));
      }

      JsonArray jsonArrayaObjEzsignfoldersignerassociationstatus = jsonObj.getAsJsonArray("a_objEzsignfoldersignerassociationstatus");
      // validate the required field `a_objEzsignfoldersignerassociationstatus` (array)
      for (int i = 0; i < jsonArrayaObjEzsignfoldersignerassociationstatus.size(); i++) {
        CustomEzsignfoldersignerassociationstatusResponse.validateJsonElement(jsonArrayaObjEzsignfoldersignerassociationstatus.get(i));
      };
      if (jsonObj.get("a_objEzsigndocumentdependency") != null && !jsonObj.get("a_objEzsigndocumentdependency").isJsonNull()) {
        JsonArray jsonArrayaObjEzsigndocumentdependency = jsonObj.getAsJsonArray("a_objEzsigndocumentdependency");
        if (jsonArrayaObjEzsigndocumentdependency != null) {
          // ensure the json data is an array
          if (!jsonObj.get("a_objEzsigndocumentdependency").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `a_objEzsigndocumentdependency` to be an array in the JSON string but got `%s`", jsonObj.get("a_objEzsigndocumentdependency").toString()));
          }

          // validate the optional field `a_objEzsigndocumentdependency` (array)
          for (int i = 0; i < jsonArrayaObjEzsigndocumentdependency.size(); i++) {
            EzsigndocumentdependencyResponse.validateJsonElement(jsonArrayaObjEzsigndocumentdependency.get(i));
          };
        }
      }
  }


  /**
   * Create an instance of EzsigndocumentResponseCompound given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EzsigndocumentResponseCompound
   * @throws IOException if the JSON string is invalid with respect to EzsigndocumentResponseCompound
   */
  public static EzsigndocumentResponseCompound fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EzsigndocumentResponseCompound.class);
  }

  /**
   * Convert an instance of EzsigndocumentResponseCompound to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

