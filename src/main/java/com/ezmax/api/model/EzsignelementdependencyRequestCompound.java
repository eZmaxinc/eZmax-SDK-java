/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.ezmax.api.model.FieldEEzsignelementdependencyOperator;
import com.ezmax.api.model.FieldEEzsignelementdependencyValidation;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * An Ezsignelementdependency Object and children to create a complete structure
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-30T20:25:06.858397322Z[Etc/UTC]", comments = "Generator version: 7.11.0")
public class EzsignelementdependencyRequestCompound {
  public static final String SERIALIZED_NAME_PKI_EZSIGNELEMENTDEPENDENCY_I_D = "pkiEzsignelementdependencyID";
  @SerializedName(SERIALIZED_NAME_PKI_EZSIGNELEMENTDEPENDENCY_I_D)
  @javax.annotation.Nullable
  private Integer pkiEzsignelementdependencyID;

  public static final String SERIALIZED_NAME_FKI_EZSIGNFORMFIELD_I_D_VALIDATION = "fkiEzsignformfieldIDValidation";
  @SerializedName(SERIALIZED_NAME_FKI_EZSIGNFORMFIELD_I_D_VALIDATION)
  @javax.annotation.Nullable
  private Integer fkiEzsignformfieldIDValidation;

  public static final String SERIALIZED_NAME_FKI_EZSIGNFORMFIELDGROUP_I_D_VALIDATION = "fkiEzsignformfieldgroupIDValidation";
  @SerializedName(SERIALIZED_NAME_FKI_EZSIGNFORMFIELDGROUP_I_D_VALIDATION)
  @javax.annotation.Nullable
  private Integer fkiEzsignformfieldgroupIDValidation;

  public static final String SERIALIZED_NAME_S_EZSIGNELEMENTDEPENDENCY_EZSIGNFORMFIELDGROUPLABEL = "sEzsignelementdependencyEzsignformfieldgrouplabel";
  @SerializedName(SERIALIZED_NAME_S_EZSIGNELEMENTDEPENDENCY_EZSIGNFORMFIELDGROUPLABEL)
  @javax.annotation.Nullable
  private String sEzsignelementdependencyEzsignformfieldgrouplabel;

  public static final String SERIALIZED_NAME_S_EZSIGNELEMENTDEPENDENCY_EZSIGNFORMFIELDLABEL = "sEzsignelementdependencyEzsignformfieldlabel";
  @SerializedName(SERIALIZED_NAME_S_EZSIGNELEMENTDEPENDENCY_EZSIGNFORMFIELDLABEL)
  @javax.annotation.Nullable
  private String sEzsignelementdependencyEzsignformfieldlabel;

  public static final String SERIALIZED_NAME_E_EZSIGNELEMENTDEPENDENCY_VALIDATION = "eEzsignelementdependencyValidation";
  @SerializedName(SERIALIZED_NAME_E_EZSIGNELEMENTDEPENDENCY_VALIDATION)
  @javax.annotation.Nonnull
  private FieldEEzsignelementdependencyValidation eEzsignelementdependencyValidation;

  public static final String SERIALIZED_NAME_B_EZSIGNELEMENTDEPENDENCY_SELECTED = "bEzsignelementdependencySelected";
  @SerializedName(SERIALIZED_NAME_B_EZSIGNELEMENTDEPENDENCY_SELECTED)
  @javax.annotation.Nullable
  private Boolean bEzsignelementdependencySelected;

  public static final String SERIALIZED_NAME_E_EZSIGNELEMENTDEPENDENCY_OPERATOR = "eEzsignelementdependencyOperator";
  @SerializedName(SERIALIZED_NAME_E_EZSIGNELEMENTDEPENDENCY_OPERATOR)
  @javax.annotation.Nullable
  private FieldEEzsignelementdependencyOperator eEzsignelementdependencyOperator;

  public static final String SERIALIZED_NAME_S_EZSIGNELEMENTDEPENDENCY_VALUE = "sEzsignelementdependencyValue";
  @SerializedName(SERIALIZED_NAME_S_EZSIGNELEMENTDEPENDENCY_VALUE)
  @javax.annotation.Nullable
  private String sEzsignelementdependencyValue;

  public EzsignelementdependencyRequestCompound() {
  }

  public EzsignelementdependencyRequestCompound pkiEzsignelementdependencyID(@javax.annotation.Nullable Integer pkiEzsignelementdependencyID) {
    this.pkiEzsignelementdependencyID = pkiEzsignelementdependencyID;
    return this;
  }

  /**
   * The unique ID of the Ezsignelementdependency
   * minimum: 0
   * maximum: 16777215
   * @return pkiEzsignelementdependencyID
   */
  @javax.annotation.Nullable
  public Integer getPkiEzsignelementdependencyID() {
    return pkiEzsignelementdependencyID;
  }

  public void setPkiEzsignelementdependencyID(@javax.annotation.Nullable Integer pkiEzsignelementdependencyID) {
    this.pkiEzsignelementdependencyID = pkiEzsignelementdependencyID;
  }


  public EzsignelementdependencyRequestCompound fkiEzsignformfieldIDValidation(@javax.annotation.Nullable Integer fkiEzsignformfieldIDValidation) {
    this.fkiEzsignformfieldIDValidation = fkiEzsignformfieldIDValidation;
    return this;
  }

  /**
   * The unique ID of the Ezsignformfield
   * minimum: 0
   * @return fkiEzsignformfieldIDValidation
   */
  @javax.annotation.Nullable
  public Integer getFkiEzsignformfieldIDValidation() {
    return fkiEzsignformfieldIDValidation;
  }

  public void setFkiEzsignformfieldIDValidation(@javax.annotation.Nullable Integer fkiEzsignformfieldIDValidation) {
    this.fkiEzsignformfieldIDValidation = fkiEzsignformfieldIDValidation;
  }


  public EzsignelementdependencyRequestCompound fkiEzsignformfieldgroupIDValidation(@javax.annotation.Nullable Integer fkiEzsignformfieldgroupIDValidation) {
    this.fkiEzsignformfieldgroupIDValidation = fkiEzsignformfieldgroupIDValidation;
    return this;
  }

  /**
   * The unique ID of the Ezsignformfieldgroup
   * minimum: 0
   * @return fkiEzsignformfieldgroupIDValidation
   */
  @javax.annotation.Nullable
  public Integer getFkiEzsignformfieldgroupIDValidation() {
    return fkiEzsignformfieldgroupIDValidation;
  }

  public void setFkiEzsignformfieldgroupIDValidation(@javax.annotation.Nullable Integer fkiEzsignformfieldgroupIDValidation) {
    this.fkiEzsignformfieldgroupIDValidation = fkiEzsignformfieldgroupIDValidation;
  }


  public EzsignelementdependencyRequestCompound sEzsignelementdependencyEzsignformfieldgrouplabel(@javax.annotation.Nullable String sEzsignelementdependencyEzsignformfieldgrouplabel) {
    this.sEzsignelementdependencyEzsignformfieldgrouplabel = sEzsignelementdependencyEzsignformfieldgrouplabel;
    return this;
  }

  /**
   * The Label for the Ezsignformfieldgroup
   * @return sEzsignelementdependencyEzsignformfieldgrouplabel
   */
  @javax.annotation.Nullable
  public String getsEzsignelementdependencyEzsignformfieldgrouplabel() {
    return sEzsignelementdependencyEzsignformfieldgrouplabel;
  }

  public void setsEzsignelementdependencyEzsignformfieldgrouplabel(@javax.annotation.Nullable String sEzsignelementdependencyEzsignformfieldgrouplabel) {
    this.sEzsignelementdependencyEzsignformfieldgrouplabel = sEzsignelementdependencyEzsignformfieldgrouplabel;
  }


  public EzsignelementdependencyRequestCompound sEzsignelementdependencyEzsignformfieldlabel(@javax.annotation.Nullable String sEzsignelementdependencyEzsignformfieldlabel) {
    this.sEzsignelementdependencyEzsignformfieldlabel = sEzsignelementdependencyEzsignformfieldlabel;
    return this;
  }

  /**
   * The Label for the Ezsignformfield
   * @return sEzsignelementdependencyEzsignformfieldlabel
   */
  @javax.annotation.Nullable
  public String getsEzsignelementdependencyEzsignformfieldlabel() {
    return sEzsignelementdependencyEzsignformfieldlabel;
  }

  public void setsEzsignelementdependencyEzsignformfieldlabel(@javax.annotation.Nullable String sEzsignelementdependencyEzsignformfieldlabel) {
    this.sEzsignelementdependencyEzsignformfieldlabel = sEzsignelementdependencyEzsignformfieldlabel;
  }


  public EzsignelementdependencyRequestCompound eEzsignelementdependencyValidation(@javax.annotation.Nonnull FieldEEzsignelementdependencyValidation eEzsignelementdependencyValidation) {
    this.eEzsignelementdependencyValidation = eEzsignelementdependencyValidation;
    return this;
  }

  /**
   * Get eEzsignelementdependencyValidation
   * @return eEzsignelementdependencyValidation
   */
  @javax.annotation.Nonnull
  public FieldEEzsignelementdependencyValidation geteEzsignelementdependencyValidation() {
    return eEzsignelementdependencyValidation;
  }

  public void seteEzsignelementdependencyValidation(@javax.annotation.Nonnull FieldEEzsignelementdependencyValidation eEzsignelementdependencyValidation) {
    this.eEzsignelementdependencyValidation = eEzsignelementdependencyValidation;
  }


  public EzsignelementdependencyRequestCompound bEzsignelementdependencySelected(@javax.annotation.Nullable Boolean bEzsignelementdependencySelected) {
    this.bEzsignelementdependencySelected = bEzsignelementdependencySelected;
    return this;
  }

  /**
   * Whether if it&#39;s selected or not when using eEzsignelementdependencyValidation &#x3D; Selected
   * @return bEzsignelementdependencySelected
   */
  @javax.annotation.Nullable
  public Boolean getbEzsignelementdependencySelected() {
    return bEzsignelementdependencySelected;
  }

  public void setbEzsignelementdependencySelected(@javax.annotation.Nullable Boolean bEzsignelementdependencySelected) {
    this.bEzsignelementdependencySelected = bEzsignelementdependencySelected;
  }


  public EzsignelementdependencyRequestCompound eEzsignelementdependencyOperator(@javax.annotation.Nullable FieldEEzsignelementdependencyOperator eEzsignelementdependencyOperator) {
    this.eEzsignelementdependencyOperator = eEzsignelementdependencyOperator;
    return this;
  }

  /**
   * Get eEzsignelementdependencyOperator
   * @return eEzsignelementdependencyOperator
   */
  @javax.annotation.Nullable
  public FieldEEzsignelementdependencyOperator geteEzsignelementdependencyOperator() {
    return eEzsignelementdependencyOperator;
  }

  public void seteEzsignelementdependencyOperator(@javax.annotation.Nullable FieldEEzsignelementdependencyOperator eEzsignelementdependencyOperator) {
    this.eEzsignelementdependencyOperator = eEzsignelementdependencyOperator;
  }


  public EzsignelementdependencyRequestCompound sEzsignelementdependencyValue(@javax.annotation.Nullable String sEzsignelementdependencyValue) {
    this.sEzsignelementdependencyValue = sEzsignelementdependencyValue;
    return this;
  }

  /**
   * The value of the Ezsignelementdependency
   * @return sEzsignelementdependencyValue
   */
  @javax.annotation.Nullable
  public String getsEzsignelementdependencyValue() {
    return sEzsignelementdependencyValue;
  }

  public void setsEzsignelementdependencyValue(@javax.annotation.Nullable String sEzsignelementdependencyValue) {
    this.sEzsignelementdependencyValue = sEzsignelementdependencyValue;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EzsignelementdependencyRequestCompound ezsignelementdependencyRequestCompound = (EzsignelementdependencyRequestCompound) o;
    return Objects.equals(this.pkiEzsignelementdependencyID, ezsignelementdependencyRequestCompound.pkiEzsignelementdependencyID) &&
        Objects.equals(this.fkiEzsignformfieldIDValidation, ezsignelementdependencyRequestCompound.fkiEzsignformfieldIDValidation) &&
        Objects.equals(this.fkiEzsignformfieldgroupIDValidation, ezsignelementdependencyRequestCompound.fkiEzsignformfieldgroupIDValidation) &&
        Objects.equals(this.sEzsignelementdependencyEzsignformfieldgrouplabel, ezsignelementdependencyRequestCompound.sEzsignelementdependencyEzsignformfieldgrouplabel) &&
        Objects.equals(this.sEzsignelementdependencyEzsignformfieldlabel, ezsignelementdependencyRequestCompound.sEzsignelementdependencyEzsignformfieldlabel) &&
        Objects.equals(this.eEzsignelementdependencyValidation, ezsignelementdependencyRequestCompound.eEzsignelementdependencyValidation) &&
        Objects.equals(this.bEzsignelementdependencySelected, ezsignelementdependencyRequestCompound.bEzsignelementdependencySelected) &&
        Objects.equals(this.eEzsignelementdependencyOperator, ezsignelementdependencyRequestCompound.eEzsignelementdependencyOperator) &&
        Objects.equals(this.sEzsignelementdependencyValue, ezsignelementdependencyRequestCompound.sEzsignelementdependencyValue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pkiEzsignelementdependencyID, fkiEzsignformfieldIDValidation, fkiEzsignformfieldgroupIDValidation, sEzsignelementdependencyEzsignformfieldgrouplabel, sEzsignelementdependencyEzsignformfieldlabel, eEzsignelementdependencyValidation, bEzsignelementdependencySelected, eEzsignelementdependencyOperator, sEzsignelementdependencyValue);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EzsignelementdependencyRequestCompound {\n");
    sb.append("    pkiEzsignelementdependencyID: ").append(toIndentedString(pkiEzsignelementdependencyID)).append("\n");
    sb.append("    fkiEzsignformfieldIDValidation: ").append(toIndentedString(fkiEzsignformfieldIDValidation)).append("\n");
    sb.append("    fkiEzsignformfieldgroupIDValidation: ").append(toIndentedString(fkiEzsignformfieldgroupIDValidation)).append("\n");
    sb.append("    sEzsignelementdependencyEzsignformfieldgrouplabel: ").append(toIndentedString(sEzsignelementdependencyEzsignformfieldgrouplabel)).append("\n");
    sb.append("    sEzsignelementdependencyEzsignformfieldlabel: ").append(toIndentedString(sEzsignelementdependencyEzsignformfieldlabel)).append("\n");
    sb.append("    eEzsignelementdependencyValidation: ").append(toIndentedString(eEzsignelementdependencyValidation)).append("\n");
    sb.append("    bEzsignelementdependencySelected: ").append(toIndentedString(bEzsignelementdependencySelected)).append("\n");
    sb.append("    eEzsignelementdependencyOperator: ").append(toIndentedString(eEzsignelementdependencyOperator)).append("\n");
    sb.append("    sEzsignelementdependencyValue: ").append(toIndentedString(sEzsignelementdependencyValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pkiEzsignelementdependencyID");
    openapiFields.add("fkiEzsignformfieldIDValidation");
    openapiFields.add("fkiEzsignformfieldgroupIDValidation");
    openapiFields.add("sEzsignelementdependencyEzsignformfieldgrouplabel");
    openapiFields.add("sEzsignelementdependencyEzsignformfieldlabel");
    openapiFields.add("eEzsignelementdependencyValidation");
    openapiFields.add("bEzsignelementdependencySelected");
    openapiFields.add("eEzsignelementdependencyOperator");
    openapiFields.add("sEzsignelementdependencyValue");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("eEzsignelementdependencyValidation");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EzsignelementdependencyRequestCompound
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EzsignelementdependencyRequestCompound.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EzsignelementdependencyRequestCompound is not found in the empty JSON string", EzsignelementdependencyRequestCompound.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EzsignelementdependencyRequestCompound.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EzsignelementdependencyRequestCompound` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : EzsignelementdependencyRequestCompound.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("sEzsignelementdependencyEzsignformfieldgrouplabel") != null && !jsonObj.get("sEzsignelementdependencyEzsignformfieldgrouplabel").isJsonNull()) && !jsonObj.get("sEzsignelementdependencyEzsignformfieldgrouplabel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sEzsignelementdependencyEzsignformfieldgrouplabel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sEzsignelementdependencyEzsignformfieldgrouplabel").toString()));
      }
      if ((jsonObj.get("sEzsignelementdependencyEzsignformfieldlabel") != null && !jsonObj.get("sEzsignelementdependencyEzsignformfieldlabel").isJsonNull()) && !jsonObj.get("sEzsignelementdependencyEzsignformfieldlabel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sEzsignelementdependencyEzsignformfieldlabel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sEzsignelementdependencyEzsignformfieldlabel").toString()));
      }
      // validate the required field `eEzsignelementdependencyValidation`
      FieldEEzsignelementdependencyValidation.validateJsonElement(jsonObj.get("eEzsignelementdependencyValidation"));
      // validate the optional field `eEzsignelementdependencyOperator`
      if (jsonObj.get("eEzsignelementdependencyOperator") != null && !jsonObj.get("eEzsignelementdependencyOperator").isJsonNull()) {
        FieldEEzsignelementdependencyOperator.validateJsonElement(jsonObj.get("eEzsignelementdependencyOperator"));
      }
      if ((jsonObj.get("sEzsignelementdependencyValue") != null && !jsonObj.get("sEzsignelementdependencyValue").isJsonNull()) && !jsonObj.get("sEzsignelementdependencyValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sEzsignelementdependencyValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sEzsignelementdependencyValue").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EzsignelementdependencyRequestCompound.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EzsignelementdependencyRequestCompound' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EzsignelementdependencyRequestCompound> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EzsignelementdependencyRequestCompound.class));

       return (TypeAdapter<T>) new TypeAdapter<EzsignelementdependencyRequestCompound>() {
           @Override
           public void write(JsonWriter out, EzsignelementdependencyRequestCompound value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EzsignelementdependencyRequestCompound read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EzsignelementdependencyRequestCompound given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EzsignelementdependencyRequestCompound
   * @throws IOException if the JSON string is invalid with respect to EzsignelementdependencyRequestCompound
   */
  public static EzsignelementdependencyRequestCompound fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EzsignelementdependencyRequestCompound.class);
  }

  /**
   * Convert an instance of EzsignelementdependencyRequestCompound to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

