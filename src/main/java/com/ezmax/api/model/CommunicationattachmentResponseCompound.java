/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * A Communicationattachment Object
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-10-02T03:20:34.370720798Z[Etc/UTC]")
public class CommunicationattachmentResponseCompound {
  public static final String SERIALIZED_NAME_PKI_COMMUNICATIONATTACHMENT_I_D = "pkiCommunicationattachmentID";
  @SerializedName(SERIALIZED_NAME_PKI_COMMUNICATIONATTACHMENT_I_D)
  private Integer pkiCommunicationattachmentID;

  public static final String SERIALIZED_NAME_FKI_ATTACHMENT_I_D = "fkiAttachmentID";
  @SerializedName(SERIALIZED_NAME_FKI_ATTACHMENT_I_D)
  private Integer fkiAttachmentID;

  public static final String SERIALIZED_NAME_FKI_INVOICE_I_D = "fkiInvoiceID";
  @SerializedName(SERIALIZED_NAME_FKI_INVOICE_I_D)
  private Integer fkiInvoiceID;

  public static final String SERIALIZED_NAME_FKI_SALARYPREPARATION_I_D = "fkiSalarypreparationID";
  @SerializedName(SERIALIZED_NAME_FKI_SALARYPREPARATION_I_D)
  private Integer fkiSalarypreparationID;

  public static final String SERIALIZED_NAME_S_COMMUNICATIONATTACHMENT_NAME = "sCommunicationattachmentName";
  @SerializedName(SERIALIZED_NAME_S_COMMUNICATIONATTACHMENT_NAME)
  private String sCommunicationattachmentName;

  public static final String SERIALIZED_NAME_S_DOWNLOAD_URL = "sDownloadUrl";
  @SerializedName(SERIALIZED_NAME_S_DOWNLOAD_URL)
  private String sDownloadUrl;

  public CommunicationattachmentResponseCompound() {
  }

  public CommunicationattachmentResponseCompound pkiCommunicationattachmentID(Integer pkiCommunicationattachmentID) {
    
    this.pkiCommunicationattachmentID = pkiCommunicationattachmentID;
    return this;
  }

   /**
   * The unique ID of the Communicationattachment
   * @return pkiCommunicationattachmentID
  **/
  @javax.annotation.Nonnull
  public Integer getPkiCommunicationattachmentID() {
    return pkiCommunicationattachmentID;
  }


  public void setPkiCommunicationattachmentID(Integer pkiCommunicationattachmentID) {
    this.pkiCommunicationattachmentID = pkiCommunicationattachmentID;
  }


  public CommunicationattachmentResponseCompound fkiAttachmentID(Integer fkiAttachmentID) {
    
    this.fkiAttachmentID = fkiAttachmentID;
    return this;
  }

   /**
   * The unique ID of the Attachment.
   * minimum: 0
   * @return fkiAttachmentID
  **/
  @javax.annotation.Nullable
  public Integer getFkiAttachmentID() {
    return fkiAttachmentID;
  }


  public void setFkiAttachmentID(Integer fkiAttachmentID) {
    this.fkiAttachmentID = fkiAttachmentID;
  }


  public CommunicationattachmentResponseCompound fkiInvoiceID(Integer fkiInvoiceID) {
    
    this.fkiInvoiceID = fkiInvoiceID;
    return this;
  }

   /**
   * The unique ID of the Invoice.
   * minimum: 0
   * @return fkiInvoiceID
  **/
  @javax.annotation.Nullable
  public Integer getFkiInvoiceID() {
    return fkiInvoiceID;
  }


  public void setFkiInvoiceID(Integer fkiInvoiceID) {
    this.fkiInvoiceID = fkiInvoiceID;
  }


  public CommunicationattachmentResponseCompound fkiSalarypreparationID(Integer fkiSalarypreparationID) {
    
    this.fkiSalarypreparationID = fkiSalarypreparationID;
    return this;
  }

   /**
   * The unique ID of the Salarypreparation.
   * minimum: 0
   * @return fkiSalarypreparationID
  **/
  @javax.annotation.Nullable
  public Integer getFkiSalarypreparationID() {
    return fkiSalarypreparationID;
  }


  public void setFkiSalarypreparationID(Integer fkiSalarypreparationID) {
    this.fkiSalarypreparationID = fkiSalarypreparationID;
  }


  public CommunicationattachmentResponseCompound sCommunicationattachmentName(String sCommunicationattachmentName) {
    
    this.sCommunicationattachmentName = sCommunicationattachmentName;
    return this;
  }

   /**
   * The name of the Communicationattachment
   * @return sCommunicationattachmentName
  **/
  @javax.annotation.Nonnull
  public String getsCommunicationattachmentName() {
    return sCommunicationattachmentName;
  }


  public void setsCommunicationattachmentName(String sCommunicationattachmentName) {
    this.sCommunicationattachmentName = sCommunicationattachmentName;
  }


  public CommunicationattachmentResponseCompound sDownloadUrl(String sDownloadUrl) {
    
    this.sDownloadUrl = sDownloadUrl;
    return this;
  }

   /**
   * The Url to the requested document.  Url will expire after 3 hours.
   * @return sDownloadUrl
  **/
  @javax.annotation.Nullable
  public String getsDownloadUrl() {
    return sDownloadUrl;
  }


  public void setsDownloadUrl(String sDownloadUrl) {
    this.sDownloadUrl = sDownloadUrl;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommunicationattachmentResponseCompound communicationattachmentResponseCompound = (CommunicationattachmentResponseCompound) o;
    return Objects.equals(this.pkiCommunicationattachmentID, communicationattachmentResponseCompound.pkiCommunicationattachmentID) &&
        Objects.equals(this.fkiAttachmentID, communicationattachmentResponseCompound.fkiAttachmentID) &&
        Objects.equals(this.fkiInvoiceID, communicationattachmentResponseCompound.fkiInvoiceID) &&
        Objects.equals(this.fkiSalarypreparationID, communicationattachmentResponseCompound.fkiSalarypreparationID) &&
        Objects.equals(this.sCommunicationattachmentName, communicationattachmentResponseCompound.sCommunicationattachmentName) &&
        Objects.equals(this.sDownloadUrl, communicationattachmentResponseCompound.sDownloadUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pkiCommunicationattachmentID, fkiAttachmentID, fkiInvoiceID, fkiSalarypreparationID, sCommunicationattachmentName, sDownloadUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommunicationattachmentResponseCompound {\n");
    sb.append("    pkiCommunicationattachmentID: ").append(toIndentedString(pkiCommunicationattachmentID)).append("\n");
    sb.append("    fkiAttachmentID: ").append(toIndentedString(fkiAttachmentID)).append("\n");
    sb.append("    fkiInvoiceID: ").append(toIndentedString(fkiInvoiceID)).append("\n");
    sb.append("    fkiSalarypreparationID: ").append(toIndentedString(fkiSalarypreparationID)).append("\n");
    sb.append("    sCommunicationattachmentName: ").append(toIndentedString(sCommunicationattachmentName)).append("\n");
    sb.append("    sDownloadUrl: ").append(toIndentedString(sDownloadUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pkiCommunicationattachmentID");
    openapiFields.add("fkiAttachmentID");
    openapiFields.add("fkiInvoiceID");
    openapiFields.add("fkiSalarypreparationID");
    openapiFields.add("sCommunicationattachmentName");
    openapiFields.add("sDownloadUrl");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("pkiCommunicationattachmentID");
    openapiRequiredFields.add("sCommunicationattachmentName");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to CommunicationattachmentResponseCompound
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CommunicationattachmentResponseCompound.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CommunicationattachmentResponseCompound is not found in the empty JSON string", CommunicationattachmentResponseCompound.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CommunicationattachmentResponseCompound.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CommunicationattachmentResponseCompound` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CommunicationattachmentResponseCompound.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("sCommunicationattachmentName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sCommunicationattachmentName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sCommunicationattachmentName").toString()));
      }
      if ((jsonObj.get("sDownloadUrl") != null && !jsonObj.get("sDownloadUrl").isJsonNull()) && !jsonObj.get("sDownloadUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sDownloadUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sDownloadUrl").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CommunicationattachmentResponseCompound.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CommunicationattachmentResponseCompound' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CommunicationattachmentResponseCompound> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CommunicationattachmentResponseCompound.class));

       return (TypeAdapter<T>) new TypeAdapter<CommunicationattachmentResponseCompound>() {
           @Override
           public void write(JsonWriter out, CommunicationattachmentResponseCompound value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CommunicationattachmentResponseCompound read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CommunicationattachmentResponseCompound given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CommunicationattachmentResponseCompound
  * @throws IOException if the JSON string is invalid with respect to CommunicationattachmentResponseCompound
  */
  public static CommunicationattachmentResponseCompound fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CommunicationattachmentResponseCompound.class);
  }

 /**
  * Convert an instance of CommunicationattachmentResponseCompound to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

