/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * A Custom Ezsignfoldertype Object
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-15T21:36:57.992386529Z[Etc/UTC]", comments = "Generator version: 7.10.0")
public class CustomEzsignfoldertypeResponse {
  public static final String SERIALIZED_NAME_PKI_EZSIGNFOLDERTYPE_I_D = "pkiEzsignfoldertypeID";
  @SerializedName(SERIALIZED_NAME_PKI_EZSIGNFOLDERTYPE_I_D)
  @javax.annotation.Nonnull
  private Integer pkiEzsignfoldertypeID;

  public static final String SERIALIZED_NAME_FKI_FONT_I_D_ANNOTATION = "fkiFontIDAnnotation";
  @SerializedName(SERIALIZED_NAME_FKI_FONT_I_D_ANNOTATION)
  @javax.annotation.Nullable
  private Integer fkiFontIDAnnotation;

  public static final String SERIALIZED_NAME_FKI_FONT_I_D_FORMFIELD = "fkiFontIDFormfield";
  @SerializedName(SERIALIZED_NAME_FKI_FONT_I_D_FORMFIELD)
  @javax.annotation.Nullable
  private Integer fkiFontIDFormfield;

  public static final String SERIALIZED_NAME_FKI_FONT_I_D_SIGNATURE = "fkiFontIDSignature";
  @SerializedName(SERIALIZED_NAME_FKI_FONT_I_D_SIGNATURE)
  @javax.annotation.Nullable
  private Integer fkiFontIDSignature;

  public static final String SERIALIZED_NAME_S_EZSIGNFOLDERTYPE_NAME_X = "sEzsignfoldertypeNameX";
  @SerializedName(SERIALIZED_NAME_S_EZSIGNFOLDERTYPE_NAME_X)
  @javax.annotation.Nullable
  private String sEzsignfoldertypeNameX;

  public static final String SERIALIZED_NAME_B_EZSIGNFOLDERTYPE_SENDPROOFEZSIGNSIGNER = "bEzsignfoldertypeSendproofezsignsigner";
  @SerializedName(SERIALIZED_NAME_B_EZSIGNFOLDERTYPE_SENDPROOFEZSIGNSIGNER)
  @javax.annotation.Nullable
  private Boolean bEzsignfoldertypeSendproofezsignsigner;

  public static final String SERIALIZED_NAME_B_EZSIGNFOLDERTYPE_ALLOWDOWNLOADATTACHMENTEZSIGNSIGNER = "bEzsignfoldertypeAllowdownloadattachmentezsignsigner";
  @SerializedName(SERIALIZED_NAME_B_EZSIGNFOLDERTYPE_ALLOWDOWNLOADATTACHMENTEZSIGNSIGNER)
  @javax.annotation.Nullable
  private Boolean bEzsignfoldertypeAllowdownloadattachmentezsignsigner;

  public static final String SERIALIZED_NAME_B_EZSIGNFOLDERTYPE_ALLOWDOWNLOADPROOFEZSIGNSIGNER = "bEzsignfoldertypeAllowdownloadproofezsignsigner";
  @SerializedName(SERIALIZED_NAME_B_EZSIGNFOLDERTYPE_ALLOWDOWNLOADPROOFEZSIGNSIGNER)
  @javax.annotation.Nullable
  private Boolean bEzsignfoldertypeAllowdownloadproofezsignsigner;

  public static final String SERIALIZED_NAME_B_EZSIGNFOLDERTYPE_AUTOMATICSIGNATURE = "bEzsignfoldertypeAutomaticsignature";
  @SerializedName(SERIALIZED_NAME_B_EZSIGNFOLDERTYPE_AUTOMATICSIGNATURE)
  @javax.annotation.Nullable
  private Boolean bEzsignfoldertypeAutomaticsignature;

  public static final String SERIALIZED_NAME_B_EZSIGNFOLDERTYPE_DELEGATE = "bEzsignfoldertypeDelegate";
  @SerializedName(SERIALIZED_NAME_B_EZSIGNFOLDERTYPE_DELEGATE)
  @javax.annotation.Nullable
  private Boolean bEzsignfoldertypeDelegate;

  public static final String SERIALIZED_NAME_B_EZSIGNFOLDERTYPE_DISCUSSION = "bEzsignfoldertypeDiscussion";
  @SerializedName(SERIALIZED_NAME_B_EZSIGNFOLDERTYPE_DISCUSSION)
  @javax.annotation.Nullable
  private Boolean bEzsignfoldertypeDiscussion;

  public static final String SERIALIZED_NAME_B_EZSIGNFOLDERTYPE_REASSIGNEZSIGNSIGNER = "bEzsignfoldertypeReassignezsignsigner";
  @SerializedName(SERIALIZED_NAME_B_EZSIGNFOLDERTYPE_REASSIGNEZSIGNSIGNER)
  @javax.annotation.Nullable
  private Boolean bEzsignfoldertypeReassignezsignsigner;

  public static final String SERIALIZED_NAME_B_EZSIGNFOLDERTYPE_REASSIGNUSER = "bEzsignfoldertypeReassignuser";
  @SerializedName(SERIALIZED_NAME_B_EZSIGNFOLDERTYPE_REASSIGNUSER)
  @javax.annotation.Nullable
  private Boolean bEzsignfoldertypeReassignuser;

  public static final String SERIALIZED_NAME_B_EZSIGNFOLDERTYPE_REASSIGNGROUP = "bEzsignfoldertypeReassigngroup";
  @SerializedName(SERIALIZED_NAME_B_EZSIGNFOLDERTYPE_REASSIGNGROUP)
  @javax.annotation.Nullable
  private Boolean bEzsignfoldertypeReassigngroup;

  public static final String SERIALIZED_NAME_I_EZSIGNFOLDERTYPE_DEADLINEDAYS = "iEzsignfoldertypeDeadlinedays";
  @SerializedName(SERIALIZED_NAME_I_EZSIGNFOLDERTYPE_DEADLINEDAYS)
  @javax.annotation.Nullable
  private Integer iEzsignfoldertypeDeadlinedays;

  public static final String SERIALIZED_NAME_I_EZSIGNFOLDERTYPE_FONTSIZEANNOTATION = "iEzsignfoldertypeFontsizeannotation";
  @SerializedName(SERIALIZED_NAME_I_EZSIGNFOLDERTYPE_FONTSIZEANNOTATION)
  @javax.annotation.Nullable
  private Integer iEzsignfoldertypeFontsizeannotation;

  public static final String SERIALIZED_NAME_I_EZSIGNFOLDERTYPE_FONTSIZEFORMFIELD = "iEzsignfoldertypeFontsizeformfield";
  @SerializedName(SERIALIZED_NAME_I_EZSIGNFOLDERTYPE_FONTSIZEFORMFIELD)
  @javax.annotation.Nullable
  private Integer iEzsignfoldertypeFontsizeformfield;

  public CustomEzsignfoldertypeResponse() {
  }

  public CustomEzsignfoldertypeResponse pkiEzsignfoldertypeID(@javax.annotation.Nonnull Integer pkiEzsignfoldertypeID) {
    this.pkiEzsignfoldertypeID = pkiEzsignfoldertypeID;
    return this;
  }

  /**
   * The unique ID of the Ezsignfoldertype.
   * minimum: 0
   * maximum: 65535
   * @return pkiEzsignfoldertypeID
   */
  @javax.annotation.Nonnull
  public Integer getPkiEzsignfoldertypeID() {
    return pkiEzsignfoldertypeID;
  }

  public void setPkiEzsignfoldertypeID(@javax.annotation.Nonnull Integer pkiEzsignfoldertypeID) {
    this.pkiEzsignfoldertypeID = pkiEzsignfoldertypeID;
  }


  public CustomEzsignfoldertypeResponse fkiFontIDAnnotation(@javax.annotation.Nullable Integer fkiFontIDAnnotation) {
    this.fkiFontIDAnnotation = fkiFontIDAnnotation;
    return this;
  }

  /**
   * The unique ID of the Font
   * minimum: 0
   * @return fkiFontIDAnnotation
   */
  @javax.annotation.Nullable
  public Integer getFkiFontIDAnnotation() {
    return fkiFontIDAnnotation;
  }

  public void setFkiFontIDAnnotation(@javax.annotation.Nullable Integer fkiFontIDAnnotation) {
    this.fkiFontIDAnnotation = fkiFontIDAnnotation;
  }


  public CustomEzsignfoldertypeResponse fkiFontIDFormfield(@javax.annotation.Nullable Integer fkiFontIDFormfield) {
    this.fkiFontIDFormfield = fkiFontIDFormfield;
    return this;
  }

  /**
   * The unique ID of the Font
   * minimum: 0
   * @return fkiFontIDFormfield
   */
  @javax.annotation.Nullable
  public Integer getFkiFontIDFormfield() {
    return fkiFontIDFormfield;
  }

  public void setFkiFontIDFormfield(@javax.annotation.Nullable Integer fkiFontIDFormfield) {
    this.fkiFontIDFormfield = fkiFontIDFormfield;
  }


  public CustomEzsignfoldertypeResponse fkiFontIDSignature(@javax.annotation.Nullable Integer fkiFontIDSignature) {
    this.fkiFontIDSignature = fkiFontIDSignature;
    return this;
  }

  /**
   * The unique ID of the Font
   * minimum: 0
   * @return fkiFontIDSignature
   */
  @javax.annotation.Nullable
  public Integer getFkiFontIDSignature() {
    return fkiFontIDSignature;
  }

  public void setFkiFontIDSignature(@javax.annotation.Nullable Integer fkiFontIDSignature) {
    this.fkiFontIDSignature = fkiFontIDSignature;
  }


  public CustomEzsignfoldertypeResponse sEzsignfoldertypeNameX(@javax.annotation.Nullable String sEzsignfoldertypeNameX) {
    this.sEzsignfoldertypeNameX = sEzsignfoldertypeNameX;
    return this;
  }

  /**
   * The name of the Ezsignfoldertype in the language of the requester
   * @return sEzsignfoldertypeNameX
   */
  @javax.annotation.Nullable
  public String getsEzsignfoldertypeNameX() {
    return sEzsignfoldertypeNameX;
  }

  public void setsEzsignfoldertypeNameX(@javax.annotation.Nullable String sEzsignfoldertypeNameX) {
    this.sEzsignfoldertypeNameX = sEzsignfoldertypeNameX;
  }


  public CustomEzsignfoldertypeResponse bEzsignfoldertypeSendproofezsignsigner(@javax.annotation.Nullable Boolean bEzsignfoldertypeSendproofezsignsigner) {
    this.bEzsignfoldertypeSendproofezsignsigner = bEzsignfoldertypeSendproofezsignsigner;
    return this;
  }

  /**
   * Whether we send the proof in the email to Ezsignsigner
   * @return bEzsignfoldertypeSendproofezsignsigner
   */
  @javax.annotation.Nullable
  public Boolean getbEzsignfoldertypeSendproofezsignsigner() {
    return bEzsignfoldertypeSendproofezsignsigner;
  }

  public void setbEzsignfoldertypeSendproofezsignsigner(@javax.annotation.Nullable Boolean bEzsignfoldertypeSendproofezsignsigner) {
    this.bEzsignfoldertypeSendproofezsignsigner = bEzsignfoldertypeSendproofezsignsigner;
  }


  public CustomEzsignfoldertypeResponse bEzsignfoldertypeAllowdownloadattachmentezsignsigner(@javax.annotation.Nullable Boolean bEzsignfoldertypeAllowdownloadattachmentezsignsigner) {
    this.bEzsignfoldertypeAllowdownloadattachmentezsignsigner = bEzsignfoldertypeAllowdownloadattachmentezsignsigner;
    return this;
  }

  /**
   * Whether we allow the Ezsigndocument to be downloaded by an Ezsignsigner
   * @return bEzsignfoldertypeAllowdownloadattachmentezsignsigner
   */
  @javax.annotation.Nullable
  public Boolean getbEzsignfoldertypeAllowdownloadattachmentezsignsigner() {
    return bEzsignfoldertypeAllowdownloadattachmentezsignsigner;
  }

  public void setbEzsignfoldertypeAllowdownloadattachmentezsignsigner(@javax.annotation.Nullable Boolean bEzsignfoldertypeAllowdownloadattachmentezsignsigner) {
    this.bEzsignfoldertypeAllowdownloadattachmentezsignsigner = bEzsignfoldertypeAllowdownloadattachmentezsignsigner;
  }


  public CustomEzsignfoldertypeResponse bEzsignfoldertypeAllowdownloadproofezsignsigner(@javax.annotation.Nullable Boolean bEzsignfoldertypeAllowdownloadproofezsignsigner) {
    this.bEzsignfoldertypeAllowdownloadproofezsignsigner = bEzsignfoldertypeAllowdownloadproofezsignsigner;
    return this;
  }

  /**
   * Whether we allow the proof to be downloaded by an Ezsignsigner
   * @return bEzsignfoldertypeAllowdownloadproofezsignsigner
   */
  @javax.annotation.Nullable
  public Boolean getbEzsignfoldertypeAllowdownloadproofezsignsigner() {
    return bEzsignfoldertypeAllowdownloadproofezsignsigner;
  }

  public void setbEzsignfoldertypeAllowdownloadproofezsignsigner(@javax.annotation.Nullable Boolean bEzsignfoldertypeAllowdownloadproofezsignsigner) {
    this.bEzsignfoldertypeAllowdownloadproofezsignsigner = bEzsignfoldertypeAllowdownloadproofezsignsigner;
  }


  public CustomEzsignfoldertypeResponse bEzsignfoldertypeAutomaticsignature(@javax.annotation.Nullable Boolean bEzsignfoldertypeAutomaticsignature) {
    this.bEzsignfoldertypeAutomaticsignature = bEzsignfoldertypeAutomaticsignature;
    return this;
  }

  /**
   * Whether we allow the automatic signature by an User
   * @return bEzsignfoldertypeAutomaticsignature
   */
  @javax.annotation.Nullable
  public Boolean getbEzsignfoldertypeAutomaticsignature() {
    return bEzsignfoldertypeAutomaticsignature;
  }

  public void setbEzsignfoldertypeAutomaticsignature(@javax.annotation.Nullable Boolean bEzsignfoldertypeAutomaticsignature) {
    this.bEzsignfoldertypeAutomaticsignature = bEzsignfoldertypeAutomaticsignature;
  }


  public CustomEzsignfoldertypeResponse bEzsignfoldertypeDelegate(@javax.annotation.Nullable Boolean bEzsignfoldertypeDelegate) {
    this.bEzsignfoldertypeDelegate = bEzsignfoldertypeDelegate;
    return this;
  }

  /**
   * Wheter if delegation of signature is allowed to another user or not
   * @return bEzsignfoldertypeDelegate
   */
  @javax.annotation.Nullable
  public Boolean getbEzsignfoldertypeDelegate() {
    return bEzsignfoldertypeDelegate;
  }

  public void setbEzsignfoldertypeDelegate(@javax.annotation.Nullable Boolean bEzsignfoldertypeDelegate) {
    this.bEzsignfoldertypeDelegate = bEzsignfoldertypeDelegate;
  }


  public CustomEzsignfoldertypeResponse bEzsignfoldertypeDiscussion(@javax.annotation.Nullable Boolean bEzsignfoldertypeDiscussion) {
    this.bEzsignfoldertypeDiscussion = bEzsignfoldertypeDiscussion;
    return this;
  }

  /**
   * Wheter if creating a new Discussion is allowed or not
   * @return bEzsignfoldertypeDiscussion
   */
  @javax.annotation.Nullable
  public Boolean getbEzsignfoldertypeDiscussion() {
    return bEzsignfoldertypeDiscussion;
  }

  public void setbEzsignfoldertypeDiscussion(@javax.annotation.Nullable Boolean bEzsignfoldertypeDiscussion) {
    this.bEzsignfoldertypeDiscussion = bEzsignfoldertypeDiscussion;
  }


  public CustomEzsignfoldertypeResponse bEzsignfoldertypeReassignezsignsigner(@javax.annotation.Nullable Boolean bEzsignfoldertypeReassignezsignsigner) {
    this.bEzsignfoldertypeReassignezsignsigner = bEzsignfoldertypeReassignezsignsigner;
    return this;
  }

  /**
   * Wheter if Reassignment of signature is allowed by a signatory to another signatory or not
   * @return bEzsignfoldertypeReassignezsignsigner
   */
  @javax.annotation.Nullable
  public Boolean getbEzsignfoldertypeReassignezsignsigner() {
    return bEzsignfoldertypeReassignezsignsigner;
  }

  public void setbEzsignfoldertypeReassignezsignsigner(@javax.annotation.Nullable Boolean bEzsignfoldertypeReassignezsignsigner) {
    this.bEzsignfoldertypeReassignezsignsigner = bEzsignfoldertypeReassignezsignsigner;
  }


  public CustomEzsignfoldertypeResponse bEzsignfoldertypeReassignuser(@javax.annotation.Nullable Boolean bEzsignfoldertypeReassignuser) {
    this.bEzsignfoldertypeReassignuser = bEzsignfoldertypeReassignuser;
    return this;
  }

  /**
   * Wheter if Reassignment of signature is allowed by a user to a signatory or another user or not
   * @return bEzsignfoldertypeReassignuser
   */
  @javax.annotation.Nullable
  public Boolean getbEzsignfoldertypeReassignuser() {
    return bEzsignfoldertypeReassignuser;
  }

  public void setbEzsignfoldertypeReassignuser(@javax.annotation.Nullable Boolean bEzsignfoldertypeReassignuser) {
    this.bEzsignfoldertypeReassignuser = bEzsignfoldertypeReassignuser;
  }


  public CustomEzsignfoldertypeResponse bEzsignfoldertypeReassigngroup(@javax.annotation.Nullable Boolean bEzsignfoldertypeReassigngroup) {
    this.bEzsignfoldertypeReassigngroup = bEzsignfoldertypeReassigngroup;
    return this;
  }

  /**
   * Wheter if Reassignment of signatures of the groups to which the user belongs is authorized by a user to himself
   * @return bEzsignfoldertypeReassigngroup
   */
  @javax.annotation.Nullable
  public Boolean getbEzsignfoldertypeReassigngroup() {
    return bEzsignfoldertypeReassigngroup;
  }

  public void setbEzsignfoldertypeReassigngroup(@javax.annotation.Nullable Boolean bEzsignfoldertypeReassigngroup) {
    this.bEzsignfoldertypeReassigngroup = bEzsignfoldertypeReassigngroup;
  }


  public CustomEzsignfoldertypeResponse iEzsignfoldertypeDeadlinedays(@javax.annotation.Nullable Integer iEzsignfoldertypeDeadlinedays) {
    this.iEzsignfoldertypeDeadlinedays = iEzsignfoldertypeDeadlinedays;
    return this;
  }

  /**
   * The number of days to get all Ezsignsignatures
   * minimum: 1
   * maximum: 60
   * @return iEzsignfoldertypeDeadlinedays
   */
  @javax.annotation.Nullable
  public Integer getiEzsignfoldertypeDeadlinedays() {
    return iEzsignfoldertypeDeadlinedays;
  }

  public void setiEzsignfoldertypeDeadlinedays(@javax.annotation.Nullable Integer iEzsignfoldertypeDeadlinedays) {
    this.iEzsignfoldertypeDeadlinedays = iEzsignfoldertypeDeadlinedays;
  }


  public CustomEzsignfoldertypeResponse iEzsignfoldertypeFontsizeannotation(@javax.annotation.Nullable Integer iEzsignfoldertypeFontsizeannotation) {
    this.iEzsignfoldertypeFontsizeannotation = iEzsignfoldertypeFontsizeannotation;
    return this;
  }

  /**
   * Font size for annotations
   * minimum: 1
   * maximum: 255
   * @return iEzsignfoldertypeFontsizeannotation
   */
  @javax.annotation.Nullable
  public Integer getiEzsignfoldertypeFontsizeannotation() {
    return iEzsignfoldertypeFontsizeannotation;
  }

  public void setiEzsignfoldertypeFontsizeannotation(@javax.annotation.Nullable Integer iEzsignfoldertypeFontsizeannotation) {
    this.iEzsignfoldertypeFontsizeannotation = iEzsignfoldertypeFontsizeannotation;
  }


  public CustomEzsignfoldertypeResponse iEzsignfoldertypeFontsizeformfield(@javax.annotation.Nullable Integer iEzsignfoldertypeFontsizeformfield) {
    this.iEzsignfoldertypeFontsizeformfield = iEzsignfoldertypeFontsizeformfield;
    return this;
  }

  /**
   * Font size for form fields
   * minimum: 1
   * maximum: 255
   * @return iEzsignfoldertypeFontsizeformfield
   */
  @javax.annotation.Nullable
  public Integer getiEzsignfoldertypeFontsizeformfield() {
    return iEzsignfoldertypeFontsizeformfield;
  }

  public void setiEzsignfoldertypeFontsizeformfield(@javax.annotation.Nullable Integer iEzsignfoldertypeFontsizeformfield) {
    this.iEzsignfoldertypeFontsizeformfield = iEzsignfoldertypeFontsizeformfield;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomEzsignfoldertypeResponse customEzsignfoldertypeResponse = (CustomEzsignfoldertypeResponse) o;
    return Objects.equals(this.pkiEzsignfoldertypeID, customEzsignfoldertypeResponse.pkiEzsignfoldertypeID) &&
        Objects.equals(this.fkiFontIDAnnotation, customEzsignfoldertypeResponse.fkiFontIDAnnotation) &&
        Objects.equals(this.fkiFontIDFormfield, customEzsignfoldertypeResponse.fkiFontIDFormfield) &&
        Objects.equals(this.fkiFontIDSignature, customEzsignfoldertypeResponse.fkiFontIDSignature) &&
        Objects.equals(this.sEzsignfoldertypeNameX, customEzsignfoldertypeResponse.sEzsignfoldertypeNameX) &&
        Objects.equals(this.bEzsignfoldertypeSendproofezsignsigner, customEzsignfoldertypeResponse.bEzsignfoldertypeSendproofezsignsigner) &&
        Objects.equals(this.bEzsignfoldertypeAllowdownloadattachmentezsignsigner, customEzsignfoldertypeResponse.bEzsignfoldertypeAllowdownloadattachmentezsignsigner) &&
        Objects.equals(this.bEzsignfoldertypeAllowdownloadproofezsignsigner, customEzsignfoldertypeResponse.bEzsignfoldertypeAllowdownloadproofezsignsigner) &&
        Objects.equals(this.bEzsignfoldertypeAutomaticsignature, customEzsignfoldertypeResponse.bEzsignfoldertypeAutomaticsignature) &&
        Objects.equals(this.bEzsignfoldertypeDelegate, customEzsignfoldertypeResponse.bEzsignfoldertypeDelegate) &&
        Objects.equals(this.bEzsignfoldertypeDiscussion, customEzsignfoldertypeResponse.bEzsignfoldertypeDiscussion) &&
        Objects.equals(this.bEzsignfoldertypeReassignezsignsigner, customEzsignfoldertypeResponse.bEzsignfoldertypeReassignezsignsigner) &&
        Objects.equals(this.bEzsignfoldertypeReassignuser, customEzsignfoldertypeResponse.bEzsignfoldertypeReassignuser) &&
        Objects.equals(this.bEzsignfoldertypeReassigngroup, customEzsignfoldertypeResponse.bEzsignfoldertypeReassigngroup) &&
        Objects.equals(this.iEzsignfoldertypeDeadlinedays, customEzsignfoldertypeResponse.iEzsignfoldertypeDeadlinedays) &&
        Objects.equals(this.iEzsignfoldertypeFontsizeannotation, customEzsignfoldertypeResponse.iEzsignfoldertypeFontsizeannotation) &&
        Objects.equals(this.iEzsignfoldertypeFontsizeformfield, customEzsignfoldertypeResponse.iEzsignfoldertypeFontsizeformfield);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pkiEzsignfoldertypeID, fkiFontIDAnnotation, fkiFontIDFormfield, fkiFontIDSignature, sEzsignfoldertypeNameX, bEzsignfoldertypeSendproofezsignsigner, bEzsignfoldertypeAllowdownloadattachmentezsignsigner, bEzsignfoldertypeAllowdownloadproofezsignsigner, bEzsignfoldertypeAutomaticsignature, bEzsignfoldertypeDelegate, bEzsignfoldertypeDiscussion, bEzsignfoldertypeReassignezsignsigner, bEzsignfoldertypeReassignuser, bEzsignfoldertypeReassigngroup, iEzsignfoldertypeDeadlinedays, iEzsignfoldertypeFontsizeannotation, iEzsignfoldertypeFontsizeformfield);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomEzsignfoldertypeResponse {\n");
    sb.append("    pkiEzsignfoldertypeID: ").append(toIndentedString(pkiEzsignfoldertypeID)).append("\n");
    sb.append("    fkiFontIDAnnotation: ").append(toIndentedString(fkiFontIDAnnotation)).append("\n");
    sb.append("    fkiFontIDFormfield: ").append(toIndentedString(fkiFontIDFormfield)).append("\n");
    sb.append("    fkiFontIDSignature: ").append(toIndentedString(fkiFontIDSignature)).append("\n");
    sb.append("    sEzsignfoldertypeNameX: ").append(toIndentedString(sEzsignfoldertypeNameX)).append("\n");
    sb.append("    bEzsignfoldertypeSendproofezsignsigner: ").append(toIndentedString(bEzsignfoldertypeSendproofezsignsigner)).append("\n");
    sb.append("    bEzsignfoldertypeAllowdownloadattachmentezsignsigner: ").append(toIndentedString(bEzsignfoldertypeAllowdownloadattachmentezsignsigner)).append("\n");
    sb.append("    bEzsignfoldertypeAllowdownloadproofezsignsigner: ").append(toIndentedString(bEzsignfoldertypeAllowdownloadproofezsignsigner)).append("\n");
    sb.append("    bEzsignfoldertypeAutomaticsignature: ").append(toIndentedString(bEzsignfoldertypeAutomaticsignature)).append("\n");
    sb.append("    bEzsignfoldertypeDelegate: ").append(toIndentedString(bEzsignfoldertypeDelegate)).append("\n");
    sb.append("    bEzsignfoldertypeDiscussion: ").append(toIndentedString(bEzsignfoldertypeDiscussion)).append("\n");
    sb.append("    bEzsignfoldertypeReassignezsignsigner: ").append(toIndentedString(bEzsignfoldertypeReassignezsignsigner)).append("\n");
    sb.append("    bEzsignfoldertypeReassignuser: ").append(toIndentedString(bEzsignfoldertypeReassignuser)).append("\n");
    sb.append("    bEzsignfoldertypeReassigngroup: ").append(toIndentedString(bEzsignfoldertypeReassigngroup)).append("\n");
    sb.append("    iEzsignfoldertypeDeadlinedays: ").append(toIndentedString(iEzsignfoldertypeDeadlinedays)).append("\n");
    sb.append("    iEzsignfoldertypeFontsizeannotation: ").append(toIndentedString(iEzsignfoldertypeFontsizeannotation)).append("\n");
    sb.append("    iEzsignfoldertypeFontsizeformfield: ").append(toIndentedString(iEzsignfoldertypeFontsizeformfield)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pkiEzsignfoldertypeID");
    openapiFields.add("fkiFontIDAnnotation");
    openapiFields.add("fkiFontIDFormfield");
    openapiFields.add("fkiFontIDSignature");
    openapiFields.add("sEzsignfoldertypeNameX");
    openapiFields.add("bEzsignfoldertypeSendproofezsignsigner");
    openapiFields.add("bEzsignfoldertypeAllowdownloadattachmentezsignsigner");
    openapiFields.add("bEzsignfoldertypeAllowdownloadproofezsignsigner");
    openapiFields.add("bEzsignfoldertypeAutomaticsignature");
    openapiFields.add("bEzsignfoldertypeDelegate");
    openapiFields.add("bEzsignfoldertypeDiscussion");
    openapiFields.add("bEzsignfoldertypeReassignezsignsigner");
    openapiFields.add("bEzsignfoldertypeReassignuser");
    openapiFields.add("bEzsignfoldertypeReassigngroup");
    openapiFields.add("iEzsignfoldertypeDeadlinedays");
    openapiFields.add("iEzsignfoldertypeFontsizeannotation");
    openapiFields.add("iEzsignfoldertypeFontsizeformfield");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("pkiEzsignfoldertypeID");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CustomEzsignfoldertypeResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CustomEzsignfoldertypeResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CustomEzsignfoldertypeResponse is not found in the empty JSON string", CustomEzsignfoldertypeResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CustomEzsignfoldertypeResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CustomEzsignfoldertypeResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CustomEzsignfoldertypeResponse.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("sEzsignfoldertypeNameX") != null && !jsonObj.get("sEzsignfoldertypeNameX").isJsonNull()) && !jsonObj.get("sEzsignfoldertypeNameX").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sEzsignfoldertypeNameX` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sEzsignfoldertypeNameX").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomEzsignfoldertypeResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomEzsignfoldertypeResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomEzsignfoldertypeResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomEzsignfoldertypeResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomEzsignfoldertypeResponse>() {
           @Override
           public void write(JsonWriter out, CustomEzsignfoldertypeResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomEzsignfoldertypeResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CustomEzsignfoldertypeResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CustomEzsignfoldertypeResponse
   * @throws IOException if the JSON string is invalid with respect to CustomEzsignfoldertypeResponse
   */
  public static CustomEzsignfoldertypeResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomEzsignfoldertypeResponse.class);
  }

  /**
   * Convert an instance of CustomEzsignfoldertypeResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

