/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.ezmax.api.model.FieldEEzsignfolderMessageorder;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * Request for POST /3/object/ezsignfolder/{pkiEzsignfolderID}/send
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-29T18:53:15.033493285Z[Etc/UTC]", comments = "Generator version: 7.11.0")
public class EzsignfolderSendV3Request {
  public static final String SERIALIZED_NAME_T_EZSIGNFOLDER_MESSAGE = "tEzsignfolderMessage";
  @SerializedName(SERIALIZED_NAME_T_EZSIGNFOLDER_MESSAGE)
  @javax.annotation.Nullable
  private String tEzsignfolderMessage;

  public static final String SERIALIZED_NAME_E_EZSIGNFOLDER_MESSAGEORDER = "eEzsignfolderMessageorder";
  @SerializedName(SERIALIZED_NAME_E_EZSIGNFOLDER_MESSAGEORDER)
  @javax.annotation.Nullable
  private FieldEEzsignfolderMessageorder eEzsignfolderMessageorder = FieldEEzsignfolderMessageorder.GLOBAL_FIRST;

  public static final String SERIALIZED_NAME_DT_EZSIGNFOLDER_DELAYEDSENDDATE = "dtEzsignfolderDelayedsenddate";
  @SerializedName(SERIALIZED_NAME_DT_EZSIGNFOLDER_DELAYEDSENDDATE)
  @javax.annotation.Nullable
  private String dtEzsignfolderDelayedsenddate;

  public static final String SERIALIZED_NAME_A_FKI_EZSIGNFOLDERSIGNERASSOCIATION_I_D = "a_fkiEzsignfoldersignerassociationID";
  @SerializedName(SERIALIZED_NAME_A_FKI_EZSIGNFOLDERSIGNERASSOCIATION_I_D)
  @javax.annotation.Nonnull
  private List<Integer> aFkiEzsignfoldersignerassociationID = new ArrayList<>();

  public EzsignfolderSendV3Request() {
  }

  public EzsignfolderSendV3Request tEzsignfolderMessage(@javax.annotation.Nullable String tEzsignfolderMessage) {
    this.tEzsignfolderMessage = tEzsignfolderMessage;
    return this;
  }

  /**
   * A custom text message that will be added to the email sent.
   * @return tEzsignfolderMessage
   */
  @javax.annotation.Nullable
  public String gettEzsignfolderMessage() {
    return tEzsignfolderMessage;
  }

  public void settEzsignfolderMessage(@javax.annotation.Nullable String tEzsignfolderMessage) {
    this.tEzsignfolderMessage = tEzsignfolderMessage;
  }


  public EzsignfolderSendV3Request eEzsignfolderMessageorder(@javax.annotation.Nullable FieldEEzsignfolderMessageorder eEzsignfolderMessageorder) {
    this.eEzsignfolderMessageorder = eEzsignfolderMessageorder;
    return this;
  }

  /**
   * Get eEzsignfolderMessageorder
   * @return eEzsignfolderMessageorder
   */
  @javax.annotation.Nullable
  public FieldEEzsignfolderMessageorder geteEzsignfolderMessageorder() {
    return eEzsignfolderMessageorder;
  }

  public void seteEzsignfolderMessageorder(@javax.annotation.Nullable FieldEEzsignfolderMessageorder eEzsignfolderMessageorder) {
    this.eEzsignfolderMessageorder = eEzsignfolderMessageorder;
  }


  public EzsignfolderSendV3Request dtEzsignfolderDelayedsenddate(@javax.annotation.Nullable String dtEzsignfolderDelayedsenddate) {
    this.dtEzsignfolderDelayedsenddate = dtEzsignfolderDelayedsenddate;
    return this;
  }

  /**
   * The date and time at which the Ezsignfolder will be sent in the future.
   * @return dtEzsignfolderDelayedsenddate
   */
  @javax.annotation.Nullable
  public String getDtEzsignfolderDelayedsenddate() {
    return dtEzsignfolderDelayedsenddate;
  }

  public void setDtEzsignfolderDelayedsenddate(@javax.annotation.Nullable String dtEzsignfolderDelayedsenddate) {
    this.dtEzsignfolderDelayedsenddate = dtEzsignfolderDelayedsenddate;
  }


  public EzsignfolderSendV3Request aFkiEzsignfoldersignerassociationID(@javax.annotation.Nonnull List<Integer> aFkiEzsignfoldersignerassociationID) {
    this.aFkiEzsignfoldersignerassociationID = aFkiEzsignfoldersignerassociationID;
    return this;
  }

  public EzsignfolderSendV3Request addAFkiEzsignfoldersignerassociationIDItem(Integer aFkiEzsignfoldersignerassociationIDItem) {
    if (this.aFkiEzsignfoldersignerassociationID == null) {
      this.aFkiEzsignfoldersignerassociationID = new ArrayList<>();
    }
    this.aFkiEzsignfoldersignerassociationID.add(aFkiEzsignfoldersignerassociationIDItem);
    return this;
  }

  /**
   * Get aFkiEzsignfoldersignerassociationID
   * @return aFkiEzsignfoldersignerassociationID
   */
  @javax.annotation.Nonnull
  public List<Integer> getaFkiEzsignfoldersignerassociationID() {
    return aFkiEzsignfoldersignerassociationID;
  }

  public void setaFkiEzsignfoldersignerassociationID(@javax.annotation.Nonnull List<Integer> aFkiEzsignfoldersignerassociationID) {
    this.aFkiEzsignfoldersignerassociationID = aFkiEzsignfoldersignerassociationID;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EzsignfolderSendV3Request ezsignfolderSendV3Request = (EzsignfolderSendV3Request) o;
    return Objects.equals(this.tEzsignfolderMessage, ezsignfolderSendV3Request.tEzsignfolderMessage) &&
        Objects.equals(this.eEzsignfolderMessageorder, ezsignfolderSendV3Request.eEzsignfolderMessageorder) &&
        Objects.equals(this.dtEzsignfolderDelayedsenddate, ezsignfolderSendV3Request.dtEzsignfolderDelayedsenddate) &&
        Objects.equals(this.aFkiEzsignfoldersignerassociationID, ezsignfolderSendV3Request.aFkiEzsignfoldersignerassociationID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tEzsignfolderMessage, eEzsignfolderMessageorder, dtEzsignfolderDelayedsenddate, aFkiEzsignfoldersignerassociationID);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EzsignfolderSendV3Request {\n");
    sb.append("    tEzsignfolderMessage: ").append(toIndentedString(tEzsignfolderMessage)).append("\n");
    sb.append("    eEzsignfolderMessageorder: ").append(toIndentedString(eEzsignfolderMessageorder)).append("\n");
    sb.append("    dtEzsignfolderDelayedsenddate: ").append(toIndentedString(dtEzsignfolderDelayedsenddate)).append("\n");
    sb.append("    aFkiEzsignfoldersignerassociationID: ").append(toIndentedString(aFkiEzsignfoldersignerassociationID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("tEzsignfolderMessage");
    openapiFields.add("eEzsignfolderMessageorder");
    openapiFields.add("dtEzsignfolderDelayedsenddate");
    openapiFields.add("a_fkiEzsignfoldersignerassociationID");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("a_fkiEzsignfoldersignerassociationID");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EzsignfolderSendV3Request
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EzsignfolderSendV3Request.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EzsignfolderSendV3Request is not found in the empty JSON string", EzsignfolderSendV3Request.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EzsignfolderSendV3Request.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EzsignfolderSendV3Request` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : EzsignfolderSendV3Request.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("tEzsignfolderMessage") != null && !jsonObj.get("tEzsignfolderMessage").isJsonNull()) && !jsonObj.get("tEzsignfolderMessage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tEzsignfolderMessage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tEzsignfolderMessage").toString()));
      }
      // validate the optional field `eEzsignfolderMessageorder`
      if (jsonObj.get("eEzsignfolderMessageorder") != null && !jsonObj.get("eEzsignfolderMessageorder").isJsonNull()) {
        FieldEEzsignfolderMessageorder.validateJsonElement(jsonObj.get("eEzsignfolderMessageorder"));
      }
      if ((jsonObj.get("dtEzsignfolderDelayedsenddate") != null && !jsonObj.get("dtEzsignfolderDelayedsenddate").isJsonNull()) && !jsonObj.get("dtEzsignfolderDelayedsenddate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dtEzsignfolderDelayedsenddate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dtEzsignfolderDelayedsenddate").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("a_fkiEzsignfoldersignerassociationID") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("a_fkiEzsignfoldersignerassociationID").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `a_fkiEzsignfoldersignerassociationID` to be an array in the JSON string but got `%s`", jsonObj.get("a_fkiEzsignfoldersignerassociationID").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EzsignfolderSendV3Request.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EzsignfolderSendV3Request' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EzsignfolderSendV3Request> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EzsignfolderSendV3Request.class));

       return (TypeAdapter<T>) new TypeAdapter<EzsignfolderSendV3Request>() {
           @Override
           public void write(JsonWriter out, EzsignfolderSendV3Request value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EzsignfolderSendV3Request read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EzsignfolderSendV3Request given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EzsignfolderSendV3Request
   * @throws IOException if the JSON string is invalid with respect to EzsignfolderSendV3Request
   */
  public static EzsignfolderSendV3Request fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EzsignfolderSendV3Request.class);
  }

  /**
   * Convert an instance of EzsignfolderSendV3Request to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

