/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.7
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.ezmax.api.model.EzsignfoldersignerassociationRequest;
import com.ezmax.api.model.EzsignfoldersignerassociationRequestCompound;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * Request for POST /1/object/ezsignfoldersignerassociation
 */
@ApiModel(description = "Request for POST /1/object/ezsignfoldersignerassociation")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-17T16:00:12.138084Z[Etc/UTC]")
public class EzsignfoldersignerassociationCreateObjectV1Request {
  public static final String SERIALIZED_NAME_OBJ_EZSIGNFOLDERSIGNERASSOCIATION = "objEzsignfoldersignerassociation";
  @SerializedName(SERIALIZED_NAME_OBJ_EZSIGNFOLDERSIGNERASSOCIATION)
  private EzsignfoldersignerassociationRequest objEzsignfoldersignerassociation;

  public static final String SERIALIZED_NAME_OBJ_EZSIGNFOLDERSIGNERASSOCIATION_COMPOUND = "objEzsignfoldersignerassociationCompound";
  @SerializedName(SERIALIZED_NAME_OBJ_EZSIGNFOLDERSIGNERASSOCIATION_COMPOUND)
  private EzsignfoldersignerassociationRequestCompound objEzsignfoldersignerassociationCompound;

  public EzsignfoldersignerassociationCreateObjectV1Request() { 
  }

  public EzsignfoldersignerassociationCreateObjectV1Request objEzsignfoldersignerassociation(EzsignfoldersignerassociationRequest objEzsignfoldersignerassociation) {
    
    this.objEzsignfoldersignerassociation = objEzsignfoldersignerassociation;
    return this;
  }

   /**
   * Get objEzsignfoldersignerassociation
   * @return objEzsignfoldersignerassociation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EzsignfoldersignerassociationRequest getObjEzsignfoldersignerassociation() {
    return objEzsignfoldersignerassociation;
  }


  public void setObjEzsignfoldersignerassociation(EzsignfoldersignerassociationRequest objEzsignfoldersignerassociation) {
    this.objEzsignfoldersignerassociation = objEzsignfoldersignerassociation;
  }


  public EzsignfoldersignerassociationCreateObjectV1Request objEzsignfoldersignerassociationCompound(EzsignfoldersignerassociationRequestCompound objEzsignfoldersignerassociationCompound) {
    
    this.objEzsignfoldersignerassociationCompound = objEzsignfoldersignerassociationCompound;
    return this;
  }

   /**
   * Get objEzsignfoldersignerassociationCompound
   * @return objEzsignfoldersignerassociationCompound
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EzsignfoldersignerassociationRequestCompound getObjEzsignfoldersignerassociationCompound() {
    return objEzsignfoldersignerassociationCompound;
  }


  public void setObjEzsignfoldersignerassociationCompound(EzsignfoldersignerassociationRequestCompound objEzsignfoldersignerassociationCompound) {
    this.objEzsignfoldersignerassociationCompound = objEzsignfoldersignerassociationCompound;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EzsignfoldersignerassociationCreateObjectV1Request ezsignfoldersignerassociationCreateObjectV1Request = (EzsignfoldersignerassociationCreateObjectV1Request) o;
    return Objects.equals(this.objEzsignfoldersignerassociation, ezsignfoldersignerassociationCreateObjectV1Request.objEzsignfoldersignerassociation) &&
        Objects.equals(this.objEzsignfoldersignerassociationCompound, ezsignfoldersignerassociationCreateObjectV1Request.objEzsignfoldersignerassociationCompound);
  }

  @Override
  public int hashCode() {
    return Objects.hash(objEzsignfoldersignerassociation, objEzsignfoldersignerassociationCompound);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EzsignfoldersignerassociationCreateObjectV1Request {\n");
    sb.append("    objEzsignfoldersignerassociation: ").append(toIndentedString(objEzsignfoldersignerassociation)).append("\n");
    sb.append("    objEzsignfoldersignerassociationCompound: ").append(toIndentedString(objEzsignfoldersignerassociationCompound)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("objEzsignfoldersignerassociation");
    openapiFields.add("objEzsignfoldersignerassociationCompound");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to EzsignfoldersignerassociationCreateObjectV1Request
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (EzsignfoldersignerassociationCreateObjectV1Request.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in EzsignfoldersignerassociationCreateObjectV1Request is not found in the empty JSON string", EzsignfoldersignerassociationCreateObjectV1Request.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!EzsignfoldersignerassociationCreateObjectV1Request.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EzsignfoldersignerassociationCreateObjectV1Request` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // validate the optional field `objEzsignfoldersignerassociation`
      if (jsonObj.getAsJsonObject("objEzsignfoldersignerassociation") != null) {
        EzsignfoldersignerassociationRequest.validateJsonObject(jsonObj.getAsJsonObject("objEzsignfoldersignerassociation"));
      }
      // validate the optional field `objEzsignfoldersignerassociationCompound`
      if (jsonObj.getAsJsonObject("objEzsignfoldersignerassociationCompound") != null) {
        EzsignfoldersignerassociationRequestCompound.validateJsonObject(jsonObj.getAsJsonObject("objEzsignfoldersignerassociationCompound"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EzsignfoldersignerassociationCreateObjectV1Request.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EzsignfoldersignerassociationCreateObjectV1Request' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EzsignfoldersignerassociationCreateObjectV1Request> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EzsignfoldersignerassociationCreateObjectV1Request.class));

       return (TypeAdapter<T>) new TypeAdapter<EzsignfoldersignerassociationCreateObjectV1Request>() {
           @Override
           public void write(JsonWriter out, EzsignfoldersignerassociationCreateObjectV1Request value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EzsignfoldersignerassociationCreateObjectV1Request read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EzsignfoldersignerassociationCreateObjectV1Request given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EzsignfoldersignerassociationCreateObjectV1Request
  * @throws IOException if the JSON string is invalid with respect to EzsignfoldersignerassociationCreateObjectV1Request
  */
  public static EzsignfoldersignerassociationCreateObjectV1Request fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EzsignfoldersignerassociationCreateObjectV1Request.class);
  }

 /**
  * Convert an instance of EzsignfoldersignerassociationCreateObjectV1Request to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

