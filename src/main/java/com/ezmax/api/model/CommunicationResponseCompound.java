/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.17
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.ezmax.api.model.CommonAudit;
import com.ezmax.api.model.CommunicationattachmentResponseCompound;
import com.ezmax.api.model.CommunicationexternalrecipientResponseCompound;
import com.ezmax.api.model.CommunicationrecipientResponseCompound;
import com.ezmax.api.model.ComputedECommunicationDirection;
import com.ezmax.api.model.DescriptionstaticResponse;
import com.ezmax.api.model.EmailstaticResponse;
import com.ezmax.api.model.FieldECommunicationImportance;
import com.ezmax.api.model.FieldECommunicationType;
import com.ezmax.api.model.PhonestaticResponse;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * A Communication Object
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-04-08T21:18:02.097019897Z[Etc/UTC]")
public class CommunicationResponseCompound {
  public static final String SERIALIZED_NAME_PKI_COMMUNICATION_I_D = "pkiCommunicationID";
  @SerializedName(SERIALIZED_NAME_PKI_COMMUNICATION_I_D)
  private Integer pkiCommunicationID;

  public static final String SERIALIZED_NAME_E_COMMUNICATION_IMPORTANCE = "eCommunicationImportance";
  @SerializedName(SERIALIZED_NAME_E_COMMUNICATION_IMPORTANCE)
  private FieldECommunicationImportance eCommunicationImportance;

  public static final String SERIALIZED_NAME_E_COMMUNICATION_TYPE = "eCommunicationType";
  @SerializedName(SERIALIZED_NAME_E_COMMUNICATION_TYPE)
  private FieldECommunicationType eCommunicationType;

  public static final String SERIALIZED_NAME_S_COMMUNICATION_SUBJECT = "sCommunicationSubject";
  @SerializedName(SERIALIZED_NAME_S_COMMUNICATION_SUBJECT)
  private String sCommunicationSubject;

  public static final String SERIALIZED_NAME_S_COMMUNICATION_BODYURL = "sCommunicationBodyurl";
  @SerializedName(SERIALIZED_NAME_S_COMMUNICATION_BODYURL)
  private String sCommunicationBodyurl;

  public static final String SERIALIZED_NAME_E_COMMUNICATION_DIRECTION = "eCommunicationDirection";
  @SerializedName(SERIALIZED_NAME_E_COMMUNICATION_DIRECTION)
  private ComputedECommunicationDirection eCommunicationDirection;

  public static final String SERIALIZED_NAME_I_COMMUNICATIONRECIPIENT_COUNT = "iCommunicationrecipientCount";
  @SerializedName(SERIALIZED_NAME_I_COMMUNICATIONRECIPIENT_COUNT)
  private Integer iCommunicationrecipientCount;

  public static final String SERIALIZED_NAME_OBJ_DESCRIPTIONSTATIC_SENDER = "objDescriptionstaticSender";
  @SerializedName(SERIALIZED_NAME_OBJ_DESCRIPTIONSTATIC_SENDER)
  private DescriptionstaticResponse objDescriptionstaticSender;

  public static final String SERIALIZED_NAME_OBJ_EMAILSTATIC_SENDER = "objEmailstaticSender";
  @SerializedName(SERIALIZED_NAME_OBJ_EMAILSTATIC_SENDER)
  private EmailstaticResponse objEmailstaticSender;

  public static final String SERIALIZED_NAME_OBJ_PHONESTATIC_SENDER = "objPhonestaticSender";
  @SerializedName(SERIALIZED_NAME_OBJ_PHONESTATIC_SENDER)
  private PhonestaticResponse objPhonestaticSender;

  public static final String SERIALIZED_NAME_OBJ_AUDIT = "objAudit";
  @SerializedName(SERIALIZED_NAME_OBJ_AUDIT)
  private CommonAudit objAudit;

  public static final String SERIALIZED_NAME_A_OBJ_COMMUNICATIONATTACHMENT = "a_objCommunicationattachment";
  @SerializedName(SERIALIZED_NAME_A_OBJ_COMMUNICATIONATTACHMENT)
  private List<CommunicationattachmentResponseCompound> aObjCommunicationattachment = new ArrayList<>();

  public static final String SERIALIZED_NAME_A_OBJ_COMMUNICATIONRECIPIENT = "a_objCommunicationrecipient";
  @SerializedName(SERIALIZED_NAME_A_OBJ_COMMUNICATIONRECIPIENT)
  private List<CommunicationrecipientResponseCompound> aObjCommunicationrecipient = new ArrayList<>();

  public static final String SERIALIZED_NAME_A_OBJ_COMMUNICATIONEXTERNALRECIPIENT = "a_objCommunicationexternalrecipient";
  @SerializedName(SERIALIZED_NAME_A_OBJ_COMMUNICATIONEXTERNALRECIPIENT)
  private List<CommunicationexternalrecipientResponseCompound> aObjCommunicationexternalrecipient = new ArrayList<>();

  public CommunicationResponseCompound() {
  }

  public CommunicationResponseCompound pkiCommunicationID(Integer pkiCommunicationID) {
    
    this.pkiCommunicationID = pkiCommunicationID;
    return this;
  }

   /**
   * The unique ID of the Communication.
   * minimum: 0
   * @return pkiCommunicationID
  **/
  @javax.annotation.Nonnull

  public Integer getPkiCommunicationID() {
    return pkiCommunicationID;
  }


  public void setPkiCommunicationID(Integer pkiCommunicationID) {
    this.pkiCommunicationID = pkiCommunicationID;
  }


  public CommunicationResponseCompound eCommunicationImportance(FieldECommunicationImportance eCommunicationImportance) {
    
    this.eCommunicationImportance = eCommunicationImportance;
    return this;
  }

   /**
   * Get eCommunicationImportance
   * @return eCommunicationImportance
  **/
  @javax.annotation.Nonnull

  public FieldECommunicationImportance geteCommunicationImportance() {
    return eCommunicationImportance;
  }


  public void seteCommunicationImportance(FieldECommunicationImportance eCommunicationImportance) {
    this.eCommunicationImportance = eCommunicationImportance;
  }


  public CommunicationResponseCompound eCommunicationType(FieldECommunicationType eCommunicationType) {
    
    this.eCommunicationType = eCommunicationType;
    return this;
  }

   /**
   * Get eCommunicationType
   * @return eCommunicationType
  **/
  @javax.annotation.Nonnull

  public FieldECommunicationType geteCommunicationType() {
    return eCommunicationType;
  }


  public void seteCommunicationType(FieldECommunicationType eCommunicationType) {
    this.eCommunicationType = eCommunicationType;
  }


  public CommunicationResponseCompound sCommunicationSubject(String sCommunicationSubject) {
    
    this.sCommunicationSubject = sCommunicationSubject;
    return this;
  }

   /**
   * The subject of the Communication
   * @return sCommunicationSubject
  **/
  @javax.annotation.Nonnull

  public String getsCommunicationSubject() {
    return sCommunicationSubject;
  }


  public void setsCommunicationSubject(String sCommunicationSubject) {
    this.sCommunicationSubject = sCommunicationSubject;
  }


  public CommunicationResponseCompound sCommunicationBodyurl(String sCommunicationBodyurl) {
    
    this.sCommunicationBodyurl = sCommunicationBodyurl;
    return this;
  }

   /**
   * The url of the body used as body in the Communication
   * @return sCommunicationBodyurl
  **/
  @javax.annotation.Nullable

  public String getsCommunicationBodyurl() {
    return sCommunicationBodyurl;
  }


  public void setsCommunicationBodyurl(String sCommunicationBodyurl) {
    this.sCommunicationBodyurl = sCommunicationBodyurl;
  }


  public CommunicationResponseCompound eCommunicationDirection(ComputedECommunicationDirection eCommunicationDirection) {
    
    this.eCommunicationDirection = eCommunicationDirection;
    return this;
  }

   /**
   * Get eCommunicationDirection
   * @return eCommunicationDirection
  **/
  @javax.annotation.Nonnull

  public ComputedECommunicationDirection geteCommunicationDirection() {
    return eCommunicationDirection;
  }


  public void seteCommunicationDirection(ComputedECommunicationDirection eCommunicationDirection) {
    this.eCommunicationDirection = eCommunicationDirection;
  }


  public CommunicationResponseCompound iCommunicationrecipientCount(Integer iCommunicationrecipientCount) {
    
    this.iCommunicationrecipientCount = iCommunicationrecipientCount;
    return this;
  }

   /**
   * The count of Communicationrecipient
   * @return iCommunicationrecipientCount
  **/
  @javax.annotation.Nonnull

  public Integer getiCommunicationrecipientCount() {
    return iCommunicationrecipientCount;
  }


  public void setiCommunicationrecipientCount(Integer iCommunicationrecipientCount) {
    this.iCommunicationrecipientCount = iCommunicationrecipientCount;
  }


  public CommunicationResponseCompound objDescriptionstaticSender(DescriptionstaticResponse objDescriptionstaticSender) {
    
    this.objDescriptionstaticSender = objDescriptionstaticSender;
    return this;
  }

   /**
   * Get objDescriptionstaticSender
   * @return objDescriptionstaticSender
  **/
  @javax.annotation.Nullable

  public DescriptionstaticResponse getObjDescriptionstaticSender() {
    return objDescriptionstaticSender;
  }


  public void setObjDescriptionstaticSender(DescriptionstaticResponse objDescriptionstaticSender) {
    this.objDescriptionstaticSender = objDescriptionstaticSender;
  }


  public CommunicationResponseCompound objEmailstaticSender(EmailstaticResponse objEmailstaticSender) {
    
    this.objEmailstaticSender = objEmailstaticSender;
    return this;
  }

   /**
   * Get objEmailstaticSender
   * @return objEmailstaticSender
  **/
  @javax.annotation.Nullable

  public EmailstaticResponse getObjEmailstaticSender() {
    return objEmailstaticSender;
  }


  public void setObjEmailstaticSender(EmailstaticResponse objEmailstaticSender) {
    this.objEmailstaticSender = objEmailstaticSender;
  }


  public CommunicationResponseCompound objPhonestaticSender(PhonestaticResponse objPhonestaticSender) {
    
    this.objPhonestaticSender = objPhonestaticSender;
    return this;
  }

   /**
   * Get objPhonestaticSender
   * @return objPhonestaticSender
  **/
  @javax.annotation.Nullable

  public PhonestaticResponse getObjPhonestaticSender() {
    return objPhonestaticSender;
  }


  public void setObjPhonestaticSender(PhonestaticResponse objPhonestaticSender) {
    this.objPhonestaticSender = objPhonestaticSender;
  }


  public CommunicationResponseCompound objAudit(CommonAudit objAudit) {
    
    this.objAudit = objAudit;
    return this;
  }

   /**
   * Get objAudit
   * @return objAudit
  **/
  @javax.annotation.Nonnull

  public CommonAudit getObjAudit() {
    return objAudit;
  }


  public void setObjAudit(CommonAudit objAudit) {
    this.objAudit = objAudit;
  }


  public CommunicationResponseCompound aObjCommunicationattachment(List<CommunicationattachmentResponseCompound> aObjCommunicationattachment) {
    
    this.aObjCommunicationattachment = aObjCommunicationattachment;
    return this;
  }

  public CommunicationResponseCompound addAObjCommunicationattachmentItem(CommunicationattachmentResponseCompound aObjCommunicationattachmentItem) {
    if (this.aObjCommunicationattachment == null) {
      this.aObjCommunicationattachment = new ArrayList<>();
    }
    this.aObjCommunicationattachment.add(aObjCommunicationattachmentItem);
    return this;
  }

   /**
   * Get aObjCommunicationattachment
   * @return aObjCommunicationattachment
  **/
  @javax.annotation.Nonnull

  public List<CommunicationattachmentResponseCompound> getaObjCommunicationattachment() {
    return aObjCommunicationattachment;
  }


  public void setaObjCommunicationattachment(List<CommunicationattachmentResponseCompound> aObjCommunicationattachment) {
    this.aObjCommunicationattachment = aObjCommunicationattachment;
  }


  public CommunicationResponseCompound aObjCommunicationrecipient(List<CommunicationrecipientResponseCompound> aObjCommunicationrecipient) {
    
    this.aObjCommunicationrecipient = aObjCommunicationrecipient;
    return this;
  }

  public CommunicationResponseCompound addAObjCommunicationrecipientItem(CommunicationrecipientResponseCompound aObjCommunicationrecipientItem) {
    if (this.aObjCommunicationrecipient == null) {
      this.aObjCommunicationrecipient = new ArrayList<>();
    }
    this.aObjCommunicationrecipient.add(aObjCommunicationrecipientItem);
    return this;
  }

   /**
   * Get aObjCommunicationrecipient
   * @return aObjCommunicationrecipient
  **/
  @javax.annotation.Nonnull

  public List<CommunicationrecipientResponseCompound> getaObjCommunicationrecipient() {
    return aObjCommunicationrecipient;
  }


  public void setaObjCommunicationrecipient(List<CommunicationrecipientResponseCompound> aObjCommunicationrecipient) {
    this.aObjCommunicationrecipient = aObjCommunicationrecipient;
  }


  public CommunicationResponseCompound aObjCommunicationexternalrecipient(List<CommunicationexternalrecipientResponseCompound> aObjCommunicationexternalrecipient) {
    
    this.aObjCommunicationexternalrecipient = aObjCommunicationexternalrecipient;
    return this;
  }

  public CommunicationResponseCompound addAObjCommunicationexternalrecipientItem(CommunicationexternalrecipientResponseCompound aObjCommunicationexternalrecipientItem) {
    if (this.aObjCommunicationexternalrecipient == null) {
      this.aObjCommunicationexternalrecipient = new ArrayList<>();
    }
    this.aObjCommunicationexternalrecipient.add(aObjCommunicationexternalrecipientItem);
    return this;
  }

   /**
   * Get aObjCommunicationexternalrecipient
   * @return aObjCommunicationexternalrecipient
  **/
  @javax.annotation.Nonnull

  public List<CommunicationexternalrecipientResponseCompound> getaObjCommunicationexternalrecipient() {
    return aObjCommunicationexternalrecipient;
  }


  public void setaObjCommunicationexternalrecipient(List<CommunicationexternalrecipientResponseCompound> aObjCommunicationexternalrecipient) {
    this.aObjCommunicationexternalrecipient = aObjCommunicationexternalrecipient;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommunicationResponseCompound communicationResponseCompound = (CommunicationResponseCompound) o;
    return Objects.equals(this.pkiCommunicationID, communicationResponseCompound.pkiCommunicationID) &&
        Objects.equals(this.eCommunicationImportance, communicationResponseCompound.eCommunicationImportance) &&
        Objects.equals(this.eCommunicationType, communicationResponseCompound.eCommunicationType) &&
        Objects.equals(this.sCommunicationSubject, communicationResponseCompound.sCommunicationSubject) &&
        Objects.equals(this.sCommunicationBodyurl, communicationResponseCompound.sCommunicationBodyurl) &&
        Objects.equals(this.eCommunicationDirection, communicationResponseCompound.eCommunicationDirection) &&
        Objects.equals(this.iCommunicationrecipientCount, communicationResponseCompound.iCommunicationrecipientCount) &&
        Objects.equals(this.objDescriptionstaticSender, communicationResponseCompound.objDescriptionstaticSender) &&
        Objects.equals(this.objEmailstaticSender, communicationResponseCompound.objEmailstaticSender) &&
        Objects.equals(this.objPhonestaticSender, communicationResponseCompound.objPhonestaticSender) &&
        Objects.equals(this.objAudit, communicationResponseCompound.objAudit) &&
        Objects.equals(this.aObjCommunicationattachment, communicationResponseCompound.aObjCommunicationattachment) &&
        Objects.equals(this.aObjCommunicationrecipient, communicationResponseCompound.aObjCommunicationrecipient) &&
        Objects.equals(this.aObjCommunicationexternalrecipient, communicationResponseCompound.aObjCommunicationexternalrecipient);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pkiCommunicationID, eCommunicationImportance, eCommunicationType, sCommunicationSubject, sCommunicationBodyurl, eCommunicationDirection, iCommunicationrecipientCount, objDescriptionstaticSender, objEmailstaticSender, objPhonestaticSender, objAudit, aObjCommunicationattachment, aObjCommunicationrecipient, aObjCommunicationexternalrecipient);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommunicationResponseCompound {\n");
    sb.append("    pkiCommunicationID: ").append(toIndentedString(pkiCommunicationID)).append("\n");
    sb.append("    eCommunicationImportance: ").append(toIndentedString(eCommunicationImportance)).append("\n");
    sb.append("    eCommunicationType: ").append(toIndentedString(eCommunicationType)).append("\n");
    sb.append("    sCommunicationSubject: ").append(toIndentedString(sCommunicationSubject)).append("\n");
    sb.append("    sCommunicationBodyurl: ").append(toIndentedString(sCommunicationBodyurl)).append("\n");
    sb.append("    eCommunicationDirection: ").append(toIndentedString(eCommunicationDirection)).append("\n");
    sb.append("    iCommunicationrecipientCount: ").append(toIndentedString(iCommunicationrecipientCount)).append("\n");
    sb.append("    objDescriptionstaticSender: ").append(toIndentedString(objDescriptionstaticSender)).append("\n");
    sb.append("    objEmailstaticSender: ").append(toIndentedString(objEmailstaticSender)).append("\n");
    sb.append("    objPhonestaticSender: ").append(toIndentedString(objPhonestaticSender)).append("\n");
    sb.append("    objAudit: ").append(toIndentedString(objAudit)).append("\n");
    sb.append("    aObjCommunicationattachment: ").append(toIndentedString(aObjCommunicationattachment)).append("\n");
    sb.append("    aObjCommunicationrecipient: ").append(toIndentedString(aObjCommunicationrecipient)).append("\n");
    sb.append("    aObjCommunicationexternalrecipient: ").append(toIndentedString(aObjCommunicationexternalrecipient)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pkiCommunicationID");
    openapiFields.add("eCommunicationImportance");
    openapiFields.add("eCommunicationType");
    openapiFields.add("sCommunicationSubject");
    openapiFields.add("sCommunicationBodyurl");
    openapiFields.add("eCommunicationDirection");
    openapiFields.add("iCommunicationrecipientCount");
    openapiFields.add("objDescriptionstaticSender");
    openapiFields.add("objEmailstaticSender");
    openapiFields.add("objPhonestaticSender");
    openapiFields.add("objAudit");
    openapiFields.add("a_objCommunicationattachment");
    openapiFields.add("a_objCommunicationrecipient");
    openapiFields.add("a_objCommunicationexternalrecipient");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("pkiCommunicationID");
    openapiRequiredFields.add("eCommunicationImportance");
    openapiRequiredFields.add("eCommunicationType");
    openapiRequiredFields.add("sCommunicationSubject");
    openapiRequiredFields.add("eCommunicationDirection");
    openapiRequiredFields.add("iCommunicationrecipientCount");
    openapiRequiredFields.add("objAudit");
    openapiRequiredFields.add("a_objCommunicationattachment");
    openapiRequiredFields.add("a_objCommunicationrecipient");
    openapiRequiredFields.add("a_objCommunicationexternalrecipient");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CommunicationResponseCompound
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CommunicationResponseCompound.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CommunicationResponseCompound is not found in the empty JSON string", CommunicationResponseCompound.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!CommunicationResponseCompound.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CommunicationResponseCompound` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CommunicationResponseCompound.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("sCommunicationSubject").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sCommunicationSubject` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sCommunicationSubject").toString()));
      }
      if ((jsonObj.get("sCommunicationBodyurl") != null && !jsonObj.get("sCommunicationBodyurl").isJsonNull()) && !jsonObj.get("sCommunicationBodyurl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sCommunicationBodyurl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sCommunicationBodyurl").toString()));
      }
      // validate the optional field `objDescriptionstaticSender`
      if (jsonObj.get("objDescriptionstaticSender") != null && !jsonObj.get("objDescriptionstaticSender").isJsonNull()) {
        DescriptionstaticResponse.validateJsonObject(jsonObj.getAsJsonObject("objDescriptionstaticSender"));
      }
      // validate the optional field `objEmailstaticSender`
      if (jsonObj.get("objEmailstaticSender") != null && !jsonObj.get("objEmailstaticSender").isJsonNull()) {
        EmailstaticResponse.validateJsonObject(jsonObj.getAsJsonObject("objEmailstaticSender"));
      }
      // validate the optional field `objPhonestaticSender`
      if (jsonObj.get("objPhonestaticSender") != null && !jsonObj.get("objPhonestaticSender").isJsonNull()) {
        PhonestaticResponse.validateJsonObject(jsonObj.getAsJsonObject("objPhonestaticSender"));
      }
      // validate the required field `objAudit`
      CommonAudit.validateJsonObject(jsonObj.getAsJsonObject("objAudit"));
      // ensure the json data is an array
      if (!jsonObj.get("a_objCommunicationattachment").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `a_objCommunicationattachment` to be an array in the JSON string but got `%s`", jsonObj.get("a_objCommunicationattachment").toString()));
      }

      JsonArray jsonArrayaObjCommunicationattachment = jsonObj.getAsJsonArray("a_objCommunicationattachment");
      // validate the required field `a_objCommunicationattachment` (array)
      for (int i = 0; i < jsonArrayaObjCommunicationattachment.size(); i++) {
        CommunicationattachmentResponseCompound.validateJsonObject(jsonArrayaObjCommunicationattachment.get(i).getAsJsonObject());
      };
      // ensure the json data is an array
      if (!jsonObj.get("a_objCommunicationrecipient").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `a_objCommunicationrecipient` to be an array in the JSON string but got `%s`", jsonObj.get("a_objCommunicationrecipient").toString()));
      }

      JsonArray jsonArrayaObjCommunicationrecipient = jsonObj.getAsJsonArray("a_objCommunicationrecipient");
      // validate the required field `a_objCommunicationrecipient` (array)
      for (int i = 0; i < jsonArrayaObjCommunicationrecipient.size(); i++) {
        CommunicationrecipientResponseCompound.validateJsonObject(jsonArrayaObjCommunicationrecipient.get(i).getAsJsonObject());
      };
      // ensure the json data is an array
      if (!jsonObj.get("a_objCommunicationexternalrecipient").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `a_objCommunicationexternalrecipient` to be an array in the JSON string but got `%s`", jsonObj.get("a_objCommunicationexternalrecipient").toString()));
      }

      JsonArray jsonArrayaObjCommunicationexternalrecipient = jsonObj.getAsJsonArray("a_objCommunicationexternalrecipient");
      // validate the required field `a_objCommunicationexternalrecipient` (array)
      for (int i = 0; i < jsonArrayaObjCommunicationexternalrecipient.size(); i++) {
        CommunicationexternalrecipientResponseCompound.validateJsonObject(jsonArrayaObjCommunicationexternalrecipient.get(i).getAsJsonObject());
      };
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CommunicationResponseCompound.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CommunicationResponseCompound' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CommunicationResponseCompound> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CommunicationResponseCompound.class));

       return (TypeAdapter<T>) new TypeAdapter<CommunicationResponseCompound>() {
           @Override
           public void write(JsonWriter out, CommunicationResponseCompound value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CommunicationResponseCompound read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CommunicationResponseCompound given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CommunicationResponseCompound
  * @throws IOException if the JSON string is invalid with respect to CommunicationResponseCompound
  */
  public static CommunicationResponseCompound fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CommunicationResponseCompound.class);
  }

 /**
  * Convert an instance of CommunicationResponseCompound to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

