/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * A Communicationsender Object
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-14T20:13:03.553513468Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class CustomCommunicationsenderRequest {
  public static final String SERIALIZED_NAME_FKI_AGENT_I_D = "fkiAgentID";
  @SerializedName(SERIALIZED_NAME_FKI_AGENT_I_D)
  private Integer fkiAgentID;

  public static final String SERIALIZED_NAME_FKI_BROKER_I_D = "fkiBrokerID";
  @SerializedName(SERIALIZED_NAME_FKI_BROKER_I_D)
  private Integer fkiBrokerID;

  public static final String SERIALIZED_NAME_FKI_MAILBOXSHARED_I_D = "fkiMailboxsharedID";
  @SerializedName(SERIALIZED_NAME_FKI_MAILBOXSHARED_I_D)
  private Integer fkiMailboxsharedID;

  public static final String SERIALIZED_NAME_FKI_PHONELINESHARED_I_D = "fkiPhonelinesharedID";
  @SerializedName(SERIALIZED_NAME_FKI_PHONELINESHARED_I_D)
  private Integer fkiPhonelinesharedID;

  public static final String SERIALIZED_NAME_FKI_USER_I_D = "fkiUserID";
  @SerializedName(SERIALIZED_NAME_FKI_USER_I_D)
  private Integer fkiUserID;

  public CustomCommunicationsenderRequest() {
  }

  public CustomCommunicationsenderRequest fkiAgentID(Integer fkiAgentID) {
    this.fkiAgentID = fkiAgentID;
    return this;
  }

   /**
   * The unique ID of the Agent.
   * minimum: 0
   * @return fkiAgentID
  **/
  @javax.annotation.Nullable
  public Integer getFkiAgentID() {
    return fkiAgentID;
  }

  public void setFkiAgentID(Integer fkiAgentID) {
    this.fkiAgentID = fkiAgentID;
  }


  public CustomCommunicationsenderRequest fkiBrokerID(Integer fkiBrokerID) {
    this.fkiBrokerID = fkiBrokerID;
    return this;
  }

   /**
   * The unique ID of the Broker.
   * minimum: 0
   * @return fkiBrokerID
  **/
  @javax.annotation.Nullable
  public Integer getFkiBrokerID() {
    return fkiBrokerID;
  }

  public void setFkiBrokerID(Integer fkiBrokerID) {
    this.fkiBrokerID = fkiBrokerID;
  }


  public CustomCommunicationsenderRequest fkiMailboxsharedID(Integer fkiMailboxsharedID) {
    this.fkiMailboxsharedID = fkiMailboxsharedID;
    return this;
  }

   /**
   * The unique ID of the Mailboxshared
   * minimum: 0
   * maximum: 255
   * @return fkiMailboxsharedID
  **/
  @javax.annotation.Nullable
  public Integer getFkiMailboxsharedID() {
    return fkiMailboxsharedID;
  }

  public void setFkiMailboxsharedID(Integer fkiMailboxsharedID) {
    this.fkiMailboxsharedID = fkiMailboxsharedID;
  }


  public CustomCommunicationsenderRequest fkiPhonelinesharedID(Integer fkiPhonelinesharedID) {
    this.fkiPhonelinesharedID = fkiPhonelinesharedID;
    return this;
  }

   /**
   * The unique ID of the Phonelineshared
   * minimum: 0
   * maximum: 255
   * @return fkiPhonelinesharedID
  **/
  @javax.annotation.Nullable
  public Integer getFkiPhonelinesharedID() {
    return fkiPhonelinesharedID;
  }

  public void setFkiPhonelinesharedID(Integer fkiPhonelinesharedID) {
    this.fkiPhonelinesharedID = fkiPhonelinesharedID;
  }


  public CustomCommunicationsenderRequest fkiUserID(Integer fkiUserID) {
    this.fkiUserID = fkiUserID;
    return this;
  }

   /**
   * The unique ID of the User
   * minimum: 0
   * @return fkiUserID
  **/
  @javax.annotation.Nullable
  public Integer getFkiUserID() {
    return fkiUserID;
  }

  public void setFkiUserID(Integer fkiUserID) {
    this.fkiUserID = fkiUserID;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomCommunicationsenderRequest customCommunicationsenderRequest = (CustomCommunicationsenderRequest) o;
    return Objects.equals(this.fkiAgentID, customCommunicationsenderRequest.fkiAgentID) &&
        Objects.equals(this.fkiBrokerID, customCommunicationsenderRequest.fkiBrokerID) &&
        Objects.equals(this.fkiMailboxsharedID, customCommunicationsenderRequest.fkiMailboxsharedID) &&
        Objects.equals(this.fkiPhonelinesharedID, customCommunicationsenderRequest.fkiPhonelinesharedID) &&
        Objects.equals(this.fkiUserID, customCommunicationsenderRequest.fkiUserID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fkiAgentID, fkiBrokerID, fkiMailboxsharedID, fkiPhonelinesharedID, fkiUserID);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomCommunicationsenderRequest {\n");
    sb.append("    fkiAgentID: ").append(toIndentedString(fkiAgentID)).append("\n");
    sb.append("    fkiBrokerID: ").append(toIndentedString(fkiBrokerID)).append("\n");
    sb.append("    fkiMailboxsharedID: ").append(toIndentedString(fkiMailboxsharedID)).append("\n");
    sb.append("    fkiPhonelinesharedID: ").append(toIndentedString(fkiPhonelinesharedID)).append("\n");
    sb.append("    fkiUserID: ").append(toIndentedString(fkiUserID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("fkiAgentID");
    openapiFields.add("fkiBrokerID");
    openapiFields.add("fkiMailboxsharedID");
    openapiFields.add("fkiPhonelinesharedID");
    openapiFields.add("fkiUserID");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to CustomCommunicationsenderRequest
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CustomCommunicationsenderRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CustomCommunicationsenderRequest is not found in the empty JSON string", CustomCommunicationsenderRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CustomCommunicationsenderRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CustomCommunicationsenderRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomCommunicationsenderRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomCommunicationsenderRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomCommunicationsenderRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomCommunicationsenderRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomCommunicationsenderRequest>() {
           @Override
           public void write(JsonWriter out, CustomCommunicationsenderRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomCommunicationsenderRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CustomCommunicationsenderRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CustomCommunicationsenderRequest
  * @throws IOException if the JSON string is invalid with respect to CustomCommunicationsenderRequest
  */
  public static CustomCommunicationsenderRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomCommunicationsenderRequest.class);
  }

 /**
  * Convert an instance of CustomCommunicationsenderRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

