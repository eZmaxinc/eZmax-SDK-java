/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * A Ezsignsignergroupmembership Object and children
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-19T17:55:55.222327902Z[Etc/UTC]")
public class EzsignsignergroupmembershipRequestCompound {
  public static final String SERIALIZED_NAME_PKI_EZSIGNSIGNERGROUPMEMBERSHIP_I_D = "pkiEzsignsignergroupmembershipID";
  @SerializedName(SERIALIZED_NAME_PKI_EZSIGNSIGNERGROUPMEMBERSHIP_I_D)
  private Integer pkiEzsignsignergroupmembershipID;

  public static final String SERIALIZED_NAME_FKI_EZSIGNSIGNERGROUP_I_D = "fkiEzsignsignergroupID";
  @SerializedName(SERIALIZED_NAME_FKI_EZSIGNSIGNERGROUP_I_D)
  private Integer fkiEzsignsignergroupID;

  public static final String SERIALIZED_NAME_FKI_EZSIGNSIGNER_I_D = "fkiEzsignsignerID";
  @SerializedName(SERIALIZED_NAME_FKI_EZSIGNSIGNER_I_D)
  private Integer fkiEzsignsignerID;

  public static final String SERIALIZED_NAME_FKI_USER_I_D = "fkiUserID";
  @SerializedName(SERIALIZED_NAME_FKI_USER_I_D)
  private Integer fkiUserID;

  public static final String SERIALIZED_NAME_FKI_USERGROUP_I_D = "fkiUsergroupID";
  @SerializedName(SERIALIZED_NAME_FKI_USERGROUP_I_D)
  private Integer fkiUsergroupID;

  public EzsignsignergroupmembershipRequestCompound() {
  }

  public EzsignsignergroupmembershipRequestCompound pkiEzsignsignergroupmembershipID(Integer pkiEzsignsignergroupmembershipID) {
    this.pkiEzsignsignergroupmembershipID = pkiEzsignsignergroupmembershipID;
    return this;
  }

   /**
   * The unique ID of the Ezsignsignergroupmembership
   * minimum: 0
   * maximum: 16777215
   * @return pkiEzsignsignergroupmembershipID
  **/
  @javax.annotation.Nullable
  public Integer getPkiEzsignsignergroupmembershipID() {
    return pkiEzsignsignergroupmembershipID;
  }

  public void setPkiEzsignsignergroupmembershipID(Integer pkiEzsignsignergroupmembershipID) {
    this.pkiEzsignsignergroupmembershipID = pkiEzsignsignergroupmembershipID;
  }


  public EzsignsignergroupmembershipRequestCompound fkiEzsignsignergroupID(Integer fkiEzsignsignergroupID) {
    this.fkiEzsignsignergroupID = fkiEzsignsignergroupID;
    return this;
  }

   /**
   * The unique ID of the Ezsignsignergroup
   * minimum: 0
   * maximum: 65535
   * @return fkiEzsignsignergroupID
  **/
  @javax.annotation.Nonnull
  public Integer getFkiEzsignsignergroupID() {
    return fkiEzsignsignergroupID;
  }

  public void setFkiEzsignsignergroupID(Integer fkiEzsignsignergroupID) {
    this.fkiEzsignsignergroupID = fkiEzsignsignergroupID;
  }


  public EzsignsignergroupmembershipRequestCompound fkiEzsignsignerID(Integer fkiEzsignsignerID) {
    this.fkiEzsignsignerID = fkiEzsignsignerID;
    return this;
  }

   /**
   * The unique ID of the Ezsignsigner
   * minimum: 0
   * @return fkiEzsignsignerID
  **/
  @javax.annotation.Nullable
  public Integer getFkiEzsignsignerID() {
    return fkiEzsignsignerID;
  }

  public void setFkiEzsignsignerID(Integer fkiEzsignsignerID) {
    this.fkiEzsignsignerID = fkiEzsignsignerID;
  }


  public EzsignsignergroupmembershipRequestCompound fkiUserID(Integer fkiUserID) {
    this.fkiUserID = fkiUserID;
    return this;
  }

   /**
   * The unique ID of the User
   * minimum: 0
   * @return fkiUserID
  **/
  @javax.annotation.Nullable
  public Integer getFkiUserID() {
    return fkiUserID;
  }

  public void setFkiUserID(Integer fkiUserID) {
    this.fkiUserID = fkiUserID;
  }


  public EzsignsignergroupmembershipRequestCompound fkiUsergroupID(Integer fkiUsergroupID) {
    this.fkiUsergroupID = fkiUsergroupID;
    return this;
  }

   /**
   * The unique ID of the Usergroup
   * minimum: 0
   * maximum: 255
   * @return fkiUsergroupID
  **/
  @javax.annotation.Nullable
  public Integer getFkiUsergroupID() {
    return fkiUsergroupID;
  }

  public void setFkiUsergroupID(Integer fkiUsergroupID) {
    this.fkiUsergroupID = fkiUsergroupID;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EzsignsignergroupmembershipRequestCompound ezsignsignergroupmembershipRequestCompound = (EzsignsignergroupmembershipRequestCompound) o;
    return Objects.equals(this.pkiEzsignsignergroupmembershipID, ezsignsignergroupmembershipRequestCompound.pkiEzsignsignergroupmembershipID) &&
        Objects.equals(this.fkiEzsignsignergroupID, ezsignsignergroupmembershipRequestCompound.fkiEzsignsignergroupID) &&
        Objects.equals(this.fkiEzsignsignerID, ezsignsignergroupmembershipRequestCompound.fkiEzsignsignerID) &&
        Objects.equals(this.fkiUserID, ezsignsignergroupmembershipRequestCompound.fkiUserID) &&
        Objects.equals(this.fkiUsergroupID, ezsignsignergroupmembershipRequestCompound.fkiUsergroupID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pkiEzsignsignergroupmembershipID, fkiEzsignsignergroupID, fkiEzsignsignerID, fkiUserID, fkiUsergroupID);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EzsignsignergroupmembershipRequestCompound {\n");
    sb.append("    pkiEzsignsignergroupmembershipID: ").append(toIndentedString(pkiEzsignsignergroupmembershipID)).append("\n");
    sb.append("    fkiEzsignsignergroupID: ").append(toIndentedString(fkiEzsignsignergroupID)).append("\n");
    sb.append("    fkiEzsignsignerID: ").append(toIndentedString(fkiEzsignsignerID)).append("\n");
    sb.append("    fkiUserID: ").append(toIndentedString(fkiUserID)).append("\n");
    sb.append("    fkiUsergroupID: ").append(toIndentedString(fkiUsergroupID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pkiEzsignsignergroupmembershipID");
    openapiFields.add("fkiEzsignsignergroupID");
    openapiFields.add("fkiEzsignsignerID");
    openapiFields.add("fkiUserID");
    openapiFields.add("fkiUsergroupID");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("fkiEzsignsignergroupID");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to EzsignsignergroupmembershipRequestCompound
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EzsignsignergroupmembershipRequestCompound.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EzsignsignergroupmembershipRequestCompound is not found in the empty JSON string", EzsignsignergroupmembershipRequestCompound.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EzsignsignergroupmembershipRequestCompound.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EzsignsignergroupmembershipRequestCompound` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : EzsignsignergroupmembershipRequestCompound.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EzsignsignergroupmembershipRequestCompound.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EzsignsignergroupmembershipRequestCompound' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EzsignsignergroupmembershipRequestCompound> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EzsignsignergroupmembershipRequestCompound.class));

       return (TypeAdapter<T>) new TypeAdapter<EzsignsignergroupmembershipRequestCompound>() {
           @Override
           public void write(JsonWriter out, EzsignsignergroupmembershipRequestCompound value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EzsignsignergroupmembershipRequestCompound read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EzsignsignergroupmembershipRequestCompound given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EzsignsignergroupmembershipRequestCompound
  * @throws IOException if the JSON string is invalid with respect to EzsignsignergroupmembershipRequestCompound
  */
  public static EzsignsignergroupmembershipRequestCompound fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EzsignsignergroupmembershipRequestCompound.class);
  }

 /**
  * Convert an instance of EzsignsignergroupmembershipRequestCompound to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

