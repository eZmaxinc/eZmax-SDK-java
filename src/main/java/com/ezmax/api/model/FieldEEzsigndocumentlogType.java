/*
 * eZmax API Definition
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.5
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * The Ezsigndocumentlog Type.
 */
@JsonAdapter(FieldEEzsigndocumentlogType.Adapter.class)
public enum FieldEEzsigndocumentlogType {
  
  CLONE("Clone"),
  
  LOGIN("Login"),
  
  SENDCODE("Sendcode"),
  
  BADCODE("Badcode"),
  
  GOODCODE("Goodcode"),
  
  AUTHENTICATION("Authentication"),
  
  CREATEPAGE("Createpage"),
  
  DOWNLOAD("Download"),
  
  SEND("Send"),
  
  SIGN("Sign"),
  
  UPLOAD("Upload"),
  
  VIEW("View"),
  
  COMPLETION("Completion"),
  
  CHANGELIMITDATE("Changelimitdate"),
  
  UNSIGN("Unsign"),
  
  IMPORTFROMINSTANET("ImportFromInstanet"),
  
  SENDEMAIL("SendEmail"),
  
  FORMCOMPLETION("FormCompletion"),
  
  SIGNATUREATTACHMENTADD("SignatureAttachmentAdd"),
  
  SIGNATUREATTACHMENTVALIDATION("SignatureAttachmentValidation"),
  
  SIGNATUREATTACHMENTREFUSED("SignatureAttachmentRefused"),
  
  SIGNATUREATTACHMENTDELETED("SignatureAttachmentDeleted"),
  
  DECLINEDTOSIGN("DeclinedToSign");

  private String value;

  FieldEEzsigndocumentlogType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static FieldEEzsigndocumentlogType fromValue(String value) {
    for (FieldEEzsigndocumentlogType b : FieldEEzsigndocumentlogType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<FieldEEzsigndocumentlogType> {
    @Override
    public void write(final JsonWriter jsonWriter, final FieldEEzsigndocumentlogType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public FieldEEzsigndocumentlogType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return FieldEEzsigndocumentlogType.fromValue(value);
    }
  }
}

