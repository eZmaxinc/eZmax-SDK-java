/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.18
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * The object type for the Communicationrecipient
 */
@JsonAdapter(FieldECommunicationrecipientObjecttype.Adapter.class)
public enum FieldECommunicationrecipientObjecttype {
  
  AGENT("Agent"),
  
  AGENTINCORPORATION("Agentincorporation"),
  
  ASSISTANT("Assistant"),
  
  BROKER("Broker"),
  
  CONTACT("Contact"),
  
  CUSTOMER("Customer"),
  
  EMPLOYEE("Employee"),
  
  EXTERNALBROKER("Externalbroker"),
  
  EZCOMAGENT("Ezcomagent"),
  
  EZCOMCOMPANY("Ezcomcompany"),
  
  EZSIGNSIGNER("Ezsignsigner"),
  
  FRANCHISEOFFICE("Franchiseoffice"),
  
  NOTARY("Notary"),
  
  REWARDMEMBER("Rewardmember"),
  
  SUPPLIER("Supplier"),
  
  USER("User");

  private String value;

  FieldECommunicationrecipientObjecttype(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static FieldECommunicationrecipientObjecttype fromValue(String value) {
    for (FieldECommunicationrecipientObjecttype b : FieldECommunicationrecipientObjecttype.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<FieldECommunicationrecipientObjecttype> {
    @Override
    public void write(final JsonWriter jsonWriter, final FieldECommunicationrecipientObjecttype enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public FieldECommunicationrecipientObjecttype read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return FieldECommunicationrecipientObjecttype.fromValue(value);
    }
  }
}

