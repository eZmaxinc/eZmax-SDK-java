/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.17
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.ezmax.api.model.EzmaxinvoicingcommissionResponseCompound;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * EzmaxinvoicingsummaryglobalResponseCompoundAllOf
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-05-22T16:05:38.176914395Z[Etc/UTC]")
public class EzmaxinvoicingsummaryglobalResponseCompoundAllOf {
  public static final String SERIALIZED_NAME_A_OBJ_EZMAXINVOICINGCOMMISSION = "a_objEzmaxinvoicingcommission";
  @SerializedName(SERIALIZED_NAME_A_OBJ_EZMAXINVOICINGCOMMISSION)
  private List<EzmaxinvoicingcommissionResponseCompound> aObjEzmaxinvoicingcommission;

  public EzmaxinvoicingsummaryglobalResponseCompoundAllOf() {
  }

  public EzmaxinvoicingsummaryglobalResponseCompoundAllOf aObjEzmaxinvoicingcommission(List<EzmaxinvoicingcommissionResponseCompound> aObjEzmaxinvoicingcommission) {
    
    this.aObjEzmaxinvoicingcommission = aObjEzmaxinvoicingcommission;
    return this;
  }

  public EzmaxinvoicingsummaryglobalResponseCompoundAllOf addAObjEzmaxinvoicingcommissionItem(EzmaxinvoicingcommissionResponseCompound aObjEzmaxinvoicingcommissionItem) {
    if (this.aObjEzmaxinvoicingcommission == null) {
      this.aObjEzmaxinvoicingcommission = new ArrayList<>();
    }
    this.aObjEzmaxinvoicingcommission.add(aObjEzmaxinvoicingcommissionItem);
    return this;
  }

   /**
   * Get aObjEzmaxinvoicingcommission
   * @return aObjEzmaxinvoicingcommission
  **/
  @javax.annotation.Nullable
  public List<EzmaxinvoicingcommissionResponseCompound> getaObjEzmaxinvoicingcommission() {
    return aObjEzmaxinvoicingcommission;
  }


  public void setaObjEzmaxinvoicingcommission(List<EzmaxinvoicingcommissionResponseCompound> aObjEzmaxinvoicingcommission) {
    this.aObjEzmaxinvoicingcommission = aObjEzmaxinvoicingcommission;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EzmaxinvoicingsummaryglobalResponseCompoundAllOf ezmaxinvoicingsummaryglobalResponseCompoundAllOf = (EzmaxinvoicingsummaryglobalResponseCompoundAllOf) o;
    return Objects.equals(this.aObjEzmaxinvoicingcommission, ezmaxinvoicingsummaryglobalResponseCompoundAllOf.aObjEzmaxinvoicingcommission);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aObjEzmaxinvoicingcommission);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EzmaxinvoicingsummaryglobalResponseCompoundAllOf {\n");
    sb.append("    aObjEzmaxinvoicingcommission: ").append(toIndentedString(aObjEzmaxinvoicingcommission)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("a_objEzmaxinvoicingcommission");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to EzmaxinvoicingsummaryglobalResponseCompoundAllOf
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!EzmaxinvoicingsummaryglobalResponseCompoundAllOf.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EzmaxinvoicingsummaryglobalResponseCompoundAllOf is not found in the empty JSON string", EzmaxinvoicingsummaryglobalResponseCompoundAllOf.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!EzmaxinvoicingsummaryglobalResponseCompoundAllOf.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EzmaxinvoicingsummaryglobalResponseCompoundAllOf` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("a_objEzmaxinvoicingcommission") != null && !jsonObj.get("a_objEzmaxinvoicingcommission").isJsonNull()) {
        JsonArray jsonArrayaObjEzmaxinvoicingcommission = jsonObj.getAsJsonArray("a_objEzmaxinvoicingcommission");
        if (jsonArrayaObjEzmaxinvoicingcommission != null) {
          // ensure the json data is an array
          if (!jsonObj.get("a_objEzmaxinvoicingcommission").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `a_objEzmaxinvoicingcommission` to be an array in the JSON string but got `%s`", jsonObj.get("a_objEzmaxinvoicingcommission").toString()));
          }

          // validate the optional field `a_objEzmaxinvoicingcommission` (array)
          for (int i = 0; i < jsonArrayaObjEzmaxinvoicingcommission.size(); i++) {
            EzmaxinvoicingcommissionResponseCompound.validateJsonObject(jsonArrayaObjEzmaxinvoicingcommission.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EzmaxinvoicingsummaryglobalResponseCompoundAllOf.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EzmaxinvoicingsummaryglobalResponseCompoundAllOf' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EzmaxinvoicingsummaryglobalResponseCompoundAllOf> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EzmaxinvoicingsummaryglobalResponseCompoundAllOf.class));

       return (TypeAdapter<T>) new TypeAdapter<EzmaxinvoicingsummaryglobalResponseCompoundAllOf>() {
           @Override
           public void write(JsonWriter out, EzmaxinvoicingsummaryglobalResponseCompoundAllOf value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EzmaxinvoicingsummaryglobalResponseCompoundAllOf read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EzmaxinvoicingsummaryglobalResponseCompoundAllOf given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EzmaxinvoicingsummaryglobalResponseCompoundAllOf
  * @throws IOException if the JSON string is invalid with respect to EzmaxinvoicingsummaryglobalResponseCompoundAllOf
  */
  public static EzmaxinvoicingsummaryglobalResponseCompoundAllOf fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EzmaxinvoicingsummaryglobalResponseCompoundAllOf.class);
  }

 /**
  * Convert an instance of EzmaxinvoicingsummaryglobalResponseCompoundAllOf to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

