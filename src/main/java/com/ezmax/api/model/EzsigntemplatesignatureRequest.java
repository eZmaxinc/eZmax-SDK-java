/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.ezmax.api.model.EnumTextvalidation;
import com.ezmax.api.model.FieldEEzsigntemplatesignatureAttachmentnamesource;
import com.ezmax.api.model.FieldEEzsigntemplatesignatureDependencyrequirement;
import com.ezmax.api.model.FieldEEzsigntemplatesignatureFont;
import com.ezmax.api.model.FieldEEzsigntemplatesignaturePositioning;
import com.ezmax.api.model.FieldEEzsigntemplatesignaturePositioningoccurence;
import com.ezmax.api.model.FieldEEzsigntemplatesignatureTooltipposition;
import com.ezmax.api.model.FieldEEzsigntemplatesignatureType;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * A Ezsigntemplatesignature Object
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-28T03:34:43.801077477Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class EzsigntemplatesignatureRequest {
  public static final String SERIALIZED_NAME_PKI_EZSIGNTEMPLATESIGNATURE_I_D = "pkiEzsigntemplatesignatureID";
  @SerializedName(SERIALIZED_NAME_PKI_EZSIGNTEMPLATESIGNATURE_I_D)
  private Integer pkiEzsigntemplatesignatureID;

  public static final String SERIALIZED_NAME_FKI_EZSIGNTEMPLATEDOCUMENT_I_D = "fkiEzsigntemplatedocumentID";
  @SerializedName(SERIALIZED_NAME_FKI_EZSIGNTEMPLATEDOCUMENT_I_D)
  private Integer fkiEzsigntemplatedocumentID;

  public static final String SERIALIZED_NAME_FKI_EZSIGNTEMPLATESIGNER_I_D = "fkiEzsigntemplatesignerID";
  @SerializedName(SERIALIZED_NAME_FKI_EZSIGNTEMPLATESIGNER_I_D)
  private Integer fkiEzsigntemplatesignerID;

  public static final String SERIALIZED_NAME_FKI_EZSIGNTEMPLATESIGNER_I_D_VALIDATION = "fkiEzsigntemplatesignerIDValidation";
  @SerializedName(SERIALIZED_NAME_FKI_EZSIGNTEMPLATESIGNER_I_D_VALIDATION)
  private Integer fkiEzsigntemplatesignerIDValidation;

  public static final String SERIALIZED_NAME_E_EZSIGNTEMPLATESIGNATURE_POSITIONING = "eEzsigntemplatesignaturePositioning";
  @SerializedName(SERIALIZED_NAME_E_EZSIGNTEMPLATESIGNATURE_POSITIONING)
  private FieldEEzsigntemplatesignaturePositioning eEzsigntemplatesignaturePositioning;

  public static final String SERIALIZED_NAME_I_EZSIGNTEMPLATEDOCUMENTPAGE_PAGENUMBER = "iEzsigntemplatedocumentpagePagenumber";
  @SerializedName(SERIALIZED_NAME_I_EZSIGNTEMPLATEDOCUMENTPAGE_PAGENUMBER)
  private Integer iEzsigntemplatedocumentpagePagenumber;

  public static final String SERIALIZED_NAME_I_EZSIGNTEMPLATESIGNATURE_X = "iEzsigntemplatesignatureX";
  @SerializedName(SERIALIZED_NAME_I_EZSIGNTEMPLATESIGNATURE_X)
  private Integer iEzsigntemplatesignatureX;

  public static final String SERIALIZED_NAME_I_EZSIGNTEMPLATESIGNATURE_Y = "iEzsigntemplatesignatureY";
  @SerializedName(SERIALIZED_NAME_I_EZSIGNTEMPLATESIGNATURE_Y)
  private Integer iEzsigntemplatesignatureY;

  public static final String SERIALIZED_NAME_I_EZSIGNTEMPLATESIGNATURE_WIDTH = "iEzsigntemplatesignatureWidth";
  @SerializedName(SERIALIZED_NAME_I_EZSIGNTEMPLATESIGNATURE_WIDTH)
  private Integer iEzsigntemplatesignatureWidth;

  public static final String SERIALIZED_NAME_I_EZSIGNTEMPLATESIGNATURE_HEIGHT = "iEzsigntemplatesignatureHeight";
  @SerializedName(SERIALIZED_NAME_I_EZSIGNTEMPLATESIGNATURE_HEIGHT)
  private Integer iEzsigntemplatesignatureHeight;

  public static final String SERIALIZED_NAME_I_EZSIGNTEMPLATESIGNATURE_STEP = "iEzsigntemplatesignatureStep";
  @SerializedName(SERIALIZED_NAME_I_EZSIGNTEMPLATESIGNATURE_STEP)
  private Integer iEzsigntemplatesignatureStep;

  public static final String SERIALIZED_NAME_E_EZSIGNTEMPLATESIGNATURE_TYPE = "eEzsigntemplatesignatureType";
  @SerializedName(SERIALIZED_NAME_E_EZSIGNTEMPLATESIGNATURE_TYPE)
  private FieldEEzsigntemplatesignatureType eEzsigntemplatesignatureType;

  public static final String SERIALIZED_NAME_T_EZSIGNTEMPLATESIGNATURE_TOOLTIP = "tEzsigntemplatesignatureTooltip";
  @SerializedName(SERIALIZED_NAME_T_EZSIGNTEMPLATESIGNATURE_TOOLTIP)
  private String tEzsigntemplatesignatureTooltip;

  public static final String SERIALIZED_NAME_E_EZSIGNTEMPLATESIGNATURE_TOOLTIPPOSITION = "eEzsigntemplatesignatureTooltipposition";
  @SerializedName(SERIALIZED_NAME_E_EZSIGNTEMPLATESIGNATURE_TOOLTIPPOSITION)
  private FieldEEzsigntemplatesignatureTooltipposition eEzsigntemplatesignatureTooltipposition;

  public static final String SERIALIZED_NAME_E_EZSIGNTEMPLATESIGNATURE_FONT = "eEzsigntemplatesignatureFont";
  @SerializedName(SERIALIZED_NAME_E_EZSIGNTEMPLATESIGNATURE_FONT)
  private FieldEEzsigntemplatesignatureFont eEzsigntemplatesignatureFont;

  public static final String SERIALIZED_NAME_B_EZSIGNTEMPLATESIGNATURE_REQUIRED = "bEzsigntemplatesignatureRequired";
  @SerializedName(SERIALIZED_NAME_B_EZSIGNTEMPLATESIGNATURE_REQUIRED)
  private Boolean bEzsigntemplatesignatureRequired;

  public static final String SERIALIZED_NAME_E_EZSIGNTEMPLATESIGNATURE_ATTACHMENTNAMESOURCE = "eEzsigntemplatesignatureAttachmentnamesource";
  @SerializedName(SERIALIZED_NAME_E_EZSIGNTEMPLATESIGNATURE_ATTACHMENTNAMESOURCE)
  private FieldEEzsigntemplatesignatureAttachmentnamesource eEzsigntemplatesignatureAttachmentnamesource;

  public static final String SERIALIZED_NAME_S_EZSIGNTEMPLATESIGNATURE_ATTACHMENTDESCRIPTION = "sEzsigntemplatesignatureAttachmentdescription";
  @SerializedName(SERIALIZED_NAME_S_EZSIGNTEMPLATESIGNATURE_ATTACHMENTDESCRIPTION)
  private String sEzsigntemplatesignatureAttachmentdescription;

  public static final String SERIALIZED_NAME_I_EZSIGNTEMPLATESIGNATURE_VALIDATIONSTEP = "iEzsigntemplatesignatureValidationstep";
  @SerializedName(SERIALIZED_NAME_I_EZSIGNTEMPLATESIGNATURE_VALIDATIONSTEP)
  private Integer iEzsigntemplatesignatureValidationstep;

  public static final String SERIALIZED_NAME_I_EZSIGNTEMPLATESIGNATURE_MAXLENGTH = "iEzsigntemplatesignatureMaxlength";
  @SerializedName(SERIALIZED_NAME_I_EZSIGNTEMPLATESIGNATURE_MAXLENGTH)
  private Integer iEzsigntemplatesignatureMaxlength;

  public static final String SERIALIZED_NAME_S_EZSIGNTEMPLATESIGNATURE_REGEXP = "sEzsigntemplatesignatureRegexp";
  @SerializedName(SERIALIZED_NAME_S_EZSIGNTEMPLATESIGNATURE_REGEXP)
  private String sEzsigntemplatesignatureRegexp;

  public static final String SERIALIZED_NAME_E_EZSIGNTEMPLATESIGNATURE_TEXTVALIDATION = "eEzsigntemplatesignatureTextvalidation";
  @SerializedName(SERIALIZED_NAME_E_EZSIGNTEMPLATESIGNATURE_TEXTVALIDATION)
  private EnumTextvalidation eEzsigntemplatesignatureTextvalidation;

  public static final String SERIALIZED_NAME_E_EZSIGNTEMPLATESIGNATURE_DEPENDENCYREQUIREMENT = "eEzsigntemplatesignatureDependencyrequirement";
  @SerializedName(SERIALIZED_NAME_E_EZSIGNTEMPLATESIGNATURE_DEPENDENCYREQUIREMENT)
  private FieldEEzsigntemplatesignatureDependencyrequirement eEzsigntemplatesignatureDependencyrequirement;

  public static final String SERIALIZED_NAME_S_EZSIGNTEMPLATESIGNATURE_POSITIONINGPATTERN = "sEzsigntemplatesignaturePositioningpattern";
  @SerializedName(SERIALIZED_NAME_S_EZSIGNTEMPLATESIGNATURE_POSITIONINGPATTERN)
  private String sEzsigntemplatesignaturePositioningpattern;

  public static final String SERIALIZED_NAME_I_EZSIGNTEMPLATESIGNATURE_POSITIONINGOFFSETX = "iEzsigntemplatesignaturePositioningoffsetx";
  @SerializedName(SERIALIZED_NAME_I_EZSIGNTEMPLATESIGNATURE_POSITIONINGOFFSETX)
  private Integer iEzsigntemplatesignaturePositioningoffsetx;

  public static final String SERIALIZED_NAME_I_EZSIGNTEMPLATESIGNATURE_POSITIONINGOFFSETY = "iEzsigntemplatesignaturePositioningoffsety";
  @SerializedName(SERIALIZED_NAME_I_EZSIGNTEMPLATESIGNATURE_POSITIONINGOFFSETY)
  private Integer iEzsigntemplatesignaturePositioningoffsety;

  public static final String SERIALIZED_NAME_E_EZSIGNTEMPLATESIGNATURE_POSITIONINGOCCURENCE = "eEzsigntemplatesignaturePositioningoccurence";
  @SerializedName(SERIALIZED_NAME_E_EZSIGNTEMPLATESIGNATURE_POSITIONINGOCCURENCE)
  private FieldEEzsigntemplatesignaturePositioningoccurence eEzsigntemplatesignaturePositioningoccurence;

  public EzsigntemplatesignatureRequest() {
  }

  public EzsigntemplatesignatureRequest pkiEzsigntemplatesignatureID(Integer pkiEzsigntemplatesignatureID) {
    this.pkiEzsigntemplatesignatureID = pkiEzsigntemplatesignatureID;
    return this;
  }

   /**
   * The unique ID of the Ezsigntemplatesignature
   * minimum: 0
   * @return pkiEzsigntemplatesignatureID
  **/
  @javax.annotation.Nullable
  public Integer getPkiEzsigntemplatesignatureID() {
    return pkiEzsigntemplatesignatureID;
  }

  public void setPkiEzsigntemplatesignatureID(Integer pkiEzsigntemplatesignatureID) {
    this.pkiEzsigntemplatesignatureID = pkiEzsigntemplatesignatureID;
  }


  public EzsigntemplatesignatureRequest fkiEzsigntemplatedocumentID(Integer fkiEzsigntemplatedocumentID) {
    this.fkiEzsigntemplatedocumentID = fkiEzsigntemplatedocumentID;
    return this;
  }

   /**
   * The unique ID of the Ezsigntemplatedocument
   * minimum: 0
   * @return fkiEzsigntemplatedocumentID
  **/
  @javax.annotation.Nonnull
  public Integer getFkiEzsigntemplatedocumentID() {
    return fkiEzsigntemplatedocumentID;
  }

  public void setFkiEzsigntemplatedocumentID(Integer fkiEzsigntemplatedocumentID) {
    this.fkiEzsigntemplatedocumentID = fkiEzsigntemplatedocumentID;
  }


  public EzsigntemplatesignatureRequest fkiEzsigntemplatesignerID(Integer fkiEzsigntemplatesignerID) {
    this.fkiEzsigntemplatesignerID = fkiEzsigntemplatesignerID;
    return this;
  }

   /**
   * The unique ID of the Ezsigntemplatesigner
   * minimum: 0
   * @return fkiEzsigntemplatesignerID
  **/
  @javax.annotation.Nonnull
  public Integer getFkiEzsigntemplatesignerID() {
    return fkiEzsigntemplatesignerID;
  }

  public void setFkiEzsigntemplatesignerID(Integer fkiEzsigntemplatesignerID) {
    this.fkiEzsigntemplatesignerID = fkiEzsigntemplatesignerID;
  }


  public EzsigntemplatesignatureRequest fkiEzsigntemplatesignerIDValidation(Integer fkiEzsigntemplatesignerIDValidation) {
    this.fkiEzsigntemplatesignerIDValidation = fkiEzsigntemplatesignerIDValidation;
    return this;
  }

   /**
   * The unique ID of the Ezsigntemplatesigner
   * minimum: 0
   * @return fkiEzsigntemplatesignerIDValidation
  **/
  @javax.annotation.Nullable
  public Integer getFkiEzsigntemplatesignerIDValidation() {
    return fkiEzsigntemplatesignerIDValidation;
  }

  public void setFkiEzsigntemplatesignerIDValidation(Integer fkiEzsigntemplatesignerIDValidation) {
    this.fkiEzsigntemplatesignerIDValidation = fkiEzsigntemplatesignerIDValidation;
  }


  public EzsigntemplatesignatureRequest eEzsigntemplatesignaturePositioning(FieldEEzsigntemplatesignaturePositioning eEzsigntemplatesignaturePositioning) {
    this.eEzsigntemplatesignaturePositioning = eEzsigntemplatesignaturePositioning;
    return this;
  }

   /**
   * Get eEzsigntemplatesignaturePositioning
   * @return eEzsigntemplatesignaturePositioning
  **/
  @javax.annotation.Nullable
  public FieldEEzsigntemplatesignaturePositioning geteEzsigntemplatesignaturePositioning() {
    return eEzsigntemplatesignaturePositioning;
  }

  public void seteEzsigntemplatesignaturePositioning(FieldEEzsigntemplatesignaturePositioning eEzsigntemplatesignaturePositioning) {
    this.eEzsigntemplatesignaturePositioning = eEzsigntemplatesignaturePositioning;
  }


  public EzsigntemplatesignatureRequest iEzsigntemplatedocumentpagePagenumber(Integer iEzsigntemplatedocumentpagePagenumber) {
    this.iEzsigntemplatedocumentpagePagenumber = iEzsigntemplatedocumentpagePagenumber;
    return this;
  }

   /**
   * The page number in the Ezsigntemplatedocument
   * minimum: 1
   * @return iEzsigntemplatedocumentpagePagenumber
  **/
  @javax.annotation.Nonnull
  public Integer getiEzsigntemplatedocumentpagePagenumber() {
    return iEzsigntemplatedocumentpagePagenumber;
  }

  public void setiEzsigntemplatedocumentpagePagenumber(Integer iEzsigntemplatedocumentpagePagenumber) {
    this.iEzsigntemplatedocumentpagePagenumber = iEzsigntemplatedocumentpagePagenumber;
  }


  public EzsigntemplatesignatureRequest iEzsigntemplatesignatureX(Integer iEzsigntemplatesignatureX) {
    this.iEzsigntemplatesignatureX = iEzsigntemplatesignatureX;
    return this;
  }

   /**
   * The X coordinate (Horizontal) where to put the Ezsigntemplatesignature on the page.  Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the Ezsigntemplatesignature 2 inches from the left border of the page, you would use \&quot;200\&quot; for the X coordinate.
   * minimum: 0
   * @return iEzsigntemplatesignatureX
  **/
  @javax.annotation.Nullable
  public Integer getiEzsigntemplatesignatureX() {
    return iEzsigntemplatesignatureX;
  }

  public void setiEzsigntemplatesignatureX(Integer iEzsigntemplatesignatureX) {
    this.iEzsigntemplatesignatureX = iEzsigntemplatesignatureX;
  }


  public EzsigntemplatesignatureRequest iEzsigntemplatesignatureY(Integer iEzsigntemplatesignatureY) {
    this.iEzsigntemplatesignatureY = iEzsigntemplatesignatureY;
    return this;
  }

   /**
   * The Y coordinate (Vertical) where to put the Ezsigntemplatesignature on the page.  Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the Ezsigntemplatesignature 3 inches from the top border of the page, you would use \&quot;300\&quot; for the Y coordinate.
   * minimum: 0
   * @return iEzsigntemplatesignatureY
  **/
  @javax.annotation.Nullable
  public Integer getiEzsigntemplatesignatureY() {
    return iEzsigntemplatesignatureY;
  }

  public void setiEzsigntemplatesignatureY(Integer iEzsigntemplatesignatureY) {
    this.iEzsigntemplatesignatureY = iEzsigntemplatesignatureY;
  }


  public EzsigntemplatesignatureRequest iEzsigntemplatesignatureWidth(Integer iEzsigntemplatesignatureWidth) {
    this.iEzsigntemplatesignatureWidth = iEzsigntemplatesignatureWidth;
    return this;
  }

   /**
   * The width of the Ezsigntemplatesignature.  Size is calculated at 100dpi (dot per inch). So for example, if you want the Ezsigntemplatesignature to have a width of 2 inches, you would use \&quot;200\&quot; for the iEzsigntemplatesignatureWidth.
   * minimum: 0
   * @return iEzsigntemplatesignatureWidth
  **/
  @javax.annotation.Nullable
  public Integer getiEzsigntemplatesignatureWidth() {
    return iEzsigntemplatesignatureWidth;
  }

  public void setiEzsigntemplatesignatureWidth(Integer iEzsigntemplatesignatureWidth) {
    this.iEzsigntemplatesignatureWidth = iEzsigntemplatesignatureWidth;
  }


  public EzsigntemplatesignatureRequest iEzsigntemplatesignatureHeight(Integer iEzsigntemplatesignatureHeight) {
    this.iEzsigntemplatesignatureHeight = iEzsigntemplatesignatureHeight;
    return this;
  }

   /**
   * The height of the Ezsigntemplatesignature.  Size is calculated at 100dpi (dot per inch). So for example, if you want the Ezsigntemplatesignature to have an height of 2 inches, you would use \&quot;200\&quot; for the iEzsigntemplatesignatureHeight.
   * minimum: 0
   * @return iEzsigntemplatesignatureHeight
  **/
  @javax.annotation.Nullable
  public Integer getiEzsigntemplatesignatureHeight() {
    return iEzsigntemplatesignatureHeight;
  }

  public void setiEzsigntemplatesignatureHeight(Integer iEzsigntemplatesignatureHeight) {
    this.iEzsigntemplatesignatureHeight = iEzsigntemplatesignatureHeight;
  }


  public EzsigntemplatesignatureRequest iEzsigntemplatesignatureStep(Integer iEzsigntemplatesignatureStep) {
    this.iEzsigntemplatesignatureStep = iEzsigntemplatesignatureStep;
    return this;
  }

   /**
   * The step when the Ezsigntemplatesigner will be invited to sign
   * minimum: 1
   * @return iEzsigntemplatesignatureStep
  **/
  @javax.annotation.Nonnull
  public Integer getiEzsigntemplatesignatureStep() {
    return iEzsigntemplatesignatureStep;
  }

  public void setiEzsigntemplatesignatureStep(Integer iEzsigntemplatesignatureStep) {
    this.iEzsigntemplatesignatureStep = iEzsigntemplatesignatureStep;
  }


  public EzsigntemplatesignatureRequest eEzsigntemplatesignatureType(FieldEEzsigntemplatesignatureType eEzsigntemplatesignatureType) {
    this.eEzsigntemplatesignatureType = eEzsigntemplatesignatureType;
    return this;
  }

   /**
   * Get eEzsigntemplatesignatureType
   * @return eEzsigntemplatesignatureType
  **/
  @javax.annotation.Nonnull
  public FieldEEzsigntemplatesignatureType geteEzsigntemplatesignatureType() {
    return eEzsigntemplatesignatureType;
  }

  public void seteEzsigntemplatesignatureType(FieldEEzsigntemplatesignatureType eEzsigntemplatesignatureType) {
    this.eEzsigntemplatesignatureType = eEzsigntemplatesignatureType;
  }


  public EzsigntemplatesignatureRequest tEzsigntemplatesignatureTooltip(String tEzsigntemplatesignatureTooltip) {
    this.tEzsigntemplatesignatureTooltip = tEzsigntemplatesignatureTooltip;
    return this;
  }

   /**
   * A tooltip that will be presented to Ezsigntemplatesigner about the Ezsigntemplatesignature
   * @return tEzsigntemplatesignatureTooltip
  **/
  @javax.annotation.Nullable
  public String gettEzsigntemplatesignatureTooltip() {
    return tEzsigntemplatesignatureTooltip;
  }

  public void settEzsigntemplatesignatureTooltip(String tEzsigntemplatesignatureTooltip) {
    this.tEzsigntemplatesignatureTooltip = tEzsigntemplatesignatureTooltip;
  }


  public EzsigntemplatesignatureRequest eEzsigntemplatesignatureTooltipposition(FieldEEzsigntemplatesignatureTooltipposition eEzsigntemplatesignatureTooltipposition) {
    this.eEzsigntemplatesignatureTooltipposition = eEzsigntemplatesignatureTooltipposition;
    return this;
  }

   /**
   * Get eEzsigntemplatesignatureTooltipposition
   * @return eEzsigntemplatesignatureTooltipposition
  **/
  @javax.annotation.Nullable
  public FieldEEzsigntemplatesignatureTooltipposition geteEzsigntemplatesignatureTooltipposition() {
    return eEzsigntemplatesignatureTooltipposition;
  }

  public void seteEzsigntemplatesignatureTooltipposition(FieldEEzsigntemplatesignatureTooltipposition eEzsigntemplatesignatureTooltipposition) {
    this.eEzsigntemplatesignatureTooltipposition = eEzsigntemplatesignatureTooltipposition;
  }


  public EzsigntemplatesignatureRequest eEzsigntemplatesignatureFont(FieldEEzsigntemplatesignatureFont eEzsigntemplatesignatureFont) {
    this.eEzsigntemplatesignatureFont = eEzsigntemplatesignatureFont;
    return this;
  }

   /**
   * Get eEzsigntemplatesignatureFont
   * @return eEzsigntemplatesignatureFont
  **/
  @javax.annotation.Nullable
  public FieldEEzsigntemplatesignatureFont geteEzsigntemplatesignatureFont() {
    return eEzsigntemplatesignatureFont;
  }

  public void seteEzsigntemplatesignatureFont(FieldEEzsigntemplatesignatureFont eEzsigntemplatesignatureFont) {
    this.eEzsigntemplatesignatureFont = eEzsigntemplatesignatureFont;
  }


  public EzsigntemplatesignatureRequest bEzsigntemplatesignatureRequired(Boolean bEzsigntemplatesignatureRequired) {
    this.bEzsigntemplatesignatureRequired = bEzsigntemplatesignatureRequired;
    return this;
  }

   /**
   * Whether the Ezsigntemplatesignature is required or not. This field is relevant only with Ezsigntemplatesignature with eEzsigntemplatesignatureType &#x3D; Attachments.
   * @return bEzsigntemplatesignatureRequired
  **/
  @javax.annotation.Nullable
  public Boolean getbEzsigntemplatesignatureRequired() {
    return bEzsigntemplatesignatureRequired;
  }

  public void setbEzsigntemplatesignatureRequired(Boolean bEzsigntemplatesignatureRequired) {
    this.bEzsigntemplatesignatureRequired = bEzsigntemplatesignatureRequired;
  }


  public EzsigntemplatesignatureRequest eEzsigntemplatesignatureAttachmentnamesource(FieldEEzsigntemplatesignatureAttachmentnamesource eEzsigntemplatesignatureAttachmentnamesource) {
    this.eEzsigntemplatesignatureAttachmentnamesource = eEzsigntemplatesignatureAttachmentnamesource;
    return this;
  }

   /**
   * Get eEzsigntemplatesignatureAttachmentnamesource
   * @return eEzsigntemplatesignatureAttachmentnamesource
  **/
  @javax.annotation.Nullable
  public FieldEEzsigntemplatesignatureAttachmentnamesource geteEzsigntemplatesignatureAttachmentnamesource() {
    return eEzsigntemplatesignatureAttachmentnamesource;
  }

  public void seteEzsigntemplatesignatureAttachmentnamesource(FieldEEzsigntemplatesignatureAttachmentnamesource eEzsigntemplatesignatureAttachmentnamesource) {
    this.eEzsigntemplatesignatureAttachmentnamesource = eEzsigntemplatesignatureAttachmentnamesource;
  }


  public EzsigntemplatesignatureRequest sEzsigntemplatesignatureAttachmentdescription(String sEzsigntemplatesignatureAttachmentdescription) {
    this.sEzsigntemplatesignatureAttachmentdescription = sEzsigntemplatesignatureAttachmentdescription;
    return this;
  }

   /**
   * The description attached to the attachment name added in Ezsigntemplatesignature of eEzsigntemplatesignatureType Attachments
   * @return sEzsigntemplatesignatureAttachmentdescription
  **/
  @javax.annotation.Nullable
  public String getsEzsigntemplatesignatureAttachmentdescription() {
    return sEzsigntemplatesignatureAttachmentdescription;
  }

  public void setsEzsigntemplatesignatureAttachmentdescription(String sEzsigntemplatesignatureAttachmentdescription) {
    this.sEzsigntemplatesignatureAttachmentdescription = sEzsigntemplatesignatureAttachmentdescription;
  }


  public EzsigntemplatesignatureRequest iEzsigntemplatesignatureValidationstep(Integer iEzsigntemplatesignatureValidationstep) {
    this.iEzsigntemplatesignatureValidationstep = iEzsigntemplatesignatureValidationstep;
    return this;
  }

   /**
   * The step when the Ezsigntemplatesigner will be invited to validate the Ezsigntemplatesignature of eEzsigntemplatesignatureType Attachments
   * @return iEzsigntemplatesignatureValidationstep
  **/
  @javax.annotation.Nullable
  public Integer getiEzsigntemplatesignatureValidationstep() {
    return iEzsigntemplatesignatureValidationstep;
  }

  public void setiEzsigntemplatesignatureValidationstep(Integer iEzsigntemplatesignatureValidationstep) {
    this.iEzsigntemplatesignatureValidationstep = iEzsigntemplatesignatureValidationstep;
  }


  public EzsigntemplatesignatureRequest iEzsigntemplatesignatureMaxlength(Integer iEzsigntemplatesignatureMaxlength) {
    this.iEzsigntemplatesignatureMaxlength = iEzsigntemplatesignatureMaxlength;
    return this;
  }

   /**
   * The maximum length for the value in the Ezsigntemplatesignature  This can only be set if eEzsigntemplatesignatureType is **FieldText** or **FieldTextarea**
   * minimum: 0
   * maximum: 65535
   * @return iEzsigntemplatesignatureMaxlength
  **/
  @javax.annotation.Nullable
  public Integer getiEzsigntemplatesignatureMaxlength() {
    return iEzsigntemplatesignatureMaxlength;
  }

  public void setiEzsigntemplatesignatureMaxlength(Integer iEzsigntemplatesignatureMaxlength) {
    this.iEzsigntemplatesignatureMaxlength = iEzsigntemplatesignatureMaxlength;
  }


  public EzsigntemplatesignatureRequest sEzsigntemplatesignatureRegexp(String sEzsigntemplatesignatureRegexp) {
    this.sEzsigntemplatesignatureRegexp = sEzsigntemplatesignatureRegexp;
    return this;
  }

   /**
   * A regular expression to indicate what values are acceptable for the Ezsigntemplatesignature.  This can only be set if eEzsigntemplatesignatureType is **Text** or **Textarea**
   * @return sEzsigntemplatesignatureRegexp
  **/
  @javax.annotation.Nullable
  public String getsEzsigntemplatesignatureRegexp() {
    return sEzsigntemplatesignatureRegexp;
  }

  public void setsEzsigntemplatesignatureRegexp(String sEzsigntemplatesignatureRegexp) {
    this.sEzsigntemplatesignatureRegexp = sEzsigntemplatesignatureRegexp;
  }


  public EzsigntemplatesignatureRequest eEzsigntemplatesignatureTextvalidation(EnumTextvalidation eEzsigntemplatesignatureTextvalidation) {
    this.eEzsigntemplatesignatureTextvalidation = eEzsigntemplatesignatureTextvalidation;
    return this;
  }

   /**
   * Get eEzsigntemplatesignatureTextvalidation
   * @return eEzsigntemplatesignatureTextvalidation
  **/
  @javax.annotation.Nullable
  public EnumTextvalidation geteEzsigntemplatesignatureTextvalidation() {
    return eEzsigntemplatesignatureTextvalidation;
  }

  public void seteEzsigntemplatesignatureTextvalidation(EnumTextvalidation eEzsigntemplatesignatureTextvalidation) {
    this.eEzsigntemplatesignatureTextvalidation = eEzsigntemplatesignatureTextvalidation;
  }


  public EzsigntemplatesignatureRequest eEzsigntemplatesignatureDependencyrequirement(FieldEEzsigntemplatesignatureDependencyrequirement eEzsigntemplatesignatureDependencyrequirement) {
    this.eEzsigntemplatesignatureDependencyrequirement = eEzsigntemplatesignatureDependencyrequirement;
    return this;
  }

   /**
   * Get eEzsigntemplatesignatureDependencyrequirement
   * @return eEzsigntemplatesignatureDependencyrequirement
  **/
  @javax.annotation.Nullable
  public FieldEEzsigntemplatesignatureDependencyrequirement geteEzsigntemplatesignatureDependencyrequirement() {
    return eEzsigntemplatesignatureDependencyrequirement;
  }

  public void seteEzsigntemplatesignatureDependencyrequirement(FieldEEzsigntemplatesignatureDependencyrequirement eEzsigntemplatesignatureDependencyrequirement) {
    this.eEzsigntemplatesignatureDependencyrequirement = eEzsigntemplatesignatureDependencyrequirement;
  }


  public EzsigntemplatesignatureRequest sEzsigntemplatesignaturePositioningpattern(String sEzsigntemplatesignaturePositioningpattern) {
    this.sEzsigntemplatesignaturePositioningpattern = sEzsigntemplatesignaturePositioningpattern;
    return this;
  }

   /**
   * The string pattern to search for the positioning. **This is not a regexp**  This will be required if **eEzsigntemplatesignaturePositioning** is set to **PerCoordinates**
   * @return sEzsigntemplatesignaturePositioningpattern
  **/
  @javax.annotation.Nullable
  public String getsEzsigntemplatesignaturePositioningpattern() {
    return sEzsigntemplatesignaturePositioningpattern;
  }

  public void setsEzsigntemplatesignaturePositioningpattern(String sEzsigntemplatesignaturePositioningpattern) {
    this.sEzsigntemplatesignaturePositioningpattern = sEzsigntemplatesignaturePositioningpattern;
  }


  public EzsigntemplatesignatureRequest iEzsigntemplatesignaturePositioningoffsetx(Integer iEzsigntemplatesignaturePositioningoffsetx) {
    this.iEzsigntemplatesignaturePositioningoffsetx = iEzsigntemplatesignaturePositioningoffsetx;
    return this;
  }

   /**
   * The offset X  This will be required if **eEzsigntemplatesignaturePositioning** is set to **PerCoordinates**
   * @return iEzsigntemplatesignaturePositioningoffsetx
  **/
  @javax.annotation.Nullable
  public Integer getiEzsigntemplatesignaturePositioningoffsetx() {
    return iEzsigntemplatesignaturePositioningoffsetx;
  }

  public void setiEzsigntemplatesignaturePositioningoffsetx(Integer iEzsigntemplatesignaturePositioningoffsetx) {
    this.iEzsigntemplatesignaturePositioningoffsetx = iEzsigntemplatesignaturePositioningoffsetx;
  }


  public EzsigntemplatesignatureRequest iEzsigntemplatesignaturePositioningoffsety(Integer iEzsigntemplatesignaturePositioningoffsety) {
    this.iEzsigntemplatesignaturePositioningoffsety = iEzsigntemplatesignaturePositioningoffsety;
    return this;
  }

   /**
   * The offset Y  This will be required if **eEzsigntemplatesignaturePositioning** is set to **PerCoordinates**
   * @return iEzsigntemplatesignaturePositioningoffsety
  **/
  @javax.annotation.Nullable
  public Integer getiEzsigntemplatesignaturePositioningoffsety() {
    return iEzsigntemplatesignaturePositioningoffsety;
  }

  public void setiEzsigntemplatesignaturePositioningoffsety(Integer iEzsigntemplatesignaturePositioningoffsety) {
    this.iEzsigntemplatesignaturePositioningoffsety = iEzsigntemplatesignaturePositioningoffsety;
  }


  public EzsigntemplatesignatureRequest eEzsigntemplatesignaturePositioningoccurence(FieldEEzsigntemplatesignaturePositioningoccurence eEzsigntemplatesignaturePositioningoccurence) {
    this.eEzsigntemplatesignaturePositioningoccurence = eEzsigntemplatesignaturePositioningoccurence;
    return this;
  }

   /**
   * Get eEzsigntemplatesignaturePositioningoccurence
   * @return eEzsigntemplatesignaturePositioningoccurence
  **/
  @javax.annotation.Nullable
  public FieldEEzsigntemplatesignaturePositioningoccurence geteEzsigntemplatesignaturePositioningoccurence() {
    return eEzsigntemplatesignaturePositioningoccurence;
  }

  public void seteEzsigntemplatesignaturePositioningoccurence(FieldEEzsigntemplatesignaturePositioningoccurence eEzsigntemplatesignaturePositioningoccurence) {
    this.eEzsigntemplatesignaturePositioningoccurence = eEzsigntemplatesignaturePositioningoccurence;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EzsigntemplatesignatureRequest ezsigntemplatesignatureRequest = (EzsigntemplatesignatureRequest) o;
    return Objects.equals(this.pkiEzsigntemplatesignatureID, ezsigntemplatesignatureRequest.pkiEzsigntemplatesignatureID) &&
        Objects.equals(this.fkiEzsigntemplatedocumentID, ezsigntemplatesignatureRequest.fkiEzsigntemplatedocumentID) &&
        Objects.equals(this.fkiEzsigntemplatesignerID, ezsigntemplatesignatureRequest.fkiEzsigntemplatesignerID) &&
        Objects.equals(this.fkiEzsigntemplatesignerIDValidation, ezsigntemplatesignatureRequest.fkiEzsigntemplatesignerIDValidation) &&
        Objects.equals(this.eEzsigntemplatesignaturePositioning, ezsigntemplatesignatureRequest.eEzsigntemplatesignaturePositioning) &&
        Objects.equals(this.iEzsigntemplatedocumentpagePagenumber, ezsigntemplatesignatureRequest.iEzsigntemplatedocumentpagePagenumber) &&
        Objects.equals(this.iEzsigntemplatesignatureX, ezsigntemplatesignatureRequest.iEzsigntemplatesignatureX) &&
        Objects.equals(this.iEzsigntemplatesignatureY, ezsigntemplatesignatureRequest.iEzsigntemplatesignatureY) &&
        Objects.equals(this.iEzsigntemplatesignatureWidth, ezsigntemplatesignatureRequest.iEzsigntemplatesignatureWidth) &&
        Objects.equals(this.iEzsigntemplatesignatureHeight, ezsigntemplatesignatureRequest.iEzsigntemplatesignatureHeight) &&
        Objects.equals(this.iEzsigntemplatesignatureStep, ezsigntemplatesignatureRequest.iEzsigntemplatesignatureStep) &&
        Objects.equals(this.eEzsigntemplatesignatureType, ezsigntemplatesignatureRequest.eEzsigntemplatesignatureType) &&
        Objects.equals(this.tEzsigntemplatesignatureTooltip, ezsigntemplatesignatureRequest.tEzsigntemplatesignatureTooltip) &&
        Objects.equals(this.eEzsigntemplatesignatureTooltipposition, ezsigntemplatesignatureRequest.eEzsigntemplatesignatureTooltipposition) &&
        Objects.equals(this.eEzsigntemplatesignatureFont, ezsigntemplatesignatureRequest.eEzsigntemplatesignatureFont) &&
        Objects.equals(this.bEzsigntemplatesignatureRequired, ezsigntemplatesignatureRequest.bEzsigntemplatesignatureRequired) &&
        Objects.equals(this.eEzsigntemplatesignatureAttachmentnamesource, ezsigntemplatesignatureRequest.eEzsigntemplatesignatureAttachmentnamesource) &&
        Objects.equals(this.sEzsigntemplatesignatureAttachmentdescription, ezsigntemplatesignatureRequest.sEzsigntemplatesignatureAttachmentdescription) &&
        Objects.equals(this.iEzsigntemplatesignatureValidationstep, ezsigntemplatesignatureRequest.iEzsigntemplatesignatureValidationstep) &&
        Objects.equals(this.iEzsigntemplatesignatureMaxlength, ezsigntemplatesignatureRequest.iEzsigntemplatesignatureMaxlength) &&
        Objects.equals(this.sEzsigntemplatesignatureRegexp, ezsigntemplatesignatureRequest.sEzsigntemplatesignatureRegexp) &&
        Objects.equals(this.eEzsigntemplatesignatureTextvalidation, ezsigntemplatesignatureRequest.eEzsigntemplatesignatureTextvalidation) &&
        Objects.equals(this.eEzsigntemplatesignatureDependencyrequirement, ezsigntemplatesignatureRequest.eEzsigntemplatesignatureDependencyrequirement) &&
        Objects.equals(this.sEzsigntemplatesignaturePositioningpattern, ezsigntemplatesignatureRequest.sEzsigntemplatesignaturePositioningpattern) &&
        Objects.equals(this.iEzsigntemplatesignaturePositioningoffsetx, ezsigntemplatesignatureRequest.iEzsigntemplatesignaturePositioningoffsetx) &&
        Objects.equals(this.iEzsigntemplatesignaturePositioningoffsety, ezsigntemplatesignatureRequest.iEzsigntemplatesignaturePositioningoffsety) &&
        Objects.equals(this.eEzsigntemplatesignaturePositioningoccurence, ezsigntemplatesignatureRequest.eEzsigntemplatesignaturePositioningoccurence);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pkiEzsigntemplatesignatureID, fkiEzsigntemplatedocumentID, fkiEzsigntemplatesignerID, fkiEzsigntemplatesignerIDValidation, eEzsigntemplatesignaturePositioning, iEzsigntemplatedocumentpagePagenumber, iEzsigntemplatesignatureX, iEzsigntemplatesignatureY, iEzsigntemplatesignatureWidth, iEzsigntemplatesignatureHeight, iEzsigntemplatesignatureStep, eEzsigntemplatesignatureType, tEzsigntemplatesignatureTooltip, eEzsigntemplatesignatureTooltipposition, eEzsigntemplatesignatureFont, bEzsigntemplatesignatureRequired, eEzsigntemplatesignatureAttachmentnamesource, sEzsigntemplatesignatureAttachmentdescription, iEzsigntemplatesignatureValidationstep, iEzsigntemplatesignatureMaxlength, sEzsigntemplatesignatureRegexp, eEzsigntemplatesignatureTextvalidation, eEzsigntemplatesignatureDependencyrequirement, sEzsigntemplatesignaturePositioningpattern, iEzsigntemplatesignaturePositioningoffsetx, iEzsigntemplatesignaturePositioningoffsety, eEzsigntemplatesignaturePositioningoccurence);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EzsigntemplatesignatureRequest {\n");
    sb.append("    pkiEzsigntemplatesignatureID: ").append(toIndentedString(pkiEzsigntemplatesignatureID)).append("\n");
    sb.append("    fkiEzsigntemplatedocumentID: ").append(toIndentedString(fkiEzsigntemplatedocumentID)).append("\n");
    sb.append("    fkiEzsigntemplatesignerID: ").append(toIndentedString(fkiEzsigntemplatesignerID)).append("\n");
    sb.append("    fkiEzsigntemplatesignerIDValidation: ").append(toIndentedString(fkiEzsigntemplatesignerIDValidation)).append("\n");
    sb.append("    eEzsigntemplatesignaturePositioning: ").append(toIndentedString(eEzsigntemplatesignaturePositioning)).append("\n");
    sb.append("    iEzsigntemplatedocumentpagePagenumber: ").append(toIndentedString(iEzsigntemplatedocumentpagePagenumber)).append("\n");
    sb.append("    iEzsigntemplatesignatureX: ").append(toIndentedString(iEzsigntemplatesignatureX)).append("\n");
    sb.append("    iEzsigntemplatesignatureY: ").append(toIndentedString(iEzsigntemplatesignatureY)).append("\n");
    sb.append("    iEzsigntemplatesignatureWidth: ").append(toIndentedString(iEzsigntemplatesignatureWidth)).append("\n");
    sb.append("    iEzsigntemplatesignatureHeight: ").append(toIndentedString(iEzsigntemplatesignatureHeight)).append("\n");
    sb.append("    iEzsigntemplatesignatureStep: ").append(toIndentedString(iEzsigntemplatesignatureStep)).append("\n");
    sb.append("    eEzsigntemplatesignatureType: ").append(toIndentedString(eEzsigntemplatesignatureType)).append("\n");
    sb.append("    tEzsigntemplatesignatureTooltip: ").append(toIndentedString(tEzsigntemplatesignatureTooltip)).append("\n");
    sb.append("    eEzsigntemplatesignatureTooltipposition: ").append(toIndentedString(eEzsigntemplatesignatureTooltipposition)).append("\n");
    sb.append("    eEzsigntemplatesignatureFont: ").append(toIndentedString(eEzsigntemplatesignatureFont)).append("\n");
    sb.append("    bEzsigntemplatesignatureRequired: ").append(toIndentedString(bEzsigntemplatesignatureRequired)).append("\n");
    sb.append("    eEzsigntemplatesignatureAttachmentnamesource: ").append(toIndentedString(eEzsigntemplatesignatureAttachmentnamesource)).append("\n");
    sb.append("    sEzsigntemplatesignatureAttachmentdescription: ").append(toIndentedString(sEzsigntemplatesignatureAttachmentdescription)).append("\n");
    sb.append("    iEzsigntemplatesignatureValidationstep: ").append(toIndentedString(iEzsigntemplatesignatureValidationstep)).append("\n");
    sb.append("    iEzsigntemplatesignatureMaxlength: ").append(toIndentedString(iEzsigntemplatesignatureMaxlength)).append("\n");
    sb.append("    sEzsigntemplatesignatureRegexp: ").append(toIndentedString(sEzsigntemplatesignatureRegexp)).append("\n");
    sb.append("    eEzsigntemplatesignatureTextvalidation: ").append(toIndentedString(eEzsigntemplatesignatureTextvalidation)).append("\n");
    sb.append("    eEzsigntemplatesignatureDependencyrequirement: ").append(toIndentedString(eEzsigntemplatesignatureDependencyrequirement)).append("\n");
    sb.append("    sEzsigntemplatesignaturePositioningpattern: ").append(toIndentedString(sEzsigntemplatesignaturePositioningpattern)).append("\n");
    sb.append("    iEzsigntemplatesignaturePositioningoffsetx: ").append(toIndentedString(iEzsigntemplatesignaturePositioningoffsetx)).append("\n");
    sb.append("    iEzsigntemplatesignaturePositioningoffsety: ").append(toIndentedString(iEzsigntemplatesignaturePositioningoffsety)).append("\n");
    sb.append("    eEzsigntemplatesignaturePositioningoccurence: ").append(toIndentedString(eEzsigntemplatesignaturePositioningoccurence)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pkiEzsigntemplatesignatureID");
    openapiFields.add("fkiEzsigntemplatedocumentID");
    openapiFields.add("fkiEzsigntemplatesignerID");
    openapiFields.add("fkiEzsigntemplatesignerIDValidation");
    openapiFields.add("eEzsigntemplatesignaturePositioning");
    openapiFields.add("iEzsigntemplatedocumentpagePagenumber");
    openapiFields.add("iEzsigntemplatesignatureX");
    openapiFields.add("iEzsigntemplatesignatureY");
    openapiFields.add("iEzsigntemplatesignatureWidth");
    openapiFields.add("iEzsigntemplatesignatureHeight");
    openapiFields.add("iEzsigntemplatesignatureStep");
    openapiFields.add("eEzsigntemplatesignatureType");
    openapiFields.add("tEzsigntemplatesignatureTooltip");
    openapiFields.add("eEzsigntemplatesignatureTooltipposition");
    openapiFields.add("eEzsigntemplatesignatureFont");
    openapiFields.add("bEzsigntemplatesignatureRequired");
    openapiFields.add("eEzsigntemplatesignatureAttachmentnamesource");
    openapiFields.add("sEzsigntemplatesignatureAttachmentdescription");
    openapiFields.add("iEzsigntemplatesignatureValidationstep");
    openapiFields.add("iEzsigntemplatesignatureMaxlength");
    openapiFields.add("sEzsigntemplatesignatureRegexp");
    openapiFields.add("eEzsigntemplatesignatureTextvalidation");
    openapiFields.add("eEzsigntemplatesignatureDependencyrequirement");
    openapiFields.add("sEzsigntemplatesignaturePositioningpattern");
    openapiFields.add("iEzsigntemplatesignaturePositioningoffsetx");
    openapiFields.add("iEzsigntemplatesignaturePositioningoffsety");
    openapiFields.add("eEzsigntemplatesignaturePositioningoccurence");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("fkiEzsigntemplatedocumentID");
    openapiRequiredFields.add("fkiEzsigntemplatesignerID");
    openapiRequiredFields.add("iEzsigntemplatedocumentpagePagenumber");
    openapiRequiredFields.add("iEzsigntemplatesignatureStep");
    openapiRequiredFields.add("eEzsigntemplatesignatureType");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to EzsigntemplatesignatureRequest
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EzsigntemplatesignatureRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EzsigntemplatesignatureRequest is not found in the empty JSON string", EzsigntemplatesignatureRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EzsigntemplatesignatureRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EzsigntemplatesignatureRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : EzsigntemplatesignatureRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `eEzsigntemplatesignaturePositioning`
      if (jsonObj.get("eEzsigntemplatesignaturePositioning") != null && !jsonObj.get("eEzsigntemplatesignaturePositioning").isJsonNull()) {
        FieldEEzsigntemplatesignaturePositioning.validateJsonElement(jsonObj.get("eEzsigntemplatesignaturePositioning"));
      }
      // validate the required field `eEzsigntemplatesignatureType`
      FieldEEzsigntemplatesignatureType.validateJsonElement(jsonObj.get("eEzsigntemplatesignatureType"));
      if ((jsonObj.get("tEzsigntemplatesignatureTooltip") != null && !jsonObj.get("tEzsigntemplatesignatureTooltip").isJsonNull()) && !jsonObj.get("tEzsigntemplatesignatureTooltip").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tEzsigntemplatesignatureTooltip` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tEzsigntemplatesignatureTooltip").toString()));
      }
      // validate the optional field `eEzsigntemplatesignatureTooltipposition`
      if (jsonObj.get("eEzsigntemplatesignatureTooltipposition") != null && !jsonObj.get("eEzsigntemplatesignatureTooltipposition").isJsonNull()) {
        FieldEEzsigntemplatesignatureTooltipposition.validateJsonElement(jsonObj.get("eEzsigntemplatesignatureTooltipposition"));
      }
      // validate the optional field `eEzsigntemplatesignatureFont`
      if (jsonObj.get("eEzsigntemplatesignatureFont") != null && !jsonObj.get("eEzsigntemplatesignatureFont").isJsonNull()) {
        FieldEEzsigntemplatesignatureFont.validateJsonElement(jsonObj.get("eEzsigntemplatesignatureFont"));
      }
      // validate the optional field `eEzsigntemplatesignatureAttachmentnamesource`
      if (jsonObj.get("eEzsigntemplatesignatureAttachmentnamesource") != null && !jsonObj.get("eEzsigntemplatesignatureAttachmentnamesource").isJsonNull()) {
        FieldEEzsigntemplatesignatureAttachmentnamesource.validateJsonElement(jsonObj.get("eEzsigntemplatesignatureAttachmentnamesource"));
      }
      if ((jsonObj.get("sEzsigntemplatesignatureAttachmentdescription") != null && !jsonObj.get("sEzsigntemplatesignatureAttachmentdescription").isJsonNull()) && !jsonObj.get("sEzsigntemplatesignatureAttachmentdescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sEzsigntemplatesignatureAttachmentdescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sEzsigntemplatesignatureAttachmentdescription").toString()));
      }
      if ((jsonObj.get("sEzsigntemplatesignatureRegexp") != null && !jsonObj.get("sEzsigntemplatesignatureRegexp").isJsonNull()) && !jsonObj.get("sEzsigntemplatesignatureRegexp").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sEzsigntemplatesignatureRegexp` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sEzsigntemplatesignatureRegexp").toString()));
      }
      // validate the optional field `eEzsigntemplatesignatureTextvalidation`
      if (jsonObj.get("eEzsigntemplatesignatureTextvalidation") != null && !jsonObj.get("eEzsigntemplatesignatureTextvalidation").isJsonNull()) {
        EnumTextvalidation.validateJsonElement(jsonObj.get("eEzsigntemplatesignatureTextvalidation"));
      }
      // validate the optional field `eEzsigntemplatesignatureDependencyrequirement`
      if (jsonObj.get("eEzsigntemplatesignatureDependencyrequirement") != null && !jsonObj.get("eEzsigntemplatesignatureDependencyrequirement").isJsonNull()) {
        FieldEEzsigntemplatesignatureDependencyrequirement.validateJsonElement(jsonObj.get("eEzsigntemplatesignatureDependencyrequirement"));
      }
      if ((jsonObj.get("sEzsigntemplatesignaturePositioningpattern") != null && !jsonObj.get("sEzsigntemplatesignaturePositioningpattern").isJsonNull()) && !jsonObj.get("sEzsigntemplatesignaturePositioningpattern").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sEzsigntemplatesignaturePositioningpattern` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sEzsigntemplatesignaturePositioningpattern").toString()));
      }
      // validate the optional field `eEzsigntemplatesignaturePositioningoccurence`
      if (jsonObj.get("eEzsigntemplatesignaturePositioningoccurence") != null && !jsonObj.get("eEzsigntemplatesignaturePositioningoccurence").isJsonNull()) {
        FieldEEzsigntemplatesignaturePositioningoccurence.validateJsonElement(jsonObj.get("eEzsigntemplatesignaturePositioningoccurence"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EzsigntemplatesignatureRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EzsigntemplatesignatureRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EzsigntemplatesignatureRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EzsigntemplatesignatureRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<EzsigntemplatesignatureRequest>() {
           @Override
           public void write(JsonWriter out, EzsigntemplatesignatureRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EzsigntemplatesignatureRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EzsigntemplatesignatureRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EzsigntemplatesignatureRequest
  * @throws IOException if the JSON string is invalid with respect to EzsigntemplatesignatureRequest
  */
  public static EzsigntemplatesignatureRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EzsigntemplatesignatureRequest.class);
  }

 /**
  * Convert an instance of EzsigntemplatesignatureRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

