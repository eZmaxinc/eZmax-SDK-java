/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.18
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.ezmax.api.model.CustomDropdownElementRequestCompound;
import com.ezmax.api.model.EzsigntemplateformfieldRequestCompound;
import com.ezmax.api.model.EzsigntemplateformfieldgroupsignerRequestCompound;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * EzsigntemplateformfieldgroupRequestCompoundAllOf
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-07-27T19:46:50.488271214Z[Etc/UTC]")
public class EzsigntemplateformfieldgroupRequestCompoundAllOf {
  public static final String SERIALIZED_NAME_A_OBJ_EZSIGNTEMPLATEFORMFIELDGROUPSIGNER = "a_objEzsigntemplateformfieldgroupsigner";
  @SerializedName(SERIALIZED_NAME_A_OBJ_EZSIGNTEMPLATEFORMFIELDGROUPSIGNER)
  private List<EzsigntemplateformfieldgroupsignerRequestCompound> aObjEzsigntemplateformfieldgroupsigner = new ArrayList<>();

  public static final String SERIALIZED_NAME_A_OBJ_DROPDOWN_ELEMENT = "a_objDropdownElement";
  @SerializedName(SERIALIZED_NAME_A_OBJ_DROPDOWN_ELEMENT)
  private List<CustomDropdownElementRequestCompound> aObjDropdownElement;

  public static final String SERIALIZED_NAME_A_OBJ_EZSIGNTEMPLATEFORMFIELD = "a_objEzsigntemplateformfield";
  @SerializedName(SERIALIZED_NAME_A_OBJ_EZSIGNTEMPLATEFORMFIELD)
  private List<EzsigntemplateformfieldRequestCompound> aObjEzsigntemplateformfield = new ArrayList<>();

  public EzsigntemplateformfieldgroupRequestCompoundAllOf() {
  }

  public EzsigntemplateformfieldgroupRequestCompoundAllOf aObjEzsigntemplateformfieldgroupsigner(List<EzsigntemplateformfieldgroupsignerRequestCompound> aObjEzsigntemplateformfieldgroupsigner) {
    
    this.aObjEzsigntemplateformfieldgroupsigner = aObjEzsigntemplateformfieldgroupsigner;
    return this;
  }

  public EzsigntemplateformfieldgroupRequestCompoundAllOf addAObjEzsigntemplateformfieldgroupsignerItem(EzsigntemplateformfieldgroupsignerRequestCompound aObjEzsigntemplateformfieldgroupsignerItem) {
    if (this.aObjEzsigntemplateformfieldgroupsigner == null) {
      this.aObjEzsigntemplateformfieldgroupsigner = new ArrayList<>();
    }
    this.aObjEzsigntemplateformfieldgroupsigner.add(aObjEzsigntemplateformfieldgroupsignerItem);
    return this;
  }

   /**
   * Get aObjEzsigntemplateformfieldgroupsigner
   * @return aObjEzsigntemplateformfieldgroupsigner
  **/
  @javax.annotation.Nonnull
  public List<EzsigntemplateformfieldgroupsignerRequestCompound> getaObjEzsigntemplateformfieldgroupsigner() {
    return aObjEzsigntemplateformfieldgroupsigner;
  }


  public void setaObjEzsigntemplateformfieldgroupsigner(List<EzsigntemplateformfieldgroupsignerRequestCompound> aObjEzsigntemplateformfieldgroupsigner) {
    this.aObjEzsigntemplateformfieldgroupsigner = aObjEzsigntemplateformfieldgroupsigner;
  }


  public EzsigntemplateformfieldgroupRequestCompoundAllOf aObjDropdownElement(List<CustomDropdownElementRequestCompound> aObjDropdownElement) {
    
    this.aObjDropdownElement = aObjDropdownElement;
    return this;
  }

  public EzsigntemplateformfieldgroupRequestCompoundAllOf addAObjDropdownElementItem(CustomDropdownElementRequestCompound aObjDropdownElementItem) {
    if (this.aObjDropdownElement == null) {
      this.aObjDropdownElement = new ArrayList<>();
    }
    this.aObjDropdownElement.add(aObjDropdownElementItem);
    return this;
  }

   /**
   * Get aObjDropdownElement
   * @return aObjDropdownElement
  **/
  @javax.annotation.Nullable
  public List<CustomDropdownElementRequestCompound> getaObjDropdownElement() {
    return aObjDropdownElement;
  }


  public void setaObjDropdownElement(List<CustomDropdownElementRequestCompound> aObjDropdownElement) {
    this.aObjDropdownElement = aObjDropdownElement;
  }


  public EzsigntemplateformfieldgroupRequestCompoundAllOf aObjEzsigntemplateformfield(List<EzsigntemplateformfieldRequestCompound> aObjEzsigntemplateformfield) {
    
    this.aObjEzsigntemplateformfield = aObjEzsigntemplateformfield;
    return this;
  }

  public EzsigntemplateformfieldgroupRequestCompoundAllOf addAObjEzsigntemplateformfieldItem(EzsigntemplateformfieldRequestCompound aObjEzsigntemplateformfieldItem) {
    if (this.aObjEzsigntemplateformfield == null) {
      this.aObjEzsigntemplateformfield = new ArrayList<>();
    }
    this.aObjEzsigntemplateformfield.add(aObjEzsigntemplateformfieldItem);
    return this;
  }

   /**
   * Get aObjEzsigntemplateformfield
   * @return aObjEzsigntemplateformfield
  **/
  @javax.annotation.Nonnull
  public List<EzsigntemplateformfieldRequestCompound> getaObjEzsigntemplateformfield() {
    return aObjEzsigntemplateformfield;
  }


  public void setaObjEzsigntemplateformfield(List<EzsigntemplateformfieldRequestCompound> aObjEzsigntemplateformfield) {
    this.aObjEzsigntemplateformfield = aObjEzsigntemplateformfield;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EzsigntemplateformfieldgroupRequestCompoundAllOf ezsigntemplateformfieldgroupRequestCompoundAllOf = (EzsigntemplateformfieldgroupRequestCompoundAllOf) o;
    return Objects.equals(this.aObjEzsigntemplateformfieldgroupsigner, ezsigntemplateformfieldgroupRequestCompoundAllOf.aObjEzsigntemplateformfieldgroupsigner) &&
        Objects.equals(this.aObjDropdownElement, ezsigntemplateformfieldgroupRequestCompoundAllOf.aObjDropdownElement) &&
        Objects.equals(this.aObjEzsigntemplateformfield, ezsigntemplateformfieldgroupRequestCompoundAllOf.aObjEzsigntemplateformfield);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aObjEzsigntemplateformfieldgroupsigner, aObjDropdownElement, aObjEzsigntemplateformfield);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EzsigntemplateformfieldgroupRequestCompoundAllOf {\n");
    sb.append("    aObjEzsigntemplateformfieldgroupsigner: ").append(toIndentedString(aObjEzsigntemplateformfieldgroupsigner)).append("\n");
    sb.append("    aObjDropdownElement: ").append(toIndentedString(aObjDropdownElement)).append("\n");
    sb.append("    aObjEzsigntemplateformfield: ").append(toIndentedString(aObjEzsigntemplateformfield)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("a_objEzsigntemplateformfieldgroupsigner");
    openapiFields.add("a_objDropdownElement");
    openapiFields.add("a_objEzsigntemplateformfield");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("a_objEzsigntemplateformfieldgroupsigner");
    openapiRequiredFields.add("a_objEzsigntemplateformfield");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to EzsigntemplateformfieldgroupRequestCompoundAllOf
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!EzsigntemplateformfieldgroupRequestCompoundAllOf.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EzsigntemplateformfieldgroupRequestCompoundAllOf is not found in the empty JSON string", EzsigntemplateformfieldgroupRequestCompoundAllOf.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!EzsigntemplateformfieldgroupRequestCompoundAllOf.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EzsigntemplateformfieldgroupRequestCompoundAllOf` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : EzsigntemplateformfieldgroupRequestCompoundAllOf.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      // ensure the json data is an array
      if (!jsonObj.get("a_objEzsigntemplateformfieldgroupsigner").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `a_objEzsigntemplateformfieldgroupsigner` to be an array in the JSON string but got `%s`", jsonObj.get("a_objEzsigntemplateformfieldgroupsigner").toString()));
      }

      JsonArray jsonArrayaObjEzsigntemplateformfieldgroupsigner = jsonObj.getAsJsonArray("a_objEzsigntemplateformfieldgroupsigner");
      // validate the required field `a_objEzsigntemplateformfieldgroupsigner` (array)
      for (int i = 0; i < jsonArrayaObjEzsigntemplateformfieldgroupsigner.size(); i++) {
        EzsigntemplateformfieldgroupsignerRequestCompound.validateJsonObject(jsonArrayaObjEzsigntemplateformfieldgroupsigner.get(i).getAsJsonObject());
      };
      if (jsonObj.get("a_objDropdownElement") != null && !jsonObj.get("a_objDropdownElement").isJsonNull()) {
        JsonArray jsonArrayaObjDropdownElement = jsonObj.getAsJsonArray("a_objDropdownElement");
        if (jsonArrayaObjDropdownElement != null) {
          // ensure the json data is an array
          if (!jsonObj.get("a_objDropdownElement").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `a_objDropdownElement` to be an array in the JSON string but got `%s`", jsonObj.get("a_objDropdownElement").toString()));
          }

          // validate the optional field `a_objDropdownElement` (array)
          for (int i = 0; i < jsonArrayaObjDropdownElement.size(); i++) {
            CustomDropdownElementRequestCompound.validateJsonObject(jsonArrayaObjDropdownElement.get(i).getAsJsonObject());
          };
        }
      }
      // ensure the json data is an array
      if (!jsonObj.get("a_objEzsigntemplateformfield").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `a_objEzsigntemplateformfield` to be an array in the JSON string but got `%s`", jsonObj.get("a_objEzsigntemplateformfield").toString()));
      }

      JsonArray jsonArrayaObjEzsigntemplateformfield = jsonObj.getAsJsonArray("a_objEzsigntemplateformfield");
      // validate the required field `a_objEzsigntemplateformfield` (array)
      for (int i = 0; i < jsonArrayaObjEzsigntemplateformfield.size(); i++) {
        EzsigntemplateformfieldRequestCompound.validateJsonObject(jsonArrayaObjEzsigntemplateformfield.get(i).getAsJsonObject());
      };
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EzsigntemplateformfieldgroupRequestCompoundAllOf.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EzsigntemplateformfieldgroupRequestCompoundAllOf' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EzsigntemplateformfieldgroupRequestCompoundAllOf> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EzsigntemplateformfieldgroupRequestCompoundAllOf.class));

       return (TypeAdapter<T>) new TypeAdapter<EzsigntemplateformfieldgroupRequestCompoundAllOf>() {
           @Override
           public void write(JsonWriter out, EzsigntemplateformfieldgroupRequestCompoundAllOf value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EzsigntemplateformfieldgroupRequestCompoundAllOf read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EzsigntemplateformfieldgroupRequestCompoundAllOf given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EzsigntemplateformfieldgroupRequestCompoundAllOf
  * @throws IOException if the JSON string is invalid with respect to EzsigntemplateformfieldgroupRequestCompoundAllOf
  */
  public static EzsigntemplateformfieldgroupRequestCompoundAllOf fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EzsigntemplateformfieldgroupRequestCompoundAllOf.class);
  }

 /**
  * Convert an instance of EzsigntemplateformfieldgroupRequestCompoundAllOf to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

