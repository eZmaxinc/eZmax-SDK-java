/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.17
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.ezmax.api.model.FieldEEzsignfolderSendreminderfrequency;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * Request for POST /1/object/ezsignbulksend/{pkiEzsignbulksendID}/createEzsignbulksendtransmission
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-04-08T21:18:02.097019897Z[Etc/UTC]")
public class EzsignbulksendCreateEzsignbulksendtransmissionV1Request {
  public static final String SERIALIZED_NAME_FKI_USERLOGINTYPE_I_D = "fkiUserlogintypeID";
  @SerializedName(SERIALIZED_NAME_FKI_USERLOGINTYPE_I_D)
  private Integer fkiUserlogintypeID;

  public static final String SERIALIZED_NAME_FKI_EZSIGNTSAREQUIREMENT_I_D = "fkiEzsigntsarequirementID";
  @SerializedName(SERIALIZED_NAME_FKI_EZSIGNTSAREQUIREMENT_I_D)
  private Integer fkiEzsigntsarequirementID;

  public static final String SERIALIZED_NAME_S_EZSIGNBULKSENDTRANSMISSION_DESCRIPTION = "sEzsignbulksendtransmissionDescription";
  @SerializedName(SERIALIZED_NAME_S_EZSIGNBULKSENDTRANSMISSION_DESCRIPTION)
  private String sEzsignbulksendtransmissionDescription;

  public static final String SERIALIZED_NAME_DT_EZSIGNDOCUMENT_DUEDATE = "dtEzsigndocumentDuedate";
  @SerializedName(SERIALIZED_NAME_DT_EZSIGNDOCUMENT_DUEDATE)
  private String dtEzsigndocumentDuedate;

  public static final String SERIALIZED_NAME_E_EZSIGNFOLDER_SENDREMINDERFREQUENCY = "eEzsignfolderSendreminderfrequency";
  @SerializedName(SERIALIZED_NAME_E_EZSIGNFOLDER_SENDREMINDERFREQUENCY)
  private FieldEEzsignfolderSendreminderfrequency eEzsignfolderSendreminderfrequency;

  public static final String SERIALIZED_NAME_T_EXTRA_MESSAGE = "tExtraMessage";
  @SerializedName(SERIALIZED_NAME_T_EXTRA_MESSAGE)
  private String tExtraMessage;

  public static final String SERIALIZED_NAME_S_CSV_BASE64 = "sCsvBase64";
  @SerializedName(SERIALIZED_NAME_S_CSV_BASE64)
  private byte[] sCsvBase64;

  public EzsignbulksendCreateEzsignbulksendtransmissionV1Request() {
  }

  public EzsignbulksendCreateEzsignbulksendtransmissionV1Request fkiUserlogintypeID(Integer fkiUserlogintypeID) {
    
    this.fkiUserlogintypeID = fkiUserlogintypeID;
    return this;
  }

   /**
   * The unique ID of the Userlogintype  Valid values:  |Value|Description|Detail| |-|-|-| |1|**Email Only**|The Ezsignsigner will receive a secure link by email| |2|**Email and phone or SMS**|The Ezsignsigner will receive a secure link by email and will need to authenticate using SMS or Phone call. **Additional fee applies**| |3|**Email and secret question**|The Ezsignsigner will receive a secure link by email and will need to authenticate using a predefined question and answer| |4|**In person only**|The Ezsignsigner will only be able to sign \&quot;In-Person\&quot; and there won&#39;t be any authentication. No email will be sent for invitation to sign. Make sure you evaluate the risk of signature denial and at minimum, we recommend you use a handwritten signature type| |5|**In person with phone or SMS**|The Ezsignsigner will only be able to sign \&quot;In-Person\&quot; and will need to authenticate using SMS or Phone call. No email will be sent for invitation to sign. **Additional fee applies**|
   * minimum: 0
   * @return fkiUserlogintypeID
  **/
  @javax.annotation.Nonnull

  public Integer getFkiUserlogintypeID() {
    return fkiUserlogintypeID;
  }


  public void setFkiUserlogintypeID(Integer fkiUserlogintypeID) {
    this.fkiUserlogintypeID = fkiUserlogintypeID;
  }


  public EzsignbulksendCreateEzsignbulksendtransmissionV1Request fkiEzsigntsarequirementID(Integer fkiEzsigntsarequirementID) {
    
    this.fkiEzsigntsarequirementID = fkiEzsigntsarequirementID;
    return this;
  }

   /**
   * The unique ID of the Ezsigntsarequirement.  Determine if a Time Stamping Authority should add a timestamp on each of the signature. Valid values:  |Value|Description| |-|-| |1|No. TSA Timestamping will requested. This will make all signatures a lot faster since no round-trip to the TSA server will be required. Timestamping will be made using eZsign server&#39;s time.| |2|Best effort. Timestamping from a Time Stamping Authority will be requested but is not mandatory. In the very improbable case it cannot be completed, the timestamping will be made using eZsign server&#39;s time. **Additional fee applies**| |3|Mandatory. Timestamping from a Time Stamping Authority will be requested and is mandatory. In the very improbable case it cannot be completed, the signature will fail and the user will be asked to retry. **Additional fee applies**|
   * minimum: 1
   * maximum: 3
   * @return fkiEzsigntsarequirementID
  **/
  @javax.annotation.Nullable

  public Integer getFkiEzsigntsarequirementID() {
    return fkiEzsigntsarequirementID;
  }


  public void setFkiEzsigntsarequirementID(Integer fkiEzsigntsarequirementID) {
    this.fkiEzsigntsarequirementID = fkiEzsigntsarequirementID;
  }


  public EzsignbulksendCreateEzsignbulksendtransmissionV1Request sEzsignbulksendtransmissionDescription(String sEzsignbulksendtransmissionDescription) {
    
    this.sEzsignbulksendtransmissionDescription = sEzsignbulksendtransmissionDescription;
    return this;
  }

   /**
   * The description of the Ezsignbulksendtransmission
   * @return sEzsignbulksendtransmissionDescription
  **/
  @javax.annotation.Nonnull

  public String getsEzsignbulksendtransmissionDescription() {
    return sEzsignbulksendtransmissionDescription;
  }


  public void setsEzsignbulksendtransmissionDescription(String sEzsignbulksendtransmissionDescription) {
    this.sEzsignbulksendtransmissionDescription = sEzsignbulksendtransmissionDescription;
  }


  public EzsignbulksendCreateEzsignbulksendtransmissionV1Request dtEzsigndocumentDuedate(String dtEzsigndocumentDuedate) {
    
    this.dtEzsigndocumentDuedate = dtEzsigndocumentDuedate;
    return this;
  }

   /**
   * The maximum date and time at which the Ezsigndocument can be signed.
   * @return dtEzsigndocumentDuedate
  **/
  @javax.annotation.Nonnull

  public String getDtEzsigndocumentDuedate() {
    return dtEzsigndocumentDuedate;
  }


  public void setDtEzsigndocumentDuedate(String dtEzsigndocumentDuedate) {
    this.dtEzsigndocumentDuedate = dtEzsigndocumentDuedate;
  }


  public EzsignbulksendCreateEzsignbulksendtransmissionV1Request eEzsignfolderSendreminderfrequency(FieldEEzsignfolderSendreminderfrequency eEzsignfolderSendreminderfrequency) {
    
    this.eEzsignfolderSendreminderfrequency = eEzsignfolderSendreminderfrequency;
    return this;
  }

   /**
   * Get eEzsignfolderSendreminderfrequency
   * @return eEzsignfolderSendreminderfrequency
  **/
  @javax.annotation.Nonnull

  public FieldEEzsignfolderSendreminderfrequency geteEzsignfolderSendreminderfrequency() {
    return eEzsignfolderSendreminderfrequency;
  }


  public void seteEzsignfolderSendreminderfrequency(FieldEEzsignfolderSendreminderfrequency eEzsignfolderSendreminderfrequency) {
    this.eEzsignfolderSendreminderfrequency = eEzsignfolderSendreminderfrequency;
  }


  public EzsignbulksendCreateEzsignbulksendtransmissionV1Request tExtraMessage(String tExtraMessage) {
    
    this.tExtraMessage = tExtraMessage;
    return this;
  }

   /**
   * A custom text message that will be added to the email sent.
   * @return tExtraMessage
  **/
  @javax.annotation.Nonnull

  public String gettExtraMessage() {
    return tExtraMessage;
  }


  public void settExtraMessage(String tExtraMessage) {
    this.tExtraMessage = tExtraMessage;
  }


  public EzsignbulksendCreateEzsignbulksendtransmissionV1Request sCsvBase64(byte[] sCsvBase64) {
    
    this.sCsvBase64 = sCsvBase64;
    return this;
  }

   /**
   * The Base64 encoded binary content of the CSV file.
   * @return sCsvBase64
  **/
  @javax.annotation.Nonnull

  public byte[] getsCsvBase64() {
    return sCsvBase64;
  }


  public void setsCsvBase64(byte[] sCsvBase64) {
    this.sCsvBase64 = sCsvBase64;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EzsignbulksendCreateEzsignbulksendtransmissionV1Request ezsignbulksendCreateEzsignbulksendtransmissionV1Request = (EzsignbulksendCreateEzsignbulksendtransmissionV1Request) o;
    return Objects.equals(this.fkiUserlogintypeID, ezsignbulksendCreateEzsignbulksendtransmissionV1Request.fkiUserlogintypeID) &&
        Objects.equals(this.fkiEzsigntsarequirementID, ezsignbulksendCreateEzsignbulksendtransmissionV1Request.fkiEzsigntsarequirementID) &&
        Objects.equals(this.sEzsignbulksendtransmissionDescription, ezsignbulksendCreateEzsignbulksendtransmissionV1Request.sEzsignbulksendtransmissionDescription) &&
        Objects.equals(this.dtEzsigndocumentDuedate, ezsignbulksendCreateEzsignbulksendtransmissionV1Request.dtEzsigndocumentDuedate) &&
        Objects.equals(this.eEzsignfolderSendreminderfrequency, ezsignbulksendCreateEzsignbulksendtransmissionV1Request.eEzsignfolderSendreminderfrequency) &&
        Objects.equals(this.tExtraMessage, ezsignbulksendCreateEzsignbulksendtransmissionV1Request.tExtraMessage) &&
        Arrays.equals(this.sCsvBase64, ezsignbulksendCreateEzsignbulksendtransmissionV1Request.sCsvBase64);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fkiUserlogintypeID, fkiEzsigntsarequirementID, sEzsignbulksendtransmissionDescription, dtEzsigndocumentDuedate, eEzsignfolderSendreminderfrequency, tExtraMessage, Arrays.hashCode(sCsvBase64));
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EzsignbulksendCreateEzsignbulksendtransmissionV1Request {\n");
    sb.append("    fkiUserlogintypeID: ").append(toIndentedString(fkiUserlogintypeID)).append("\n");
    sb.append("    fkiEzsigntsarequirementID: ").append(toIndentedString(fkiEzsigntsarequirementID)).append("\n");
    sb.append("    sEzsignbulksendtransmissionDescription: ").append(toIndentedString(sEzsignbulksendtransmissionDescription)).append("\n");
    sb.append("    dtEzsigndocumentDuedate: ").append(toIndentedString(dtEzsigndocumentDuedate)).append("\n");
    sb.append("    eEzsignfolderSendreminderfrequency: ").append(toIndentedString(eEzsignfolderSendreminderfrequency)).append("\n");
    sb.append("    tExtraMessage: ").append(toIndentedString(tExtraMessage)).append("\n");
    sb.append("    sCsvBase64: ").append(toIndentedString(sCsvBase64)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("fkiUserlogintypeID");
    openapiFields.add("fkiEzsigntsarequirementID");
    openapiFields.add("sEzsignbulksendtransmissionDescription");
    openapiFields.add("dtEzsigndocumentDuedate");
    openapiFields.add("eEzsignfolderSendreminderfrequency");
    openapiFields.add("tExtraMessage");
    openapiFields.add("sCsvBase64");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("fkiUserlogintypeID");
    openapiRequiredFields.add("sEzsignbulksendtransmissionDescription");
    openapiRequiredFields.add("dtEzsigndocumentDuedate");
    openapiRequiredFields.add("eEzsignfolderSendreminderfrequency");
    openapiRequiredFields.add("tExtraMessage");
    openapiRequiredFields.add("sCsvBase64");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to EzsignbulksendCreateEzsignbulksendtransmissionV1Request
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!EzsignbulksendCreateEzsignbulksendtransmissionV1Request.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EzsignbulksendCreateEzsignbulksendtransmissionV1Request is not found in the empty JSON string", EzsignbulksendCreateEzsignbulksendtransmissionV1Request.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!EzsignbulksendCreateEzsignbulksendtransmissionV1Request.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EzsignbulksendCreateEzsignbulksendtransmissionV1Request` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : EzsignbulksendCreateEzsignbulksendtransmissionV1Request.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("sEzsignbulksendtransmissionDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sEzsignbulksendtransmissionDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sEzsignbulksendtransmissionDescription").toString()));
      }
      if (!jsonObj.get("dtEzsigndocumentDuedate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dtEzsigndocumentDuedate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dtEzsigndocumentDuedate").toString()));
      }
      if (!jsonObj.get("tExtraMessage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tExtraMessage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tExtraMessage").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EzsignbulksendCreateEzsignbulksendtransmissionV1Request.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EzsignbulksendCreateEzsignbulksendtransmissionV1Request' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EzsignbulksendCreateEzsignbulksendtransmissionV1Request> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EzsignbulksendCreateEzsignbulksendtransmissionV1Request.class));

       return (TypeAdapter<T>) new TypeAdapter<EzsignbulksendCreateEzsignbulksendtransmissionV1Request>() {
           @Override
           public void write(JsonWriter out, EzsignbulksendCreateEzsignbulksendtransmissionV1Request value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EzsignbulksendCreateEzsignbulksendtransmissionV1Request read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EzsignbulksendCreateEzsignbulksendtransmissionV1Request given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EzsignbulksendCreateEzsignbulksendtransmissionV1Request
  * @throws IOException if the JSON string is invalid with respect to EzsignbulksendCreateEzsignbulksendtransmissionV1Request
  */
  public static EzsignbulksendCreateEzsignbulksendtransmissionV1Request fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EzsignbulksendCreateEzsignbulksendtransmissionV1Request.class);
  }

 /**
  * Convert an instance of EzsignbulksendCreateEzsignbulksendtransmissionV1Request to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

