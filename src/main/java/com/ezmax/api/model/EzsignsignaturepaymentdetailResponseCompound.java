/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.ezmax.api.model.FieldEEzsignsignaturepaymentdetailTaxable;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * An Ezsignsignaturepaymentdetail Object and children to create a complete structure
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-07T19:20:13.445471985Z[Etc/UTC]", comments = "Generator version: 7.12.0")
public class EzsignsignaturepaymentdetailResponseCompound {
  public static final String SERIALIZED_NAME_PKI_EZSIGNSIGNATUREPAYMENTDETAIL_I_D = "pkiEzsignsignaturepaymentdetailID";
  @SerializedName(SERIALIZED_NAME_PKI_EZSIGNSIGNATUREPAYMENTDETAIL_I_D)
  @javax.annotation.Nonnull
  private Integer pkiEzsignsignaturepaymentdetailID;

  public static final String SERIALIZED_NAME_FKI_GLACCOUNTCONTAINER_I_D = "fkiGlaccountcontainerID";
  @SerializedName(SERIALIZED_NAME_FKI_GLACCOUNTCONTAINER_I_D)
  @javax.annotation.Nullable
  private Integer fkiGlaccountcontainerID;

  public static final String SERIALIZED_NAME_T_EZSIGNSIGNATUREPAYMENTDETAIL_DESCRIPTION = "tEzsignsignaturepaymentdetailDescription";
  @SerializedName(SERIALIZED_NAME_T_EZSIGNSIGNATUREPAYMENTDETAIL_DESCRIPTION)
  @javax.annotation.Nonnull
  private String tEzsignsignaturepaymentdetailDescription;

  public static final String SERIALIZED_NAME_D_EZSIGNSIGNATUREPAYMENTDETAIL_AMOUNT = "dEzsignsignaturepaymentdetailAmount";
  @SerializedName(SERIALIZED_NAME_D_EZSIGNSIGNATUREPAYMENTDETAIL_AMOUNT)
  @javax.annotation.Nonnull
  private String dEzsignsignaturepaymentdetailAmount;

  public static final String SERIALIZED_NAME_E_EZSIGNSIGNATUREPAYMENTDETAIL_TAXABLE = "eEzsignsignaturepaymentdetailTaxable";
  @SerializedName(SERIALIZED_NAME_E_EZSIGNSIGNATUREPAYMENTDETAIL_TAXABLE)
  @javax.annotation.Nonnull
  private FieldEEzsignsignaturepaymentdetailTaxable eEzsignsignaturepaymentdetailTaxable;

  public EzsignsignaturepaymentdetailResponseCompound() {
  }

  public EzsignsignaturepaymentdetailResponseCompound pkiEzsignsignaturepaymentdetailID(@javax.annotation.Nonnull Integer pkiEzsignsignaturepaymentdetailID) {
    this.pkiEzsignsignaturepaymentdetailID = pkiEzsignsignaturepaymentdetailID;
    return this;
  }

  /**
   * The unique ID of the Ezsignsignaturepaymentdetail
   * minimum: 0
   * maximum: 65535
   * @return pkiEzsignsignaturepaymentdetailID
   */
  @javax.annotation.Nonnull
  public Integer getPkiEzsignsignaturepaymentdetailID() {
    return pkiEzsignsignaturepaymentdetailID;
  }

  public void setPkiEzsignsignaturepaymentdetailID(@javax.annotation.Nonnull Integer pkiEzsignsignaturepaymentdetailID) {
    this.pkiEzsignsignaturepaymentdetailID = pkiEzsignsignaturepaymentdetailID;
  }


  public EzsignsignaturepaymentdetailResponseCompound fkiGlaccountcontainerID(@javax.annotation.Nullable Integer fkiGlaccountcontainerID) {
    this.fkiGlaccountcontainerID = fkiGlaccountcontainerID;
    return this;
  }

  /**
   * The unique ID of the Glaccountcontainer
   * minimum: 0
   * @return fkiGlaccountcontainerID
   */
  @javax.annotation.Nullable
  public Integer getFkiGlaccountcontainerID() {
    return fkiGlaccountcontainerID;
  }

  public void setFkiGlaccountcontainerID(@javax.annotation.Nullable Integer fkiGlaccountcontainerID) {
    this.fkiGlaccountcontainerID = fkiGlaccountcontainerID;
  }


  public EzsignsignaturepaymentdetailResponseCompound tEzsignsignaturepaymentdetailDescription(@javax.annotation.Nonnull String tEzsignsignaturepaymentdetailDescription) {
    this.tEzsignsignaturepaymentdetailDescription = tEzsignsignaturepaymentdetailDescription;
    return this;
  }

  /**
   * A description for the Ezsignsignaturepaymentdetail.
   * @return tEzsignsignaturepaymentdetailDescription
   */
  @javax.annotation.Nonnull
  public String gettEzsignsignaturepaymentdetailDescription() {
    return tEzsignsignaturepaymentdetailDescription;
  }

  public void settEzsignsignaturepaymentdetailDescription(@javax.annotation.Nonnull String tEzsignsignaturepaymentdetailDescription) {
    this.tEzsignsignaturepaymentdetailDescription = tEzsignsignaturepaymentdetailDescription;
  }


  public EzsignsignaturepaymentdetailResponseCompound dEzsignsignaturepaymentdetailAmount(@javax.annotation.Nonnull String dEzsignsignaturepaymentdetailAmount) {
    this.dEzsignsignaturepaymentdetailAmount = dEzsignsignaturepaymentdetailAmount;
    return this;
  }

  /**
   * The amount of the for the Ezsignsignaturepaymentdetail
   * @return dEzsignsignaturepaymentdetailAmount
   */
  @javax.annotation.Nonnull
  public String getdEzsignsignaturepaymentdetailAmount() {
    return dEzsignsignaturepaymentdetailAmount;
  }

  public void setdEzsignsignaturepaymentdetailAmount(@javax.annotation.Nonnull String dEzsignsignaturepaymentdetailAmount) {
    this.dEzsignsignaturepaymentdetailAmount = dEzsignsignaturepaymentdetailAmount;
  }


  public EzsignsignaturepaymentdetailResponseCompound eEzsignsignaturepaymentdetailTaxable(@javax.annotation.Nonnull FieldEEzsignsignaturepaymentdetailTaxable eEzsignsignaturepaymentdetailTaxable) {
    this.eEzsignsignaturepaymentdetailTaxable = eEzsignsignaturepaymentdetailTaxable;
    return this;
  }

  /**
   * Get eEzsignsignaturepaymentdetailTaxable
   * @return eEzsignsignaturepaymentdetailTaxable
   */
  @javax.annotation.Nonnull
  public FieldEEzsignsignaturepaymentdetailTaxable geteEzsignsignaturepaymentdetailTaxable() {
    return eEzsignsignaturepaymentdetailTaxable;
  }

  public void seteEzsignsignaturepaymentdetailTaxable(@javax.annotation.Nonnull FieldEEzsignsignaturepaymentdetailTaxable eEzsignsignaturepaymentdetailTaxable) {
    this.eEzsignsignaturepaymentdetailTaxable = eEzsignsignaturepaymentdetailTaxable;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EzsignsignaturepaymentdetailResponseCompound ezsignsignaturepaymentdetailResponseCompound = (EzsignsignaturepaymentdetailResponseCompound) o;
    return Objects.equals(this.pkiEzsignsignaturepaymentdetailID, ezsignsignaturepaymentdetailResponseCompound.pkiEzsignsignaturepaymentdetailID) &&
        Objects.equals(this.fkiGlaccountcontainerID, ezsignsignaturepaymentdetailResponseCompound.fkiGlaccountcontainerID) &&
        Objects.equals(this.tEzsignsignaturepaymentdetailDescription, ezsignsignaturepaymentdetailResponseCompound.tEzsignsignaturepaymentdetailDescription) &&
        Objects.equals(this.dEzsignsignaturepaymentdetailAmount, ezsignsignaturepaymentdetailResponseCompound.dEzsignsignaturepaymentdetailAmount) &&
        Objects.equals(this.eEzsignsignaturepaymentdetailTaxable, ezsignsignaturepaymentdetailResponseCompound.eEzsignsignaturepaymentdetailTaxable);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pkiEzsignsignaturepaymentdetailID, fkiGlaccountcontainerID, tEzsignsignaturepaymentdetailDescription, dEzsignsignaturepaymentdetailAmount, eEzsignsignaturepaymentdetailTaxable);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EzsignsignaturepaymentdetailResponseCompound {\n");
    sb.append("    pkiEzsignsignaturepaymentdetailID: ").append(toIndentedString(pkiEzsignsignaturepaymentdetailID)).append("\n");
    sb.append("    fkiGlaccountcontainerID: ").append(toIndentedString(fkiGlaccountcontainerID)).append("\n");
    sb.append("    tEzsignsignaturepaymentdetailDescription: ").append(toIndentedString(tEzsignsignaturepaymentdetailDescription)).append("\n");
    sb.append("    dEzsignsignaturepaymentdetailAmount: ").append(toIndentedString(dEzsignsignaturepaymentdetailAmount)).append("\n");
    sb.append("    eEzsignsignaturepaymentdetailTaxable: ").append(toIndentedString(eEzsignsignaturepaymentdetailTaxable)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pkiEzsignsignaturepaymentdetailID");
    openapiFields.add("fkiGlaccountcontainerID");
    openapiFields.add("tEzsignsignaturepaymentdetailDescription");
    openapiFields.add("dEzsignsignaturepaymentdetailAmount");
    openapiFields.add("eEzsignsignaturepaymentdetailTaxable");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("pkiEzsignsignaturepaymentdetailID");
    openapiRequiredFields.add("tEzsignsignaturepaymentdetailDescription");
    openapiRequiredFields.add("dEzsignsignaturepaymentdetailAmount");
    openapiRequiredFields.add("eEzsignsignaturepaymentdetailTaxable");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EzsignsignaturepaymentdetailResponseCompound
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EzsignsignaturepaymentdetailResponseCompound.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EzsignsignaturepaymentdetailResponseCompound is not found in the empty JSON string", EzsignsignaturepaymentdetailResponseCompound.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EzsignsignaturepaymentdetailResponseCompound.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EzsignsignaturepaymentdetailResponseCompound` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : EzsignsignaturepaymentdetailResponseCompound.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("tEzsignsignaturepaymentdetailDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tEzsignsignaturepaymentdetailDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tEzsignsignaturepaymentdetailDescription").toString()));
      }
      if (!jsonObj.get("dEzsignsignaturepaymentdetailAmount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dEzsignsignaturepaymentdetailAmount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dEzsignsignaturepaymentdetailAmount").toString()));
      }
      // validate the required field `eEzsignsignaturepaymentdetailTaxable`
      FieldEEzsignsignaturepaymentdetailTaxable.validateJsonElement(jsonObj.get("eEzsignsignaturepaymentdetailTaxable"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EzsignsignaturepaymentdetailResponseCompound.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EzsignsignaturepaymentdetailResponseCompound' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EzsignsignaturepaymentdetailResponseCompound> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EzsignsignaturepaymentdetailResponseCompound.class));

       return (TypeAdapter<T>) new TypeAdapter<EzsignsignaturepaymentdetailResponseCompound>() {
           @Override
           public void write(JsonWriter out, EzsignsignaturepaymentdetailResponseCompound value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EzsignsignaturepaymentdetailResponseCompound read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EzsignsignaturepaymentdetailResponseCompound given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EzsignsignaturepaymentdetailResponseCompound
   * @throws IOException if the JSON string is invalid with respect to EzsignsignaturepaymentdetailResponseCompound
   */
  public static EzsignsignaturepaymentdetailResponseCompound fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EzsignsignaturepaymentdetailResponseCompound.class);
  }

  /**
   * Convert an instance of EzsignsignaturepaymentdetailResponseCompound to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

