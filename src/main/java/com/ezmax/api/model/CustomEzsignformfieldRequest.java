/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * A Custom Ezsignformfield Object to fill an Ezsignform using submitForm
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-09-25T02:49:00.205387936Z[Etc/UTC]")
public class CustomEzsignformfieldRequest {
  public static final String SERIALIZED_NAME_PKI_EZSIGNFORMFIELD_I_D = "pkiEzsignformfieldID";
  @SerializedName(SERIALIZED_NAME_PKI_EZSIGNFORMFIELD_I_D)
  private Integer pkiEzsignformfieldID;

  public static final String SERIALIZED_NAME_S_EZSIGNFORMFIELD_LABEL = "sEzsignformfieldLabel";
  @SerializedName(SERIALIZED_NAME_S_EZSIGNFORMFIELD_LABEL)
  private String sEzsignformfieldLabel;

  public static final String SERIALIZED_NAME_B_EZSIGNFORMFIELD_SELECTED = "bEzsignformfieldSelected";
  @SerializedName(SERIALIZED_NAME_B_EZSIGNFORMFIELD_SELECTED)
  private Boolean bEzsignformfieldSelected;

  public static final String SERIALIZED_NAME_S_EZSIGNFORMFIELD_ENTEREDVALUE = "sEzsignformfieldEnteredvalue";
  @SerializedName(SERIALIZED_NAME_S_EZSIGNFORMFIELD_ENTEREDVALUE)
  private String sEzsignformfieldEnteredvalue;

  public CustomEzsignformfieldRequest() {
  }

  public CustomEzsignformfieldRequest pkiEzsignformfieldID(Integer pkiEzsignformfieldID) {
    
    this.pkiEzsignformfieldID = pkiEzsignformfieldID;
    return this;
  }

   /**
   * The unique ID of the Ezsignformfield
   * minimum: 0
   * @return pkiEzsignformfieldID
  **/
  @javax.annotation.Nullable
  public Integer getPkiEzsignformfieldID() {
    return pkiEzsignformfieldID;
  }


  public void setPkiEzsignformfieldID(Integer pkiEzsignformfieldID) {
    this.pkiEzsignformfieldID = pkiEzsignformfieldID;
  }


  public CustomEzsignformfieldRequest sEzsignformfieldLabel(String sEzsignformfieldLabel) {
    
    this.sEzsignformfieldLabel = sEzsignformfieldLabel;
    return this;
  }

   /**
   * The Label for the Ezsignformfield
   * @return sEzsignformfieldLabel
  **/
  @javax.annotation.Nullable
  public String getsEzsignformfieldLabel() {
    return sEzsignformfieldLabel;
  }


  public void setsEzsignformfieldLabel(String sEzsignformfieldLabel) {
    this.sEzsignformfieldLabel = sEzsignformfieldLabel;
  }


  public CustomEzsignformfieldRequest bEzsignformfieldSelected(Boolean bEzsignformfieldSelected) {
    
    this.bEzsignformfieldSelected = bEzsignformfieldSelected;
    return this;
  }

   /**
   * Whether the Ezsignformfield is selected or not by default.  This can only be set if eEzsignformfieldgroupType is **Checkbox** or **Radio**
   * @return bEzsignformfieldSelected
  **/
  @javax.annotation.Nullable
  public Boolean getbEzsignformfieldSelected() {
    return bEzsignformfieldSelected;
  }


  public void setbEzsignformfieldSelected(Boolean bEzsignformfieldSelected) {
    this.bEzsignformfieldSelected = bEzsignformfieldSelected;
  }


  public CustomEzsignformfieldRequest sEzsignformfieldEnteredvalue(String sEzsignformfieldEnteredvalue) {
    
    this.sEzsignformfieldEnteredvalue = sEzsignformfieldEnteredvalue;
    return this;
  }

   /**
   * This is the value enterred for the Ezsignformfield  This can only be set if eEzsignformfieldgroupType is **Dropdown**, **Text** or **Textarea**
   * @return sEzsignformfieldEnteredvalue
  **/
  @javax.annotation.Nullable
  public String getsEzsignformfieldEnteredvalue() {
    return sEzsignformfieldEnteredvalue;
  }


  public void setsEzsignformfieldEnteredvalue(String sEzsignformfieldEnteredvalue) {
    this.sEzsignformfieldEnteredvalue = sEzsignformfieldEnteredvalue;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomEzsignformfieldRequest customEzsignformfieldRequest = (CustomEzsignformfieldRequest) o;
    return Objects.equals(this.pkiEzsignformfieldID, customEzsignformfieldRequest.pkiEzsignformfieldID) &&
        Objects.equals(this.sEzsignformfieldLabel, customEzsignformfieldRequest.sEzsignformfieldLabel) &&
        Objects.equals(this.bEzsignformfieldSelected, customEzsignformfieldRequest.bEzsignformfieldSelected) &&
        Objects.equals(this.sEzsignformfieldEnteredvalue, customEzsignformfieldRequest.sEzsignformfieldEnteredvalue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pkiEzsignformfieldID, sEzsignformfieldLabel, bEzsignformfieldSelected, sEzsignformfieldEnteredvalue);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomEzsignformfieldRequest {\n");
    sb.append("    pkiEzsignformfieldID: ").append(toIndentedString(pkiEzsignformfieldID)).append("\n");
    sb.append("    sEzsignformfieldLabel: ").append(toIndentedString(sEzsignformfieldLabel)).append("\n");
    sb.append("    bEzsignformfieldSelected: ").append(toIndentedString(bEzsignformfieldSelected)).append("\n");
    sb.append("    sEzsignformfieldEnteredvalue: ").append(toIndentedString(sEzsignformfieldEnteredvalue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pkiEzsignformfieldID");
    openapiFields.add("sEzsignformfieldLabel");
    openapiFields.add("bEzsignformfieldSelected");
    openapiFields.add("sEzsignformfieldEnteredvalue");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to CustomEzsignformfieldRequest
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CustomEzsignformfieldRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CustomEzsignformfieldRequest is not found in the empty JSON string", CustomEzsignformfieldRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CustomEzsignformfieldRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CustomEzsignformfieldRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("sEzsignformfieldLabel") != null && !jsonObj.get("sEzsignformfieldLabel").isJsonNull()) && !jsonObj.get("sEzsignformfieldLabel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sEzsignformfieldLabel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sEzsignformfieldLabel").toString()));
      }
      if ((jsonObj.get("sEzsignformfieldEnteredvalue") != null && !jsonObj.get("sEzsignformfieldEnteredvalue").isJsonNull()) && !jsonObj.get("sEzsignformfieldEnteredvalue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sEzsignformfieldEnteredvalue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sEzsignformfieldEnteredvalue").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomEzsignformfieldRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomEzsignformfieldRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomEzsignformfieldRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomEzsignformfieldRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomEzsignformfieldRequest>() {
           @Override
           public void write(JsonWriter out, CustomEzsignformfieldRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomEzsignformfieldRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CustomEzsignformfieldRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CustomEzsignformfieldRequest
  * @throws IOException if the JSON string is invalid with respect to CustomEzsignformfieldRequest
  */
  public static CustomEzsignformfieldRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomEzsignformfieldRequest.class);
  }

 /**
  * Convert an instance of CustomEzsignformfieldRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

