/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.18
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.ezmax.api.model.FieldESessionhistoryEndby;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * A Sessionhistory List Element
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-07-22T13:32:26.779643241Z[Etc/UTC]")
public class SessionhistoryListElement {
  public static final String SERIALIZED_NAME_PKI_SESSIONHISTORY_I_D = "pkiSessionhistoryID";
  @SerializedName(SERIALIZED_NAME_PKI_SESSIONHISTORY_I_D)
  private Integer pkiSessionhistoryID;

  public static final String SERIALIZED_NAME_FKI_COMPUTER_I_D = "fkiComputerID";
  @SerializedName(SERIALIZED_NAME_FKI_COMPUTER_I_D)
  private Integer fkiComputerID;

  public static final String SERIALIZED_NAME_FKI_USER_I_D = "fkiUserID";
  @SerializedName(SERIALIZED_NAME_FKI_USER_I_D)
  private Integer fkiUserID;

  public static final String SERIALIZED_NAME_DT_SESSIONHISTORY_FIRSTHIT = "dtSessionhistoryFirsthit";
  @SerializedName(SERIALIZED_NAME_DT_SESSIONHISTORY_FIRSTHIT)
  private String dtSessionhistoryFirsthit;

  public static final String SERIALIZED_NAME_DT_SESSIONHISTORY_LASTHIT = "dtSessionhistoryLasthit";
  @SerializedName(SERIALIZED_NAME_DT_SESSIONHISTORY_LASTHIT)
  private String dtSessionhistoryLasthit;

  public static final String SERIALIZED_NAME_E_SESSIONHISTORY_ENDBY = "eSessionhistoryEndby";
  @SerializedName(SERIALIZED_NAME_E_SESSIONHISTORY_ENDBY)
  private FieldESessionhistoryEndby eSessionhistoryEndby;

  public static final String SERIALIZED_NAME_S_COMPUTER_DESCRIPTION = "sComputerDescription";
  @SerializedName(SERIALIZED_NAME_S_COMPUTER_DESCRIPTION)
  private String sComputerDescription;

  public static final String SERIALIZED_NAME_S_SESSIONHISTORY_DURATION = "sSessionhistoryDuration";
  @SerializedName(SERIALIZED_NAME_S_SESSIONHISTORY_DURATION)
  private String sSessionhistoryDuration;

  public static final String SERIALIZED_NAME_S_SESSIONHISTORY_I_P = "sSessionhistoryIP";
  @SerializedName(SERIALIZED_NAME_S_SESSIONHISTORY_I_P)
  private String sSessionhistoryIP;

  public static final String SERIALIZED_NAME_S_USER_LOGINNAME = "sUserLoginname";
  @SerializedName(SERIALIZED_NAME_S_USER_LOGINNAME)
  private String sUserLoginname;

  public SessionhistoryListElement() {
  }

  public SessionhistoryListElement pkiSessionhistoryID(Integer pkiSessionhistoryID) {
    
    this.pkiSessionhistoryID = pkiSessionhistoryID;
    return this;
  }

   /**
   * The unique ID of the Sessionhistory
   * minimum: 1
   * maximum: 2147483647
   * @return pkiSessionhistoryID
  **/
  @javax.annotation.Nonnull
  public Integer getPkiSessionhistoryID() {
    return pkiSessionhistoryID;
  }


  public void setPkiSessionhistoryID(Integer pkiSessionhistoryID) {
    this.pkiSessionhistoryID = pkiSessionhistoryID;
  }


  public SessionhistoryListElement fkiComputerID(Integer fkiComputerID) {
    
    this.fkiComputerID = fkiComputerID;
    return this;
  }

   /**
   * The unique ID of the Computer
   * minimum: 1
   * maximum: 65535
   * @return fkiComputerID
  **/
  @javax.annotation.Nullable
  public Integer getFkiComputerID() {
    return fkiComputerID;
  }


  public void setFkiComputerID(Integer fkiComputerID) {
    this.fkiComputerID = fkiComputerID;
  }


  public SessionhistoryListElement fkiUserID(Integer fkiUserID) {
    
    this.fkiUserID = fkiUserID;
    return this;
  }

   /**
   * The unique ID of the User
   * minimum: 0
   * @return fkiUserID
  **/
  @javax.annotation.Nullable
  public Integer getFkiUserID() {
    return fkiUserID;
  }


  public void setFkiUserID(Integer fkiUserID) {
    this.fkiUserID = fkiUserID;
  }


  public SessionhistoryListElement dtSessionhistoryFirsthit(String dtSessionhistoryFirsthit) {
    
    this.dtSessionhistoryFirsthit = dtSessionhistoryFirsthit;
    return this;
  }

   /**
   * The first hit of the Sessionhistory
   * @return dtSessionhistoryFirsthit
  **/
  @javax.annotation.Nonnull
  public String getDtSessionhistoryFirsthit() {
    return dtSessionhistoryFirsthit;
  }


  public void setDtSessionhistoryFirsthit(String dtSessionhistoryFirsthit) {
    this.dtSessionhistoryFirsthit = dtSessionhistoryFirsthit;
  }


  public SessionhistoryListElement dtSessionhistoryLasthit(String dtSessionhistoryLasthit) {
    
    this.dtSessionhistoryLasthit = dtSessionhistoryLasthit;
    return this;
  }

   /**
   * The last hit of the Sessionhistory
   * @return dtSessionhistoryLasthit
  **/
  @javax.annotation.Nonnull
  public String getDtSessionhistoryLasthit() {
    return dtSessionhistoryLasthit;
  }


  public void setDtSessionhistoryLasthit(String dtSessionhistoryLasthit) {
    this.dtSessionhistoryLasthit = dtSessionhistoryLasthit;
  }


  public SessionhistoryListElement eSessionhistoryEndby(FieldESessionhistoryEndby eSessionhistoryEndby) {
    
    this.eSessionhistoryEndby = eSessionhistoryEndby;
    return this;
  }

   /**
   * Get eSessionhistoryEndby
   * @return eSessionhistoryEndby
  **/
  @javax.annotation.Nonnull
  public FieldESessionhistoryEndby geteSessionhistoryEndby() {
    return eSessionhistoryEndby;
  }


  public void seteSessionhistoryEndby(FieldESessionhistoryEndby eSessionhistoryEndby) {
    this.eSessionhistoryEndby = eSessionhistoryEndby;
  }


  public SessionhistoryListElement sComputerDescription(String sComputerDescription) {
    
    this.sComputerDescription = sComputerDescription;
    return this;
  }

   /**
   * The description of the Computer
   * @return sComputerDescription
  **/
  @javax.annotation.Nullable
  public String getsComputerDescription() {
    return sComputerDescription;
  }


  public void setsComputerDescription(String sComputerDescription) {
    this.sComputerDescription = sComputerDescription;
  }


  public SessionhistoryListElement sSessionhistoryDuration(String sSessionhistoryDuration) {
    
    this.sSessionhistoryDuration = sSessionhistoryDuration;
    return this;
  }

   /**
   * The duration of the session
   * @return sSessionhistoryDuration
  **/
  @javax.annotation.Nonnull
  public String getsSessionhistoryDuration() {
    return sSessionhistoryDuration;
  }


  public void setsSessionhistoryDuration(String sSessionhistoryDuration) {
    this.sSessionhistoryDuration = sSessionhistoryDuration;
  }


  public SessionhistoryListElement sSessionhistoryIP(String sSessionhistoryIP) {
    
    this.sSessionhistoryIP = sSessionhistoryIP;
    return this;
  }

   /**
   * Represent an IP address.
   * @return sSessionhistoryIP
  **/
  @javax.annotation.Nonnull
  public String getsSessionhistoryIP() {
    return sSessionhistoryIP;
  }


  public void setsSessionhistoryIP(String sSessionhistoryIP) {
    this.sSessionhistoryIP = sSessionhistoryIP;
  }


  public SessionhistoryListElement sUserLoginname(String sUserLoginname) {
    
    this.sUserLoginname = sUserLoginname;
    return this;
  }

   /**
   * The login name of the User.
   * @return sUserLoginname
  **/
  @javax.annotation.Nullable
  public String getsUserLoginname() {
    return sUserLoginname;
  }


  public void setsUserLoginname(String sUserLoginname) {
    this.sUserLoginname = sUserLoginname;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SessionhistoryListElement sessionhistoryListElement = (SessionhistoryListElement) o;
    return Objects.equals(this.pkiSessionhistoryID, sessionhistoryListElement.pkiSessionhistoryID) &&
        Objects.equals(this.fkiComputerID, sessionhistoryListElement.fkiComputerID) &&
        Objects.equals(this.fkiUserID, sessionhistoryListElement.fkiUserID) &&
        Objects.equals(this.dtSessionhistoryFirsthit, sessionhistoryListElement.dtSessionhistoryFirsthit) &&
        Objects.equals(this.dtSessionhistoryLasthit, sessionhistoryListElement.dtSessionhistoryLasthit) &&
        Objects.equals(this.eSessionhistoryEndby, sessionhistoryListElement.eSessionhistoryEndby) &&
        Objects.equals(this.sComputerDescription, sessionhistoryListElement.sComputerDescription) &&
        Objects.equals(this.sSessionhistoryDuration, sessionhistoryListElement.sSessionhistoryDuration) &&
        Objects.equals(this.sSessionhistoryIP, sessionhistoryListElement.sSessionhistoryIP) &&
        Objects.equals(this.sUserLoginname, sessionhistoryListElement.sUserLoginname);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pkiSessionhistoryID, fkiComputerID, fkiUserID, dtSessionhistoryFirsthit, dtSessionhistoryLasthit, eSessionhistoryEndby, sComputerDescription, sSessionhistoryDuration, sSessionhistoryIP, sUserLoginname);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SessionhistoryListElement {\n");
    sb.append("    pkiSessionhistoryID: ").append(toIndentedString(pkiSessionhistoryID)).append("\n");
    sb.append("    fkiComputerID: ").append(toIndentedString(fkiComputerID)).append("\n");
    sb.append("    fkiUserID: ").append(toIndentedString(fkiUserID)).append("\n");
    sb.append("    dtSessionhistoryFirsthit: ").append(toIndentedString(dtSessionhistoryFirsthit)).append("\n");
    sb.append("    dtSessionhistoryLasthit: ").append(toIndentedString(dtSessionhistoryLasthit)).append("\n");
    sb.append("    eSessionhistoryEndby: ").append(toIndentedString(eSessionhistoryEndby)).append("\n");
    sb.append("    sComputerDescription: ").append(toIndentedString(sComputerDescription)).append("\n");
    sb.append("    sSessionhistoryDuration: ").append(toIndentedString(sSessionhistoryDuration)).append("\n");
    sb.append("    sSessionhistoryIP: ").append(toIndentedString(sSessionhistoryIP)).append("\n");
    sb.append("    sUserLoginname: ").append(toIndentedString(sUserLoginname)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pkiSessionhistoryID");
    openapiFields.add("fkiComputerID");
    openapiFields.add("fkiUserID");
    openapiFields.add("dtSessionhistoryFirsthit");
    openapiFields.add("dtSessionhistoryLasthit");
    openapiFields.add("eSessionhistoryEndby");
    openapiFields.add("sComputerDescription");
    openapiFields.add("sSessionhistoryDuration");
    openapiFields.add("sSessionhistoryIP");
    openapiFields.add("sUserLoginname");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("pkiSessionhistoryID");
    openapiRequiredFields.add("dtSessionhistoryFirsthit");
    openapiRequiredFields.add("dtSessionhistoryLasthit");
    openapiRequiredFields.add("eSessionhistoryEndby");
    openapiRequiredFields.add("sSessionhistoryDuration");
    openapiRequiredFields.add("sSessionhistoryIP");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to SessionhistoryListElement
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!SessionhistoryListElement.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SessionhistoryListElement is not found in the empty JSON string", SessionhistoryListElement.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!SessionhistoryListElement.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SessionhistoryListElement` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : SessionhistoryListElement.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("dtSessionhistoryFirsthit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dtSessionhistoryFirsthit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dtSessionhistoryFirsthit").toString()));
      }
      if (!jsonObj.get("dtSessionhistoryLasthit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dtSessionhistoryLasthit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dtSessionhistoryLasthit").toString()));
      }
      if ((jsonObj.get("sComputerDescription") != null && !jsonObj.get("sComputerDescription").isJsonNull()) && !jsonObj.get("sComputerDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sComputerDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sComputerDescription").toString()));
      }
      if (!jsonObj.get("sSessionhistoryDuration").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sSessionhistoryDuration` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sSessionhistoryDuration").toString()));
      }
      if (!jsonObj.get("sSessionhistoryIP").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sSessionhistoryIP` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sSessionhistoryIP").toString()));
      }
      if ((jsonObj.get("sUserLoginname") != null && !jsonObj.get("sUserLoginname").isJsonNull()) && !jsonObj.get("sUserLoginname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sUserLoginname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sUserLoginname").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SessionhistoryListElement.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SessionhistoryListElement' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SessionhistoryListElement> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SessionhistoryListElement.class));

       return (TypeAdapter<T>) new TypeAdapter<SessionhistoryListElement>() {
           @Override
           public void write(JsonWriter out, SessionhistoryListElement value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SessionhistoryListElement read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SessionhistoryListElement given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SessionhistoryListElement
  * @throws IOException if the JSON string is invalid with respect to SessionhistoryListElement
  */
  public static SessionhistoryListElement fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SessionhistoryListElement.class);
  }

 /**
  * Convert an instance of SessionhistoryListElement to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

