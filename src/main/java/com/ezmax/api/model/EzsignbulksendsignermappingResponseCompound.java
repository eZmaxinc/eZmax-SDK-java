/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * A Ezsignbulksendsignermapping Object
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-29T18:53:15.033493285Z[Etc/UTC]", comments = "Generator version: 7.11.0")
public class EzsignbulksendsignermappingResponseCompound {
  public static final String SERIALIZED_NAME_PKI_EZSIGNBULKSENDSIGNERMAPPING_I_D = "pkiEzsignbulksendsignermappingID";
  @SerializedName(SERIALIZED_NAME_PKI_EZSIGNBULKSENDSIGNERMAPPING_I_D)
  @javax.annotation.Nonnull
  private Integer pkiEzsignbulksendsignermappingID;

  public static final String SERIALIZED_NAME_FKI_EZSIGNBULKSEND_I_D = "fkiEzsignbulksendID";
  @SerializedName(SERIALIZED_NAME_FKI_EZSIGNBULKSEND_I_D)
  @javax.annotation.Nonnull
  private Integer fkiEzsignbulksendID;

  public static final String SERIALIZED_NAME_FKI_USER_I_D = "fkiUserID";
  @SerializedName(SERIALIZED_NAME_FKI_USER_I_D)
  @javax.annotation.Nullable
  private Integer fkiUserID;

  public static final String SERIALIZED_NAME_S_EZSIGNBULKSENDSIGNERMAPPING_DESCRIPTION = "sEzsignbulksendsignermappingDescription";
  @SerializedName(SERIALIZED_NAME_S_EZSIGNBULKSENDSIGNERMAPPING_DESCRIPTION)
  @javax.annotation.Nonnull
  private String sEzsignbulksendsignermappingDescription;

  public EzsignbulksendsignermappingResponseCompound() {
  }

  public EzsignbulksendsignermappingResponseCompound pkiEzsignbulksendsignermappingID(@javax.annotation.Nonnull Integer pkiEzsignbulksendsignermappingID) {
    this.pkiEzsignbulksendsignermappingID = pkiEzsignbulksendsignermappingID;
    return this;
  }

  /**
   * The unique ID of the Ezsignbulksendsignermapping
   * minimum: 0
   * @return pkiEzsignbulksendsignermappingID
   */
  @javax.annotation.Nonnull
  public Integer getPkiEzsignbulksendsignermappingID() {
    return pkiEzsignbulksendsignermappingID;
  }

  public void setPkiEzsignbulksendsignermappingID(@javax.annotation.Nonnull Integer pkiEzsignbulksendsignermappingID) {
    this.pkiEzsignbulksendsignermappingID = pkiEzsignbulksendsignermappingID;
  }


  public EzsignbulksendsignermappingResponseCompound fkiEzsignbulksendID(@javax.annotation.Nonnull Integer fkiEzsignbulksendID) {
    this.fkiEzsignbulksendID = fkiEzsignbulksendID;
    return this;
  }

  /**
   * The unique ID of the Ezsignbulksend
   * minimum: 0
   * @return fkiEzsignbulksendID
   */
  @javax.annotation.Nonnull
  public Integer getFkiEzsignbulksendID() {
    return fkiEzsignbulksendID;
  }

  public void setFkiEzsignbulksendID(@javax.annotation.Nonnull Integer fkiEzsignbulksendID) {
    this.fkiEzsignbulksendID = fkiEzsignbulksendID;
  }


  public EzsignbulksendsignermappingResponseCompound fkiUserID(@javax.annotation.Nullable Integer fkiUserID) {
    this.fkiUserID = fkiUserID;
    return this;
  }

  /**
   * The unique ID of the User
   * minimum: 0
   * @return fkiUserID
   */
  @javax.annotation.Nullable
  public Integer getFkiUserID() {
    return fkiUserID;
  }

  public void setFkiUserID(@javax.annotation.Nullable Integer fkiUserID) {
    this.fkiUserID = fkiUserID;
  }


  public EzsignbulksendsignermappingResponseCompound sEzsignbulksendsignermappingDescription(@javax.annotation.Nonnull String sEzsignbulksendsignermappingDescription) {
    this.sEzsignbulksendsignermappingDescription = sEzsignbulksendsignermappingDescription;
    return this;
  }

  /**
   * The description of the Ezsignbulksendsignermapping
   * @return sEzsignbulksendsignermappingDescription
   */
  @javax.annotation.Nonnull
  public String getsEzsignbulksendsignermappingDescription() {
    return sEzsignbulksendsignermappingDescription;
  }

  public void setsEzsignbulksendsignermappingDescription(@javax.annotation.Nonnull String sEzsignbulksendsignermappingDescription) {
    this.sEzsignbulksendsignermappingDescription = sEzsignbulksendsignermappingDescription;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EzsignbulksendsignermappingResponseCompound ezsignbulksendsignermappingResponseCompound = (EzsignbulksendsignermappingResponseCompound) o;
    return Objects.equals(this.pkiEzsignbulksendsignermappingID, ezsignbulksendsignermappingResponseCompound.pkiEzsignbulksendsignermappingID) &&
        Objects.equals(this.fkiEzsignbulksendID, ezsignbulksendsignermappingResponseCompound.fkiEzsignbulksendID) &&
        Objects.equals(this.fkiUserID, ezsignbulksendsignermappingResponseCompound.fkiUserID) &&
        Objects.equals(this.sEzsignbulksendsignermappingDescription, ezsignbulksendsignermappingResponseCompound.sEzsignbulksendsignermappingDescription);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pkiEzsignbulksendsignermappingID, fkiEzsignbulksendID, fkiUserID, sEzsignbulksendsignermappingDescription);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EzsignbulksendsignermappingResponseCompound {\n");
    sb.append("    pkiEzsignbulksendsignermappingID: ").append(toIndentedString(pkiEzsignbulksendsignermappingID)).append("\n");
    sb.append("    fkiEzsignbulksendID: ").append(toIndentedString(fkiEzsignbulksendID)).append("\n");
    sb.append("    fkiUserID: ").append(toIndentedString(fkiUserID)).append("\n");
    sb.append("    sEzsignbulksendsignermappingDescription: ").append(toIndentedString(sEzsignbulksendsignermappingDescription)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pkiEzsignbulksendsignermappingID");
    openapiFields.add("fkiEzsignbulksendID");
    openapiFields.add("fkiUserID");
    openapiFields.add("sEzsignbulksendsignermappingDescription");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("pkiEzsignbulksendsignermappingID");
    openapiRequiredFields.add("fkiEzsignbulksendID");
    openapiRequiredFields.add("sEzsignbulksendsignermappingDescription");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EzsignbulksendsignermappingResponseCompound
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EzsignbulksendsignermappingResponseCompound.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EzsignbulksendsignermappingResponseCompound is not found in the empty JSON string", EzsignbulksendsignermappingResponseCompound.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EzsignbulksendsignermappingResponseCompound.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EzsignbulksendsignermappingResponseCompound` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : EzsignbulksendsignermappingResponseCompound.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("sEzsignbulksendsignermappingDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sEzsignbulksendsignermappingDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sEzsignbulksendsignermappingDescription").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EzsignbulksendsignermappingResponseCompound.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EzsignbulksendsignermappingResponseCompound' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EzsignbulksendsignermappingResponseCompound> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EzsignbulksendsignermappingResponseCompound.class));

       return (TypeAdapter<T>) new TypeAdapter<EzsignbulksendsignermappingResponseCompound>() {
           @Override
           public void write(JsonWriter out, EzsignbulksendsignermappingResponseCompound value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EzsignbulksendsignermappingResponseCompound read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EzsignbulksendsignermappingResponseCompound given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EzsignbulksendsignermappingResponseCompound
   * @throws IOException if the JSON string is invalid with respect to EzsignbulksendsignermappingResponseCompound
   */
  public static EzsignbulksendsignermappingResponseCompound fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EzsignbulksendsignermappingResponseCompound.class);
  }

  /**
   * Convert an instance of EzsignbulksendsignermappingResponseCompound to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

