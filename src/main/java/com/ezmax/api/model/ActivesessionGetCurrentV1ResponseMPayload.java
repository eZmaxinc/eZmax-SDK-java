/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.ezmax.api.model.ActivesessionResponseCompoundApikey;
import com.ezmax.api.model.ActivesessionResponseCompoundUser;
import com.ezmax.api.model.FieldEActivesessionEzsign;
import com.ezmax.api.model.FieldEActivesessionEzsignaccess;
import com.ezmax.api.model.FieldEActivesessionEzsignprepaid;
import com.ezmax.api.model.FieldEActivesessionOrigin;
import com.ezmax.api.model.FieldEActivesessionRealestateinprogress;
import com.ezmax.api.model.FieldEActivesessionUsertype;
import com.ezmax.api.model.FieldEActivesessionWeekdaystart;
import com.ezmax.api.model.FieldESystemconfigurationEzsignofficeplan;
import com.ezmax.api.model.FieldEUserEzsignaccess;
import com.ezmax.api.model.FieldEUserEzsignprepaid;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * Payload for GET /1/object/activesession/getCurrent
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-14T22:02:49.990345163Z[Etc/UTC]", comments = "Generator version: 7.9.0")
public class ActivesessionGetCurrentV1ResponseMPayload {
  public static final String SERIALIZED_NAME_E_ACTIVESESSION_USERTYPE = "eActivesessionUsertype";
  @SerializedName(SERIALIZED_NAME_E_ACTIVESESSION_USERTYPE)
  private FieldEActivesessionUsertype eActivesessionUsertype;

  public static final String SERIALIZED_NAME_E_ACTIVESESSION_ORIGIN = "eActivesessionOrigin";
  @SerializedName(SERIALIZED_NAME_E_ACTIVESESSION_ORIGIN)
  private FieldEActivesessionOrigin eActivesessionOrigin;

  public static final String SERIALIZED_NAME_E_ACTIVESESSION_WEEKDAYSTART = "eActivesessionWeekdaystart";
  @SerializedName(SERIALIZED_NAME_E_ACTIVESESSION_WEEKDAYSTART)
  private FieldEActivesessionWeekdaystart eActivesessionWeekdaystart;

  public static final String SERIALIZED_NAME_FKI_LANGUAGE_I_D = "fkiLanguageID";
  @SerializedName(SERIALIZED_NAME_FKI_LANGUAGE_I_D)
  private Integer fkiLanguageID;

  public static final String SERIALIZED_NAME_S_COMPANY_NAME_X = "sCompanyNameX";
  @SerializedName(SERIALIZED_NAME_S_COMPANY_NAME_X)
  private String sCompanyNameX;

  public static final String SERIALIZED_NAME_S_DEPARTMENT_NAME_X = "sDepartmentNameX";
  @SerializedName(SERIALIZED_NAME_S_DEPARTMENT_NAME_X)
  private String sDepartmentNameX;

  public static final String SERIALIZED_NAME_B_ACTIVESESSION_DEBUG = "bActivesessionDebug";
  @SerializedName(SERIALIZED_NAME_B_ACTIVESESSION_DEBUG)
  private Boolean bActivesessionDebug;

  public static final String SERIALIZED_NAME_B_ACTIVESESSION_ISSUPERADMIN = "bActivesessionIssuperadmin";
  @SerializedName(SERIALIZED_NAME_B_ACTIVESESSION_ISSUPERADMIN)
  private Boolean bActivesessionIssuperadmin;

  public static final String SERIALIZED_NAME_B_ACTIVESESSION_ATTACHMENT = "bActivesessionAttachment";
  @SerializedName(SERIALIZED_NAME_B_ACTIVESESSION_ATTACHMENT)
  private Boolean bActivesessionAttachment;

  public static final String SERIALIZED_NAME_B_ACTIVESESSION_CANAFE = "bActivesessionCanafe";
  @SerializedName(SERIALIZED_NAME_B_ACTIVESESSION_CANAFE)
  private Boolean bActivesessionCanafe;

  public static final String SERIALIZED_NAME_B_ACTIVESESSION_FINANCIAL = "bActivesessionFinancial";
  @SerializedName(SERIALIZED_NAME_B_ACTIVESESSION_FINANCIAL)
  private Boolean bActivesessionFinancial;

  public static final String SERIALIZED_NAME_B_ACTIVESESSION_REALESTATECOMPLETED = "bActivesessionRealestatecompleted";
  @SerializedName(SERIALIZED_NAME_B_ACTIVESESSION_REALESTATECOMPLETED)
  private Boolean bActivesessionRealestatecompleted;

  public static final String SERIALIZED_NAME_E_ACTIVESESSION_EZSIGN = "eActivesessionEzsign";
  @SerializedName(SERIALIZED_NAME_E_ACTIVESESSION_EZSIGN)
  private FieldEActivesessionEzsign eActivesessionEzsign;

  public static final String SERIALIZED_NAME_E_ACTIVESESSION_EZSIGNACCESS = "eActivesessionEzsignaccess";
  @SerializedName(SERIALIZED_NAME_E_ACTIVESESSION_EZSIGNACCESS)
  private FieldEActivesessionEzsignaccess eActivesessionEzsignaccess;

  public static final String SERIALIZED_NAME_E_ACTIVESESSION_EZSIGNPREPAID = "eActivesessionEzsignprepaid";
  @SerializedName(SERIALIZED_NAME_E_ACTIVESESSION_EZSIGNPREPAID)
  private FieldEActivesessionEzsignprepaid eActivesessionEzsignprepaid;

  public static final String SERIALIZED_NAME_E_ACTIVESESSION_REALESTATEINPROGRESS = "eActivesessionRealestateinprogress";
  @SerializedName(SERIALIZED_NAME_E_ACTIVESESSION_REALESTATEINPROGRESS)
  private FieldEActivesessionRealestateinprogress eActivesessionRealestateinprogress;

  public static final String SERIALIZED_NAME_PKS_CUSTOMER_CODE = "pksCustomerCode";
  @SerializedName(SERIALIZED_NAME_PKS_CUSTOMER_CODE)
  private String pksCustomerCode;

  public static final String SERIALIZED_NAME_FKI_SYSTEMCONFIGURATIONTYPE_I_D = "fkiSystemconfigurationtypeID";
  @SerializedName(SERIALIZED_NAME_FKI_SYSTEMCONFIGURATIONTYPE_I_D)
  private Integer fkiSystemconfigurationtypeID;

  public static final String SERIALIZED_NAME_FKI_SIGNATURE_I_D = "fkiSignatureID";
  @SerializedName(SERIALIZED_NAME_FKI_SIGNATURE_I_D)
  private Integer fkiSignatureID;

  public static final String SERIALIZED_NAME_FKI_EZSIGNUSER_I_D = "fkiEzsignuserID";
  @SerializedName(SERIALIZED_NAME_FKI_EZSIGNUSER_I_D)
  private Integer fkiEzsignuserID;

  public static final String SERIALIZED_NAME_B_SYSTEMCONFIGURATION_EZSIGNPAIDBYOFFICE = "bSystemconfigurationEzsignpaidbyoffice";
  @SerializedName(SERIALIZED_NAME_B_SYSTEMCONFIGURATION_EZSIGNPAIDBYOFFICE)
  private Boolean bSystemconfigurationEzsignpaidbyoffice;

  public static final String SERIALIZED_NAME_E_SYSTEMCONFIGURATION_EZSIGNOFFICEPLAN = "eSystemconfigurationEzsignofficeplan";
  @SerializedName(SERIALIZED_NAME_E_SYSTEMCONFIGURATION_EZSIGNOFFICEPLAN)
  private FieldESystemconfigurationEzsignofficeplan eSystemconfigurationEzsignofficeplan;

  public static final String SERIALIZED_NAME_E_USER_EZSIGNACCESS = "eUserEzsignaccess";
  @SerializedName(SERIALIZED_NAME_E_USER_EZSIGNACCESS)
  private FieldEUserEzsignaccess eUserEzsignaccess;

  public static final String SERIALIZED_NAME_E_USER_EZSIGNPREPAID = "eUserEzsignprepaid";
  @SerializedName(SERIALIZED_NAME_E_USER_EZSIGNPREPAID)
  private FieldEUserEzsignprepaid eUserEzsignprepaid;

  public static final String SERIALIZED_NAME_B_USER_EZSIGNTRIAL = "bUserEzsigntrial";
  @SerializedName(SERIALIZED_NAME_B_USER_EZSIGNTRIAL)
  private Boolean bUserEzsigntrial;

  public static final String SERIALIZED_NAME_DT_USER_EZSIGNPREPAIDEXPIRATION = "dtUserEzsignprepaidexpiration";
  @SerializedName(SERIALIZED_NAME_DT_USER_EZSIGNPREPAIDEXPIRATION)
  private String dtUserEzsignprepaidexpiration;

  public static final String SERIALIZED_NAME_A_PKI_PERMISSION_I_D = "a_pkiPermissionID";
  @SerializedName(SERIALIZED_NAME_A_PKI_PERMISSION_I_D)
  private List<Integer> aPkiPermissionID = new ArrayList<>();

  public static final String SERIALIZED_NAME_OBJ_USER_REAL = "objUserReal";
  @SerializedName(SERIALIZED_NAME_OBJ_USER_REAL)
  private ActivesessionResponseCompoundUser objUserReal;

  public static final String SERIALIZED_NAME_OBJ_USER_CLONED = "objUserCloned";
  @SerializedName(SERIALIZED_NAME_OBJ_USER_CLONED)
  private ActivesessionResponseCompoundUser objUserCloned;

  public static final String SERIALIZED_NAME_OBJ_APIKEY = "objApikey";
  @SerializedName(SERIALIZED_NAME_OBJ_APIKEY)
  private ActivesessionResponseCompoundApikey objApikey;

  public static final String SERIALIZED_NAME_A_E_MODULE_INTERNALNAME = "a_eModuleInternalname";
  @SerializedName(SERIALIZED_NAME_A_E_MODULE_INTERNALNAME)
  private List<String> aEModuleInternalname = new ArrayList<>();

  public ActivesessionGetCurrentV1ResponseMPayload() {
  }

  public ActivesessionGetCurrentV1ResponseMPayload eActivesessionUsertype(FieldEActivesessionUsertype eActivesessionUsertype) {
    this.eActivesessionUsertype = eActivesessionUsertype;
    return this;
  }

  /**
   * Get eActivesessionUsertype
   * @return eActivesessionUsertype
   */
  @javax.annotation.Nonnull
  public FieldEActivesessionUsertype geteActivesessionUsertype() {
    return eActivesessionUsertype;
  }

  public void seteActivesessionUsertype(FieldEActivesessionUsertype eActivesessionUsertype) {
    this.eActivesessionUsertype = eActivesessionUsertype;
  }


  public ActivesessionGetCurrentV1ResponseMPayload eActivesessionOrigin(FieldEActivesessionOrigin eActivesessionOrigin) {
    this.eActivesessionOrigin = eActivesessionOrigin;
    return this;
  }

  /**
   * Get eActivesessionOrigin
   * @return eActivesessionOrigin
   */
  @javax.annotation.Nonnull
  public FieldEActivesessionOrigin geteActivesessionOrigin() {
    return eActivesessionOrigin;
  }

  public void seteActivesessionOrigin(FieldEActivesessionOrigin eActivesessionOrigin) {
    this.eActivesessionOrigin = eActivesessionOrigin;
  }


  public ActivesessionGetCurrentV1ResponseMPayload eActivesessionWeekdaystart(FieldEActivesessionWeekdaystart eActivesessionWeekdaystart) {
    this.eActivesessionWeekdaystart = eActivesessionWeekdaystart;
    return this;
  }

  /**
   * Get eActivesessionWeekdaystart
   * @return eActivesessionWeekdaystart
   */
  @javax.annotation.Nonnull
  public FieldEActivesessionWeekdaystart geteActivesessionWeekdaystart() {
    return eActivesessionWeekdaystart;
  }

  public void seteActivesessionWeekdaystart(FieldEActivesessionWeekdaystart eActivesessionWeekdaystart) {
    this.eActivesessionWeekdaystart = eActivesessionWeekdaystart;
  }


  public ActivesessionGetCurrentV1ResponseMPayload fkiLanguageID(Integer fkiLanguageID) {
    this.fkiLanguageID = fkiLanguageID;
    return this;
  }

  /**
   * The unique ID of the Language.  Valid values:  |Value|Description| |-|-| |1|French| |2|English|
   * minimum: 1
   * maximum: 2
   * @return fkiLanguageID
   */
  @javax.annotation.Nonnull
  public Integer getFkiLanguageID() {
    return fkiLanguageID;
  }

  public void setFkiLanguageID(Integer fkiLanguageID) {
    this.fkiLanguageID = fkiLanguageID;
  }


  public ActivesessionGetCurrentV1ResponseMPayload sCompanyNameX(String sCompanyNameX) {
    this.sCompanyNameX = sCompanyNameX;
    return this;
  }

  /**
   * The Name of the Company in the language of the requester
   * @return sCompanyNameX
   */
  @javax.annotation.Nonnull
  public String getsCompanyNameX() {
    return sCompanyNameX;
  }

  public void setsCompanyNameX(String sCompanyNameX) {
    this.sCompanyNameX = sCompanyNameX;
  }


  public ActivesessionGetCurrentV1ResponseMPayload sDepartmentNameX(String sDepartmentNameX) {
    this.sDepartmentNameX = sDepartmentNameX;
    return this;
  }

  /**
   * The Name of the Department in the language of the requester
   * @return sDepartmentNameX
   */
  @javax.annotation.Nonnull
  public String getsDepartmentNameX() {
    return sDepartmentNameX;
  }

  public void setsDepartmentNameX(String sDepartmentNameX) {
    this.sDepartmentNameX = sDepartmentNameX;
  }


  public ActivesessionGetCurrentV1ResponseMPayload bActivesessionDebug(Boolean bActivesessionDebug) {
    this.bActivesessionDebug = bActivesessionDebug;
    return this;
  }

  /**
   * Whether the active session is in debug or not
   * @return bActivesessionDebug
   */
  @javax.annotation.Nonnull
  public Boolean getbActivesessionDebug() {
    return bActivesessionDebug;
  }

  public void setbActivesessionDebug(Boolean bActivesessionDebug) {
    this.bActivesessionDebug = bActivesessionDebug;
  }


  public ActivesessionGetCurrentV1ResponseMPayload bActivesessionIssuperadmin(Boolean bActivesessionIssuperadmin) {
    this.bActivesessionIssuperadmin = bActivesessionIssuperadmin;
    return this;
  }

  /**
   * Whether the active session is superadmin or not
   * @return bActivesessionIssuperadmin
   */
  @javax.annotation.Nonnull
  public Boolean getbActivesessionIssuperadmin() {
    return bActivesessionIssuperadmin;
  }

  public void setbActivesessionIssuperadmin(Boolean bActivesessionIssuperadmin) {
    this.bActivesessionIssuperadmin = bActivesessionIssuperadmin;
  }


  public ActivesessionGetCurrentV1ResponseMPayload bActivesessionAttachment(Boolean bActivesessionAttachment) {
    this.bActivesessionAttachment = bActivesessionAttachment;
    return this;
  }

  /**
   * Can access attachment when we clone a user
   * @return bActivesessionAttachment
   */
  @javax.annotation.Nullable
  public Boolean getbActivesessionAttachment() {
    return bActivesessionAttachment;
  }

  public void setbActivesessionAttachment(Boolean bActivesessionAttachment) {
    this.bActivesessionAttachment = bActivesessionAttachment;
  }


  public ActivesessionGetCurrentV1ResponseMPayload bActivesessionCanafe(Boolean bActivesessionCanafe) {
    this.bActivesessionCanafe = bActivesessionCanafe;
    return this;
  }

  /**
   * Can access canafe when we clone a user
   * @return bActivesessionCanafe
   */
  @javax.annotation.Nullable
  public Boolean getbActivesessionCanafe() {
    return bActivesessionCanafe;
  }

  public void setbActivesessionCanafe(Boolean bActivesessionCanafe) {
    this.bActivesessionCanafe = bActivesessionCanafe;
  }


  public ActivesessionGetCurrentV1ResponseMPayload bActivesessionFinancial(Boolean bActivesessionFinancial) {
    this.bActivesessionFinancial = bActivesessionFinancial;
    return this;
  }

  /**
   * Can access financial element when we clone a user
   * @return bActivesessionFinancial
   */
  @javax.annotation.Nullable
  public Boolean getbActivesessionFinancial() {
    return bActivesessionFinancial;
  }

  public void setbActivesessionFinancial(Boolean bActivesessionFinancial) {
    this.bActivesessionFinancial = bActivesessionFinancial;
  }


  public ActivesessionGetCurrentV1ResponseMPayload bActivesessionRealestatecompleted(Boolean bActivesessionRealestatecompleted) {
    this.bActivesessionRealestatecompleted = bActivesessionRealestatecompleted;
    return this;
  }

  /**
   * Can access closed realestate folders when we clone a user
   * @return bActivesessionRealestatecompleted
   */
  @javax.annotation.Nullable
  public Boolean getbActivesessionRealestatecompleted() {
    return bActivesessionRealestatecompleted;
  }

  public void setbActivesessionRealestatecompleted(Boolean bActivesessionRealestatecompleted) {
    this.bActivesessionRealestatecompleted = bActivesessionRealestatecompleted;
  }


  public ActivesessionGetCurrentV1ResponseMPayload eActivesessionEzsign(FieldEActivesessionEzsign eActivesessionEzsign) {
    this.eActivesessionEzsign = eActivesessionEzsign;
    return this;
  }

  /**
   * Get eActivesessionEzsign
   * @return eActivesessionEzsign
   */
  @javax.annotation.Nullable
  public FieldEActivesessionEzsign geteActivesessionEzsign() {
    return eActivesessionEzsign;
  }

  public void seteActivesessionEzsign(FieldEActivesessionEzsign eActivesessionEzsign) {
    this.eActivesessionEzsign = eActivesessionEzsign;
  }


  public ActivesessionGetCurrentV1ResponseMPayload eActivesessionEzsignaccess(FieldEActivesessionEzsignaccess eActivesessionEzsignaccess) {
    this.eActivesessionEzsignaccess = eActivesessionEzsignaccess;
    return this;
  }

  /**
   * Get eActivesessionEzsignaccess
   * @return eActivesessionEzsignaccess
   */
  @javax.annotation.Nonnull
  public FieldEActivesessionEzsignaccess geteActivesessionEzsignaccess() {
    return eActivesessionEzsignaccess;
  }

  public void seteActivesessionEzsignaccess(FieldEActivesessionEzsignaccess eActivesessionEzsignaccess) {
    this.eActivesessionEzsignaccess = eActivesessionEzsignaccess;
  }


  public ActivesessionGetCurrentV1ResponseMPayload eActivesessionEzsignprepaid(FieldEActivesessionEzsignprepaid eActivesessionEzsignprepaid) {
    this.eActivesessionEzsignprepaid = eActivesessionEzsignprepaid;
    return this;
  }

  /**
   * Get eActivesessionEzsignprepaid
   * @return eActivesessionEzsignprepaid
   */
  @javax.annotation.Nullable
  public FieldEActivesessionEzsignprepaid geteActivesessionEzsignprepaid() {
    return eActivesessionEzsignprepaid;
  }

  public void seteActivesessionEzsignprepaid(FieldEActivesessionEzsignprepaid eActivesessionEzsignprepaid) {
    this.eActivesessionEzsignprepaid = eActivesessionEzsignprepaid;
  }


  public ActivesessionGetCurrentV1ResponseMPayload eActivesessionRealestateinprogress(FieldEActivesessionRealestateinprogress eActivesessionRealestateinprogress) {
    this.eActivesessionRealestateinprogress = eActivesessionRealestateinprogress;
    return this;
  }

  /**
   * Get eActivesessionRealestateinprogress
   * @return eActivesessionRealestateinprogress
   */
  @javax.annotation.Nullable
  public FieldEActivesessionRealestateinprogress geteActivesessionRealestateinprogress() {
    return eActivesessionRealestateinprogress;
  }

  public void seteActivesessionRealestateinprogress(FieldEActivesessionRealestateinprogress eActivesessionRealestateinprogress) {
    this.eActivesessionRealestateinprogress = eActivesessionRealestateinprogress;
  }


  public ActivesessionGetCurrentV1ResponseMPayload pksCustomerCode(String pksCustomerCode) {
    this.pksCustomerCode = pksCustomerCode;
    return this;
  }

  /**
   * The customer code assigned to your account
   * @return pksCustomerCode
   */
  @javax.annotation.Nonnull
  public String getPksCustomerCode() {
    return pksCustomerCode;
  }

  public void setPksCustomerCode(String pksCustomerCode) {
    this.pksCustomerCode = pksCustomerCode;
  }


  public ActivesessionGetCurrentV1ResponseMPayload fkiSystemconfigurationtypeID(Integer fkiSystemconfigurationtypeID) {
    this.fkiSystemconfigurationtypeID = fkiSystemconfigurationtypeID;
    return this;
  }

  /**
   * The unique ID of the Systemconfigurationtype
   * minimum: 1
   * @return fkiSystemconfigurationtypeID
   */
  @javax.annotation.Nonnull
  public Integer getFkiSystemconfigurationtypeID() {
    return fkiSystemconfigurationtypeID;
  }

  public void setFkiSystemconfigurationtypeID(Integer fkiSystemconfigurationtypeID) {
    this.fkiSystemconfigurationtypeID = fkiSystemconfigurationtypeID;
  }


  public ActivesessionGetCurrentV1ResponseMPayload fkiSignatureID(Integer fkiSignatureID) {
    this.fkiSignatureID = fkiSignatureID;
    return this;
  }

  /**
   * The unique ID of the Signature
   * minimum: 0
   * maximum: 16777215
   * @return fkiSignatureID
   */
  @javax.annotation.Nullable
  public Integer getFkiSignatureID() {
    return fkiSignatureID;
  }

  public void setFkiSignatureID(Integer fkiSignatureID) {
    this.fkiSignatureID = fkiSignatureID;
  }


  public ActivesessionGetCurrentV1ResponseMPayload fkiEzsignuserID(Integer fkiEzsignuserID) {
    this.fkiEzsignuserID = fkiEzsignuserID;
    return this;
  }

  /**
   * The unique ID of the Ezsignuser
   * minimum: 0
   * maximum: 65535
   * @return fkiEzsignuserID
   */
  @javax.annotation.Nullable
  public Integer getFkiEzsignuserID() {
    return fkiEzsignuserID;
  }

  public void setFkiEzsignuserID(Integer fkiEzsignuserID) {
    this.fkiEzsignuserID = fkiEzsignuserID;
  }


  public ActivesessionGetCurrentV1ResponseMPayload bSystemconfigurationEzsignpaidbyoffice(Boolean bSystemconfigurationEzsignpaidbyoffice) {
    this.bSystemconfigurationEzsignpaidbyoffice = bSystemconfigurationEzsignpaidbyoffice;
    return this;
  }

  /**
   * Whether if Ezsign is paid by the company or not
   * @return bSystemconfigurationEzsignpaidbyoffice
   */
  @javax.annotation.Nullable
  public Boolean getbSystemconfigurationEzsignpaidbyoffice() {
    return bSystemconfigurationEzsignpaidbyoffice;
  }

  public void setbSystemconfigurationEzsignpaidbyoffice(Boolean bSystemconfigurationEzsignpaidbyoffice) {
    this.bSystemconfigurationEzsignpaidbyoffice = bSystemconfigurationEzsignpaidbyoffice;
  }


  public ActivesessionGetCurrentV1ResponseMPayload eSystemconfigurationEzsignofficeplan(FieldESystemconfigurationEzsignofficeplan eSystemconfigurationEzsignofficeplan) {
    this.eSystemconfigurationEzsignofficeplan = eSystemconfigurationEzsignofficeplan;
    return this;
  }

  /**
   * Get eSystemconfigurationEzsignofficeplan
   * @return eSystemconfigurationEzsignofficeplan
   */
  @javax.annotation.Nullable
  public FieldESystemconfigurationEzsignofficeplan geteSystemconfigurationEzsignofficeplan() {
    return eSystemconfigurationEzsignofficeplan;
  }

  public void seteSystemconfigurationEzsignofficeplan(FieldESystemconfigurationEzsignofficeplan eSystemconfigurationEzsignofficeplan) {
    this.eSystemconfigurationEzsignofficeplan = eSystemconfigurationEzsignofficeplan;
  }


  public ActivesessionGetCurrentV1ResponseMPayload eUserEzsignaccess(FieldEUserEzsignaccess eUserEzsignaccess) {
    this.eUserEzsignaccess = eUserEzsignaccess;
    return this;
  }

  /**
   * Get eUserEzsignaccess
   * @return eUserEzsignaccess
   */
  @javax.annotation.Nonnull
  public FieldEUserEzsignaccess geteUserEzsignaccess() {
    return eUserEzsignaccess;
  }

  public void seteUserEzsignaccess(FieldEUserEzsignaccess eUserEzsignaccess) {
    this.eUserEzsignaccess = eUserEzsignaccess;
  }


  public ActivesessionGetCurrentV1ResponseMPayload eUserEzsignprepaid(FieldEUserEzsignprepaid eUserEzsignprepaid) {
    this.eUserEzsignprepaid = eUserEzsignprepaid;
    return this;
  }

  /**
   * Get eUserEzsignprepaid
   * @return eUserEzsignprepaid
   */
  @javax.annotation.Nullable
  public FieldEUserEzsignprepaid geteUserEzsignprepaid() {
    return eUserEzsignprepaid;
  }

  public void seteUserEzsignprepaid(FieldEUserEzsignprepaid eUserEzsignprepaid) {
    this.eUserEzsignprepaid = eUserEzsignprepaid;
  }


  public ActivesessionGetCurrentV1ResponseMPayload bUserEzsigntrial(Boolean bUserEzsigntrial) {
    this.bUserEzsigntrial = bUserEzsigntrial;
    return this;
  }

  /**
   * Whether the User&#39;s eZsign subscription is a trial
   * @return bUserEzsigntrial
   */
  @javax.annotation.Nullable
  public Boolean getbUserEzsigntrial() {
    return bUserEzsigntrial;
  }

  public void setbUserEzsigntrial(Boolean bUserEzsigntrial) {
    this.bUserEzsigntrial = bUserEzsigntrial;
  }


  public ActivesessionGetCurrentV1ResponseMPayload dtUserEzsignprepaidexpiration(String dtUserEzsignprepaidexpiration) {
    this.dtUserEzsignprepaidexpiration = dtUserEzsignprepaidexpiration;
    return this;
  }

  /**
   * The eZsign prepaid expiration date
   * @return dtUserEzsignprepaidexpiration
   */
  @javax.annotation.Nullable
  public String getDtUserEzsignprepaidexpiration() {
    return dtUserEzsignprepaidexpiration;
  }

  public void setDtUserEzsignprepaidexpiration(String dtUserEzsignprepaidexpiration) {
    this.dtUserEzsignprepaidexpiration = dtUserEzsignprepaidexpiration;
  }


  public ActivesessionGetCurrentV1ResponseMPayload aPkiPermissionID(List<Integer> aPkiPermissionID) {
    this.aPkiPermissionID = aPkiPermissionID;
    return this;
  }

  public ActivesessionGetCurrentV1ResponseMPayload addAPkiPermissionIDItem(Integer aPkiPermissionIDItem) {
    if (this.aPkiPermissionID == null) {
      this.aPkiPermissionID = new ArrayList<>();
    }
    this.aPkiPermissionID.add(aPkiPermissionIDItem);
    return this;
  }

  /**
   * An array of permissions granted to the user or api key
   * @return aPkiPermissionID
   */
  @javax.annotation.Nonnull
  public List<Integer> getaPkiPermissionID() {
    return aPkiPermissionID;
  }

  public void setaPkiPermissionID(List<Integer> aPkiPermissionID) {
    this.aPkiPermissionID = aPkiPermissionID;
  }


  public ActivesessionGetCurrentV1ResponseMPayload objUserReal(ActivesessionResponseCompoundUser objUserReal) {
    this.objUserReal = objUserReal;
    return this;
  }

  /**
   * Get objUserReal
   * @return objUserReal
   */
  @javax.annotation.Nonnull
  public ActivesessionResponseCompoundUser getObjUserReal() {
    return objUserReal;
  }

  public void setObjUserReal(ActivesessionResponseCompoundUser objUserReal) {
    this.objUserReal = objUserReal;
  }


  public ActivesessionGetCurrentV1ResponseMPayload objUserCloned(ActivesessionResponseCompoundUser objUserCloned) {
    this.objUserCloned = objUserCloned;
    return this;
  }

  /**
   * Get objUserCloned
   * @return objUserCloned
   */
  @javax.annotation.Nullable
  public ActivesessionResponseCompoundUser getObjUserCloned() {
    return objUserCloned;
  }

  public void setObjUserCloned(ActivesessionResponseCompoundUser objUserCloned) {
    this.objUserCloned = objUserCloned;
  }


  public ActivesessionGetCurrentV1ResponseMPayload objApikey(ActivesessionResponseCompoundApikey objApikey) {
    this.objApikey = objApikey;
    return this;
  }

  /**
   * Get objApikey
   * @return objApikey
   */
  @javax.annotation.Nullable
  public ActivesessionResponseCompoundApikey getObjApikey() {
    return objApikey;
  }

  public void setObjApikey(ActivesessionResponseCompoundApikey objApikey) {
    this.objApikey = objApikey;
  }


  public ActivesessionGetCurrentV1ResponseMPayload aEModuleInternalname(List<String> aEModuleInternalname) {
    this.aEModuleInternalname = aEModuleInternalname;
    return this;
  }

  public ActivesessionGetCurrentV1ResponseMPayload addAEModuleInternalnameItem(String aEModuleInternalnameItem) {
    if (this.aEModuleInternalname == null) {
      this.aEModuleInternalname = new ArrayList<>();
    }
    this.aEModuleInternalname.add(aEModuleInternalnameItem);
    return this;
  }

  /**
   * An Array of Registered modules.  These are the modules that are Licensed to be used by the User or the API Key.
   * @return aEModuleInternalname
   */
  @javax.annotation.Nonnull
  public List<String> getaEModuleInternalname() {
    return aEModuleInternalname;
  }

  public void setaEModuleInternalname(List<String> aEModuleInternalname) {
    this.aEModuleInternalname = aEModuleInternalname;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ActivesessionGetCurrentV1ResponseMPayload activesessionGetCurrentV1ResponseMPayload = (ActivesessionGetCurrentV1ResponseMPayload) o;
    return Objects.equals(this.eActivesessionUsertype, activesessionGetCurrentV1ResponseMPayload.eActivesessionUsertype) &&
        Objects.equals(this.eActivesessionOrigin, activesessionGetCurrentV1ResponseMPayload.eActivesessionOrigin) &&
        Objects.equals(this.eActivesessionWeekdaystart, activesessionGetCurrentV1ResponseMPayload.eActivesessionWeekdaystart) &&
        Objects.equals(this.fkiLanguageID, activesessionGetCurrentV1ResponseMPayload.fkiLanguageID) &&
        Objects.equals(this.sCompanyNameX, activesessionGetCurrentV1ResponseMPayload.sCompanyNameX) &&
        Objects.equals(this.sDepartmentNameX, activesessionGetCurrentV1ResponseMPayload.sDepartmentNameX) &&
        Objects.equals(this.bActivesessionDebug, activesessionGetCurrentV1ResponseMPayload.bActivesessionDebug) &&
        Objects.equals(this.bActivesessionIssuperadmin, activesessionGetCurrentV1ResponseMPayload.bActivesessionIssuperadmin) &&
        Objects.equals(this.bActivesessionAttachment, activesessionGetCurrentV1ResponseMPayload.bActivesessionAttachment) &&
        Objects.equals(this.bActivesessionCanafe, activesessionGetCurrentV1ResponseMPayload.bActivesessionCanafe) &&
        Objects.equals(this.bActivesessionFinancial, activesessionGetCurrentV1ResponseMPayload.bActivesessionFinancial) &&
        Objects.equals(this.bActivesessionRealestatecompleted, activesessionGetCurrentV1ResponseMPayload.bActivesessionRealestatecompleted) &&
        Objects.equals(this.eActivesessionEzsign, activesessionGetCurrentV1ResponseMPayload.eActivesessionEzsign) &&
        Objects.equals(this.eActivesessionEzsignaccess, activesessionGetCurrentV1ResponseMPayload.eActivesessionEzsignaccess) &&
        Objects.equals(this.eActivesessionEzsignprepaid, activesessionGetCurrentV1ResponseMPayload.eActivesessionEzsignprepaid) &&
        Objects.equals(this.eActivesessionRealestateinprogress, activesessionGetCurrentV1ResponseMPayload.eActivesessionRealestateinprogress) &&
        Objects.equals(this.pksCustomerCode, activesessionGetCurrentV1ResponseMPayload.pksCustomerCode) &&
        Objects.equals(this.fkiSystemconfigurationtypeID, activesessionGetCurrentV1ResponseMPayload.fkiSystemconfigurationtypeID) &&
        Objects.equals(this.fkiSignatureID, activesessionGetCurrentV1ResponseMPayload.fkiSignatureID) &&
        Objects.equals(this.fkiEzsignuserID, activesessionGetCurrentV1ResponseMPayload.fkiEzsignuserID) &&
        Objects.equals(this.bSystemconfigurationEzsignpaidbyoffice, activesessionGetCurrentV1ResponseMPayload.bSystemconfigurationEzsignpaidbyoffice) &&
        Objects.equals(this.eSystemconfigurationEzsignofficeplan, activesessionGetCurrentV1ResponseMPayload.eSystemconfigurationEzsignofficeplan) &&
        Objects.equals(this.eUserEzsignaccess, activesessionGetCurrentV1ResponseMPayload.eUserEzsignaccess) &&
        Objects.equals(this.eUserEzsignprepaid, activesessionGetCurrentV1ResponseMPayload.eUserEzsignprepaid) &&
        Objects.equals(this.bUserEzsigntrial, activesessionGetCurrentV1ResponseMPayload.bUserEzsigntrial) &&
        Objects.equals(this.dtUserEzsignprepaidexpiration, activesessionGetCurrentV1ResponseMPayload.dtUserEzsignprepaidexpiration) &&
        Objects.equals(this.aPkiPermissionID, activesessionGetCurrentV1ResponseMPayload.aPkiPermissionID) &&
        Objects.equals(this.objUserReal, activesessionGetCurrentV1ResponseMPayload.objUserReal) &&
        Objects.equals(this.objUserCloned, activesessionGetCurrentV1ResponseMPayload.objUserCloned) &&
        Objects.equals(this.objApikey, activesessionGetCurrentV1ResponseMPayload.objApikey) &&
        Objects.equals(this.aEModuleInternalname, activesessionGetCurrentV1ResponseMPayload.aEModuleInternalname);
  }

  @Override
  public int hashCode() {
    return Objects.hash(eActivesessionUsertype, eActivesessionOrigin, eActivesessionWeekdaystart, fkiLanguageID, sCompanyNameX, sDepartmentNameX, bActivesessionDebug, bActivesessionIssuperadmin, bActivesessionAttachment, bActivesessionCanafe, bActivesessionFinancial, bActivesessionRealestatecompleted, eActivesessionEzsign, eActivesessionEzsignaccess, eActivesessionEzsignprepaid, eActivesessionRealestateinprogress, pksCustomerCode, fkiSystemconfigurationtypeID, fkiSignatureID, fkiEzsignuserID, bSystemconfigurationEzsignpaidbyoffice, eSystemconfigurationEzsignofficeplan, eUserEzsignaccess, eUserEzsignprepaid, bUserEzsigntrial, dtUserEzsignprepaidexpiration, aPkiPermissionID, objUserReal, objUserCloned, objApikey, aEModuleInternalname);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ActivesessionGetCurrentV1ResponseMPayload {\n");
    sb.append("    eActivesessionUsertype: ").append(toIndentedString(eActivesessionUsertype)).append("\n");
    sb.append("    eActivesessionOrigin: ").append(toIndentedString(eActivesessionOrigin)).append("\n");
    sb.append("    eActivesessionWeekdaystart: ").append(toIndentedString(eActivesessionWeekdaystart)).append("\n");
    sb.append("    fkiLanguageID: ").append(toIndentedString(fkiLanguageID)).append("\n");
    sb.append("    sCompanyNameX: ").append(toIndentedString(sCompanyNameX)).append("\n");
    sb.append("    sDepartmentNameX: ").append(toIndentedString(sDepartmentNameX)).append("\n");
    sb.append("    bActivesessionDebug: ").append(toIndentedString(bActivesessionDebug)).append("\n");
    sb.append("    bActivesessionIssuperadmin: ").append(toIndentedString(bActivesessionIssuperadmin)).append("\n");
    sb.append("    bActivesessionAttachment: ").append(toIndentedString(bActivesessionAttachment)).append("\n");
    sb.append("    bActivesessionCanafe: ").append(toIndentedString(bActivesessionCanafe)).append("\n");
    sb.append("    bActivesessionFinancial: ").append(toIndentedString(bActivesessionFinancial)).append("\n");
    sb.append("    bActivesessionRealestatecompleted: ").append(toIndentedString(bActivesessionRealestatecompleted)).append("\n");
    sb.append("    eActivesessionEzsign: ").append(toIndentedString(eActivesessionEzsign)).append("\n");
    sb.append("    eActivesessionEzsignaccess: ").append(toIndentedString(eActivesessionEzsignaccess)).append("\n");
    sb.append("    eActivesessionEzsignprepaid: ").append(toIndentedString(eActivesessionEzsignprepaid)).append("\n");
    sb.append("    eActivesessionRealestateinprogress: ").append(toIndentedString(eActivesessionRealestateinprogress)).append("\n");
    sb.append("    pksCustomerCode: ").append(toIndentedString(pksCustomerCode)).append("\n");
    sb.append("    fkiSystemconfigurationtypeID: ").append(toIndentedString(fkiSystemconfigurationtypeID)).append("\n");
    sb.append("    fkiSignatureID: ").append(toIndentedString(fkiSignatureID)).append("\n");
    sb.append("    fkiEzsignuserID: ").append(toIndentedString(fkiEzsignuserID)).append("\n");
    sb.append("    bSystemconfigurationEzsignpaidbyoffice: ").append(toIndentedString(bSystemconfigurationEzsignpaidbyoffice)).append("\n");
    sb.append("    eSystemconfigurationEzsignofficeplan: ").append(toIndentedString(eSystemconfigurationEzsignofficeplan)).append("\n");
    sb.append("    eUserEzsignaccess: ").append(toIndentedString(eUserEzsignaccess)).append("\n");
    sb.append("    eUserEzsignprepaid: ").append(toIndentedString(eUserEzsignprepaid)).append("\n");
    sb.append("    bUserEzsigntrial: ").append(toIndentedString(bUserEzsigntrial)).append("\n");
    sb.append("    dtUserEzsignprepaidexpiration: ").append(toIndentedString(dtUserEzsignprepaidexpiration)).append("\n");
    sb.append("    aPkiPermissionID: ").append(toIndentedString(aPkiPermissionID)).append("\n");
    sb.append("    objUserReal: ").append(toIndentedString(objUserReal)).append("\n");
    sb.append("    objUserCloned: ").append(toIndentedString(objUserCloned)).append("\n");
    sb.append("    objApikey: ").append(toIndentedString(objApikey)).append("\n");
    sb.append("    aEModuleInternalname: ").append(toIndentedString(aEModuleInternalname)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("eActivesessionUsertype");
    openapiFields.add("eActivesessionOrigin");
    openapiFields.add("eActivesessionWeekdaystart");
    openapiFields.add("fkiLanguageID");
    openapiFields.add("sCompanyNameX");
    openapiFields.add("sDepartmentNameX");
    openapiFields.add("bActivesessionDebug");
    openapiFields.add("bActivesessionIssuperadmin");
    openapiFields.add("bActivesessionAttachment");
    openapiFields.add("bActivesessionCanafe");
    openapiFields.add("bActivesessionFinancial");
    openapiFields.add("bActivesessionRealestatecompleted");
    openapiFields.add("eActivesessionEzsign");
    openapiFields.add("eActivesessionEzsignaccess");
    openapiFields.add("eActivesessionEzsignprepaid");
    openapiFields.add("eActivesessionRealestateinprogress");
    openapiFields.add("pksCustomerCode");
    openapiFields.add("fkiSystemconfigurationtypeID");
    openapiFields.add("fkiSignatureID");
    openapiFields.add("fkiEzsignuserID");
    openapiFields.add("bSystemconfigurationEzsignpaidbyoffice");
    openapiFields.add("eSystemconfigurationEzsignofficeplan");
    openapiFields.add("eUserEzsignaccess");
    openapiFields.add("eUserEzsignprepaid");
    openapiFields.add("bUserEzsigntrial");
    openapiFields.add("dtUserEzsignprepaidexpiration");
    openapiFields.add("a_pkiPermissionID");
    openapiFields.add("objUserReal");
    openapiFields.add("objUserCloned");
    openapiFields.add("objApikey");
    openapiFields.add("a_eModuleInternalname");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("eActivesessionUsertype");
    openapiRequiredFields.add("eActivesessionOrigin");
    openapiRequiredFields.add("eActivesessionWeekdaystart");
    openapiRequiredFields.add("fkiLanguageID");
    openapiRequiredFields.add("sCompanyNameX");
    openapiRequiredFields.add("sDepartmentNameX");
    openapiRequiredFields.add("bActivesessionDebug");
    openapiRequiredFields.add("bActivesessionIssuperadmin");
    openapiRequiredFields.add("eActivesessionEzsignaccess");
    openapiRequiredFields.add("pksCustomerCode");
    openapiRequiredFields.add("fkiSystemconfigurationtypeID");
    openapiRequiredFields.add("eUserEzsignaccess");
    openapiRequiredFields.add("a_pkiPermissionID");
    openapiRequiredFields.add("objUserReal");
    openapiRequiredFields.add("a_eModuleInternalname");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ActivesessionGetCurrentV1ResponseMPayload
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ActivesessionGetCurrentV1ResponseMPayload.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ActivesessionGetCurrentV1ResponseMPayload is not found in the empty JSON string", ActivesessionGetCurrentV1ResponseMPayload.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ActivesessionGetCurrentV1ResponseMPayload.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ActivesessionGetCurrentV1ResponseMPayload` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ActivesessionGetCurrentV1ResponseMPayload.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `eActivesessionUsertype`
      FieldEActivesessionUsertype.validateJsonElement(jsonObj.get("eActivesessionUsertype"));
      // validate the required field `eActivesessionOrigin`
      FieldEActivesessionOrigin.validateJsonElement(jsonObj.get("eActivesessionOrigin"));
      // validate the required field `eActivesessionWeekdaystart`
      FieldEActivesessionWeekdaystart.validateJsonElement(jsonObj.get("eActivesessionWeekdaystart"));
      if (!jsonObj.get("sCompanyNameX").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sCompanyNameX` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sCompanyNameX").toString()));
      }
      if (!jsonObj.get("sDepartmentNameX").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sDepartmentNameX` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sDepartmentNameX").toString()));
      }
      // validate the optional field `eActivesessionEzsign`
      if (jsonObj.get("eActivesessionEzsign") != null && !jsonObj.get("eActivesessionEzsign").isJsonNull()) {
        FieldEActivesessionEzsign.validateJsonElement(jsonObj.get("eActivesessionEzsign"));
      }
      // validate the required field `eActivesessionEzsignaccess`
      FieldEActivesessionEzsignaccess.validateJsonElement(jsonObj.get("eActivesessionEzsignaccess"));
      // validate the optional field `eActivesessionEzsignprepaid`
      if (jsonObj.get("eActivesessionEzsignprepaid") != null && !jsonObj.get("eActivesessionEzsignprepaid").isJsonNull()) {
        FieldEActivesessionEzsignprepaid.validateJsonElement(jsonObj.get("eActivesessionEzsignprepaid"));
      }
      // validate the optional field `eActivesessionRealestateinprogress`
      if (jsonObj.get("eActivesessionRealestateinprogress") != null && !jsonObj.get("eActivesessionRealestateinprogress").isJsonNull()) {
        FieldEActivesessionRealestateinprogress.validateJsonElement(jsonObj.get("eActivesessionRealestateinprogress"));
      }
      if (!jsonObj.get("pksCustomerCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pksCustomerCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pksCustomerCode").toString()));
      }
      // validate the optional field `eSystemconfigurationEzsignofficeplan`
      if (jsonObj.get("eSystemconfigurationEzsignofficeplan") != null && !jsonObj.get("eSystemconfigurationEzsignofficeplan").isJsonNull()) {
        FieldESystemconfigurationEzsignofficeplan.validateJsonElement(jsonObj.get("eSystemconfigurationEzsignofficeplan"));
      }
      // validate the required field `eUserEzsignaccess`
      FieldEUserEzsignaccess.validateJsonElement(jsonObj.get("eUserEzsignaccess"));
      // validate the optional field `eUserEzsignprepaid`
      if (jsonObj.get("eUserEzsignprepaid") != null && !jsonObj.get("eUserEzsignprepaid").isJsonNull()) {
        FieldEUserEzsignprepaid.validateJsonElement(jsonObj.get("eUserEzsignprepaid"));
      }
      if ((jsonObj.get("dtUserEzsignprepaidexpiration") != null && !jsonObj.get("dtUserEzsignprepaidexpiration").isJsonNull()) && !jsonObj.get("dtUserEzsignprepaidexpiration").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dtUserEzsignprepaidexpiration` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dtUserEzsignprepaidexpiration").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("a_pkiPermissionID") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("a_pkiPermissionID").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `a_pkiPermissionID` to be an array in the JSON string but got `%s`", jsonObj.get("a_pkiPermissionID").toString()));
      }
      // validate the required field `objUserReal`
      ActivesessionResponseCompoundUser.validateJsonElement(jsonObj.get("objUserReal"));
      // validate the optional field `objUserCloned`
      if (jsonObj.get("objUserCloned") != null && !jsonObj.get("objUserCloned").isJsonNull()) {
        ActivesessionResponseCompoundUser.validateJsonElement(jsonObj.get("objUserCloned"));
      }
      // validate the optional field `objApikey`
      if (jsonObj.get("objApikey") != null && !jsonObj.get("objApikey").isJsonNull()) {
        ActivesessionResponseCompoundApikey.validateJsonElement(jsonObj.get("objApikey"));
      }
      // ensure the required json array is present
      if (jsonObj.get("a_eModuleInternalname") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("a_eModuleInternalname").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `a_eModuleInternalname` to be an array in the JSON string but got `%s`", jsonObj.get("a_eModuleInternalname").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ActivesessionGetCurrentV1ResponseMPayload.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ActivesessionGetCurrentV1ResponseMPayload' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ActivesessionGetCurrentV1ResponseMPayload> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ActivesessionGetCurrentV1ResponseMPayload.class));

       return (TypeAdapter<T>) new TypeAdapter<ActivesessionGetCurrentV1ResponseMPayload>() {
           @Override
           public void write(JsonWriter out, ActivesessionGetCurrentV1ResponseMPayload value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ActivesessionGetCurrentV1ResponseMPayload read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ActivesessionGetCurrentV1ResponseMPayload given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ActivesessionGetCurrentV1ResponseMPayload
   * @throws IOException if the JSON string is invalid with respect to ActivesessionGetCurrentV1ResponseMPayload
   */
  public static ActivesessionGetCurrentV1ResponseMPayload fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ActivesessionGetCurrentV1ResponseMPayload.class);
  }

  /**
   * Convert an instance of ActivesessionGetCurrentV1ResponseMPayload to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

