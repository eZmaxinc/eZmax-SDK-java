/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.ezmax.api.model.CreditcardmerchantResponseCompound;
import com.ezmax.api.model.FieldEPaymentgatewayProcessor;
import com.ezmax.api.model.MultilingualPaymentgatewayDescription;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * A Paymentgateway Object
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-07T19:20:13.445471985Z[Etc/UTC]", comments = "Generator version: 7.12.0")
public class PaymentgatewayResponse {
  public static final String SERIALIZED_NAME_PKI_PAYMENTGATEWAY_I_D = "pkiPaymentgatewayID";
  @SerializedName(SERIALIZED_NAME_PKI_PAYMENTGATEWAY_I_D)
  @javax.annotation.Nonnull
  private Integer pkiPaymentgatewayID;

  public static final String SERIALIZED_NAME_FKI_CREDITCARDMERCHANT_I_D = "fkiCreditcardmerchantID";
  @SerializedName(SERIALIZED_NAME_FKI_CREDITCARDMERCHANT_I_D)
  @javax.annotation.Nullable
  private Integer fkiCreditcardmerchantID;

  public static final String SERIALIZED_NAME_S_CREDITCARDMERCHANT_DESCRIPTION = "sCreditcardmerchantDescription";
  @SerializedName(SERIALIZED_NAME_S_CREDITCARDMERCHANT_DESCRIPTION)
  @javax.annotation.Nullable
  private String sCreditcardmerchantDescription;

  public static final String SERIALIZED_NAME_E_PAYMENTGATEWAY_PROCESSOR = "ePaymentgatewayProcessor";
  @SerializedName(SERIALIZED_NAME_E_PAYMENTGATEWAY_PROCESSOR)
  @javax.annotation.Nonnull
  private FieldEPaymentgatewayProcessor ePaymentgatewayProcessor;

  public static final String SERIALIZED_NAME_OBJ_PAYMENTGATEWAY_DESCRIPTION = "objPaymentgatewayDescription";
  @SerializedName(SERIALIZED_NAME_OBJ_PAYMENTGATEWAY_DESCRIPTION)
  @javax.annotation.Nonnull
  private MultilingualPaymentgatewayDescription objPaymentgatewayDescription;

  public static final String SERIALIZED_NAME_OBJ_CREDITCARDMERCHANT = "objCreditcardmerchant";
  @SerializedName(SERIALIZED_NAME_OBJ_CREDITCARDMERCHANT)
  @javax.annotation.Nullable
  private CreditcardmerchantResponseCompound objCreditcardmerchant;

  public PaymentgatewayResponse() {
  }

  public PaymentgatewayResponse pkiPaymentgatewayID(@javax.annotation.Nonnull Integer pkiPaymentgatewayID) {
    this.pkiPaymentgatewayID = pkiPaymentgatewayID;
    return this;
  }

  /**
   * The unique ID of the Paymentgateway
   * minimum: 0
   * maximum: 255
   * @return pkiPaymentgatewayID
   */
  @javax.annotation.Nonnull
  public Integer getPkiPaymentgatewayID() {
    return pkiPaymentgatewayID;
  }

  public void setPkiPaymentgatewayID(@javax.annotation.Nonnull Integer pkiPaymentgatewayID) {
    this.pkiPaymentgatewayID = pkiPaymentgatewayID;
  }


  public PaymentgatewayResponse fkiCreditcardmerchantID(@javax.annotation.Nullable Integer fkiCreditcardmerchantID) {
    this.fkiCreditcardmerchantID = fkiCreditcardmerchantID;
    return this;
  }

  /**
   * The unique ID of the Creditcardmerchant
   * minimum: 0
   * maximum: 255
   * @return fkiCreditcardmerchantID
   */
  @javax.annotation.Nullable
  public Integer getFkiCreditcardmerchantID() {
    return fkiCreditcardmerchantID;
  }

  public void setFkiCreditcardmerchantID(@javax.annotation.Nullable Integer fkiCreditcardmerchantID) {
    this.fkiCreditcardmerchantID = fkiCreditcardmerchantID;
  }


  public PaymentgatewayResponse sCreditcardmerchantDescription(@javax.annotation.Nullable String sCreditcardmerchantDescription) {
    this.sCreditcardmerchantDescription = sCreditcardmerchantDescription;
    return this;
  }

  /**
   * The description of the Creditcardmerchant
   * @return sCreditcardmerchantDescription
   */
  @javax.annotation.Nullable
  public String getsCreditcardmerchantDescription() {
    return sCreditcardmerchantDescription;
  }

  public void setsCreditcardmerchantDescription(@javax.annotation.Nullable String sCreditcardmerchantDescription) {
    this.sCreditcardmerchantDescription = sCreditcardmerchantDescription;
  }


  public PaymentgatewayResponse ePaymentgatewayProcessor(@javax.annotation.Nonnull FieldEPaymentgatewayProcessor ePaymentgatewayProcessor) {
    this.ePaymentgatewayProcessor = ePaymentgatewayProcessor;
    return this;
  }

  /**
   * Get ePaymentgatewayProcessor
   * @return ePaymentgatewayProcessor
   */
  @javax.annotation.Nonnull
  public FieldEPaymentgatewayProcessor getePaymentgatewayProcessor() {
    return ePaymentgatewayProcessor;
  }

  public void setePaymentgatewayProcessor(@javax.annotation.Nonnull FieldEPaymentgatewayProcessor ePaymentgatewayProcessor) {
    this.ePaymentgatewayProcessor = ePaymentgatewayProcessor;
  }


  public PaymentgatewayResponse objPaymentgatewayDescription(@javax.annotation.Nonnull MultilingualPaymentgatewayDescription objPaymentgatewayDescription) {
    this.objPaymentgatewayDescription = objPaymentgatewayDescription;
    return this;
  }

  /**
   * Get objPaymentgatewayDescription
   * @return objPaymentgatewayDescription
   */
  @javax.annotation.Nonnull
  public MultilingualPaymentgatewayDescription getObjPaymentgatewayDescription() {
    return objPaymentgatewayDescription;
  }

  public void setObjPaymentgatewayDescription(@javax.annotation.Nonnull MultilingualPaymentgatewayDescription objPaymentgatewayDescription) {
    this.objPaymentgatewayDescription = objPaymentgatewayDescription;
  }


  public PaymentgatewayResponse objCreditcardmerchant(@javax.annotation.Nullable CreditcardmerchantResponseCompound objCreditcardmerchant) {
    this.objCreditcardmerchant = objCreditcardmerchant;
    return this;
  }

  /**
   * Get objCreditcardmerchant
   * @return objCreditcardmerchant
   */
  @javax.annotation.Nullable
  public CreditcardmerchantResponseCompound getObjCreditcardmerchant() {
    return objCreditcardmerchant;
  }

  public void setObjCreditcardmerchant(@javax.annotation.Nullable CreditcardmerchantResponseCompound objCreditcardmerchant) {
    this.objCreditcardmerchant = objCreditcardmerchant;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentgatewayResponse paymentgatewayResponse = (PaymentgatewayResponse) o;
    return Objects.equals(this.pkiPaymentgatewayID, paymentgatewayResponse.pkiPaymentgatewayID) &&
        Objects.equals(this.fkiCreditcardmerchantID, paymentgatewayResponse.fkiCreditcardmerchantID) &&
        Objects.equals(this.sCreditcardmerchantDescription, paymentgatewayResponse.sCreditcardmerchantDescription) &&
        Objects.equals(this.ePaymentgatewayProcessor, paymentgatewayResponse.ePaymentgatewayProcessor) &&
        Objects.equals(this.objPaymentgatewayDescription, paymentgatewayResponse.objPaymentgatewayDescription) &&
        Objects.equals(this.objCreditcardmerchant, paymentgatewayResponse.objCreditcardmerchant);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pkiPaymentgatewayID, fkiCreditcardmerchantID, sCreditcardmerchantDescription, ePaymentgatewayProcessor, objPaymentgatewayDescription, objCreditcardmerchant);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentgatewayResponse {\n");
    sb.append("    pkiPaymentgatewayID: ").append(toIndentedString(pkiPaymentgatewayID)).append("\n");
    sb.append("    fkiCreditcardmerchantID: ").append(toIndentedString(fkiCreditcardmerchantID)).append("\n");
    sb.append("    sCreditcardmerchantDescription: ").append(toIndentedString(sCreditcardmerchantDescription)).append("\n");
    sb.append("    ePaymentgatewayProcessor: ").append(toIndentedString(ePaymentgatewayProcessor)).append("\n");
    sb.append("    objPaymentgatewayDescription: ").append(toIndentedString(objPaymentgatewayDescription)).append("\n");
    sb.append("    objCreditcardmerchant: ").append(toIndentedString(objCreditcardmerchant)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pkiPaymentgatewayID");
    openapiFields.add("fkiCreditcardmerchantID");
    openapiFields.add("sCreditcardmerchantDescription");
    openapiFields.add("ePaymentgatewayProcessor");
    openapiFields.add("objPaymentgatewayDescription");
    openapiFields.add("objCreditcardmerchant");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("pkiPaymentgatewayID");
    openapiRequiredFields.add("ePaymentgatewayProcessor");
    openapiRequiredFields.add("objPaymentgatewayDescription");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PaymentgatewayResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PaymentgatewayResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PaymentgatewayResponse is not found in the empty JSON string", PaymentgatewayResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PaymentgatewayResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PaymentgatewayResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : PaymentgatewayResponse.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("sCreditcardmerchantDescription") != null && !jsonObj.get("sCreditcardmerchantDescription").isJsonNull()) && !jsonObj.get("sCreditcardmerchantDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sCreditcardmerchantDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sCreditcardmerchantDescription").toString()));
      }
      // validate the required field `ePaymentgatewayProcessor`
      FieldEPaymentgatewayProcessor.validateJsonElement(jsonObj.get("ePaymentgatewayProcessor"));
      // validate the required field `objPaymentgatewayDescription`
      MultilingualPaymentgatewayDescription.validateJsonElement(jsonObj.get("objPaymentgatewayDescription"));
      // validate the optional field `objCreditcardmerchant`
      if (jsonObj.get("objCreditcardmerchant") != null && !jsonObj.get("objCreditcardmerchant").isJsonNull()) {
        CreditcardmerchantResponseCompound.validateJsonElement(jsonObj.get("objCreditcardmerchant"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PaymentgatewayResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PaymentgatewayResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PaymentgatewayResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PaymentgatewayResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<PaymentgatewayResponse>() {
           @Override
           public void write(JsonWriter out, PaymentgatewayResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PaymentgatewayResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PaymentgatewayResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PaymentgatewayResponse
   * @throws IOException if the JSON string is invalid with respect to PaymentgatewayResponse
   */
  public static PaymentgatewayResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PaymentgatewayResponse.class);
  }

  /**
   * Convert an instance of PaymentgatewayResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

