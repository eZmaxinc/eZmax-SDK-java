/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.17
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * An EzmaxinvoicingEzsignfolder object containing information about the Ezmaxinvoicing for an Ezsignfolder
 */
@ApiModel(description = "An EzmaxinvoicingEzsignfolder object containing information about the Ezmaxinvoicing for an Ezsignfolder")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-03T17:09:39.725139908Z[Etc/UTC]")
public class CustomEzmaxinvoicingEzsignfolderResponse {
  public static final String SERIALIZED_NAME_FKI_EZSIGNFOLDER_I_D = "fkiEzsignfolderID";
  @SerializedName(SERIALIZED_NAME_FKI_EZSIGNFOLDER_I_D)
  private Integer fkiEzsignfolderID;

  public static final String SERIALIZED_NAME_S_EZSIGNFOLDER_DESCRIPTION = "sEzsignfolderDescription";
  @SerializedName(SERIALIZED_NAME_S_EZSIGNFOLDER_DESCRIPTION)
  private String sEzsignfolderDescription;

  public static final String SERIALIZED_NAME_B_EZSIGNTSAREQUIREMENT_BILLABLE = "bEzsigntsarequirementBillable";
  @SerializedName(SERIALIZED_NAME_B_EZSIGNTSAREQUIREMENT_BILLABLE)
  private Boolean bEzsigntsarequirementBillable;

  public static final String SERIALIZED_NAME_B_EZSIGNFOLDER_MFAUSED = "bEzsignfolderMfaused";
  @SerializedName(SERIALIZED_NAME_B_EZSIGNFOLDER_MFAUSED)
  private Boolean bEzsignfolderMfaused;

  public static final String SERIALIZED_NAME_B_EZSIGNFOLDER_PAYMENTUSED = "bEzsignfolderPaymentused";
  @SerializedName(SERIALIZED_NAME_B_EZSIGNFOLDER_PAYMENTUSED)
  private Boolean bEzsignfolderPaymentused;

  public static final String SERIALIZED_NAME_B_EZSIGNFOLDER_ALLOWED = "bEzsignfolderAllowed";
  @SerializedName(SERIALIZED_NAME_B_EZSIGNFOLDER_ALLOWED)
  private Boolean bEzsignfolderAllowed;

  public CustomEzmaxinvoicingEzsignfolderResponse() {
  }

  public CustomEzmaxinvoicingEzsignfolderResponse fkiEzsignfolderID(Integer fkiEzsignfolderID) {
    
    this.fkiEzsignfolderID = fkiEzsignfolderID;
    return this;
  }

   /**
   * The unique ID of the Ezsignfolder
   * minimum: 0
   * @return fkiEzsignfolderID
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "33", required = true, value = "The unique ID of the Ezsignfolder")

  public Integer getFkiEzsignfolderID() {
    return fkiEzsignfolderID;
  }


  public void setFkiEzsignfolderID(Integer fkiEzsignfolderID) {
    this.fkiEzsignfolderID = fkiEzsignfolderID;
  }


  public CustomEzmaxinvoicingEzsignfolderResponse sEzsignfolderDescription(String sEzsignfolderDescription) {
    
    this.sEzsignfolderDescription = sEzsignfolderDescription;
    return this;
  }

   /**
   * The description of the Ezsignfolder
   * @return sEzsignfolderDescription
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "Test eZsign Folder", required = true, value = "The description of the Ezsignfolder")

  public String getsEzsignfolderDescription() {
    return sEzsignfolderDescription;
  }


  public void setsEzsignfolderDescription(String sEzsignfolderDescription) {
    this.sEzsignfolderDescription = sEzsignfolderDescription;
  }


  public CustomEzmaxinvoicingEzsignfolderResponse bEzsigntsarequirementBillable(Boolean bEzsigntsarequirementBillable) {
    
    this.bEzsigntsarequirementBillable = bEzsigntsarequirementBillable;
    return this;
  }

   /**
   * Whether the TSA requirement is billable or not
   * @return bEzsigntsarequirementBillable
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "true", required = true, value = "Whether the TSA requirement is billable or not")

  public Boolean getbEzsigntsarequirementBillable() {
    return bEzsigntsarequirementBillable;
  }


  public void setbEzsigntsarequirementBillable(Boolean bEzsigntsarequirementBillable) {
    this.bEzsigntsarequirementBillable = bEzsigntsarequirementBillable;
  }


  public CustomEzmaxinvoicingEzsignfolderResponse bEzsignfolderMfaused(Boolean bEzsignfolderMfaused) {
    
    this.bEzsignfolderMfaused = bEzsignfolderMfaused;
    return this;
  }

   /**
   * Whether the MFA was used or not for the Ezsignfolder
   * @return bEzsignfolderMfaused
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "true", required = true, value = "Whether the MFA was used or not for the Ezsignfolder")

  public Boolean getbEzsignfolderMfaused() {
    return bEzsignfolderMfaused;
  }


  public void setbEzsignfolderMfaused(Boolean bEzsignfolderMfaused) {
    this.bEzsignfolderMfaused = bEzsignfolderMfaused;
  }


  public CustomEzmaxinvoicingEzsignfolderResponse bEzsignfolderPaymentused(Boolean bEzsignfolderPaymentused) {
    
    this.bEzsignfolderPaymentused = bEzsignfolderPaymentused;
    return this;
  }

   /**
   * Whether there was a signature is of type payment
   * @return bEzsignfolderPaymentused
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "true", required = true, value = "Whether there was a signature is of type payment")

  public Boolean getbEzsignfolderPaymentused() {
    return bEzsignfolderPaymentused;
  }


  public void setbEzsignfolderPaymentused(Boolean bEzsignfolderPaymentused) {
    this.bEzsignfolderPaymentused = bEzsignfolderPaymentused;
  }


  public CustomEzmaxinvoicingEzsignfolderResponse bEzsignfolderAllowed(Boolean bEzsignfolderAllowed) {
    
    this.bEzsignfolderAllowed = bEzsignfolderAllowed;
    return this;
  }

   /**
   * Get bEzsignfolderAllowed
   * @return bEzsignfolderAllowed
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getbEzsignfolderAllowed() {
    return bEzsignfolderAllowed;
  }


  public void setbEzsignfolderAllowed(Boolean bEzsignfolderAllowed) {
    this.bEzsignfolderAllowed = bEzsignfolderAllowed;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomEzmaxinvoicingEzsignfolderResponse customEzmaxinvoicingEzsignfolderResponse = (CustomEzmaxinvoicingEzsignfolderResponse) o;
    return Objects.equals(this.fkiEzsignfolderID, customEzmaxinvoicingEzsignfolderResponse.fkiEzsignfolderID) &&
        Objects.equals(this.sEzsignfolderDescription, customEzmaxinvoicingEzsignfolderResponse.sEzsignfolderDescription) &&
        Objects.equals(this.bEzsigntsarequirementBillable, customEzmaxinvoicingEzsignfolderResponse.bEzsigntsarequirementBillable) &&
        Objects.equals(this.bEzsignfolderMfaused, customEzmaxinvoicingEzsignfolderResponse.bEzsignfolderMfaused) &&
        Objects.equals(this.bEzsignfolderPaymentused, customEzmaxinvoicingEzsignfolderResponse.bEzsignfolderPaymentused) &&
        Objects.equals(this.bEzsignfolderAllowed, customEzmaxinvoicingEzsignfolderResponse.bEzsignfolderAllowed);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fkiEzsignfolderID, sEzsignfolderDescription, bEzsigntsarequirementBillable, bEzsignfolderMfaused, bEzsignfolderPaymentused, bEzsignfolderAllowed);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomEzmaxinvoicingEzsignfolderResponse {\n");
    sb.append("    fkiEzsignfolderID: ").append(toIndentedString(fkiEzsignfolderID)).append("\n");
    sb.append("    sEzsignfolderDescription: ").append(toIndentedString(sEzsignfolderDescription)).append("\n");
    sb.append("    bEzsigntsarequirementBillable: ").append(toIndentedString(bEzsigntsarequirementBillable)).append("\n");
    sb.append("    bEzsignfolderMfaused: ").append(toIndentedString(bEzsignfolderMfaused)).append("\n");
    sb.append("    bEzsignfolderPaymentused: ").append(toIndentedString(bEzsignfolderPaymentused)).append("\n");
    sb.append("    bEzsignfolderAllowed: ").append(toIndentedString(bEzsignfolderAllowed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("fkiEzsignfolderID");
    openapiFields.add("sEzsignfolderDescription");
    openapiFields.add("bEzsigntsarequirementBillable");
    openapiFields.add("bEzsignfolderMfaused");
    openapiFields.add("bEzsignfolderPaymentused");
    openapiFields.add("bEzsignfolderAllowed");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("fkiEzsignfolderID");
    openapiRequiredFields.add("sEzsignfolderDescription");
    openapiRequiredFields.add("bEzsigntsarequirementBillable");
    openapiRequiredFields.add("bEzsignfolderMfaused");
    openapiRequiredFields.add("bEzsignfolderPaymentused");
    openapiRequiredFields.add("bEzsignfolderAllowed");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CustomEzmaxinvoicingEzsignfolderResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CustomEzmaxinvoicingEzsignfolderResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CustomEzmaxinvoicingEzsignfolderResponse is not found in the empty JSON string", CustomEzmaxinvoicingEzsignfolderResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!CustomEzmaxinvoicingEzsignfolderResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CustomEzmaxinvoicingEzsignfolderResponse` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CustomEzmaxinvoicingEzsignfolderResponse.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("sEzsignfolderDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sEzsignfolderDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sEzsignfolderDescription").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomEzmaxinvoicingEzsignfolderResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomEzmaxinvoicingEzsignfolderResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomEzmaxinvoicingEzsignfolderResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomEzmaxinvoicingEzsignfolderResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomEzmaxinvoicingEzsignfolderResponse>() {
           @Override
           public void write(JsonWriter out, CustomEzmaxinvoicingEzsignfolderResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomEzmaxinvoicingEzsignfolderResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CustomEzmaxinvoicingEzsignfolderResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CustomEzmaxinvoicingEzsignfolderResponse
  * @throws IOException if the JSON string is invalid with respect to CustomEzmaxinvoicingEzsignfolderResponse
  */
  public static CustomEzmaxinvoicingEzsignfolderResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomEzmaxinvoicingEzsignfolderResponse.class);
  }

 /**
  * Convert an instance of CustomEzmaxinvoicingEzsignfolderResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

