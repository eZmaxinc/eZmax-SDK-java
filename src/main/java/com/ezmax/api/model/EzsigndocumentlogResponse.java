/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.7
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.ezmax.api.model.FieldEEzsigndocumentlogType;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * An Ezsigndocumentlog Object
 */
@ApiModel(description = "An Ezsigndocumentlog Object")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-17T16:00:12.138084Z[Etc/UTC]")
public class EzsigndocumentlogResponse {
  public static final String SERIALIZED_NAME_FKI_USER_I_D = "fkiUserID";
  @SerializedName(SERIALIZED_NAME_FKI_USER_I_D)
  private Integer fkiUserID;

  public static final String SERIALIZED_NAME_FKI_EZSIGNSIGNER_I_D = "fkiEzsignsignerID";
  @SerializedName(SERIALIZED_NAME_FKI_EZSIGNSIGNER_I_D)
  private Integer fkiEzsignsignerID;

  public static final String SERIALIZED_NAME_DT_EZSIGNDOCUMENTLOG_DATETIME = "dtEzsigndocumentlogDatetime";
  @SerializedName(SERIALIZED_NAME_DT_EZSIGNDOCUMENTLOG_DATETIME)
  private String dtEzsigndocumentlogDatetime;

  public static final String SERIALIZED_NAME_E_EZSIGNDOCUMENTLOG_TYPE = "eEzsigndocumentlogType";
  @SerializedName(SERIALIZED_NAME_E_EZSIGNDOCUMENTLOG_TYPE)
  private FieldEEzsigndocumentlogType eEzsigndocumentlogType;

  public static final String SERIALIZED_NAME_S_EZSIGNDOCUMENTLOG_DETAIL = "sEzsigndocumentlogDetail";
  @SerializedName(SERIALIZED_NAME_S_EZSIGNDOCUMENTLOG_DETAIL)
  private String sEzsigndocumentlogDetail;

  public static final String SERIALIZED_NAME_S_EZSIGNDOCUMENTLOG_LASTNAME = "sEzsigndocumentlogLastname";
  @SerializedName(SERIALIZED_NAME_S_EZSIGNDOCUMENTLOG_LASTNAME)
  private String sEzsigndocumentlogLastname;

  public static final String SERIALIZED_NAME_S_EZSIGNDOCUMENTLOG_FIRSTNAME = "sEzsigndocumentlogFirstname";
  @SerializedName(SERIALIZED_NAME_S_EZSIGNDOCUMENTLOG_FIRSTNAME)
  private String sEzsigndocumentlogFirstname;

  public static final String SERIALIZED_NAME_S_EZSIGNDOCUMENTLOG_I_P = "sEzsigndocumentlogIP";
  @SerializedName(SERIALIZED_NAME_S_EZSIGNDOCUMENTLOG_I_P)
  private String sEzsigndocumentlogIP;

  public EzsigndocumentlogResponse() { 
  }

  public EzsigndocumentlogResponse fkiUserID(Integer fkiUserID) {
    
    this.fkiUserID = fkiUserID;
    return this;
  }

   /**
   * The unique ID of the User
   * @return fkiUserID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "70", value = "The unique ID of the User")

  public Integer getFkiUserID() {
    return fkiUserID;
  }


  public void setFkiUserID(Integer fkiUserID) {
    this.fkiUserID = fkiUserID;
  }


  public EzsigndocumentlogResponse fkiEzsignsignerID(Integer fkiEzsignsignerID) {
    
    this.fkiEzsignsignerID = fkiEzsignsignerID;
    return this;
  }

   /**
   * The unique ID of the Ezsignsigner
   * @return fkiEzsignsignerID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "89", value = "The unique ID of the Ezsignsigner")

  public Integer getFkiEzsignsignerID() {
    return fkiEzsignsignerID;
  }


  public void setFkiEzsignsignerID(Integer fkiEzsignsignerID) {
    this.fkiEzsignsignerID = fkiEzsignsignerID;
  }


  public EzsigndocumentlogResponse dtEzsigndocumentlogDatetime(String dtEzsigndocumentlogDatetime) {
    
    this.dtEzsigndocumentlogDatetime = dtEzsigndocumentlogDatetime;
    return this;
  }

   /**
   * The date and time at which the event was logged
   * @return dtEzsigndocumentlogDatetime
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "2020-12-31 23:59:59", required = true, value = "The date and time at which the event was logged")

  public String getDtEzsigndocumentlogDatetime() {
    return dtEzsigndocumentlogDatetime;
  }


  public void setDtEzsigndocumentlogDatetime(String dtEzsigndocumentlogDatetime) {
    this.dtEzsigndocumentlogDatetime = dtEzsigndocumentlogDatetime;
  }


  public EzsigndocumentlogResponse eEzsigndocumentlogType(FieldEEzsigndocumentlogType eEzsigndocumentlogType) {
    
    this.eEzsigndocumentlogType = eEzsigndocumentlogType;
    return this;
  }

   /**
   * Get eEzsigndocumentlogType
   * @return eEzsigndocumentlogType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public FieldEEzsigndocumentlogType geteEzsigndocumentlogType() {
    return eEzsigndocumentlogType;
  }


  public void seteEzsigndocumentlogType(FieldEEzsigndocumentlogType eEzsigndocumentlogType) {
    this.eEzsigndocumentlogType = eEzsigndocumentlogType;
  }


  public EzsigndocumentlogResponse sEzsigndocumentlogDetail(String sEzsigndocumentlogDetail) {
    
    this.sEzsigndocumentlogDetail = sEzsigndocumentlogDetail;
    return this;
  }

   /**
   * The detail of the Ezsigndocumentlog
   * @return sEzsigndocumentlogDetail
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "Page 1 MD5: a56bbc742ba2a4d074f2493550cf6ea5", required = true, value = "The detail of the Ezsigndocumentlog")

  public String getsEzsigndocumentlogDetail() {
    return sEzsigndocumentlogDetail;
  }


  public void setsEzsigndocumentlogDetail(String sEzsigndocumentlogDetail) {
    this.sEzsigndocumentlogDetail = sEzsigndocumentlogDetail;
  }


  public EzsigndocumentlogResponse sEzsigndocumentlogLastname(String sEzsigndocumentlogLastname) {
    
    this.sEzsigndocumentlogLastname = sEzsigndocumentlogLastname;
    return this;
  }

   /**
   * The last name of the User or Ezsignsigner
   * @return sEzsigndocumentlogLastname
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "Doe", required = true, value = "The last name of the User or Ezsignsigner")

  public String getsEzsigndocumentlogLastname() {
    return sEzsigndocumentlogLastname;
  }


  public void setsEzsigndocumentlogLastname(String sEzsigndocumentlogLastname) {
    this.sEzsigndocumentlogLastname = sEzsigndocumentlogLastname;
  }


  public EzsigndocumentlogResponse sEzsigndocumentlogFirstname(String sEzsigndocumentlogFirstname) {
    
    this.sEzsigndocumentlogFirstname = sEzsigndocumentlogFirstname;
    return this;
  }

   /**
   * The first name of the User or Ezsignsigner
   * @return sEzsigndocumentlogFirstname
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "John", required = true, value = "The first name of the User or Ezsignsigner")

  public String getsEzsigndocumentlogFirstname() {
    return sEzsigndocumentlogFirstname;
  }


  public void setsEzsigndocumentlogFirstname(String sEzsigndocumentlogFirstname) {
    this.sEzsigndocumentlogFirstname = sEzsigndocumentlogFirstname;
  }


  public EzsigndocumentlogResponse sEzsigndocumentlogIP(String sEzsigndocumentlogIP) {
    
    this.sEzsigndocumentlogIP = sEzsigndocumentlogIP;
    return this;
  }

   /**
   * Represent an IP address.
   * @return sEzsigndocumentlogIP
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "127.0.0.1", required = true, value = "Represent an IP address.")

  public String getsEzsigndocumentlogIP() {
    return sEzsigndocumentlogIP;
  }


  public void setsEzsigndocumentlogIP(String sEzsigndocumentlogIP) {
    this.sEzsigndocumentlogIP = sEzsigndocumentlogIP;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EzsigndocumentlogResponse ezsigndocumentlogResponse = (EzsigndocumentlogResponse) o;
    return Objects.equals(this.fkiUserID, ezsigndocumentlogResponse.fkiUserID) &&
        Objects.equals(this.fkiEzsignsignerID, ezsigndocumentlogResponse.fkiEzsignsignerID) &&
        Objects.equals(this.dtEzsigndocumentlogDatetime, ezsigndocumentlogResponse.dtEzsigndocumentlogDatetime) &&
        Objects.equals(this.eEzsigndocumentlogType, ezsigndocumentlogResponse.eEzsigndocumentlogType) &&
        Objects.equals(this.sEzsigndocumentlogDetail, ezsigndocumentlogResponse.sEzsigndocumentlogDetail) &&
        Objects.equals(this.sEzsigndocumentlogLastname, ezsigndocumentlogResponse.sEzsigndocumentlogLastname) &&
        Objects.equals(this.sEzsigndocumentlogFirstname, ezsigndocumentlogResponse.sEzsigndocumentlogFirstname) &&
        Objects.equals(this.sEzsigndocumentlogIP, ezsigndocumentlogResponse.sEzsigndocumentlogIP);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fkiUserID, fkiEzsignsignerID, dtEzsigndocumentlogDatetime, eEzsigndocumentlogType, sEzsigndocumentlogDetail, sEzsigndocumentlogLastname, sEzsigndocumentlogFirstname, sEzsigndocumentlogIP);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EzsigndocumentlogResponse {\n");
    sb.append("    fkiUserID: ").append(toIndentedString(fkiUserID)).append("\n");
    sb.append("    fkiEzsignsignerID: ").append(toIndentedString(fkiEzsignsignerID)).append("\n");
    sb.append("    dtEzsigndocumentlogDatetime: ").append(toIndentedString(dtEzsigndocumentlogDatetime)).append("\n");
    sb.append("    eEzsigndocumentlogType: ").append(toIndentedString(eEzsigndocumentlogType)).append("\n");
    sb.append("    sEzsigndocumentlogDetail: ").append(toIndentedString(sEzsigndocumentlogDetail)).append("\n");
    sb.append("    sEzsigndocumentlogLastname: ").append(toIndentedString(sEzsigndocumentlogLastname)).append("\n");
    sb.append("    sEzsigndocumentlogFirstname: ").append(toIndentedString(sEzsigndocumentlogFirstname)).append("\n");
    sb.append("    sEzsigndocumentlogIP: ").append(toIndentedString(sEzsigndocumentlogIP)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("fkiUserID");
    openapiFields.add("fkiEzsignsignerID");
    openapiFields.add("dtEzsigndocumentlogDatetime");
    openapiFields.add("eEzsigndocumentlogType");
    openapiFields.add("sEzsigndocumentlogDetail");
    openapiFields.add("sEzsigndocumentlogLastname");
    openapiFields.add("sEzsigndocumentlogFirstname");
    openapiFields.add("sEzsigndocumentlogIP");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("dtEzsigndocumentlogDatetime");
    openapiRequiredFields.add("eEzsigndocumentlogType");
    openapiRequiredFields.add("sEzsigndocumentlogDetail");
    openapiRequiredFields.add("sEzsigndocumentlogLastname");
    openapiRequiredFields.add("sEzsigndocumentlogFirstname");
    openapiRequiredFields.add("sEzsigndocumentlogIP");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to EzsigndocumentlogResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (EzsigndocumentlogResponse.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in EzsigndocumentlogResponse is not found in the empty JSON string", EzsigndocumentlogResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!EzsigndocumentlogResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EzsigndocumentlogResponse` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : EzsigndocumentlogResponse.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (jsonObj.get("dtEzsigndocumentlogDatetime") != null && !jsonObj.get("dtEzsigndocumentlogDatetime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dtEzsigndocumentlogDatetime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dtEzsigndocumentlogDatetime").toString()));
      }
      if (jsonObj.get("sEzsigndocumentlogDetail") != null && !jsonObj.get("sEzsigndocumentlogDetail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sEzsigndocumentlogDetail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sEzsigndocumentlogDetail").toString()));
      }
      if (jsonObj.get("sEzsigndocumentlogLastname") != null && !jsonObj.get("sEzsigndocumentlogLastname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sEzsigndocumentlogLastname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sEzsigndocumentlogLastname").toString()));
      }
      if (jsonObj.get("sEzsigndocumentlogFirstname") != null && !jsonObj.get("sEzsigndocumentlogFirstname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sEzsigndocumentlogFirstname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sEzsigndocumentlogFirstname").toString()));
      }
      if (jsonObj.get("sEzsigndocumentlogIP") != null && !jsonObj.get("sEzsigndocumentlogIP").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sEzsigndocumentlogIP` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sEzsigndocumentlogIP").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EzsigndocumentlogResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EzsigndocumentlogResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EzsigndocumentlogResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EzsigndocumentlogResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<EzsigndocumentlogResponse>() {
           @Override
           public void write(JsonWriter out, EzsigndocumentlogResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EzsigndocumentlogResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EzsigndocumentlogResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EzsigndocumentlogResponse
  * @throws IOException if the JSON string is invalid with respect to EzsigndocumentlogResponse
  */
  public static EzsigndocumentlogResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EzsigndocumentlogResponse.class);
  }

 /**
  * Convert an instance of EzsigndocumentlogResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

