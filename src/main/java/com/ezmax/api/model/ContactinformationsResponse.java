/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.ezmax.api.model.AddressResponse;
import com.ezmax.api.model.EmailResponse;
import com.ezmax.api.model.FieldEContactinformationsType;
import com.ezmax.api.model.PhoneResponseCompound;
import com.ezmax.api.model.WebsiteResponse;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * A Contactinformations Object
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-20T18:49:43.941195549Z[Etc/UTC]", comments = "Generator version: 7.10.0")
public class ContactinformationsResponse {
  public static final String SERIALIZED_NAME_PKI_CONTACTINFORMATIONS_I_D = "pkiContactinformationsID";
  @SerializedName(SERIALIZED_NAME_PKI_CONTACTINFORMATIONS_I_D)
  @javax.annotation.Nonnull
  private Integer pkiContactinformationsID;

  public static final String SERIALIZED_NAME_FKI_ADDRESS_I_D_DEFAULT = "fkiAddressIDDefault";
  @SerializedName(SERIALIZED_NAME_FKI_ADDRESS_I_D_DEFAULT)
  @javax.annotation.Nullable
  private Integer fkiAddressIDDefault;

  public static final String SERIALIZED_NAME_FKI_PHONE_I_D_DEFAULT = "fkiPhoneIDDefault";
  @SerializedName(SERIALIZED_NAME_FKI_PHONE_I_D_DEFAULT)
  @javax.annotation.Nullable
  private Integer fkiPhoneIDDefault;

  public static final String SERIALIZED_NAME_FKI_EMAIL_I_D_DEFAULT = "fkiEmailIDDefault";
  @SerializedName(SERIALIZED_NAME_FKI_EMAIL_I_D_DEFAULT)
  @javax.annotation.Nullable
  private Integer fkiEmailIDDefault;

  public static final String SERIALIZED_NAME_FKI_WEBSITE_I_D_DEFAULT = "fkiWebsiteIDDefault";
  @SerializedName(SERIALIZED_NAME_FKI_WEBSITE_I_D_DEFAULT)
  @javax.annotation.Nullable
  private Integer fkiWebsiteIDDefault;

  public static final String SERIALIZED_NAME_E_CONTACTINFORMATIONS_TYPE = "eContactinformationsType";
  @SerializedName(SERIALIZED_NAME_E_CONTACTINFORMATIONS_TYPE)
  @javax.annotation.Nonnull
  private FieldEContactinformationsType eContactinformationsType;

  public static final String SERIALIZED_NAME_S_CONTACTINFORMATIONS_URL = "sContactinformationsUrl";
  @SerializedName(SERIALIZED_NAME_S_CONTACTINFORMATIONS_URL)
  @javax.annotation.Nullable
  private String sContactinformationsUrl;

  public static final String SERIALIZED_NAME_OBJ_ADDRESS_DEFAULT = "objAddressDefault";
  @SerializedName(SERIALIZED_NAME_OBJ_ADDRESS_DEFAULT)
  @javax.annotation.Nullable
  private AddressResponse objAddressDefault;

  public static final String SERIALIZED_NAME_OBJ_PHONE_DEFAULT = "objPhoneDefault";
  @SerializedName(SERIALIZED_NAME_OBJ_PHONE_DEFAULT)
  @javax.annotation.Nullable
  private PhoneResponseCompound objPhoneDefault;

  public static final String SERIALIZED_NAME_OBJ_EMAIL_DEFAULT = "objEmailDefault";
  @SerializedName(SERIALIZED_NAME_OBJ_EMAIL_DEFAULT)
  @javax.annotation.Nullable
  private EmailResponse objEmailDefault;

  public static final String SERIALIZED_NAME_OBJ_WEBSITE_DEFAULT = "objWebsiteDefault";
  @SerializedName(SERIALIZED_NAME_OBJ_WEBSITE_DEFAULT)
  @javax.annotation.Nullable
  private WebsiteResponse objWebsiteDefault;

  public ContactinformationsResponse() {
  }

  public ContactinformationsResponse pkiContactinformationsID(@javax.annotation.Nonnull Integer pkiContactinformationsID) {
    this.pkiContactinformationsID = pkiContactinformationsID;
    return this;
  }

  /**
   * The unique ID of the Contactinformations
   * minimum: 0
   * maximum: 16777215
   * @return pkiContactinformationsID
   */
  @javax.annotation.Nonnull
  public Integer getPkiContactinformationsID() {
    return pkiContactinformationsID;
  }

  public void setPkiContactinformationsID(@javax.annotation.Nonnull Integer pkiContactinformationsID) {
    this.pkiContactinformationsID = pkiContactinformationsID;
  }


  public ContactinformationsResponse fkiAddressIDDefault(@javax.annotation.Nullable Integer fkiAddressIDDefault) {
    this.fkiAddressIDDefault = fkiAddressIDDefault;
    return this;
  }

  /**
   * The unique ID of the Address
   * minimum: 0
   * @return fkiAddressIDDefault
   */
  @javax.annotation.Nullable
  public Integer getFkiAddressIDDefault() {
    return fkiAddressIDDefault;
  }

  public void setFkiAddressIDDefault(@javax.annotation.Nullable Integer fkiAddressIDDefault) {
    this.fkiAddressIDDefault = fkiAddressIDDefault;
  }


  public ContactinformationsResponse fkiPhoneIDDefault(@javax.annotation.Nullable Integer fkiPhoneIDDefault) {
    this.fkiPhoneIDDefault = fkiPhoneIDDefault;
    return this;
  }

  /**
   * The unique ID of the Phone.
   * minimum: 0
   * @return fkiPhoneIDDefault
   */
  @javax.annotation.Nullable
  public Integer getFkiPhoneIDDefault() {
    return fkiPhoneIDDefault;
  }

  public void setFkiPhoneIDDefault(@javax.annotation.Nullable Integer fkiPhoneIDDefault) {
    this.fkiPhoneIDDefault = fkiPhoneIDDefault;
  }


  public ContactinformationsResponse fkiEmailIDDefault(@javax.annotation.Nullable Integer fkiEmailIDDefault) {
    this.fkiEmailIDDefault = fkiEmailIDDefault;
    return this;
  }

  /**
   * The unique ID of the Email
   * minimum: 1
   * maximum: 16777215
   * @return fkiEmailIDDefault
   */
  @javax.annotation.Nullable
  public Integer getFkiEmailIDDefault() {
    return fkiEmailIDDefault;
  }

  public void setFkiEmailIDDefault(@javax.annotation.Nullable Integer fkiEmailIDDefault) {
    this.fkiEmailIDDefault = fkiEmailIDDefault;
  }


  public ContactinformationsResponse fkiWebsiteIDDefault(@javax.annotation.Nullable Integer fkiWebsiteIDDefault) {
    this.fkiWebsiteIDDefault = fkiWebsiteIDDefault;
    return this;
  }

  /**
   * The unique ID of the Website Default
   * minimum: 0
   * maximum: 16777215
   * @return fkiWebsiteIDDefault
   */
  @javax.annotation.Nullable
  public Integer getFkiWebsiteIDDefault() {
    return fkiWebsiteIDDefault;
  }

  public void setFkiWebsiteIDDefault(@javax.annotation.Nullable Integer fkiWebsiteIDDefault) {
    this.fkiWebsiteIDDefault = fkiWebsiteIDDefault;
  }


  public ContactinformationsResponse eContactinformationsType(@javax.annotation.Nonnull FieldEContactinformationsType eContactinformationsType) {
    this.eContactinformationsType = eContactinformationsType;
    return this;
  }

  /**
   * Get eContactinformationsType
   * @return eContactinformationsType
   */
  @javax.annotation.Nonnull
  public FieldEContactinformationsType geteContactinformationsType() {
    return eContactinformationsType;
  }

  public void seteContactinformationsType(@javax.annotation.Nonnull FieldEContactinformationsType eContactinformationsType) {
    this.eContactinformationsType = eContactinformationsType;
  }


  public ContactinformationsResponse sContactinformationsUrl(@javax.annotation.Nullable String sContactinformationsUrl) {
    this.sContactinformationsUrl = sContactinformationsUrl;
    return this;
  }

  /**
   * The url of the Contactinformations
   * @return sContactinformationsUrl
   */
  @javax.annotation.Nullable
  public String getsContactinformationsUrl() {
    return sContactinformationsUrl;
  }

  public void setsContactinformationsUrl(@javax.annotation.Nullable String sContactinformationsUrl) {
    this.sContactinformationsUrl = sContactinformationsUrl;
  }


  public ContactinformationsResponse objAddressDefault(@javax.annotation.Nullable AddressResponse objAddressDefault) {
    this.objAddressDefault = objAddressDefault;
    return this;
  }

  /**
   * An Address Object and children to create a complete structure
   * @return objAddressDefault
   */
  @javax.annotation.Nullable
  public AddressResponse getObjAddressDefault() {
    return objAddressDefault;
  }

  public void setObjAddressDefault(@javax.annotation.Nullable AddressResponse objAddressDefault) {
    this.objAddressDefault = objAddressDefault;
  }


  public ContactinformationsResponse objPhoneDefault(@javax.annotation.Nullable PhoneResponseCompound objPhoneDefault) {
    this.objPhoneDefault = objPhoneDefault;
    return this;
  }

  /**
   * Get objPhoneDefault
   * @return objPhoneDefault
   */
  @javax.annotation.Nullable
  public PhoneResponseCompound getObjPhoneDefault() {
    return objPhoneDefault;
  }

  public void setObjPhoneDefault(@javax.annotation.Nullable PhoneResponseCompound objPhoneDefault) {
    this.objPhoneDefault = objPhoneDefault;
  }


  public ContactinformationsResponse objEmailDefault(@javax.annotation.Nullable EmailResponse objEmailDefault) {
    this.objEmailDefault = objEmailDefault;
    return this;
  }

  /**
   * An Email Object and children to create a complete structure
   * @return objEmailDefault
   */
  @javax.annotation.Nullable
  public EmailResponse getObjEmailDefault() {
    return objEmailDefault;
  }

  public void setObjEmailDefault(@javax.annotation.Nullable EmailResponse objEmailDefault) {
    this.objEmailDefault = objEmailDefault;
  }


  public ContactinformationsResponse objWebsiteDefault(@javax.annotation.Nullable WebsiteResponse objWebsiteDefault) {
    this.objWebsiteDefault = objWebsiteDefault;
    return this;
  }

  /**
   * A Website Object and children to create a complete structure
   * @return objWebsiteDefault
   */
  @javax.annotation.Nullable
  public WebsiteResponse getObjWebsiteDefault() {
    return objWebsiteDefault;
  }

  public void setObjWebsiteDefault(@javax.annotation.Nullable WebsiteResponse objWebsiteDefault) {
    this.objWebsiteDefault = objWebsiteDefault;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContactinformationsResponse contactinformationsResponse = (ContactinformationsResponse) o;
    return Objects.equals(this.pkiContactinformationsID, contactinformationsResponse.pkiContactinformationsID) &&
        Objects.equals(this.fkiAddressIDDefault, contactinformationsResponse.fkiAddressIDDefault) &&
        Objects.equals(this.fkiPhoneIDDefault, contactinformationsResponse.fkiPhoneIDDefault) &&
        Objects.equals(this.fkiEmailIDDefault, contactinformationsResponse.fkiEmailIDDefault) &&
        Objects.equals(this.fkiWebsiteIDDefault, contactinformationsResponse.fkiWebsiteIDDefault) &&
        Objects.equals(this.eContactinformationsType, contactinformationsResponse.eContactinformationsType) &&
        Objects.equals(this.sContactinformationsUrl, contactinformationsResponse.sContactinformationsUrl) &&
        Objects.equals(this.objAddressDefault, contactinformationsResponse.objAddressDefault) &&
        Objects.equals(this.objPhoneDefault, contactinformationsResponse.objPhoneDefault) &&
        Objects.equals(this.objEmailDefault, contactinformationsResponse.objEmailDefault) &&
        Objects.equals(this.objWebsiteDefault, contactinformationsResponse.objWebsiteDefault);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pkiContactinformationsID, fkiAddressIDDefault, fkiPhoneIDDefault, fkiEmailIDDefault, fkiWebsiteIDDefault, eContactinformationsType, sContactinformationsUrl, objAddressDefault, objPhoneDefault, objEmailDefault, objWebsiteDefault);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContactinformationsResponse {\n");
    sb.append("    pkiContactinformationsID: ").append(toIndentedString(pkiContactinformationsID)).append("\n");
    sb.append("    fkiAddressIDDefault: ").append(toIndentedString(fkiAddressIDDefault)).append("\n");
    sb.append("    fkiPhoneIDDefault: ").append(toIndentedString(fkiPhoneIDDefault)).append("\n");
    sb.append("    fkiEmailIDDefault: ").append(toIndentedString(fkiEmailIDDefault)).append("\n");
    sb.append("    fkiWebsiteIDDefault: ").append(toIndentedString(fkiWebsiteIDDefault)).append("\n");
    sb.append("    eContactinformationsType: ").append(toIndentedString(eContactinformationsType)).append("\n");
    sb.append("    sContactinformationsUrl: ").append(toIndentedString(sContactinformationsUrl)).append("\n");
    sb.append("    objAddressDefault: ").append(toIndentedString(objAddressDefault)).append("\n");
    sb.append("    objPhoneDefault: ").append(toIndentedString(objPhoneDefault)).append("\n");
    sb.append("    objEmailDefault: ").append(toIndentedString(objEmailDefault)).append("\n");
    sb.append("    objWebsiteDefault: ").append(toIndentedString(objWebsiteDefault)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pkiContactinformationsID");
    openapiFields.add("fkiAddressIDDefault");
    openapiFields.add("fkiPhoneIDDefault");
    openapiFields.add("fkiEmailIDDefault");
    openapiFields.add("fkiWebsiteIDDefault");
    openapiFields.add("eContactinformationsType");
    openapiFields.add("sContactinformationsUrl");
    openapiFields.add("objAddressDefault");
    openapiFields.add("objPhoneDefault");
    openapiFields.add("objEmailDefault");
    openapiFields.add("objWebsiteDefault");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("pkiContactinformationsID");
    openapiRequiredFields.add("eContactinformationsType");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ContactinformationsResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ContactinformationsResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ContactinformationsResponse is not found in the empty JSON string", ContactinformationsResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ContactinformationsResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ContactinformationsResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ContactinformationsResponse.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `eContactinformationsType`
      FieldEContactinformationsType.validateJsonElement(jsonObj.get("eContactinformationsType"));
      if ((jsonObj.get("sContactinformationsUrl") != null && !jsonObj.get("sContactinformationsUrl").isJsonNull()) && !jsonObj.get("sContactinformationsUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sContactinformationsUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sContactinformationsUrl").toString()));
      }
      // validate the optional field `objAddressDefault`
      if (jsonObj.get("objAddressDefault") != null && !jsonObj.get("objAddressDefault").isJsonNull()) {
        AddressResponse.validateJsonElement(jsonObj.get("objAddressDefault"));
      }
      // validate the optional field `objPhoneDefault`
      if (jsonObj.get("objPhoneDefault") != null && !jsonObj.get("objPhoneDefault").isJsonNull()) {
        PhoneResponseCompound.validateJsonElement(jsonObj.get("objPhoneDefault"));
      }
      // validate the optional field `objEmailDefault`
      if (jsonObj.get("objEmailDefault") != null && !jsonObj.get("objEmailDefault").isJsonNull()) {
        EmailResponse.validateJsonElement(jsonObj.get("objEmailDefault"));
      }
      // validate the optional field `objWebsiteDefault`
      if (jsonObj.get("objWebsiteDefault") != null && !jsonObj.get("objWebsiteDefault").isJsonNull()) {
        WebsiteResponse.validateJsonElement(jsonObj.get("objWebsiteDefault"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ContactinformationsResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ContactinformationsResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ContactinformationsResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ContactinformationsResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<ContactinformationsResponse>() {
           @Override
           public void write(JsonWriter out, ContactinformationsResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ContactinformationsResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ContactinformationsResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ContactinformationsResponse
   * @throws IOException if the JSON string is invalid with respect to ContactinformationsResponse
   */
  public static ContactinformationsResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ContactinformationsResponse.class);
  }

  /**
   * Convert an instance of ContactinformationsResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

