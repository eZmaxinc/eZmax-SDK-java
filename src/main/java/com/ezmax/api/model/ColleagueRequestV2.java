/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.ezmax.api.model.FieldEColleagueEzsign;
import com.ezmax.api.model.FieldEColleagueRealestateinprogess;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * A Colleague Object
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-29T18:53:15.033493285Z[Etc/UTC]", comments = "Generator version: 7.11.0")
public class ColleagueRequestV2 {
  public static final String SERIALIZED_NAME_PKI_COLLEAGUE_I_D = "pkiColleagueID";
  @SerializedName(SERIALIZED_NAME_PKI_COLLEAGUE_I_D)
  @javax.annotation.Nullable
  private Integer pkiColleagueID;

  public static final String SERIALIZED_NAME_FKI_USER_I_D = "fkiUserID";
  @SerializedName(SERIALIZED_NAME_FKI_USER_I_D)
  @javax.annotation.Nonnull
  private Integer fkiUserID;

  public static final String SERIALIZED_NAME_FKI_USER_I_D_COLLEAGUE = "fkiUserIDColleague";
  @SerializedName(SERIALIZED_NAME_FKI_USER_I_D_COLLEAGUE)
  @javax.annotation.Nonnull
  private Integer fkiUserIDColleague;

  public static final String SERIALIZED_NAME_B_COLLEAGUE_EZSIGNEMAIL = "bColleagueEzsignemail";
  @SerializedName(SERIALIZED_NAME_B_COLLEAGUE_EZSIGNEMAIL)
  @javax.annotation.Nonnull
  private Boolean bColleagueEzsignemail;

  public static final String SERIALIZED_NAME_B_COLLEAGUE_FINANCIAL = "bColleagueFinancial";
  @SerializedName(SERIALIZED_NAME_B_COLLEAGUE_FINANCIAL)
  @javax.annotation.Nonnull
  private Boolean bColleagueFinancial;

  public static final String SERIALIZED_NAME_B_COLLEAGUE_USECLONEEMAIL = "bColleagueUsecloneemail";
  @SerializedName(SERIALIZED_NAME_B_COLLEAGUE_USECLONEEMAIL)
  @javax.annotation.Nonnull
  private Boolean bColleagueUsecloneemail;

  public static final String SERIALIZED_NAME_B_COLLEAGUE_ATTACHMENT = "bColleagueAttachment";
  @SerializedName(SERIALIZED_NAME_B_COLLEAGUE_ATTACHMENT)
  @javax.annotation.Nonnull
  private Boolean bColleagueAttachment;

  public static final String SERIALIZED_NAME_B_COLLEAGUE_CANAFE = "bColleagueCanafe";
  @SerializedName(SERIALIZED_NAME_B_COLLEAGUE_CANAFE)
  @javax.annotation.Nonnull
  private Boolean bColleagueCanafe;

  public static final String SERIALIZED_NAME_B_COLLEAGUE_PERMISSION = "bColleaguePermission";
  @SerializedName(SERIALIZED_NAME_B_COLLEAGUE_PERMISSION)
  @javax.annotation.Nonnull
  private Boolean bColleaguePermission;

  public static final String SERIALIZED_NAME_B_COLLEAGUE_REALESTATECOMPLETED = "bColleagueRealestatecompleted";
  @SerializedName(SERIALIZED_NAME_B_COLLEAGUE_REALESTATECOMPLETED)
  @javax.annotation.Nonnull
  private Boolean bColleagueRealestatecompleted;

  public static final String SERIALIZED_NAME_DT_COLLEAGUE_FROM = "dtColleagueFrom";
  @SerializedName(SERIALIZED_NAME_DT_COLLEAGUE_FROM)
  @javax.annotation.Nullable
  private String dtColleagueFrom;

  public static final String SERIALIZED_NAME_DT_COLLEAGUE_TO = "dtColleagueTo";
  @SerializedName(SERIALIZED_NAME_DT_COLLEAGUE_TO)
  @javax.annotation.Nullable
  private String dtColleagueTo;

  public static final String SERIALIZED_NAME_E_COLLEAGUE_EZSIGN = "eColleagueEzsign";
  @SerializedName(SERIALIZED_NAME_E_COLLEAGUE_EZSIGN)
  @javax.annotation.Nonnull
  private FieldEColleagueEzsign eColleagueEzsign;

  public static final String SERIALIZED_NAME_E_COLLEAGUE_REALESTATEINPROGRESS = "eColleagueRealestateinprogress";
  @SerializedName(SERIALIZED_NAME_E_COLLEAGUE_REALESTATEINPROGRESS)
  @javax.annotation.Nonnull
  private FieldEColleagueRealestateinprogess eColleagueRealestateinprogress;

  public ColleagueRequestV2() {
  }

  public ColleagueRequestV2 pkiColleagueID(@javax.annotation.Nullable Integer pkiColleagueID) {
    this.pkiColleagueID = pkiColleagueID;
    return this;
  }

  /**
   * The unique ID of the Colleague
   * minimum: 0
   * maximum: 65535
   * @return pkiColleagueID
   */
  @javax.annotation.Nullable
  public Integer getPkiColleagueID() {
    return pkiColleagueID;
  }

  public void setPkiColleagueID(@javax.annotation.Nullable Integer pkiColleagueID) {
    this.pkiColleagueID = pkiColleagueID;
  }


  public ColleagueRequestV2 fkiUserID(@javax.annotation.Nonnull Integer fkiUserID) {
    this.fkiUserID = fkiUserID;
    return this;
  }

  /**
   * The unique ID of the User
   * minimum: 0
   * @return fkiUserID
   */
  @javax.annotation.Nonnull
  public Integer getFkiUserID() {
    return fkiUserID;
  }

  public void setFkiUserID(@javax.annotation.Nonnull Integer fkiUserID) {
    this.fkiUserID = fkiUserID;
  }


  public ColleagueRequestV2 fkiUserIDColleague(@javax.annotation.Nonnull Integer fkiUserIDColleague) {
    this.fkiUserIDColleague = fkiUserIDColleague;
    return this;
  }

  /**
   * The unique ID of the User
   * minimum: 0
   * @return fkiUserIDColleague
   */
  @javax.annotation.Nonnull
  public Integer getFkiUserIDColleague() {
    return fkiUserIDColleague;
  }

  public void setFkiUserIDColleague(@javax.annotation.Nonnull Integer fkiUserIDColleague) {
    this.fkiUserIDColleague = fkiUserIDColleague;
  }


  public ColleagueRequestV2 bColleagueEzsignemail(@javax.annotation.Nonnull Boolean bColleagueEzsignemail) {
    this.bColleagueEzsignemail = bColleagueEzsignemail;
    return this;
  }

  /**
   * Whether the email can be used by the cloning user in Ezsign
   * @return bColleagueEzsignemail
   */
  @javax.annotation.Nonnull
  public Boolean getbColleagueEzsignemail() {
    return bColleagueEzsignemail;
  }

  public void setbColleagueEzsignemail(@javax.annotation.Nonnull Boolean bColleagueEzsignemail) {
    this.bColleagueEzsignemail = bColleagueEzsignemail;
  }


  public ColleagueRequestV2 bColleagueFinancial(@javax.annotation.Nonnull Boolean bColleagueFinancial) {
    this.bColleagueFinancial = bColleagueFinancial;
    return this;
  }

  /**
   * Whether the cloning user has access to the financial
   * @return bColleagueFinancial
   */
  @javax.annotation.Nonnull
  public Boolean getbColleagueFinancial() {
    return bColleagueFinancial;
  }

  public void setbColleagueFinancial(@javax.annotation.Nonnull Boolean bColleagueFinancial) {
    this.bColleagueFinancial = bColleagueFinancial;
  }


  public ColleagueRequestV2 bColleagueUsecloneemail(@javax.annotation.Nonnull Boolean bColleagueUsecloneemail) {
    this.bColleagueUsecloneemail = bColleagueUsecloneemail;
    return this;
  }

  /**
   * Whether the cloning user has access to the cloned user email to send communications
   * @return bColleagueUsecloneemail
   */
  @javax.annotation.Nonnull
  public Boolean getbColleagueUsecloneemail() {
    return bColleagueUsecloneemail;
  }

  public void setbColleagueUsecloneemail(@javax.annotation.Nonnull Boolean bColleagueUsecloneemail) {
    this.bColleagueUsecloneemail = bColleagueUsecloneemail;
  }


  public ColleagueRequestV2 bColleagueAttachment(@javax.annotation.Nonnull Boolean bColleagueAttachment) {
    this.bColleagueAttachment = bColleagueAttachment;
    return this;
  }

  /**
   * Whether the cloning user has access to the attachment
   * @return bColleagueAttachment
   */
  @javax.annotation.Nonnull
  public Boolean getbColleagueAttachment() {
    return bColleagueAttachment;
  }

  public void setbColleagueAttachment(@javax.annotation.Nonnull Boolean bColleagueAttachment) {
    this.bColleagueAttachment = bColleagueAttachment;
  }


  public ColleagueRequestV2 bColleagueCanafe(@javax.annotation.Nonnull Boolean bColleagueCanafe) {
    this.bColleagueCanafe = bColleagueCanafe;
    return this;
  }

  /**
   * Whether the cloning user has access to canafe
   * @return bColleagueCanafe
   */
  @javax.annotation.Nonnull
  public Boolean getbColleagueCanafe() {
    return bColleagueCanafe;
  }

  public void setbColleagueCanafe(@javax.annotation.Nonnull Boolean bColleagueCanafe) {
    this.bColleagueCanafe = bColleagueCanafe;
  }


  public ColleagueRequestV2 bColleaguePermission(@javax.annotation.Nonnull Boolean bColleaguePermission) {
    this.bColleaguePermission = bColleaguePermission;
    return this;
  }

  /**
   * Whether the cloning user copies the permission of the cloned user
   * @return bColleaguePermission
   */
  @javax.annotation.Nonnull
  public Boolean getbColleaguePermission() {
    return bColleaguePermission;
  }

  public void setbColleaguePermission(@javax.annotation.Nonnull Boolean bColleaguePermission) {
    this.bColleaguePermission = bColleaguePermission;
  }


  public ColleagueRequestV2 bColleagueRealestatecompleted(@javax.annotation.Nonnull Boolean bColleagueRealestatecompleted) {
    this.bColleagueRealestatecompleted = bColleagueRealestatecompleted;
    return this;
  }

  /**
   * Whether if the cloning user has access to the completed folders in real estate
   * @return bColleagueRealestatecompleted
   */
  @javax.annotation.Nonnull
  public Boolean getbColleagueRealestatecompleted() {
    return bColleagueRealestatecompleted;
  }

  public void setbColleagueRealestatecompleted(@javax.annotation.Nonnull Boolean bColleagueRealestatecompleted) {
    this.bColleagueRealestatecompleted = bColleagueRealestatecompleted;
  }


  public ColleagueRequestV2 dtColleagueFrom(@javax.annotation.Nullable String dtColleagueFrom) {
    this.dtColleagueFrom = dtColleagueFrom;
    return this;
  }

  /**
   * The from of the Colleague
   * @return dtColleagueFrom
   */
  @javax.annotation.Nullable
  public String getDtColleagueFrom() {
    return dtColleagueFrom;
  }

  public void setDtColleagueFrom(@javax.annotation.Nullable String dtColleagueFrom) {
    this.dtColleagueFrom = dtColleagueFrom;
  }


  public ColleagueRequestV2 dtColleagueTo(@javax.annotation.Nullable String dtColleagueTo) {
    this.dtColleagueTo = dtColleagueTo;
    return this;
  }

  /**
   * The to of the Colleague
   * @return dtColleagueTo
   */
  @javax.annotation.Nullable
  public String getDtColleagueTo() {
    return dtColleagueTo;
  }

  public void setDtColleagueTo(@javax.annotation.Nullable String dtColleagueTo) {
    this.dtColleagueTo = dtColleagueTo;
  }


  public ColleagueRequestV2 eColleagueEzsign(@javax.annotation.Nonnull FieldEColleagueEzsign eColleagueEzsign) {
    this.eColleagueEzsign = eColleagueEzsign;
    return this;
  }

  /**
   * Get eColleagueEzsign
   * @return eColleagueEzsign
   */
  @javax.annotation.Nonnull
  public FieldEColleagueEzsign geteColleagueEzsign() {
    return eColleagueEzsign;
  }

  public void seteColleagueEzsign(@javax.annotation.Nonnull FieldEColleagueEzsign eColleagueEzsign) {
    this.eColleagueEzsign = eColleagueEzsign;
  }


  public ColleagueRequestV2 eColleagueRealestateinprogress(@javax.annotation.Nonnull FieldEColleagueRealestateinprogess eColleagueRealestateinprogress) {
    this.eColleagueRealestateinprogress = eColleagueRealestateinprogress;
    return this;
  }

  /**
   * Get eColleagueRealestateinprogress
   * @return eColleagueRealestateinprogress
   */
  @javax.annotation.Nonnull
  public FieldEColleagueRealestateinprogess geteColleagueRealestateinprogress() {
    return eColleagueRealestateinprogress;
  }

  public void seteColleagueRealestateinprogress(@javax.annotation.Nonnull FieldEColleagueRealestateinprogess eColleagueRealestateinprogress) {
    this.eColleagueRealestateinprogress = eColleagueRealestateinprogress;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ColleagueRequestV2 colleagueRequestV2 = (ColleagueRequestV2) o;
    return Objects.equals(this.pkiColleagueID, colleagueRequestV2.pkiColleagueID) &&
        Objects.equals(this.fkiUserID, colleagueRequestV2.fkiUserID) &&
        Objects.equals(this.fkiUserIDColleague, colleagueRequestV2.fkiUserIDColleague) &&
        Objects.equals(this.bColleagueEzsignemail, colleagueRequestV2.bColleagueEzsignemail) &&
        Objects.equals(this.bColleagueFinancial, colleagueRequestV2.bColleagueFinancial) &&
        Objects.equals(this.bColleagueUsecloneemail, colleagueRequestV2.bColleagueUsecloneemail) &&
        Objects.equals(this.bColleagueAttachment, colleagueRequestV2.bColleagueAttachment) &&
        Objects.equals(this.bColleagueCanafe, colleagueRequestV2.bColleagueCanafe) &&
        Objects.equals(this.bColleaguePermission, colleagueRequestV2.bColleaguePermission) &&
        Objects.equals(this.bColleagueRealestatecompleted, colleagueRequestV2.bColleagueRealestatecompleted) &&
        Objects.equals(this.dtColleagueFrom, colleagueRequestV2.dtColleagueFrom) &&
        Objects.equals(this.dtColleagueTo, colleagueRequestV2.dtColleagueTo) &&
        Objects.equals(this.eColleagueEzsign, colleagueRequestV2.eColleagueEzsign) &&
        Objects.equals(this.eColleagueRealestateinprogress, colleagueRequestV2.eColleagueRealestateinprogress);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pkiColleagueID, fkiUserID, fkiUserIDColleague, bColleagueEzsignemail, bColleagueFinancial, bColleagueUsecloneemail, bColleagueAttachment, bColleagueCanafe, bColleaguePermission, bColleagueRealestatecompleted, dtColleagueFrom, dtColleagueTo, eColleagueEzsign, eColleagueRealestateinprogress);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ColleagueRequestV2 {\n");
    sb.append("    pkiColleagueID: ").append(toIndentedString(pkiColleagueID)).append("\n");
    sb.append("    fkiUserID: ").append(toIndentedString(fkiUserID)).append("\n");
    sb.append("    fkiUserIDColleague: ").append(toIndentedString(fkiUserIDColleague)).append("\n");
    sb.append("    bColleagueEzsignemail: ").append(toIndentedString(bColleagueEzsignemail)).append("\n");
    sb.append("    bColleagueFinancial: ").append(toIndentedString(bColleagueFinancial)).append("\n");
    sb.append("    bColleagueUsecloneemail: ").append(toIndentedString(bColleagueUsecloneemail)).append("\n");
    sb.append("    bColleagueAttachment: ").append(toIndentedString(bColleagueAttachment)).append("\n");
    sb.append("    bColleagueCanafe: ").append(toIndentedString(bColleagueCanafe)).append("\n");
    sb.append("    bColleaguePermission: ").append(toIndentedString(bColleaguePermission)).append("\n");
    sb.append("    bColleagueRealestatecompleted: ").append(toIndentedString(bColleagueRealestatecompleted)).append("\n");
    sb.append("    dtColleagueFrom: ").append(toIndentedString(dtColleagueFrom)).append("\n");
    sb.append("    dtColleagueTo: ").append(toIndentedString(dtColleagueTo)).append("\n");
    sb.append("    eColleagueEzsign: ").append(toIndentedString(eColleagueEzsign)).append("\n");
    sb.append("    eColleagueRealestateinprogress: ").append(toIndentedString(eColleagueRealestateinprogress)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pkiColleagueID");
    openapiFields.add("fkiUserID");
    openapiFields.add("fkiUserIDColleague");
    openapiFields.add("bColleagueEzsignemail");
    openapiFields.add("bColleagueFinancial");
    openapiFields.add("bColleagueUsecloneemail");
    openapiFields.add("bColleagueAttachment");
    openapiFields.add("bColleagueCanafe");
    openapiFields.add("bColleaguePermission");
    openapiFields.add("bColleagueRealestatecompleted");
    openapiFields.add("dtColleagueFrom");
    openapiFields.add("dtColleagueTo");
    openapiFields.add("eColleagueEzsign");
    openapiFields.add("eColleagueRealestateinprogress");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("fkiUserID");
    openapiRequiredFields.add("fkiUserIDColleague");
    openapiRequiredFields.add("bColleagueEzsignemail");
    openapiRequiredFields.add("bColleagueFinancial");
    openapiRequiredFields.add("bColleagueUsecloneemail");
    openapiRequiredFields.add("bColleagueAttachment");
    openapiRequiredFields.add("bColleagueCanafe");
    openapiRequiredFields.add("bColleaguePermission");
    openapiRequiredFields.add("bColleagueRealestatecompleted");
    openapiRequiredFields.add("eColleagueEzsign");
    openapiRequiredFields.add("eColleagueRealestateinprogress");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ColleagueRequestV2
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ColleagueRequestV2.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ColleagueRequestV2 is not found in the empty JSON string", ColleagueRequestV2.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ColleagueRequestV2.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ColleagueRequestV2` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ColleagueRequestV2.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("dtColleagueFrom") != null && !jsonObj.get("dtColleagueFrom").isJsonNull()) && !jsonObj.get("dtColleagueFrom").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dtColleagueFrom` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dtColleagueFrom").toString()));
      }
      if ((jsonObj.get("dtColleagueTo") != null && !jsonObj.get("dtColleagueTo").isJsonNull()) && !jsonObj.get("dtColleagueTo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dtColleagueTo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dtColleagueTo").toString()));
      }
      // validate the required field `eColleagueEzsign`
      FieldEColleagueEzsign.validateJsonElement(jsonObj.get("eColleagueEzsign"));
      // validate the required field `eColleagueRealestateinprogress`
      FieldEColleagueRealestateinprogess.validateJsonElement(jsonObj.get("eColleagueRealestateinprogress"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ColleagueRequestV2.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ColleagueRequestV2' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ColleagueRequestV2> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ColleagueRequestV2.class));

       return (TypeAdapter<T>) new TypeAdapter<ColleagueRequestV2>() {
           @Override
           public void write(JsonWriter out, ColleagueRequestV2 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ColleagueRequestV2 read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ColleagueRequestV2 given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ColleagueRequestV2
   * @throws IOException if the JSON string is invalid with respect to ColleagueRequestV2
   */
  public static ColleagueRequestV2 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ColleagueRequestV2.class);
  }

  /**
   * Convert an instance of ColleagueRequestV2 to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

