/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * A Usergroupmembership Object
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-17T15:03:32.455495633Z[Etc/UTC]", comments = "Generator version: 7.10.0")
public class UsergroupmembershipRequest {
  public static final String SERIALIZED_NAME_PKI_USERGROUPMEMBERSHIP_I_D = "pkiUsergroupmembershipID";
  @SerializedName(SERIALIZED_NAME_PKI_USERGROUPMEMBERSHIP_I_D)
  @javax.annotation.Nullable
  private Integer pkiUsergroupmembershipID;

  public static final String SERIALIZED_NAME_FKI_USERGROUP_I_D = "fkiUsergroupID";
  @SerializedName(SERIALIZED_NAME_FKI_USERGROUP_I_D)
  @javax.annotation.Nonnull
  private Integer fkiUsergroupID;

  public static final String SERIALIZED_NAME_FKI_USER_I_D = "fkiUserID";
  @SerializedName(SERIALIZED_NAME_FKI_USER_I_D)
  @javax.annotation.Nullable
  private Integer fkiUserID;

  public static final String SERIALIZED_NAME_FKI_USERGROUPEXTERNAL_I_D = "fkiUsergroupexternalID";
  @SerializedName(SERIALIZED_NAME_FKI_USERGROUPEXTERNAL_I_D)
  @javax.annotation.Nullable
  private Integer fkiUsergroupexternalID;

  public UsergroupmembershipRequest() {
  }

  public UsergroupmembershipRequest pkiUsergroupmembershipID(@javax.annotation.Nullable Integer pkiUsergroupmembershipID) {
    this.pkiUsergroupmembershipID = pkiUsergroupmembershipID;
    return this;
  }

  /**
   * The unique ID of the Usergroupmembership
   * minimum: 0
   * maximum: 65535
   * @return pkiUsergroupmembershipID
   */
  @javax.annotation.Nullable
  public Integer getPkiUsergroupmembershipID() {
    return pkiUsergroupmembershipID;
  }

  public void setPkiUsergroupmembershipID(@javax.annotation.Nullable Integer pkiUsergroupmembershipID) {
    this.pkiUsergroupmembershipID = pkiUsergroupmembershipID;
  }


  public UsergroupmembershipRequest fkiUsergroupID(@javax.annotation.Nonnull Integer fkiUsergroupID) {
    this.fkiUsergroupID = fkiUsergroupID;
    return this;
  }

  /**
   * The unique ID of the Usergroup
   * minimum: 0
   * maximum: 255
   * @return fkiUsergroupID
   */
  @javax.annotation.Nonnull
  public Integer getFkiUsergroupID() {
    return fkiUsergroupID;
  }

  public void setFkiUsergroupID(@javax.annotation.Nonnull Integer fkiUsergroupID) {
    this.fkiUsergroupID = fkiUsergroupID;
  }


  public UsergroupmembershipRequest fkiUserID(@javax.annotation.Nullable Integer fkiUserID) {
    this.fkiUserID = fkiUserID;
    return this;
  }

  /**
   * The unique ID of the User
   * minimum: 0
   * @return fkiUserID
   */
  @javax.annotation.Nullable
  public Integer getFkiUserID() {
    return fkiUserID;
  }

  public void setFkiUserID(@javax.annotation.Nullable Integer fkiUserID) {
    this.fkiUserID = fkiUserID;
  }


  public UsergroupmembershipRequest fkiUsergroupexternalID(@javax.annotation.Nullable Integer fkiUsergroupexternalID) {
    this.fkiUsergroupexternalID = fkiUsergroupexternalID;
    return this;
  }

  /**
   * The unique ID of the Usergroupexternal
   * minimum: 0
   * maximum: 255
   * @return fkiUsergroupexternalID
   */
  @javax.annotation.Nullable
  public Integer getFkiUsergroupexternalID() {
    return fkiUsergroupexternalID;
  }

  public void setFkiUsergroupexternalID(@javax.annotation.Nullable Integer fkiUsergroupexternalID) {
    this.fkiUsergroupexternalID = fkiUsergroupexternalID;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UsergroupmembershipRequest usergroupmembershipRequest = (UsergroupmembershipRequest) o;
    return Objects.equals(this.pkiUsergroupmembershipID, usergroupmembershipRequest.pkiUsergroupmembershipID) &&
        Objects.equals(this.fkiUsergroupID, usergroupmembershipRequest.fkiUsergroupID) &&
        Objects.equals(this.fkiUserID, usergroupmembershipRequest.fkiUserID) &&
        Objects.equals(this.fkiUsergroupexternalID, usergroupmembershipRequest.fkiUsergroupexternalID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pkiUsergroupmembershipID, fkiUsergroupID, fkiUserID, fkiUsergroupexternalID);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UsergroupmembershipRequest {\n");
    sb.append("    pkiUsergroupmembershipID: ").append(toIndentedString(pkiUsergroupmembershipID)).append("\n");
    sb.append("    fkiUsergroupID: ").append(toIndentedString(fkiUsergroupID)).append("\n");
    sb.append("    fkiUserID: ").append(toIndentedString(fkiUserID)).append("\n");
    sb.append("    fkiUsergroupexternalID: ").append(toIndentedString(fkiUsergroupexternalID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pkiUsergroupmembershipID");
    openapiFields.add("fkiUsergroupID");
    openapiFields.add("fkiUserID");
    openapiFields.add("fkiUsergroupexternalID");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("fkiUsergroupID");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UsergroupmembershipRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UsergroupmembershipRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UsergroupmembershipRequest is not found in the empty JSON string", UsergroupmembershipRequest.openapiRequiredFields.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }


  /**
   * Create an instance of UsergroupmembershipRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UsergroupmembershipRequest
   * @throws IOException if the JSON string is invalid with respect to UsergroupmembershipRequest
   */
  public static UsergroupmembershipRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UsergroupmembershipRequest.class);
  }

  /**
   * Convert an instance of UsergroupmembershipRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

