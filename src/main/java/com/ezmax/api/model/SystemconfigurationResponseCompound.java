/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.ezmax.api.model.FieldESystemconfigurationEzsign;
import com.ezmax.api.model.FieldESystemconfigurationLanguage1;
import com.ezmax.api.model.FieldESystemconfigurationLanguage2;
import com.ezmax.api.model.FieldESystemconfigurationNewexternaluseraction;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * A Systemconfiguration Object
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-10-03T18:15:42.334779247Z[Etc/UTC]")
public class SystemconfigurationResponseCompound {
  public static final String SERIALIZED_NAME_PKI_SYSTEMCONFIGURATION_I_D = "pkiSystemconfigurationID";
  @SerializedName(SERIALIZED_NAME_PKI_SYSTEMCONFIGURATION_I_D)
  private Integer pkiSystemconfigurationID;

  public static final String SERIALIZED_NAME_FKI_SYSTEMCONFIGURATIONTYPE_I_D = "fkiSystemconfigurationtypeID";
  @SerializedName(SERIALIZED_NAME_FKI_SYSTEMCONFIGURATIONTYPE_I_D)
  private Integer fkiSystemconfigurationtypeID;

  public static final String SERIALIZED_NAME_S_SYSTEMCONFIGURATIONTYPE_DESCRIPTION_X = "sSystemconfigurationtypeDescriptionX";
  @SerializedName(SERIALIZED_NAME_S_SYSTEMCONFIGURATIONTYPE_DESCRIPTION_X)
  private String sSystemconfigurationtypeDescriptionX;

  public static final String SERIALIZED_NAME_E_SYSTEMCONFIGURATION_NEWEXTERNALUSERACTION = "eSystemconfigurationNewexternaluseraction";
  @SerializedName(SERIALIZED_NAME_E_SYSTEMCONFIGURATION_NEWEXTERNALUSERACTION)
  private FieldESystemconfigurationNewexternaluseraction eSystemconfigurationNewexternaluseraction;

  public static final String SERIALIZED_NAME_E_SYSTEMCONFIGURATION_LANGUAGE1 = "eSystemconfigurationLanguage1";
  @SerializedName(SERIALIZED_NAME_E_SYSTEMCONFIGURATION_LANGUAGE1)
  private FieldESystemconfigurationLanguage1 eSystemconfigurationLanguage1;

  public static final String SERIALIZED_NAME_E_SYSTEMCONFIGURATION_LANGUAGE2 = "eSystemconfigurationLanguage2";
  @SerializedName(SERIALIZED_NAME_E_SYSTEMCONFIGURATION_LANGUAGE2)
  private FieldESystemconfigurationLanguage2 eSystemconfigurationLanguage2;

  public static final String SERIALIZED_NAME_E_SYSTEMCONFIGURATION_EZSIGN = "eSystemconfigurationEzsign";
  @SerializedName(SERIALIZED_NAME_E_SYSTEMCONFIGURATION_EZSIGN)
  private FieldESystemconfigurationEzsign eSystemconfigurationEzsign;

  public static final String SERIALIZED_NAME_B_SYSTEMCONFIGURATION_EZSIGNPERSONNAL = "bSystemconfigurationEzsignpersonnal";
  @SerializedName(SERIALIZED_NAME_B_SYSTEMCONFIGURATION_EZSIGNPERSONNAL)
  private Boolean bSystemconfigurationEzsignpersonnal;

  public static final String SERIALIZED_NAME_B_SYSTEMCONFIGURATION_SSPR = "bSystemconfigurationSspr";
  @SerializedName(SERIALIZED_NAME_B_SYSTEMCONFIGURATION_SSPR)
  private Boolean bSystemconfigurationSspr;

  public static final String SERIALIZED_NAME_DT_SYSTEMCONFIGURATION_READONLYEXPIRATIONSTART = "dtSystemconfigurationReadonlyexpirationstart";
  @SerializedName(SERIALIZED_NAME_DT_SYSTEMCONFIGURATION_READONLYEXPIRATIONSTART)
  private String dtSystemconfigurationReadonlyexpirationstart;

  public static final String SERIALIZED_NAME_DT_SYSTEMCONFIGURATION_READONLYEXPIRATIONEND = "dtSystemconfigurationReadonlyexpirationend";
  @SerializedName(SERIALIZED_NAME_DT_SYSTEMCONFIGURATION_READONLYEXPIRATIONEND)
  private String dtSystemconfigurationReadonlyexpirationend;

  public SystemconfigurationResponseCompound() {
  }

  public SystemconfigurationResponseCompound pkiSystemconfigurationID(Integer pkiSystemconfigurationID) {
    
    this.pkiSystemconfigurationID = pkiSystemconfigurationID;
    return this;
  }

   /**
   * The unique ID of the Systemconfiguration
   * minimum: 1
   * maximum: 1
   * @return pkiSystemconfigurationID
  **/
  @javax.annotation.Nonnull
  public Integer getPkiSystemconfigurationID() {
    return pkiSystemconfigurationID;
  }


  public void setPkiSystemconfigurationID(Integer pkiSystemconfigurationID) {
    this.pkiSystemconfigurationID = pkiSystemconfigurationID;
  }


  public SystemconfigurationResponseCompound fkiSystemconfigurationtypeID(Integer fkiSystemconfigurationtypeID) {
    
    this.fkiSystemconfigurationtypeID = fkiSystemconfigurationtypeID;
    return this;
  }

   /**
   * The unique ID of the Systemconfigurationtype
   * minimum: 1
   * @return fkiSystemconfigurationtypeID
  **/
  @javax.annotation.Nonnull
  public Integer getFkiSystemconfigurationtypeID() {
    return fkiSystemconfigurationtypeID;
  }


  public void setFkiSystemconfigurationtypeID(Integer fkiSystemconfigurationtypeID) {
    this.fkiSystemconfigurationtypeID = fkiSystemconfigurationtypeID;
  }


  public SystemconfigurationResponseCompound sSystemconfigurationtypeDescriptionX(String sSystemconfigurationtypeDescriptionX) {
    
    this.sSystemconfigurationtypeDescriptionX = sSystemconfigurationtypeDescriptionX;
    return this;
  }

   /**
   * The description of the Systemconfigurationtype in the language of the requester
   * @return sSystemconfigurationtypeDescriptionX
  **/
  @javax.annotation.Nonnull
  public String getsSystemconfigurationtypeDescriptionX() {
    return sSystemconfigurationtypeDescriptionX;
  }


  public void setsSystemconfigurationtypeDescriptionX(String sSystemconfigurationtypeDescriptionX) {
    this.sSystemconfigurationtypeDescriptionX = sSystemconfigurationtypeDescriptionX;
  }


  public SystemconfigurationResponseCompound eSystemconfigurationNewexternaluseraction(FieldESystemconfigurationNewexternaluseraction eSystemconfigurationNewexternaluseraction) {
    
    this.eSystemconfigurationNewexternaluseraction = eSystemconfigurationNewexternaluseraction;
    return this;
  }

   /**
   * Get eSystemconfigurationNewexternaluseraction
   * @return eSystemconfigurationNewexternaluseraction
  **/
  @javax.annotation.Nonnull
  public FieldESystemconfigurationNewexternaluseraction geteSystemconfigurationNewexternaluseraction() {
    return eSystemconfigurationNewexternaluseraction;
  }


  public void seteSystemconfigurationNewexternaluseraction(FieldESystemconfigurationNewexternaluseraction eSystemconfigurationNewexternaluseraction) {
    this.eSystemconfigurationNewexternaluseraction = eSystemconfigurationNewexternaluseraction;
  }


  public SystemconfigurationResponseCompound eSystemconfigurationLanguage1(FieldESystemconfigurationLanguage1 eSystemconfigurationLanguage1) {
    
    this.eSystemconfigurationLanguage1 = eSystemconfigurationLanguage1;
    return this;
  }

   /**
   * Get eSystemconfigurationLanguage1
   * @return eSystemconfigurationLanguage1
  **/
  @javax.annotation.Nonnull
  public FieldESystemconfigurationLanguage1 geteSystemconfigurationLanguage1() {
    return eSystemconfigurationLanguage1;
  }


  public void seteSystemconfigurationLanguage1(FieldESystemconfigurationLanguage1 eSystemconfigurationLanguage1) {
    this.eSystemconfigurationLanguage1 = eSystemconfigurationLanguage1;
  }


  public SystemconfigurationResponseCompound eSystemconfigurationLanguage2(FieldESystemconfigurationLanguage2 eSystemconfigurationLanguage2) {
    
    this.eSystemconfigurationLanguage2 = eSystemconfigurationLanguage2;
    return this;
  }

   /**
   * Get eSystemconfigurationLanguage2
   * @return eSystemconfigurationLanguage2
  **/
  @javax.annotation.Nonnull
  public FieldESystemconfigurationLanguage2 geteSystemconfigurationLanguage2() {
    return eSystemconfigurationLanguage2;
  }


  public void seteSystemconfigurationLanguage2(FieldESystemconfigurationLanguage2 eSystemconfigurationLanguage2) {
    this.eSystemconfigurationLanguage2 = eSystemconfigurationLanguage2;
  }


  public SystemconfigurationResponseCompound eSystemconfigurationEzsign(FieldESystemconfigurationEzsign eSystemconfigurationEzsign) {
    
    this.eSystemconfigurationEzsign = eSystemconfigurationEzsign;
    return this;
  }

   /**
   * Get eSystemconfigurationEzsign
   * @return eSystemconfigurationEzsign
  **/
  @javax.annotation.Nonnull
  public FieldESystemconfigurationEzsign geteSystemconfigurationEzsign() {
    return eSystemconfigurationEzsign;
  }


  public void seteSystemconfigurationEzsign(FieldESystemconfigurationEzsign eSystemconfigurationEzsign) {
    this.eSystemconfigurationEzsign = eSystemconfigurationEzsign;
  }


  public SystemconfigurationResponseCompound bSystemconfigurationEzsignpersonnal(Boolean bSystemconfigurationEzsignpersonnal) {
    
    this.bSystemconfigurationEzsignpersonnal = bSystemconfigurationEzsignpersonnal;
    return this;
  }

   /**
   * Whether if we allow the creation of personal files in eZsign
   * @return bSystemconfigurationEzsignpersonnal
  **/
  @javax.annotation.Nonnull
  public Boolean getbSystemconfigurationEzsignpersonnal() {
    return bSystemconfigurationEzsignpersonnal;
  }


  public void setbSystemconfigurationEzsignpersonnal(Boolean bSystemconfigurationEzsignpersonnal) {
    this.bSystemconfigurationEzsignpersonnal = bSystemconfigurationEzsignpersonnal;
  }


  public SystemconfigurationResponseCompound bSystemconfigurationSspr(Boolean bSystemconfigurationSspr) {
    
    this.bSystemconfigurationSspr = bSystemconfigurationSspr;
    return this;
  }

   /**
   * Whether if we allow SSPR
   * @return bSystemconfigurationSspr
  **/
  @javax.annotation.Nonnull
  public Boolean getbSystemconfigurationSspr() {
    return bSystemconfigurationSspr;
  }


  public void setbSystemconfigurationSspr(Boolean bSystemconfigurationSspr) {
    this.bSystemconfigurationSspr = bSystemconfigurationSspr;
  }


  public SystemconfigurationResponseCompound dtSystemconfigurationReadonlyexpirationstart(String dtSystemconfigurationReadonlyexpirationstart) {
    
    this.dtSystemconfigurationReadonlyexpirationstart = dtSystemconfigurationReadonlyexpirationstart;
    return this;
  }

   /**
   * The start date where the system will be in read only
   * @return dtSystemconfigurationReadonlyexpirationstart
  **/
  @javax.annotation.Nullable
  public String getDtSystemconfigurationReadonlyexpirationstart() {
    return dtSystemconfigurationReadonlyexpirationstart;
  }


  public void setDtSystemconfigurationReadonlyexpirationstart(String dtSystemconfigurationReadonlyexpirationstart) {
    this.dtSystemconfigurationReadonlyexpirationstart = dtSystemconfigurationReadonlyexpirationstart;
  }


  public SystemconfigurationResponseCompound dtSystemconfigurationReadonlyexpirationend(String dtSystemconfigurationReadonlyexpirationend) {
    
    this.dtSystemconfigurationReadonlyexpirationend = dtSystemconfigurationReadonlyexpirationend;
    return this;
  }

   /**
   * The end date where the system will be in read only
   * @return dtSystemconfigurationReadonlyexpirationend
  **/
  @javax.annotation.Nullable
  public String getDtSystemconfigurationReadonlyexpirationend() {
    return dtSystemconfigurationReadonlyexpirationend;
  }


  public void setDtSystemconfigurationReadonlyexpirationend(String dtSystemconfigurationReadonlyexpirationend) {
    this.dtSystemconfigurationReadonlyexpirationend = dtSystemconfigurationReadonlyexpirationend;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SystemconfigurationResponseCompound systemconfigurationResponseCompound = (SystemconfigurationResponseCompound) o;
    return Objects.equals(this.pkiSystemconfigurationID, systemconfigurationResponseCompound.pkiSystemconfigurationID) &&
        Objects.equals(this.fkiSystemconfigurationtypeID, systemconfigurationResponseCompound.fkiSystemconfigurationtypeID) &&
        Objects.equals(this.sSystemconfigurationtypeDescriptionX, systemconfigurationResponseCompound.sSystemconfigurationtypeDescriptionX) &&
        Objects.equals(this.eSystemconfigurationNewexternaluseraction, systemconfigurationResponseCompound.eSystemconfigurationNewexternaluseraction) &&
        Objects.equals(this.eSystemconfigurationLanguage1, systemconfigurationResponseCompound.eSystemconfigurationLanguage1) &&
        Objects.equals(this.eSystemconfigurationLanguage2, systemconfigurationResponseCompound.eSystemconfigurationLanguage2) &&
        Objects.equals(this.eSystemconfigurationEzsign, systemconfigurationResponseCompound.eSystemconfigurationEzsign) &&
        Objects.equals(this.bSystemconfigurationEzsignpersonnal, systemconfigurationResponseCompound.bSystemconfigurationEzsignpersonnal) &&
        Objects.equals(this.bSystemconfigurationSspr, systemconfigurationResponseCompound.bSystemconfigurationSspr) &&
        Objects.equals(this.dtSystemconfigurationReadonlyexpirationstart, systemconfigurationResponseCompound.dtSystemconfigurationReadonlyexpirationstart) &&
        Objects.equals(this.dtSystemconfigurationReadonlyexpirationend, systemconfigurationResponseCompound.dtSystemconfigurationReadonlyexpirationend);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pkiSystemconfigurationID, fkiSystemconfigurationtypeID, sSystemconfigurationtypeDescriptionX, eSystemconfigurationNewexternaluseraction, eSystemconfigurationLanguage1, eSystemconfigurationLanguage2, eSystemconfigurationEzsign, bSystemconfigurationEzsignpersonnal, bSystemconfigurationSspr, dtSystemconfigurationReadonlyexpirationstart, dtSystemconfigurationReadonlyexpirationend);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SystemconfigurationResponseCompound {\n");
    sb.append("    pkiSystemconfigurationID: ").append(toIndentedString(pkiSystemconfigurationID)).append("\n");
    sb.append("    fkiSystemconfigurationtypeID: ").append(toIndentedString(fkiSystemconfigurationtypeID)).append("\n");
    sb.append("    sSystemconfigurationtypeDescriptionX: ").append(toIndentedString(sSystemconfigurationtypeDescriptionX)).append("\n");
    sb.append("    eSystemconfigurationNewexternaluseraction: ").append(toIndentedString(eSystemconfigurationNewexternaluseraction)).append("\n");
    sb.append("    eSystemconfigurationLanguage1: ").append(toIndentedString(eSystemconfigurationLanguage1)).append("\n");
    sb.append("    eSystemconfigurationLanguage2: ").append(toIndentedString(eSystemconfigurationLanguage2)).append("\n");
    sb.append("    eSystemconfigurationEzsign: ").append(toIndentedString(eSystemconfigurationEzsign)).append("\n");
    sb.append("    bSystemconfigurationEzsignpersonnal: ").append(toIndentedString(bSystemconfigurationEzsignpersonnal)).append("\n");
    sb.append("    bSystemconfigurationSspr: ").append(toIndentedString(bSystemconfigurationSspr)).append("\n");
    sb.append("    dtSystemconfigurationReadonlyexpirationstart: ").append(toIndentedString(dtSystemconfigurationReadonlyexpirationstart)).append("\n");
    sb.append("    dtSystemconfigurationReadonlyexpirationend: ").append(toIndentedString(dtSystemconfigurationReadonlyexpirationend)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pkiSystemconfigurationID");
    openapiFields.add("fkiSystemconfigurationtypeID");
    openapiFields.add("sSystemconfigurationtypeDescriptionX");
    openapiFields.add("eSystemconfigurationNewexternaluseraction");
    openapiFields.add("eSystemconfigurationLanguage1");
    openapiFields.add("eSystemconfigurationLanguage2");
    openapiFields.add("eSystemconfigurationEzsign");
    openapiFields.add("bSystemconfigurationEzsignpersonnal");
    openapiFields.add("bSystemconfigurationSspr");
    openapiFields.add("dtSystemconfigurationReadonlyexpirationstart");
    openapiFields.add("dtSystemconfigurationReadonlyexpirationend");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("pkiSystemconfigurationID");
    openapiRequiredFields.add("fkiSystemconfigurationtypeID");
    openapiRequiredFields.add("sSystemconfigurationtypeDescriptionX");
    openapiRequiredFields.add("eSystemconfigurationNewexternaluseraction");
    openapiRequiredFields.add("eSystemconfigurationLanguage1");
    openapiRequiredFields.add("eSystemconfigurationLanguage2");
    openapiRequiredFields.add("eSystemconfigurationEzsign");
    openapiRequiredFields.add("bSystemconfigurationEzsignpersonnal");
    openapiRequiredFields.add("bSystemconfigurationSspr");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to SystemconfigurationResponseCompound
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SystemconfigurationResponseCompound.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SystemconfigurationResponseCompound is not found in the empty JSON string", SystemconfigurationResponseCompound.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SystemconfigurationResponseCompound.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SystemconfigurationResponseCompound` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : SystemconfigurationResponseCompound.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("sSystemconfigurationtypeDescriptionX").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sSystemconfigurationtypeDescriptionX` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sSystemconfigurationtypeDescriptionX").toString()));
      }
      if ((jsonObj.get("dtSystemconfigurationReadonlyexpirationstart") != null && !jsonObj.get("dtSystemconfigurationReadonlyexpirationstart").isJsonNull()) && !jsonObj.get("dtSystemconfigurationReadonlyexpirationstart").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dtSystemconfigurationReadonlyexpirationstart` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dtSystemconfigurationReadonlyexpirationstart").toString()));
      }
      if ((jsonObj.get("dtSystemconfigurationReadonlyexpirationend") != null && !jsonObj.get("dtSystemconfigurationReadonlyexpirationend").isJsonNull()) && !jsonObj.get("dtSystemconfigurationReadonlyexpirationend").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dtSystemconfigurationReadonlyexpirationend` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dtSystemconfigurationReadonlyexpirationend").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SystemconfigurationResponseCompound.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SystemconfigurationResponseCompound' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SystemconfigurationResponseCompound> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SystemconfigurationResponseCompound.class));

       return (TypeAdapter<T>) new TypeAdapter<SystemconfigurationResponseCompound>() {
           @Override
           public void write(JsonWriter out, SystemconfigurationResponseCompound value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SystemconfigurationResponseCompound read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SystemconfigurationResponseCompound given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SystemconfigurationResponseCompound
  * @throws IOException if the JSON string is invalid with respect to SystemconfigurationResponseCompound
  */
  public static SystemconfigurationResponseCompound fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SystemconfigurationResponseCompound.class);
  }

 /**
  * Convert an instance of SystemconfigurationResponseCompound to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

