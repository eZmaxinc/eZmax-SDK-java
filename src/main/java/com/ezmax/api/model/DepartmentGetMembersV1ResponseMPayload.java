/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.12
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * Payload for GET /1/object/department/{pkiDepartmentID}/getMembers
 */
@ApiModel(description = "Payload for GET /1/object/department/{pkiDepartmentID}/getMembers")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-10-26T18:14:16.878286Z[Etc/UTC]")
public class DepartmentGetMembersV1ResponseMPayload {
  public static final String SERIALIZED_NAME_A_FKI_AGENT_I_D = "a_fkiAgentID";
  @SerializedName(SERIALIZED_NAME_A_FKI_AGENT_I_D)
  private List<Integer> aFkiAgentID = null;

  public static final String SERIALIZED_NAME_A_FKI_BROKER_I_D = "a_fkiBrokerID";
  @SerializedName(SERIALIZED_NAME_A_FKI_BROKER_I_D)
  private List<Integer> aFkiBrokerID = null;

  public static final String SERIALIZED_NAME_A_FKI_CUSTOMER_I_D = "a_fkiCustomerID";
  @SerializedName(SERIALIZED_NAME_A_FKI_CUSTOMER_I_D)
  private List<Integer> aFkiCustomerID = null;

  public static final String SERIALIZED_NAME_A_FKI_EMPLOYEE_I_D = "a_fkiEmployeeID";
  @SerializedName(SERIALIZED_NAME_A_FKI_EMPLOYEE_I_D)
  private List<Integer> aFkiEmployeeID = null;

  public DepartmentGetMembersV1ResponseMPayload() { 
  }

  public DepartmentGetMembersV1ResponseMPayload aFkiAgentID(List<Integer> aFkiAgentID) {
    
    this.aFkiAgentID = aFkiAgentID;
    return this;
  }

  public DepartmentGetMembersV1ResponseMPayload addAFkiAgentIDItem(Integer aFkiAgentIDItem) {
    if (this.aFkiAgentID == null) {
      this.aFkiAgentID = new ArrayList<>();
    }
    this.aFkiAgentID.add(aFkiAgentIDItem);
    return this;
  }

   /**
   * Get aFkiAgentID
   * @return aFkiAgentID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Integer> getaFkiAgentID() {
    return aFkiAgentID;
  }


  public void setaFkiAgentID(List<Integer> aFkiAgentID) {
    this.aFkiAgentID = aFkiAgentID;
  }


  public DepartmentGetMembersV1ResponseMPayload aFkiBrokerID(List<Integer> aFkiBrokerID) {
    
    this.aFkiBrokerID = aFkiBrokerID;
    return this;
  }

  public DepartmentGetMembersV1ResponseMPayload addAFkiBrokerIDItem(Integer aFkiBrokerIDItem) {
    if (this.aFkiBrokerID == null) {
      this.aFkiBrokerID = new ArrayList<>();
    }
    this.aFkiBrokerID.add(aFkiBrokerIDItem);
    return this;
  }

   /**
   * Get aFkiBrokerID
   * @return aFkiBrokerID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Integer> getaFkiBrokerID() {
    return aFkiBrokerID;
  }


  public void setaFkiBrokerID(List<Integer> aFkiBrokerID) {
    this.aFkiBrokerID = aFkiBrokerID;
  }


  public DepartmentGetMembersV1ResponseMPayload aFkiCustomerID(List<Integer> aFkiCustomerID) {
    
    this.aFkiCustomerID = aFkiCustomerID;
    return this;
  }

  public DepartmentGetMembersV1ResponseMPayload addAFkiCustomerIDItem(Integer aFkiCustomerIDItem) {
    if (this.aFkiCustomerID == null) {
      this.aFkiCustomerID = new ArrayList<>();
    }
    this.aFkiCustomerID.add(aFkiCustomerIDItem);
    return this;
  }

   /**
   * Get aFkiCustomerID
   * @return aFkiCustomerID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Integer> getaFkiCustomerID() {
    return aFkiCustomerID;
  }


  public void setaFkiCustomerID(List<Integer> aFkiCustomerID) {
    this.aFkiCustomerID = aFkiCustomerID;
  }


  public DepartmentGetMembersV1ResponseMPayload aFkiEmployeeID(List<Integer> aFkiEmployeeID) {
    
    this.aFkiEmployeeID = aFkiEmployeeID;
    return this;
  }

  public DepartmentGetMembersV1ResponseMPayload addAFkiEmployeeIDItem(Integer aFkiEmployeeIDItem) {
    if (this.aFkiEmployeeID == null) {
      this.aFkiEmployeeID = new ArrayList<>();
    }
    this.aFkiEmployeeID.add(aFkiEmployeeIDItem);
    return this;
  }

   /**
   * Get aFkiEmployeeID
   * @return aFkiEmployeeID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Integer> getaFkiEmployeeID() {
    return aFkiEmployeeID;
  }


  public void setaFkiEmployeeID(List<Integer> aFkiEmployeeID) {
    this.aFkiEmployeeID = aFkiEmployeeID;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DepartmentGetMembersV1ResponseMPayload departmentGetMembersV1ResponseMPayload = (DepartmentGetMembersV1ResponseMPayload) o;
    return Objects.equals(this.aFkiAgentID, departmentGetMembersV1ResponseMPayload.aFkiAgentID) &&
        Objects.equals(this.aFkiBrokerID, departmentGetMembersV1ResponseMPayload.aFkiBrokerID) &&
        Objects.equals(this.aFkiCustomerID, departmentGetMembersV1ResponseMPayload.aFkiCustomerID) &&
        Objects.equals(this.aFkiEmployeeID, departmentGetMembersV1ResponseMPayload.aFkiEmployeeID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aFkiAgentID, aFkiBrokerID, aFkiCustomerID, aFkiEmployeeID);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DepartmentGetMembersV1ResponseMPayload {\n");
    sb.append("    aFkiAgentID: ").append(toIndentedString(aFkiAgentID)).append("\n");
    sb.append("    aFkiBrokerID: ").append(toIndentedString(aFkiBrokerID)).append("\n");
    sb.append("    aFkiCustomerID: ").append(toIndentedString(aFkiCustomerID)).append("\n");
    sb.append("    aFkiEmployeeID: ").append(toIndentedString(aFkiEmployeeID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("a_fkiAgentID");
    openapiFields.add("a_fkiBrokerID");
    openapiFields.add("a_fkiCustomerID");
    openapiFields.add("a_fkiEmployeeID");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to DepartmentGetMembersV1ResponseMPayload
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (DepartmentGetMembersV1ResponseMPayload.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in DepartmentGetMembersV1ResponseMPayload is not found in the empty JSON string", DepartmentGetMembersV1ResponseMPayload.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!DepartmentGetMembersV1ResponseMPayload.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DepartmentGetMembersV1ResponseMPayload` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // ensure the json data is an array
      if (jsonObj.get("a_fkiAgentID") != null && !jsonObj.get("a_fkiAgentID").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `a_fkiAgentID` to be an array in the JSON string but got `%s`", jsonObj.get("a_fkiAgentID").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("a_fkiBrokerID") != null && !jsonObj.get("a_fkiBrokerID").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `a_fkiBrokerID` to be an array in the JSON string but got `%s`", jsonObj.get("a_fkiBrokerID").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("a_fkiCustomerID") != null && !jsonObj.get("a_fkiCustomerID").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `a_fkiCustomerID` to be an array in the JSON string but got `%s`", jsonObj.get("a_fkiCustomerID").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("a_fkiEmployeeID") != null && !jsonObj.get("a_fkiEmployeeID").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `a_fkiEmployeeID` to be an array in the JSON string but got `%s`", jsonObj.get("a_fkiEmployeeID").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DepartmentGetMembersV1ResponseMPayload.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DepartmentGetMembersV1ResponseMPayload' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DepartmentGetMembersV1ResponseMPayload> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DepartmentGetMembersV1ResponseMPayload.class));

       return (TypeAdapter<T>) new TypeAdapter<DepartmentGetMembersV1ResponseMPayload>() {
           @Override
           public void write(JsonWriter out, DepartmentGetMembersV1ResponseMPayload value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DepartmentGetMembersV1ResponseMPayload read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of DepartmentGetMembersV1ResponseMPayload given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of DepartmentGetMembersV1ResponseMPayload
  * @throws IOException if the JSON string is invalid with respect to DepartmentGetMembersV1ResponseMPayload
  */
  public static DepartmentGetMembersV1ResponseMPayload fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DepartmentGetMembersV1ResponseMPayload.class);
  }

 /**
  * Convert an instance of DepartmentGetMembersV1ResponseMPayload to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

