/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * A Communicationattachment Object and children
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-05T14:47:58.834564157Z[Etc/UTC]", comments = "Generator version: 7.11.0")
public class CommunicationattachmentRequestCompound {
  public static final String SERIALIZED_NAME_PKI_COMMUNICATIONATTACHMENT_I_D = "pkiCommunicationattachmentID";
  @SerializedName(SERIALIZED_NAME_PKI_COMMUNICATIONATTACHMENT_I_D)
  @javax.annotation.Nullable
  private Integer pkiCommunicationattachmentID;

  public static final String SERIALIZED_NAME_FKI_ATTACHMENT_I_D = "fkiAttachmentID";
  @SerializedName(SERIALIZED_NAME_FKI_ATTACHMENT_I_D)
  @javax.annotation.Nullable
  private Integer fkiAttachmentID;

  public static final String SERIALIZED_NAME_FKI_INVOICE_I_D = "fkiInvoiceID";
  @SerializedName(SERIALIZED_NAME_FKI_INVOICE_I_D)
  @javax.annotation.Nullable
  private Integer fkiInvoiceID;

  public static final String SERIALIZED_NAME_FKI_SALARYPREPARATION_I_D = "fkiSalarypreparationID";
  @SerializedName(SERIALIZED_NAME_FKI_SALARYPREPARATION_I_D)
  @javax.annotation.Nullable
  private Integer fkiSalarypreparationID;

  public CommunicationattachmentRequestCompound() {
  }

  public CommunicationattachmentRequestCompound pkiCommunicationattachmentID(@javax.annotation.Nullable Integer pkiCommunicationattachmentID) {
    this.pkiCommunicationattachmentID = pkiCommunicationattachmentID;
    return this;
  }

  /**
   * The unique ID of the Communicationattachment
   * @return pkiCommunicationattachmentID
   */
  @javax.annotation.Nullable
  public Integer getPkiCommunicationattachmentID() {
    return pkiCommunicationattachmentID;
  }

  public void setPkiCommunicationattachmentID(@javax.annotation.Nullable Integer pkiCommunicationattachmentID) {
    this.pkiCommunicationattachmentID = pkiCommunicationattachmentID;
  }


  public CommunicationattachmentRequestCompound fkiAttachmentID(@javax.annotation.Nullable Integer fkiAttachmentID) {
    this.fkiAttachmentID = fkiAttachmentID;
    return this;
  }

  /**
   * The unique ID of the Attachment.
   * minimum: 0
   * @return fkiAttachmentID
   */
  @javax.annotation.Nullable
  public Integer getFkiAttachmentID() {
    return fkiAttachmentID;
  }

  public void setFkiAttachmentID(@javax.annotation.Nullable Integer fkiAttachmentID) {
    this.fkiAttachmentID = fkiAttachmentID;
  }


  public CommunicationattachmentRequestCompound fkiInvoiceID(@javax.annotation.Nullable Integer fkiInvoiceID) {
    this.fkiInvoiceID = fkiInvoiceID;
    return this;
  }

  /**
   * The unique ID of the Invoice.
   * minimum: 0
   * @return fkiInvoiceID
   */
  @javax.annotation.Nullable
  public Integer getFkiInvoiceID() {
    return fkiInvoiceID;
  }

  public void setFkiInvoiceID(@javax.annotation.Nullable Integer fkiInvoiceID) {
    this.fkiInvoiceID = fkiInvoiceID;
  }


  public CommunicationattachmentRequestCompound fkiSalarypreparationID(@javax.annotation.Nullable Integer fkiSalarypreparationID) {
    this.fkiSalarypreparationID = fkiSalarypreparationID;
    return this;
  }

  /**
   * The unique ID of the Salarypreparation.
   * minimum: 0
   * @return fkiSalarypreparationID
   */
  @javax.annotation.Nullable
  public Integer getFkiSalarypreparationID() {
    return fkiSalarypreparationID;
  }

  public void setFkiSalarypreparationID(@javax.annotation.Nullable Integer fkiSalarypreparationID) {
    this.fkiSalarypreparationID = fkiSalarypreparationID;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommunicationattachmentRequestCompound communicationattachmentRequestCompound = (CommunicationattachmentRequestCompound) o;
    return Objects.equals(this.pkiCommunicationattachmentID, communicationattachmentRequestCompound.pkiCommunicationattachmentID) &&
        Objects.equals(this.fkiAttachmentID, communicationattachmentRequestCompound.fkiAttachmentID) &&
        Objects.equals(this.fkiInvoiceID, communicationattachmentRequestCompound.fkiInvoiceID) &&
        Objects.equals(this.fkiSalarypreparationID, communicationattachmentRequestCompound.fkiSalarypreparationID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pkiCommunicationattachmentID, fkiAttachmentID, fkiInvoiceID, fkiSalarypreparationID);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommunicationattachmentRequestCompound {\n");
    sb.append("    pkiCommunicationattachmentID: ").append(toIndentedString(pkiCommunicationattachmentID)).append("\n");
    sb.append("    fkiAttachmentID: ").append(toIndentedString(fkiAttachmentID)).append("\n");
    sb.append("    fkiInvoiceID: ").append(toIndentedString(fkiInvoiceID)).append("\n");
    sb.append("    fkiSalarypreparationID: ").append(toIndentedString(fkiSalarypreparationID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pkiCommunicationattachmentID");
    openapiFields.add("fkiAttachmentID");
    openapiFields.add("fkiInvoiceID");
    openapiFields.add("fkiSalarypreparationID");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CommunicationattachmentRequestCompound
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CommunicationattachmentRequestCompound.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CommunicationattachmentRequestCompound is not found in the empty JSON string", CommunicationattachmentRequestCompound.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CommunicationattachmentRequestCompound.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CommunicationattachmentRequestCompound` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CommunicationattachmentRequestCompound.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CommunicationattachmentRequestCompound' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CommunicationattachmentRequestCompound> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CommunicationattachmentRequestCompound.class));

       return (TypeAdapter<T>) new TypeAdapter<CommunicationattachmentRequestCompound>() {
           @Override
           public void write(JsonWriter out, CommunicationattachmentRequestCompound value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CommunicationattachmentRequestCompound read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CommunicationattachmentRequestCompound given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CommunicationattachmentRequestCompound
   * @throws IOException if the JSON string is invalid with respect to CommunicationattachmentRequestCompound
   */
  public static CommunicationattachmentRequestCompound fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CommunicationattachmentRequestCompound.class);
  }

  /**
   * Convert an instance of CommunicationattachmentRequestCompound to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

