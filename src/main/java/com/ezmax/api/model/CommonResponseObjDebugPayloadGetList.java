/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.ezmax.api.model.CommonResponseFilter;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * This is a debug object containing debugging information on the actual function
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-14T22:02:49.990345163Z[Etc/UTC]", comments = "Generator version: 7.9.0")
public class CommonResponseObjDebugPayloadGetList {
  public static final String SERIALIZED_NAME_I_VERSION_MIN = "iVersionMin";
  @SerializedName(SERIALIZED_NAME_I_VERSION_MIN)
  private Integer iVersionMin;

  public static final String SERIALIZED_NAME_I_VERSION_MAX = "iVersionMax";
  @SerializedName(SERIALIZED_NAME_I_VERSION_MAX)
  private Integer iVersionMax;

  public static final String SERIALIZED_NAME_A_REQUIRED_PERMISSION = "a_RequiredPermission";
  @SerializedName(SERIALIZED_NAME_A_REQUIRED_PERMISSION)
  private List<Integer> aRequiredPermission = new ArrayList<>();

  public static final String SERIALIZED_NAME_B_VERSION_DEPRECATED = "bVersionDeprecated";
  @SerializedName(SERIALIZED_NAME_B_VERSION_DEPRECATED)
  private Boolean bVersionDeprecated;

  public static final String SERIALIZED_NAME_DT_RESPONSE_DATE = "dtResponseDate";
  @SerializedName(SERIALIZED_NAME_DT_RESPONSE_DATE)
  private String dtResponseDate;

  public static final String SERIALIZED_NAME_A_FILTER = "a_Filter";
  @SerializedName(SERIALIZED_NAME_A_FILTER)
  private CommonResponseFilter aFilter;

  public static final String SERIALIZED_NAME_A_ORDER_BY = "a_OrderBy";
  @SerializedName(SERIALIZED_NAME_A_ORDER_BY)
  private Map<String, String> aOrderBy = new HashMap<>();

  public static final String SERIALIZED_NAME_I_ROW_MAX = "iRowMax";
  @SerializedName(SERIALIZED_NAME_I_ROW_MAX)
  private Integer iRowMax;

  public static final String SERIALIZED_NAME_I_ROW_OFFSET = "iRowOffset";
  @SerializedName(SERIALIZED_NAME_I_ROW_OFFSET)
  private Integer iRowOffset = 0;

  public CommonResponseObjDebugPayloadGetList() {
  }

  public CommonResponseObjDebugPayloadGetList iVersionMin(Integer iVersionMin) {
    this.iVersionMin = iVersionMin;
    return this;
  }

  /**
   * The minimum version of the function that can be called
   * @return iVersionMin
   */
  @javax.annotation.Nonnull
  public Integer getiVersionMin() {
    return iVersionMin;
  }

  public void setiVersionMin(Integer iVersionMin) {
    this.iVersionMin = iVersionMin;
  }


  public CommonResponseObjDebugPayloadGetList iVersionMax(Integer iVersionMax) {
    this.iVersionMax = iVersionMax;
    return this;
  }

  /**
   * The maximum version of the function that can be called
   * @return iVersionMax
   */
  @javax.annotation.Nonnull
  public Integer getiVersionMax() {
    return iVersionMax;
  }

  public void setiVersionMax(Integer iVersionMax) {
    this.iVersionMax = iVersionMax;
  }


  public CommonResponseObjDebugPayloadGetList aRequiredPermission(List<Integer> aRequiredPermission) {
    this.aRequiredPermission = aRequiredPermission;
    return this;
  }

  public CommonResponseObjDebugPayloadGetList addARequiredPermissionItem(Integer aRequiredPermissionItem) {
    if (this.aRequiredPermission == null) {
      this.aRequiredPermission = new ArrayList<>();
    }
    this.aRequiredPermission.add(aRequiredPermissionItem);
    return this;
  }

  /**
   * An array of permissions required to access this function.  If the value \&quot;0\&quot; is present in the array, anyone can call this function.  You must have one of the permission to access the function. You don&#39;t need to have all of them.
   * @return aRequiredPermission
   */
  @javax.annotation.Nonnull
  public List<Integer> getaRequiredPermission() {
    return aRequiredPermission;
  }

  public void setaRequiredPermission(List<Integer> aRequiredPermission) {
    this.aRequiredPermission = aRequiredPermission;
  }


  public CommonResponseObjDebugPayloadGetList bVersionDeprecated(Boolean bVersionDeprecated) {
    this.bVersionDeprecated = bVersionDeprecated;
    return this;
  }

  /**
   * Wheter the current route is deprecated or not
   * @return bVersionDeprecated
   */
  @javax.annotation.Nonnull
  public Boolean getbVersionDeprecated() {
    return bVersionDeprecated;
  }

  public void setbVersionDeprecated(Boolean bVersionDeprecated) {
    this.bVersionDeprecated = bVersionDeprecated;
  }


  public CommonResponseObjDebugPayloadGetList dtResponseDate(String dtResponseDate) {
    this.dtResponseDate = dtResponseDate;
    return this;
  }

  /**
   * Represent a Date Time. The timezone is the one configured in the User&#39;s profile.
   * @return dtResponseDate
   */
  @javax.annotation.Nonnull
  public String getDtResponseDate() {
    return dtResponseDate;
  }

  public void setDtResponseDate(String dtResponseDate) {
    this.dtResponseDate = dtResponseDate;
  }


  public CommonResponseObjDebugPayloadGetList aFilter(CommonResponseFilter aFilter) {
    this.aFilter = aFilter;
    return this;
  }

  /**
   * Get aFilter
   * @return aFilter
   */
  @javax.annotation.Nonnull
  public CommonResponseFilter getaFilter() {
    return aFilter;
  }

  public void setaFilter(CommonResponseFilter aFilter) {
    this.aFilter = aFilter;
  }


  public CommonResponseObjDebugPayloadGetList aOrderBy(Map<String, String> aOrderBy) {
    this.aOrderBy = aOrderBy;
    return this;
  }

  public CommonResponseObjDebugPayloadGetList putAOrderByItem(String key, String aOrderByItem) {
    if (this.aOrderBy == null) {
      this.aOrderBy = new HashMap<>();
    }
    this.aOrderBy.put(key, aOrderByItem);
    return this;
  }

  /**
   * List of available values for *eOrderBy*
   * @return aOrderBy
   */
  @javax.annotation.Nonnull
  public Map<String, String> getaOrderBy() {
    return aOrderBy;
  }

  public void setaOrderBy(Map<String, String> aOrderBy) {
    this.aOrderBy = aOrderBy;
  }


  public CommonResponseObjDebugPayloadGetList iRowMax(Integer iRowMax) {
    this.iRowMax = iRowMax;
    return this;
  }

  /**
   * The maximum numbers of results to be returned.  When the content-type is **application/json** there is an implicit default of 10 000.  When it&#39;s **application/vnd.openxmlformats-officedocument.spreadsheetml.sheet** the is no implicit default so if you do not specify iRowMax, all records will be returned.
   * minimum: 1
   * maximum: 10000
   * @return iRowMax
   */
  @javax.annotation.Nonnull
  public Integer getiRowMax() {
    return iRowMax;
  }

  public void setiRowMax(Integer iRowMax) {
    this.iRowMax = iRowMax;
  }


  public CommonResponseObjDebugPayloadGetList iRowOffset(Integer iRowOffset) {
    this.iRowOffset = iRowOffset;
    return this;
  }

  /**
   * The starting element from where to start retrieving the results. For example if you started at iRowOffset&#x3D;0 and asked for iRowMax&#x3D;100, to get the next 100 results, you could specify iRowOffset&#x3D;100&amp;iRowMax&#x3D;100,
   * minimum: 0
   * @return iRowOffset
   */
  @javax.annotation.Nonnull
  public Integer getiRowOffset() {
    return iRowOffset;
  }

  public void setiRowOffset(Integer iRowOffset) {
    this.iRowOffset = iRowOffset;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommonResponseObjDebugPayloadGetList commonResponseObjDebugPayloadGetList = (CommonResponseObjDebugPayloadGetList) o;
    return Objects.equals(this.iVersionMin, commonResponseObjDebugPayloadGetList.iVersionMin) &&
        Objects.equals(this.iVersionMax, commonResponseObjDebugPayloadGetList.iVersionMax) &&
        Objects.equals(this.aRequiredPermission, commonResponseObjDebugPayloadGetList.aRequiredPermission) &&
        Objects.equals(this.bVersionDeprecated, commonResponseObjDebugPayloadGetList.bVersionDeprecated) &&
        Objects.equals(this.dtResponseDate, commonResponseObjDebugPayloadGetList.dtResponseDate) &&
        Objects.equals(this.aFilter, commonResponseObjDebugPayloadGetList.aFilter) &&
        Objects.equals(this.aOrderBy, commonResponseObjDebugPayloadGetList.aOrderBy) &&
        Objects.equals(this.iRowMax, commonResponseObjDebugPayloadGetList.iRowMax) &&
        Objects.equals(this.iRowOffset, commonResponseObjDebugPayloadGetList.iRowOffset);
  }

  @Override
  public int hashCode() {
    return Objects.hash(iVersionMin, iVersionMax, aRequiredPermission, bVersionDeprecated, dtResponseDate, aFilter, aOrderBy, iRowMax, iRowOffset);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommonResponseObjDebugPayloadGetList {\n");
    sb.append("    iVersionMin: ").append(toIndentedString(iVersionMin)).append("\n");
    sb.append("    iVersionMax: ").append(toIndentedString(iVersionMax)).append("\n");
    sb.append("    aRequiredPermission: ").append(toIndentedString(aRequiredPermission)).append("\n");
    sb.append("    bVersionDeprecated: ").append(toIndentedString(bVersionDeprecated)).append("\n");
    sb.append("    dtResponseDate: ").append(toIndentedString(dtResponseDate)).append("\n");
    sb.append("    aFilter: ").append(toIndentedString(aFilter)).append("\n");
    sb.append("    aOrderBy: ").append(toIndentedString(aOrderBy)).append("\n");
    sb.append("    iRowMax: ").append(toIndentedString(iRowMax)).append("\n");
    sb.append("    iRowOffset: ").append(toIndentedString(iRowOffset)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("iVersionMin");
    openapiFields.add("iVersionMax");
    openapiFields.add("a_RequiredPermission");
    openapiFields.add("bVersionDeprecated");
    openapiFields.add("dtResponseDate");
    openapiFields.add("a_Filter");
    openapiFields.add("a_OrderBy");
    openapiFields.add("iRowMax");
    openapiFields.add("iRowOffset");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("iVersionMin");
    openapiRequiredFields.add("iVersionMax");
    openapiRequiredFields.add("a_RequiredPermission");
    openapiRequiredFields.add("bVersionDeprecated");
    openapiRequiredFields.add("dtResponseDate");
    openapiRequiredFields.add("a_Filter");
    openapiRequiredFields.add("a_OrderBy");
    openapiRequiredFields.add("iRowMax");
    openapiRequiredFields.add("iRowOffset");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CommonResponseObjDebugPayloadGetList
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CommonResponseObjDebugPayloadGetList.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CommonResponseObjDebugPayloadGetList is not found in the empty JSON string", CommonResponseObjDebugPayloadGetList.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CommonResponseObjDebugPayloadGetList.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CommonResponseObjDebugPayloadGetList` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CommonResponseObjDebugPayloadGetList.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the required json array is present
      if (jsonObj.get("a_RequiredPermission") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("a_RequiredPermission").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `a_RequiredPermission` to be an array in the JSON string but got `%s`", jsonObj.get("a_RequiredPermission").toString()));
      }
      if (!jsonObj.get("dtResponseDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dtResponseDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dtResponseDate").toString()));
      }
      // validate the required field `a_Filter`
      CommonResponseFilter.validateJsonElement(jsonObj.get("a_Filter"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CommonResponseObjDebugPayloadGetList.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CommonResponseObjDebugPayloadGetList' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CommonResponseObjDebugPayloadGetList> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CommonResponseObjDebugPayloadGetList.class));

       return (TypeAdapter<T>) new TypeAdapter<CommonResponseObjDebugPayloadGetList>() {
           @Override
           public void write(JsonWriter out, CommonResponseObjDebugPayloadGetList value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CommonResponseObjDebugPayloadGetList read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CommonResponseObjDebugPayloadGetList given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CommonResponseObjDebugPayloadGetList
   * @throws IOException if the JSON string is invalid with respect to CommonResponseObjDebugPayloadGetList
   */
  public static CommonResponseObjDebugPayloadGetList fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CommonResponseObjDebugPayloadGetList.class);
  }

  /**
   * Convert an instance of CommonResponseObjDebugPayloadGetList to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

