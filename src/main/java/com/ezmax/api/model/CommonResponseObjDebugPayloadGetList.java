/*
 * eZmax API Definition
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.4
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.ezmax.api.model.CommonResponseFilter;
import com.ezmax.api.model.CommonResponseObjDebugPayload;
import com.ezmax.api.model.CommonResponseObjDebugPayloadGetListAllOf;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * This is a debug object containing debugging information on the actual function
 */
@ApiModel(description = "This is a debug object containing debugging information on the actual function")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-02-25T02:49:17.235270Z[Etc/UTC]")
public class CommonResponseObjDebugPayloadGetList {
  public static final String SERIALIZED_NAME_I_VERSION_MIN = "iVersionMin";
  @SerializedName(SERIALIZED_NAME_I_VERSION_MIN)
  private Integer iVersionMin;

  public static final String SERIALIZED_NAME_I_VERSION_MAX = "iVersionMax";
  @SerializedName(SERIALIZED_NAME_I_VERSION_MAX)
  private Integer iVersionMax;

  public static final String SERIALIZED_NAME_A_REQUIRED_PERMISSION = "a_RequiredPermission";
  @SerializedName(SERIALIZED_NAME_A_REQUIRED_PERMISSION)
  private List<Integer> aRequiredPermission = new ArrayList<>();

  public static final String SERIALIZED_NAME_A_FILTER = "a_Filter";
  @SerializedName(SERIALIZED_NAME_A_FILTER)
  private CommonResponseFilter aFilter;

  public static final String SERIALIZED_NAME_A_ORDER_BY = "a_OrderBy";
  @SerializedName(SERIALIZED_NAME_A_ORDER_BY)
  private Map<String, String> aOrderBy = new HashMap<>();

  public CommonResponseObjDebugPayloadGetList() { 
  }

  public CommonResponseObjDebugPayloadGetList iVersionMin(Integer iVersionMin) {
    
    this.iVersionMin = iVersionMin;
    return this;
  }

   /**
   * The minimum version of the function that can be called
   * @return iVersionMin
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1", required = true, value = "The minimum version of the function that can be called")

  public Integer getiVersionMin() {
    return iVersionMin;
  }


  public void setiVersionMin(Integer iVersionMin) {
    this.iVersionMin = iVersionMin;
  }


  public CommonResponseObjDebugPayloadGetList iVersionMax(Integer iVersionMax) {
    
    this.iVersionMax = iVersionMax;
    return this;
  }

   /**
   * The maximum version of the function that can be called
   * @return iVersionMax
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "2", required = true, value = "The maximum version of the function that can be called")

  public Integer getiVersionMax() {
    return iVersionMax;
  }


  public void setiVersionMax(Integer iVersionMax) {
    this.iVersionMax = iVersionMax;
  }


  public CommonResponseObjDebugPayloadGetList aRequiredPermission(List<Integer> aRequiredPermission) {
    
    this.aRequiredPermission = aRequiredPermission;
    return this;
  }

  public CommonResponseObjDebugPayloadGetList addARequiredPermissionItem(Integer aRequiredPermissionItem) {
    this.aRequiredPermission.add(aRequiredPermissionItem);
    return this;
  }

   /**
   * An array of permissions required to access this function.  If the value \&quot;0\&quot; is present in the array, anyone can call this function.  You must have one of the permission to access the function. You don&#39;t need to have all of them.
   * @return aRequiredPermission
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "An array of permissions required to access this function.  If the value \"0\" is present in the array, anyone can call this function.  You must have one of the permission to access the function. You don't need to have all of them.")

  public List<Integer> getaRequiredPermission() {
    return aRequiredPermission;
  }


  public void setaRequiredPermission(List<Integer> aRequiredPermission) {
    this.aRequiredPermission = aRequiredPermission;
  }


  public CommonResponseObjDebugPayloadGetList aFilter(CommonResponseFilter aFilter) {
    
    this.aFilter = aFilter;
    return this;
  }

   /**
   * Get aFilter
   * @return aFilter
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public CommonResponseFilter getaFilter() {
    return aFilter;
  }


  public void setaFilter(CommonResponseFilter aFilter) {
    this.aFilter = aFilter;
  }


  public CommonResponseObjDebugPayloadGetList aOrderBy(Map<String, String> aOrderBy) {
    
    this.aOrderBy = aOrderBy;
    return this;
  }

  public CommonResponseObjDebugPayloadGetList putAOrderByItem(String key, String aOrderByItem) {
    this.aOrderBy.put(key, aOrderByItem);
    return this;
  }

   /**
   * List of available values for *eOrderBy*
   * @return aOrderBy
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "List of available values for *eOrderBy*")

  public Map<String, String> getaOrderBy() {
    return aOrderBy;
  }


  public void setaOrderBy(Map<String, String> aOrderBy) {
    this.aOrderBy = aOrderBy;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommonResponseObjDebugPayloadGetList commonResponseObjDebugPayloadGetList = (CommonResponseObjDebugPayloadGetList) o;
    return Objects.equals(this.iVersionMin, commonResponseObjDebugPayloadGetList.iVersionMin) &&
        Objects.equals(this.iVersionMax, commonResponseObjDebugPayloadGetList.iVersionMax) &&
        Objects.equals(this.aRequiredPermission, commonResponseObjDebugPayloadGetList.aRequiredPermission) &&
        Objects.equals(this.aFilter, commonResponseObjDebugPayloadGetList.aFilter) &&
        Objects.equals(this.aOrderBy, commonResponseObjDebugPayloadGetList.aOrderBy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(iVersionMin, iVersionMax, aRequiredPermission, aFilter, aOrderBy);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommonResponseObjDebugPayloadGetList {\n");
    sb.append("    iVersionMin: ").append(toIndentedString(iVersionMin)).append("\n");
    sb.append("    iVersionMax: ").append(toIndentedString(iVersionMax)).append("\n");
    sb.append("    aRequiredPermission: ").append(toIndentedString(aRequiredPermission)).append("\n");
    sb.append("    aFilter: ").append(toIndentedString(aFilter)).append("\n");
    sb.append("    aOrderBy: ").append(toIndentedString(aOrderBy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("iVersionMin");
    openapiFields.add("iVersionMax");
    openapiFields.add("a_RequiredPermission");
    openapiFields.add("a_Filter");
    openapiFields.add("a_OrderBy");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("iVersionMin");
    openapiRequiredFields.add("iVersionMax");
    openapiRequiredFields.add("a_RequiredPermission");
    openapiRequiredFields.add("a_Filter");
    openapiRequiredFields.add("a_OrderBy");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CommonResponseObjDebugPayloadGetList
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (CommonResponseObjDebugPayloadGetList.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has reuqired fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in CommonResponseObjDebugPayloadGetList is not found in the empty JSON string", CommonResponseObjDebugPayloadGetList.openapiRequiredFields.toString()));
        }
      }
      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!CommonResponseObjDebugPayloadGetList.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CommonResponseObjDebugPayloadGetList` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CommonResponseObjDebugPayloadGetList.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      // validate the optional field `a_Filter`
      if (jsonObj.getAsJsonObject("a_Filter") != null) {
        CommonResponseFilter.validateJsonObject(jsonObj.getAsJsonObject("a_Filter"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CommonResponseObjDebugPayloadGetList.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CommonResponseObjDebugPayloadGetList' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CommonResponseObjDebugPayloadGetList> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CommonResponseObjDebugPayloadGetList.class));

       return (TypeAdapter<T>) new TypeAdapter<CommonResponseObjDebugPayloadGetList>() {
           @Override
           public void write(JsonWriter out, CommonResponseObjDebugPayloadGetList value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CommonResponseObjDebugPayloadGetList read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CommonResponseObjDebugPayloadGetList given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CommonResponseObjDebugPayloadGetList
  * @throws IOException if the JSON string is invalid with respect to CommonResponseObjDebugPayloadGetList
  */
  public static CommonResponseObjDebugPayloadGetList fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CommonResponseObjDebugPayloadGetList.class);
  }

 /**
  * Convert an instance of CommonResponseObjDebugPayloadGetList to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

