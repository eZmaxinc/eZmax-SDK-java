/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * The text validation
 */
@JsonAdapter(EnumTextvalidation.Adapter.class)
public enum EnumTextvalidation {
  
  NONE("None"),
  
  DATE_YYYY_MM_DD_("Date (YYYY-MM-DD)"),
  
  DATE_MM_DD_YYYY_("Date (MM/DD/YYYY)"),
  
  DATE_MM_DD_YY_("Date (MM/DD/YY)"),
  
  DATE_DD_MM_YYYY_("Date (DD/MM/YYYY)"),
  
  DATE_DD_MM_YY_("Date (DD/MM/YY)"),
  
  EMAIL("Email"),
  
  LETTERS("Letters"),
  
  NUMBERS("Numbers"),
  
  ZIP("Zip"),
  
  ZIP_4("Zip+4"),
  
  POSTALCODE("PostalCode"),
  
  CUSTOM("Custom");

  private String value;

  EnumTextvalidation(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static EnumTextvalidation fromValue(String value) {
    for (EnumTextvalidation b : EnumTextvalidation.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<EnumTextvalidation> {
    @Override
    public void write(final JsonWriter jsonWriter, final EnumTextvalidation enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public EnumTextvalidation read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return EnumTextvalidation.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    EnumTextvalidation.fromValue(value);
  }
}

