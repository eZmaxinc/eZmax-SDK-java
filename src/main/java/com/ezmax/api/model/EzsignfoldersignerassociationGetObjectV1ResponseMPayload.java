/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.12
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.ezmax.api.model.EzsignfoldersignerassociationResponseCompound;
import com.ezmax.api.model.EzsignfoldersignerassociationResponseCompoundUser;
import com.ezmax.api.model.EzsignsignerResponseCompound;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * Payload for GET /1/object/ezsignfoldersignerassociation/{pkiEzsignfoldersignerassociationID}
 */
@ApiModel(description = "Payload for GET /1/object/ezsignfoldersignerassociation/{pkiEzsignfoldersignerassociationID}")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-10-26T18:14:16.878286Z[Etc/UTC]")
public class EzsignfoldersignerassociationGetObjectV1ResponseMPayload {
  public static final String SERIALIZED_NAME_PKI_EZSIGNFOLDERSIGNERASSOCIATION_I_D = "pkiEzsignfoldersignerassociationID";
  @SerializedName(SERIALIZED_NAME_PKI_EZSIGNFOLDERSIGNERASSOCIATION_I_D)
  private Integer pkiEzsignfoldersignerassociationID;

  public static final String SERIALIZED_NAME_FKI_EZSIGNFOLDER_I_D = "fkiEzsignfolderID";
  @SerializedName(SERIALIZED_NAME_FKI_EZSIGNFOLDER_I_D)
  private Integer fkiEzsignfolderID;

  public static final String SERIALIZED_NAME_B_EZSIGNFOLDERSIGNERASSOCIATION_RECEIVECOPY = "bEzsignfoldersignerassociationReceivecopy";
  @SerializedName(SERIALIZED_NAME_B_EZSIGNFOLDERSIGNERASSOCIATION_RECEIVECOPY)
  private Boolean bEzsignfoldersignerassociationReceivecopy;

  public static final String SERIALIZED_NAME_T_EZSIGNFOLDERSIGNERASSOCIATION_MESSAGE = "tEzsignfoldersignerassociationMessage";
  @SerializedName(SERIALIZED_NAME_T_EZSIGNFOLDERSIGNERASSOCIATION_MESSAGE)
  private String tEzsignfoldersignerassociationMessage;

  public static final String SERIALIZED_NAME_OBJ_USER = "objUser";
  @SerializedName(SERIALIZED_NAME_OBJ_USER)
  private EzsignfoldersignerassociationResponseCompoundUser objUser;

  public static final String SERIALIZED_NAME_OBJ_EZSIGNSIGNER = "objEzsignsigner";
  @SerializedName(SERIALIZED_NAME_OBJ_EZSIGNSIGNER)
  private EzsignsignerResponseCompound objEzsignsigner;

  public EzsignfoldersignerassociationGetObjectV1ResponseMPayload() { 
  }

  public EzsignfoldersignerassociationGetObjectV1ResponseMPayload pkiEzsignfoldersignerassociationID(Integer pkiEzsignfoldersignerassociationID) {
    
    this.pkiEzsignfoldersignerassociationID = pkiEzsignfoldersignerassociationID;
    return this;
  }

   /**
   * The unique ID of the Ezsignfoldersignerassociation
   * minimum: 0
   * @return pkiEzsignfoldersignerassociationID
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "20", required = true, value = "The unique ID of the Ezsignfoldersignerassociation")

  public Integer getPkiEzsignfoldersignerassociationID() {
    return pkiEzsignfoldersignerassociationID;
  }


  public void setPkiEzsignfoldersignerassociationID(Integer pkiEzsignfoldersignerassociationID) {
    this.pkiEzsignfoldersignerassociationID = pkiEzsignfoldersignerassociationID;
  }


  public EzsignfoldersignerassociationGetObjectV1ResponseMPayload fkiEzsignfolderID(Integer fkiEzsignfolderID) {
    
    this.fkiEzsignfolderID = fkiEzsignfolderID;
    return this;
  }

   /**
   * The unique ID of the Ezsignfolder
   * minimum: 0
   * @return fkiEzsignfolderID
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "33", required = true, value = "The unique ID of the Ezsignfolder")

  public Integer getFkiEzsignfolderID() {
    return fkiEzsignfolderID;
  }


  public void setFkiEzsignfolderID(Integer fkiEzsignfolderID) {
    this.fkiEzsignfolderID = fkiEzsignfolderID;
  }


  public EzsignfoldersignerassociationGetObjectV1ResponseMPayload bEzsignfoldersignerassociationReceivecopy(Boolean bEzsignfoldersignerassociationReceivecopy) {
    
    this.bEzsignfoldersignerassociationReceivecopy = bEzsignfoldersignerassociationReceivecopy;
    return this;
  }

   /**
   * If this flag is true. The signatory will receive a copy of every signed Ezsigndocument even if it ain&#39;t required to sign the document.
   * @return bEzsignfoldersignerassociationReceivecopy
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "If this flag is true. The signatory will receive a copy of every signed Ezsigndocument even if it ain't required to sign the document.")

  public Boolean getbEzsignfoldersignerassociationReceivecopy() {
    return bEzsignfoldersignerassociationReceivecopy;
  }


  public void setbEzsignfoldersignerassociationReceivecopy(Boolean bEzsignfoldersignerassociationReceivecopy) {
    this.bEzsignfoldersignerassociationReceivecopy = bEzsignfoldersignerassociationReceivecopy;
  }


  public EzsignfoldersignerassociationGetObjectV1ResponseMPayload tEzsignfoldersignerassociationMessage(String tEzsignfoldersignerassociationMessage) {
    
    this.tEzsignfoldersignerassociationMessage = tEzsignfoldersignerassociationMessage;
    return this;
  }

   /**
   * A custom text message that will be added to the email sent.
   * @return tEzsignfoldersignerassociationMessage
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "Hi John,  This is the document I need you to review.  Could you sign it before Monday please.  Best Regards.  Mary", required = true, value = "A custom text message that will be added to the email sent.")

  public String gettEzsignfoldersignerassociationMessage() {
    return tEzsignfoldersignerassociationMessage;
  }


  public void settEzsignfoldersignerassociationMessage(String tEzsignfoldersignerassociationMessage) {
    this.tEzsignfoldersignerassociationMessage = tEzsignfoldersignerassociationMessage;
  }


  public EzsignfoldersignerassociationGetObjectV1ResponseMPayload objUser(EzsignfoldersignerassociationResponseCompoundUser objUser) {
    
    this.objUser = objUser;
    return this;
  }

   /**
   * Get objUser
   * @return objUser
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EzsignfoldersignerassociationResponseCompoundUser getObjUser() {
    return objUser;
  }


  public void setObjUser(EzsignfoldersignerassociationResponseCompoundUser objUser) {
    this.objUser = objUser;
  }


  public EzsignfoldersignerassociationGetObjectV1ResponseMPayload objEzsignsigner(EzsignsignerResponseCompound objEzsignsigner) {
    
    this.objEzsignsigner = objEzsignsigner;
    return this;
  }

   /**
   * Get objEzsignsigner
   * @return objEzsignsigner
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EzsignsignerResponseCompound getObjEzsignsigner() {
    return objEzsignsigner;
  }


  public void setObjEzsignsigner(EzsignsignerResponseCompound objEzsignsigner) {
    this.objEzsignsigner = objEzsignsigner;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EzsignfoldersignerassociationGetObjectV1ResponseMPayload ezsignfoldersignerassociationGetObjectV1ResponseMPayload = (EzsignfoldersignerassociationGetObjectV1ResponseMPayload) o;
    return Objects.equals(this.pkiEzsignfoldersignerassociationID, ezsignfoldersignerassociationGetObjectV1ResponseMPayload.pkiEzsignfoldersignerassociationID) &&
        Objects.equals(this.fkiEzsignfolderID, ezsignfoldersignerassociationGetObjectV1ResponseMPayload.fkiEzsignfolderID) &&
        Objects.equals(this.bEzsignfoldersignerassociationReceivecopy, ezsignfoldersignerassociationGetObjectV1ResponseMPayload.bEzsignfoldersignerassociationReceivecopy) &&
        Objects.equals(this.tEzsignfoldersignerassociationMessage, ezsignfoldersignerassociationGetObjectV1ResponseMPayload.tEzsignfoldersignerassociationMessage) &&
        Objects.equals(this.objUser, ezsignfoldersignerassociationGetObjectV1ResponseMPayload.objUser) &&
        Objects.equals(this.objEzsignsigner, ezsignfoldersignerassociationGetObjectV1ResponseMPayload.objEzsignsigner);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pkiEzsignfoldersignerassociationID, fkiEzsignfolderID, bEzsignfoldersignerassociationReceivecopy, tEzsignfoldersignerassociationMessage, objUser, objEzsignsigner);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EzsignfoldersignerassociationGetObjectV1ResponseMPayload {\n");
    sb.append("    pkiEzsignfoldersignerassociationID: ").append(toIndentedString(pkiEzsignfoldersignerassociationID)).append("\n");
    sb.append("    fkiEzsignfolderID: ").append(toIndentedString(fkiEzsignfolderID)).append("\n");
    sb.append("    bEzsignfoldersignerassociationReceivecopy: ").append(toIndentedString(bEzsignfoldersignerassociationReceivecopy)).append("\n");
    sb.append("    tEzsignfoldersignerassociationMessage: ").append(toIndentedString(tEzsignfoldersignerassociationMessage)).append("\n");
    sb.append("    objUser: ").append(toIndentedString(objUser)).append("\n");
    sb.append("    objEzsignsigner: ").append(toIndentedString(objEzsignsigner)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pkiEzsignfoldersignerassociationID");
    openapiFields.add("fkiEzsignfolderID");
    openapiFields.add("bEzsignfoldersignerassociationReceivecopy");
    openapiFields.add("tEzsignfoldersignerassociationMessage");
    openapiFields.add("objUser");
    openapiFields.add("objEzsignsigner");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("pkiEzsignfoldersignerassociationID");
    openapiRequiredFields.add("fkiEzsignfolderID");
    openapiRequiredFields.add("bEzsignfoldersignerassociationReceivecopy");
    openapiRequiredFields.add("tEzsignfoldersignerassociationMessage");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to EzsignfoldersignerassociationGetObjectV1ResponseMPayload
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (EzsignfoldersignerassociationGetObjectV1ResponseMPayload.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in EzsignfoldersignerassociationGetObjectV1ResponseMPayload is not found in the empty JSON string", EzsignfoldersignerassociationGetObjectV1ResponseMPayload.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!EzsignfoldersignerassociationGetObjectV1ResponseMPayload.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EzsignfoldersignerassociationGetObjectV1ResponseMPayload` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : EzsignfoldersignerassociationGetObjectV1ResponseMPayload.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (jsonObj.get("tEzsignfoldersignerassociationMessage") != null && !jsonObj.get("tEzsignfoldersignerassociationMessage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tEzsignfoldersignerassociationMessage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tEzsignfoldersignerassociationMessage").toString()));
      }
      // validate the optional field `objUser`
      if (jsonObj.getAsJsonObject("objUser") != null) {
        EzsignfoldersignerassociationResponseCompoundUser.validateJsonObject(jsonObj.getAsJsonObject("objUser"));
      }
      // validate the optional field `objEzsignsigner`
      if (jsonObj.getAsJsonObject("objEzsignsigner") != null) {
        EzsignsignerResponseCompound.validateJsonObject(jsonObj.getAsJsonObject("objEzsignsigner"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EzsignfoldersignerassociationGetObjectV1ResponseMPayload.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EzsignfoldersignerassociationGetObjectV1ResponseMPayload' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EzsignfoldersignerassociationGetObjectV1ResponseMPayload> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EzsignfoldersignerassociationGetObjectV1ResponseMPayload.class));

       return (TypeAdapter<T>) new TypeAdapter<EzsignfoldersignerassociationGetObjectV1ResponseMPayload>() {
           @Override
           public void write(JsonWriter out, EzsignfoldersignerassociationGetObjectV1ResponseMPayload value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EzsignfoldersignerassociationGetObjectV1ResponseMPayload read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EzsignfoldersignerassociationGetObjectV1ResponseMPayload given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EzsignfoldersignerassociationGetObjectV1ResponseMPayload
  * @throws IOException if the JSON string is invalid with respect to EzsignfoldersignerassociationGetObjectV1ResponseMPayload
  */
  public static EzsignfoldersignerassociationGetObjectV1ResponseMPayload fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EzsignfoldersignerassociationGetObjectV1ResponseMPayload.class);
  }

 /**
  * Convert an instance of EzsignfoldersignerassociationGetObjectV1ResponseMPayload to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

