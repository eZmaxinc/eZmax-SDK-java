/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.17
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.ezmax.api.model.EzsigntemplatesignaturecustomdateResponseCompound;
import com.ezmax.api.model.FieldEEzsigntemplatesignatureAttachmentnamesource;
import com.ezmax.api.model.FieldEEzsigntemplatesignatureFont;
import com.ezmax.api.model.FieldEEzsigntemplatesignatureTooltipposition;
import com.ezmax.api.model.FieldEEzsigntemplatesignatureType;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * Payload for GET /1/object/ezsigntemplatesignature/{pkiEzsigntemplatesignatureID}
 */
@ApiModel(description = "Payload for GET /1/object/ezsigntemplatesignature/{pkiEzsigntemplatesignatureID}")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-03T19:05:29.285156139Z[Etc/UTC]")
public class EzsigntemplatesignatureGetObjectV1ResponseMPayload {
  public static final String SERIALIZED_NAME_PKI_EZSIGNTEMPLATESIGNATURE_I_D = "pkiEzsigntemplatesignatureID";
  @SerializedName(SERIALIZED_NAME_PKI_EZSIGNTEMPLATESIGNATURE_I_D)
  private Integer pkiEzsigntemplatesignatureID;

  public static final String SERIALIZED_NAME_FKI_EZSIGNTEMPLATEDOCUMENT_I_D = "fkiEzsigntemplatedocumentID";
  @SerializedName(SERIALIZED_NAME_FKI_EZSIGNTEMPLATEDOCUMENT_I_D)
  private Integer fkiEzsigntemplatedocumentID;

  public static final String SERIALIZED_NAME_FKI_EZSIGNTEMPLATESIGNER_I_D = "fkiEzsigntemplatesignerID";
  @SerializedName(SERIALIZED_NAME_FKI_EZSIGNTEMPLATESIGNER_I_D)
  private Integer fkiEzsigntemplatesignerID;

  public static final String SERIALIZED_NAME_FKI_EZSIGNTEMPLATESIGNER_I_D_VALIDATION = "fkiEzsigntemplatesignerIDValidation";
  @SerializedName(SERIALIZED_NAME_FKI_EZSIGNTEMPLATESIGNER_I_D_VALIDATION)
  private Integer fkiEzsigntemplatesignerIDValidation;

  public static final String SERIALIZED_NAME_I_EZSIGNTEMPLATEDOCUMENTPAGE_PAGENUMBER = "iEzsigntemplatedocumentpagePagenumber";
  @SerializedName(SERIALIZED_NAME_I_EZSIGNTEMPLATEDOCUMENTPAGE_PAGENUMBER)
  private Integer iEzsigntemplatedocumentpagePagenumber;

  public static final String SERIALIZED_NAME_I_EZSIGNTEMPLATESIGNATURE_X = "iEzsigntemplatesignatureX";
  @SerializedName(SERIALIZED_NAME_I_EZSIGNTEMPLATESIGNATURE_X)
  private Integer iEzsigntemplatesignatureX;

  public static final String SERIALIZED_NAME_I_EZSIGNTEMPLATESIGNATURE_Y = "iEzsigntemplatesignatureY";
  @SerializedName(SERIALIZED_NAME_I_EZSIGNTEMPLATESIGNATURE_Y)
  private Integer iEzsigntemplatesignatureY;

  public static final String SERIALIZED_NAME_I_EZSIGNTEMPLATESIGNATURE_STEP = "iEzsigntemplatesignatureStep";
  @SerializedName(SERIALIZED_NAME_I_EZSIGNTEMPLATESIGNATURE_STEP)
  private Integer iEzsigntemplatesignatureStep;

  public static final String SERIALIZED_NAME_E_EZSIGNTEMPLATESIGNATURE_TYPE = "eEzsigntemplatesignatureType";
  @SerializedName(SERIALIZED_NAME_E_EZSIGNTEMPLATESIGNATURE_TYPE)
  private FieldEEzsigntemplatesignatureType eEzsigntemplatesignatureType;

  public static final String SERIALIZED_NAME_T_EZSIGNTEMPLATESIGNATURE_TOOLTIP = "tEzsigntemplatesignatureTooltip";
  @SerializedName(SERIALIZED_NAME_T_EZSIGNTEMPLATESIGNATURE_TOOLTIP)
  private String tEzsigntemplatesignatureTooltip;

  public static final String SERIALIZED_NAME_E_EZSIGNTEMPLATESIGNATURE_TOOLTIPPOSITION = "eEzsigntemplatesignatureTooltipposition";
  @SerializedName(SERIALIZED_NAME_E_EZSIGNTEMPLATESIGNATURE_TOOLTIPPOSITION)
  private FieldEEzsigntemplatesignatureTooltipposition eEzsigntemplatesignatureTooltipposition;

  public static final String SERIALIZED_NAME_E_EZSIGNTEMPLATESIGNATURE_FONT = "eEzsigntemplatesignatureFont";
  @SerializedName(SERIALIZED_NAME_E_EZSIGNTEMPLATESIGNATURE_FONT)
  private FieldEEzsigntemplatesignatureFont eEzsigntemplatesignatureFont;

  public static final String SERIALIZED_NAME_I_EZSIGNTEMPLATESIGNATURE_VALIDATIONSTEP = "iEzsigntemplatesignatureValidationstep";
  @SerializedName(SERIALIZED_NAME_I_EZSIGNTEMPLATESIGNATURE_VALIDATIONSTEP)
  private Integer iEzsigntemplatesignatureValidationstep;

  public static final String SERIALIZED_NAME_S_EZSIGNTEMPLATESIGNATURE_ATTACHMENTDESCRIPTION = "sEzsigntemplatesignatureAttachmentdescription";
  @SerializedName(SERIALIZED_NAME_S_EZSIGNTEMPLATESIGNATURE_ATTACHMENTDESCRIPTION)
  private String sEzsigntemplatesignatureAttachmentdescription;

  public static final String SERIALIZED_NAME_E_EZSIGNTEMPLATESIGNATURE_ATTACHMENTNAMESOURCE = "eEzsigntemplatesignatureAttachmentnamesource";
  @SerializedName(SERIALIZED_NAME_E_EZSIGNTEMPLATESIGNATURE_ATTACHMENTNAMESOURCE)
  private FieldEEzsigntemplatesignatureAttachmentnamesource eEzsigntemplatesignatureAttachmentnamesource;

  public static final String SERIALIZED_NAME_B_EZSIGNTEMPLATESIGNATURE_REQUIRED = "bEzsigntemplatesignatureRequired";
  @SerializedName(SERIALIZED_NAME_B_EZSIGNTEMPLATESIGNATURE_REQUIRED)
  private Boolean bEzsigntemplatesignatureRequired;

  public static final String SERIALIZED_NAME_B_EZSIGNTEMPLATESIGNATURE_CUSTOMDATE = "bEzsigntemplatesignatureCustomdate";
  @SerializedName(SERIALIZED_NAME_B_EZSIGNTEMPLATESIGNATURE_CUSTOMDATE)
  private Boolean bEzsigntemplatesignatureCustomdate;

  public static final String SERIALIZED_NAME_A_OBJ_EZSIGNTEMPLATESIGNATURECUSTOMDATE = "a_objEzsigntemplatesignaturecustomdate";
  @SerializedName(SERIALIZED_NAME_A_OBJ_EZSIGNTEMPLATESIGNATURECUSTOMDATE)
  private List<EzsigntemplatesignaturecustomdateResponseCompound> aObjEzsigntemplatesignaturecustomdate = null;

  public EzsigntemplatesignatureGetObjectV1ResponseMPayload() {
  }

  public EzsigntemplatesignatureGetObjectV1ResponseMPayload pkiEzsigntemplatesignatureID(Integer pkiEzsigntemplatesignatureID) {
    
    this.pkiEzsigntemplatesignatureID = pkiEzsigntemplatesignatureID;
    return this;
  }

   /**
   * The unique ID of the Ezsigntemplatesignature
   * minimum: 0
   * @return pkiEzsigntemplatesignatureID
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "99", required = true, value = "The unique ID of the Ezsigntemplatesignature")

  public Integer getPkiEzsigntemplatesignatureID() {
    return pkiEzsigntemplatesignatureID;
  }


  public void setPkiEzsigntemplatesignatureID(Integer pkiEzsigntemplatesignatureID) {
    this.pkiEzsigntemplatesignatureID = pkiEzsigntemplatesignatureID;
  }


  public EzsigntemplatesignatureGetObjectV1ResponseMPayload fkiEzsigntemplatedocumentID(Integer fkiEzsigntemplatedocumentID) {
    
    this.fkiEzsigntemplatedocumentID = fkiEzsigntemplatedocumentID;
    return this;
  }

   /**
   * The unique ID of the Ezsigntemplatedocument
   * minimum: 0
   * @return fkiEzsigntemplatedocumentID
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "133", required = true, value = "The unique ID of the Ezsigntemplatedocument")

  public Integer getFkiEzsigntemplatedocumentID() {
    return fkiEzsigntemplatedocumentID;
  }


  public void setFkiEzsigntemplatedocumentID(Integer fkiEzsigntemplatedocumentID) {
    this.fkiEzsigntemplatedocumentID = fkiEzsigntemplatedocumentID;
  }


  public EzsigntemplatesignatureGetObjectV1ResponseMPayload fkiEzsigntemplatesignerID(Integer fkiEzsigntemplatesignerID) {
    
    this.fkiEzsigntemplatesignerID = fkiEzsigntemplatesignerID;
    return this;
  }

   /**
   * The unique ID of the Ezsigntemplatesigner
   * minimum: 0
   * @return fkiEzsigntemplatesignerID
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "9", required = true, value = "The unique ID of the Ezsigntemplatesigner")

  public Integer getFkiEzsigntemplatesignerID() {
    return fkiEzsigntemplatesignerID;
  }


  public void setFkiEzsigntemplatesignerID(Integer fkiEzsigntemplatesignerID) {
    this.fkiEzsigntemplatesignerID = fkiEzsigntemplatesignerID;
  }


  public EzsigntemplatesignatureGetObjectV1ResponseMPayload fkiEzsigntemplatesignerIDValidation(Integer fkiEzsigntemplatesignerIDValidation) {
    
    this.fkiEzsigntemplatesignerIDValidation = fkiEzsigntemplatesignerIDValidation;
    return this;
  }

   /**
   * The unique ID of the Ezsigntemplatesigner
   * minimum: 0
   * @return fkiEzsigntemplatesignerIDValidation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "9", value = "The unique ID of the Ezsigntemplatesigner")

  public Integer getFkiEzsigntemplatesignerIDValidation() {
    return fkiEzsigntemplatesignerIDValidation;
  }


  public void setFkiEzsigntemplatesignerIDValidation(Integer fkiEzsigntemplatesignerIDValidation) {
    this.fkiEzsigntemplatesignerIDValidation = fkiEzsigntemplatesignerIDValidation;
  }


  public EzsigntemplatesignatureGetObjectV1ResponseMPayload iEzsigntemplatedocumentpagePagenumber(Integer iEzsigntemplatedocumentpagePagenumber) {
    
    this.iEzsigntemplatedocumentpagePagenumber = iEzsigntemplatedocumentpagePagenumber;
    return this;
  }

   /**
   * The page number in the Ezsigntemplatedocument
   * minimum: 1
   * @return iEzsigntemplatedocumentpagePagenumber
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1", required = true, value = "The page number in the Ezsigntemplatedocument")

  public Integer getiEzsigntemplatedocumentpagePagenumber() {
    return iEzsigntemplatedocumentpagePagenumber;
  }


  public void setiEzsigntemplatedocumentpagePagenumber(Integer iEzsigntemplatedocumentpagePagenumber) {
    this.iEzsigntemplatedocumentpagePagenumber = iEzsigntemplatedocumentpagePagenumber;
  }


  public EzsigntemplatesignatureGetObjectV1ResponseMPayload iEzsigntemplatesignatureX(Integer iEzsigntemplatesignatureX) {
    
    this.iEzsigntemplatesignatureX = iEzsigntemplatesignatureX;
    return this;
  }

   /**
   * The X coordinate (Horizontal) where to put the Ezsigntemplatesignature on the page.  Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the Ezsigntemplatesignature 2 inches from the left border of the page, you would use \&quot;200\&quot; for the X coordinate.
   * minimum: 0
   * @return iEzsigntemplatesignatureX
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "200", required = true, value = "The X coordinate (Horizontal) where to put the Ezsigntemplatesignature on the page.  Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the Ezsigntemplatesignature 2 inches from the left border of the page, you would use \"200\" for the X coordinate.")

  public Integer getiEzsigntemplatesignatureX() {
    return iEzsigntemplatesignatureX;
  }


  public void setiEzsigntemplatesignatureX(Integer iEzsigntemplatesignatureX) {
    this.iEzsigntemplatesignatureX = iEzsigntemplatesignatureX;
  }


  public EzsigntemplatesignatureGetObjectV1ResponseMPayload iEzsigntemplatesignatureY(Integer iEzsigntemplatesignatureY) {
    
    this.iEzsigntemplatesignatureY = iEzsigntemplatesignatureY;
    return this;
  }

   /**
   * The Y coordinate (Vertical) where to put the Ezsigntemplatesignature on the page.  Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the Ezsigntemplatesignature 3 inches from the top border of the page, you would use \&quot;300\&quot; for the Y coordinate.
   * minimum: 0
   * @return iEzsigntemplatesignatureY
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "300", required = true, value = "The Y coordinate (Vertical) where to put the Ezsigntemplatesignature on the page.  Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the Ezsigntemplatesignature 3 inches from the top border of the page, you would use \"300\" for the Y coordinate.")

  public Integer getiEzsigntemplatesignatureY() {
    return iEzsigntemplatesignatureY;
  }


  public void setiEzsigntemplatesignatureY(Integer iEzsigntemplatesignatureY) {
    this.iEzsigntemplatesignatureY = iEzsigntemplatesignatureY;
  }


  public EzsigntemplatesignatureGetObjectV1ResponseMPayload iEzsigntemplatesignatureStep(Integer iEzsigntemplatesignatureStep) {
    
    this.iEzsigntemplatesignatureStep = iEzsigntemplatesignatureStep;
    return this;
  }

   /**
   * The step when the Ezsigntemplatesigner will be invited to sign
   * minimum: 1
   * @return iEzsigntemplatesignatureStep
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1", required = true, value = "The step when the Ezsigntemplatesigner will be invited to sign")

  public Integer getiEzsigntemplatesignatureStep() {
    return iEzsigntemplatesignatureStep;
  }


  public void setiEzsigntemplatesignatureStep(Integer iEzsigntemplatesignatureStep) {
    this.iEzsigntemplatesignatureStep = iEzsigntemplatesignatureStep;
  }


  public EzsigntemplatesignatureGetObjectV1ResponseMPayload eEzsigntemplatesignatureType(FieldEEzsigntemplatesignatureType eEzsigntemplatesignatureType) {
    
    this.eEzsigntemplatesignatureType = eEzsigntemplatesignatureType;
    return this;
  }

   /**
   * Get eEzsigntemplatesignatureType
   * @return eEzsigntemplatesignatureType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public FieldEEzsigntemplatesignatureType geteEzsigntemplatesignatureType() {
    return eEzsigntemplatesignatureType;
  }


  public void seteEzsigntemplatesignatureType(FieldEEzsigntemplatesignatureType eEzsigntemplatesignatureType) {
    this.eEzsigntemplatesignatureType = eEzsigntemplatesignatureType;
  }


  public EzsigntemplatesignatureGetObjectV1ResponseMPayload tEzsigntemplatesignatureTooltip(String tEzsigntemplatesignatureTooltip) {
    
    this.tEzsigntemplatesignatureTooltip = tEzsigntemplatesignatureTooltip;
    return this;
  }

   /**
   * A tooltip that will be presented to Ezsigntemplatesigner about the Ezsigntemplatesignature
   * @return tEzsigntemplatesignatureTooltip
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Please sign here if you agree to the terms", value = "A tooltip that will be presented to Ezsigntemplatesigner about the Ezsigntemplatesignature")

  public String gettEzsigntemplatesignatureTooltip() {
    return tEzsigntemplatesignatureTooltip;
  }


  public void settEzsigntemplatesignatureTooltip(String tEzsigntemplatesignatureTooltip) {
    this.tEzsigntemplatesignatureTooltip = tEzsigntemplatesignatureTooltip;
  }


  public EzsigntemplatesignatureGetObjectV1ResponseMPayload eEzsigntemplatesignatureTooltipposition(FieldEEzsigntemplatesignatureTooltipposition eEzsigntemplatesignatureTooltipposition) {
    
    this.eEzsigntemplatesignatureTooltipposition = eEzsigntemplatesignatureTooltipposition;
    return this;
  }

   /**
   * Get eEzsigntemplatesignatureTooltipposition
   * @return eEzsigntemplatesignatureTooltipposition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FieldEEzsigntemplatesignatureTooltipposition geteEzsigntemplatesignatureTooltipposition() {
    return eEzsigntemplatesignatureTooltipposition;
  }


  public void seteEzsigntemplatesignatureTooltipposition(FieldEEzsigntemplatesignatureTooltipposition eEzsigntemplatesignatureTooltipposition) {
    this.eEzsigntemplatesignatureTooltipposition = eEzsigntemplatesignatureTooltipposition;
  }


  public EzsigntemplatesignatureGetObjectV1ResponseMPayload eEzsigntemplatesignatureFont(FieldEEzsigntemplatesignatureFont eEzsigntemplatesignatureFont) {
    
    this.eEzsigntemplatesignatureFont = eEzsigntemplatesignatureFont;
    return this;
  }

   /**
   * Get eEzsigntemplatesignatureFont
   * @return eEzsigntemplatesignatureFont
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FieldEEzsigntemplatesignatureFont geteEzsigntemplatesignatureFont() {
    return eEzsigntemplatesignatureFont;
  }


  public void seteEzsigntemplatesignatureFont(FieldEEzsigntemplatesignatureFont eEzsigntemplatesignatureFont) {
    this.eEzsigntemplatesignatureFont = eEzsigntemplatesignatureFont;
  }


  public EzsigntemplatesignatureGetObjectV1ResponseMPayload iEzsigntemplatesignatureValidationstep(Integer iEzsigntemplatesignatureValidationstep) {
    
    this.iEzsigntemplatesignatureValidationstep = iEzsigntemplatesignatureValidationstep;
    return this;
  }

   /**
   * The step when the Ezsigntemplatesigner will be invited to validate the Ezsigntemplatesignature of eEzsigntemplatesignatureType Attachments
   * @return iEzsigntemplatesignatureValidationstep
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "The step when the Ezsigntemplatesigner will be invited to validate the Ezsigntemplatesignature of eEzsigntemplatesignatureType Attachments")

  public Integer getiEzsigntemplatesignatureValidationstep() {
    return iEzsigntemplatesignatureValidationstep;
  }


  public void setiEzsigntemplatesignatureValidationstep(Integer iEzsigntemplatesignatureValidationstep) {
    this.iEzsigntemplatesignatureValidationstep = iEzsigntemplatesignatureValidationstep;
  }


  public EzsigntemplatesignatureGetObjectV1ResponseMPayload sEzsigntemplatesignatureAttachmentdescription(String sEzsigntemplatesignatureAttachmentdescription) {
    
    this.sEzsigntemplatesignatureAttachmentdescription = sEzsigntemplatesignatureAttachmentdescription;
    return this;
  }

   /**
   * The description attached to the attachment name added in Ezsigntemplatesignature of eEzsigntemplatesignatureType Attachments
   * @return sEzsigntemplatesignatureAttachmentdescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Attachment", value = "The description attached to the attachment name added in Ezsigntemplatesignature of eEzsigntemplatesignatureType Attachments")

  public String getsEzsigntemplatesignatureAttachmentdescription() {
    return sEzsigntemplatesignatureAttachmentdescription;
  }


  public void setsEzsigntemplatesignatureAttachmentdescription(String sEzsigntemplatesignatureAttachmentdescription) {
    this.sEzsigntemplatesignatureAttachmentdescription = sEzsigntemplatesignatureAttachmentdescription;
  }


  public EzsigntemplatesignatureGetObjectV1ResponseMPayload eEzsigntemplatesignatureAttachmentnamesource(FieldEEzsigntemplatesignatureAttachmentnamesource eEzsigntemplatesignatureAttachmentnamesource) {
    
    this.eEzsigntemplatesignatureAttachmentnamesource = eEzsigntemplatesignatureAttachmentnamesource;
    return this;
  }

   /**
   * Get eEzsigntemplatesignatureAttachmentnamesource
   * @return eEzsigntemplatesignatureAttachmentnamesource
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FieldEEzsigntemplatesignatureAttachmentnamesource geteEzsigntemplatesignatureAttachmentnamesource() {
    return eEzsigntemplatesignatureAttachmentnamesource;
  }


  public void seteEzsigntemplatesignatureAttachmentnamesource(FieldEEzsigntemplatesignatureAttachmentnamesource eEzsigntemplatesignatureAttachmentnamesource) {
    this.eEzsigntemplatesignatureAttachmentnamesource = eEzsigntemplatesignatureAttachmentnamesource;
  }


  public EzsigntemplatesignatureGetObjectV1ResponseMPayload bEzsigntemplatesignatureRequired(Boolean bEzsigntemplatesignatureRequired) {
    
    this.bEzsigntemplatesignatureRequired = bEzsigntemplatesignatureRequired;
    return this;
  }

   /**
   * Whether the Ezsigntemplatesignature is required or not. This field is relevant only with Ezsigntemplatesignature with eEzsigntemplatesignatureType &#x3D; Attachments.
   * @return bEzsigntemplatesignatureRequired
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the Ezsigntemplatesignature is required or not. This field is relevant only with Ezsigntemplatesignature with eEzsigntemplatesignatureType = Attachments.")

  public Boolean getbEzsigntemplatesignatureRequired() {
    return bEzsigntemplatesignatureRequired;
  }


  public void setbEzsigntemplatesignatureRequired(Boolean bEzsigntemplatesignatureRequired) {
    this.bEzsigntemplatesignatureRequired = bEzsigntemplatesignatureRequired;
  }


  public EzsigntemplatesignatureGetObjectV1ResponseMPayload bEzsigntemplatesignatureCustomdate(Boolean bEzsigntemplatesignatureCustomdate) {
    
    this.bEzsigntemplatesignatureCustomdate = bEzsigntemplatesignatureCustomdate;
    return this;
  }

   /**
   * Whether the Ezsigntemplatesignature has a custom date format or not. (Only possible when eEzsigntemplatesignatureType is **Name** or **Handwritten**)
   * @return bEzsigntemplatesignatureCustomdate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the Ezsigntemplatesignature has a custom date format or not. (Only possible when eEzsigntemplatesignatureType is **Name** or **Handwritten**)")

  public Boolean getbEzsigntemplatesignatureCustomdate() {
    return bEzsigntemplatesignatureCustomdate;
  }


  public void setbEzsigntemplatesignatureCustomdate(Boolean bEzsigntemplatesignatureCustomdate) {
    this.bEzsigntemplatesignatureCustomdate = bEzsigntemplatesignatureCustomdate;
  }


  public EzsigntemplatesignatureGetObjectV1ResponseMPayload aObjEzsigntemplatesignaturecustomdate(List<EzsigntemplatesignaturecustomdateResponseCompound> aObjEzsigntemplatesignaturecustomdate) {
    
    this.aObjEzsigntemplatesignaturecustomdate = aObjEzsigntemplatesignaturecustomdate;
    return this;
  }

  public EzsigntemplatesignatureGetObjectV1ResponseMPayload addAObjEzsigntemplatesignaturecustomdateItem(EzsigntemplatesignaturecustomdateResponseCompound aObjEzsigntemplatesignaturecustomdateItem) {
    if (this.aObjEzsigntemplatesignaturecustomdate == null) {
      this.aObjEzsigntemplatesignaturecustomdate = new ArrayList<>();
    }
    this.aObjEzsigntemplatesignaturecustomdate.add(aObjEzsigntemplatesignaturecustomdateItem);
    return this;
  }

   /**
   * An array of custom date blocks that will be filled at the time of signature.  Can only be used if bEzsigntemplatesignatureCustomdate is true.  Use an empty array if you don&#39;t want to have a date at all.
   * @return aObjEzsigntemplatesignaturecustomdate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of custom date blocks that will be filled at the time of signature.  Can only be used if bEzsigntemplatesignatureCustomdate is true.  Use an empty array if you don't want to have a date at all.")

  public List<EzsigntemplatesignaturecustomdateResponseCompound> getaObjEzsigntemplatesignaturecustomdate() {
    return aObjEzsigntemplatesignaturecustomdate;
  }


  public void setaObjEzsigntemplatesignaturecustomdate(List<EzsigntemplatesignaturecustomdateResponseCompound> aObjEzsigntemplatesignaturecustomdate) {
    this.aObjEzsigntemplatesignaturecustomdate = aObjEzsigntemplatesignaturecustomdate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EzsigntemplatesignatureGetObjectV1ResponseMPayload ezsigntemplatesignatureGetObjectV1ResponseMPayload = (EzsigntemplatesignatureGetObjectV1ResponseMPayload) o;
    return Objects.equals(this.pkiEzsigntemplatesignatureID, ezsigntemplatesignatureGetObjectV1ResponseMPayload.pkiEzsigntemplatesignatureID) &&
        Objects.equals(this.fkiEzsigntemplatedocumentID, ezsigntemplatesignatureGetObjectV1ResponseMPayload.fkiEzsigntemplatedocumentID) &&
        Objects.equals(this.fkiEzsigntemplatesignerID, ezsigntemplatesignatureGetObjectV1ResponseMPayload.fkiEzsigntemplatesignerID) &&
        Objects.equals(this.fkiEzsigntemplatesignerIDValidation, ezsigntemplatesignatureGetObjectV1ResponseMPayload.fkiEzsigntemplatesignerIDValidation) &&
        Objects.equals(this.iEzsigntemplatedocumentpagePagenumber, ezsigntemplatesignatureGetObjectV1ResponseMPayload.iEzsigntemplatedocumentpagePagenumber) &&
        Objects.equals(this.iEzsigntemplatesignatureX, ezsigntemplatesignatureGetObjectV1ResponseMPayload.iEzsigntemplatesignatureX) &&
        Objects.equals(this.iEzsigntemplatesignatureY, ezsigntemplatesignatureGetObjectV1ResponseMPayload.iEzsigntemplatesignatureY) &&
        Objects.equals(this.iEzsigntemplatesignatureStep, ezsigntemplatesignatureGetObjectV1ResponseMPayload.iEzsigntemplatesignatureStep) &&
        Objects.equals(this.eEzsigntemplatesignatureType, ezsigntemplatesignatureGetObjectV1ResponseMPayload.eEzsigntemplatesignatureType) &&
        Objects.equals(this.tEzsigntemplatesignatureTooltip, ezsigntemplatesignatureGetObjectV1ResponseMPayload.tEzsigntemplatesignatureTooltip) &&
        Objects.equals(this.eEzsigntemplatesignatureTooltipposition, ezsigntemplatesignatureGetObjectV1ResponseMPayload.eEzsigntemplatesignatureTooltipposition) &&
        Objects.equals(this.eEzsigntemplatesignatureFont, ezsigntemplatesignatureGetObjectV1ResponseMPayload.eEzsigntemplatesignatureFont) &&
        Objects.equals(this.iEzsigntemplatesignatureValidationstep, ezsigntemplatesignatureGetObjectV1ResponseMPayload.iEzsigntemplatesignatureValidationstep) &&
        Objects.equals(this.sEzsigntemplatesignatureAttachmentdescription, ezsigntemplatesignatureGetObjectV1ResponseMPayload.sEzsigntemplatesignatureAttachmentdescription) &&
        Objects.equals(this.eEzsigntemplatesignatureAttachmentnamesource, ezsigntemplatesignatureGetObjectV1ResponseMPayload.eEzsigntemplatesignatureAttachmentnamesource) &&
        Objects.equals(this.bEzsigntemplatesignatureRequired, ezsigntemplatesignatureGetObjectV1ResponseMPayload.bEzsigntemplatesignatureRequired) &&
        Objects.equals(this.bEzsigntemplatesignatureCustomdate, ezsigntemplatesignatureGetObjectV1ResponseMPayload.bEzsigntemplatesignatureCustomdate) &&
        Objects.equals(this.aObjEzsigntemplatesignaturecustomdate, ezsigntemplatesignatureGetObjectV1ResponseMPayload.aObjEzsigntemplatesignaturecustomdate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pkiEzsigntemplatesignatureID, fkiEzsigntemplatedocumentID, fkiEzsigntemplatesignerID, fkiEzsigntemplatesignerIDValidation, iEzsigntemplatedocumentpagePagenumber, iEzsigntemplatesignatureX, iEzsigntemplatesignatureY, iEzsigntemplatesignatureStep, eEzsigntemplatesignatureType, tEzsigntemplatesignatureTooltip, eEzsigntemplatesignatureTooltipposition, eEzsigntemplatesignatureFont, iEzsigntemplatesignatureValidationstep, sEzsigntemplatesignatureAttachmentdescription, eEzsigntemplatesignatureAttachmentnamesource, bEzsigntemplatesignatureRequired, bEzsigntemplatesignatureCustomdate, aObjEzsigntemplatesignaturecustomdate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EzsigntemplatesignatureGetObjectV1ResponseMPayload {\n");
    sb.append("    pkiEzsigntemplatesignatureID: ").append(toIndentedString(pkiEzsigntemplatesignatureID)).append("\n");
    sb.append("    fkiEzsigntemplatedocumentID: ").append(toIndentedString(fkiEzsigntemplatedocumentID)).append("\n");
    sb.append("    fkiEzsigntemplatesignerID: ").append(toIndentedString(fkiEzsigntemplatesignerID)).append("\n");
    sb.append("    fkiEzsigntemplatesignerIDValidation: ").append(toIndentedString(fkiEzsigntemplatesignerIDValidation)).append("\n");
    sb.append("    iEzsigntemplatedocumentpagePagenumber: ").append(toIndentedString(iEzsigntemplatedocumentpagePagenumber)).append("\n");
    sb.append("    iEzsigntemplatesignatureX: ").append(toIndentedString(iEzsigntemplatesignatureX)).append("\n");
    sb.append("    iEzsigntemplatesignatureY: ").append(toIndentedString(iEzsigntemplatesignatureY)).append("\n");
    sb.append("    iEzsigntemplatesignatureStep: ").append(toIndentedString(iEzsigntemplatesignatureStep)).append("\n");
    sb.append("    eEzsigntemplatesignatureType: ").append(toIndentedString(eEzsigntemplatesignatureType)).append("\n");
    sb.append("    tEzsigntemplatesignatureTooltip: ").append(toIndentedString(tEzsigntemplatesignatureTooltip)).append("\n");
    sb.append("    eEzsigntemplatesignatureTooltipposition: ").append(toIndentedString(eEzsigntemplatesignatureTooltipposition)).append("\n");
    sb.append("    eEzsigntemplatesignatureFont: ").append(toIndentedString(eEzsigntemplatesignatureFont)).append("\n");
    sb.append("    iEzsigntemplatesignatureValidationstep: ").append(toIndentedString(iEzsigntemplatesignatureValidationstep)).append("\n");
    sb.append("    sEzsigntemplatesignatureAttachmentdescription: ").append(toIndentedString(sEzsigntemplatesignatureAttachmentdescription)).append("\n");
    sb.append("    eEzsigntemplatesignatureAttachmentnamesource: ").append(toIndentedString(eEzsigntemplatesignatureAttachmentnamesource)).append("\n");
    sb.append("    bEzsigntemplatesignatureRequired: ").append(toIndentedString(bEzsigntemplatesignatureRequired)).append("\n");
    sb.append("    bEzsigntemplatesignatureCustomdate: ").append(toIndentedString(bEzsigntemplatesignatureCustomdate)).append("\n");
    sb.append("    aObjEzsigntemplatesignaturecustomdate: ").append(toIndentedString(aObjEzsigntemplatesignaturecustomdate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pkiEzsigntemplatesignatureID");
    openapiFields.add("fkiEzsigntemplatedocumentID");
    openapiFields.add("fkiEzsigntemplatesignerID");
    openapiFields.add("fkiEzsigntemplatesignerIDValidation");
    openapiFields.add("iEzsigntemplatedocumentpagePagenumber");
    openapiFields.add("iEzsigntemplatesignatureX");
    openapiFields.add("iEzsigntemplatesignatureY");
    openapiFields.add("iEzsigntemplatesignatureStep");
    openapiFields.add("eEzsigntemplatesignatureType");
    openapiFields.add("tEzsigntemplatesignatureTooltip");
    openapiFields.add("eEzsigntemplatesignatureTooltipposition");
    openapiFields.add("eEzsigntemplatesignatureFont");
    openapiFields.add("iEzsigntemplatesignatureValidationstep");
    openapiFields.add("sEzsigntemplatesignatureAttachmentdescription");
    openapiFields.add("eEzsigntemplatesignatureAttachmentnamesource");
    openapiFields.add("bEzsigntemplatesignatureRequired");
    openapiFields.add("bEzsigntemplatesignatureCustomdate");
    openapiFields.add("a_objEzsigntemplatesignaturecustomdate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("pkiEzsigntemplatesignatureID");
    openapiRequiredFields.add("fkiEzsigntemplatedocumentID");
    openapiRequiredFields.add("fkiEzsigntemplatesignerID");
    openapiRequiredFields.add("iEzsigntemplatedocumentpagePagenumber");
    openapiRequiredFields.add("iEzsigntemplatesignatureX");
    openapiRequiredFields.add("iEzsigntemplatesignatureY");
    openapiRequiredFields.add("iEzsigntemplatesignatureStep");
    openapiRequiredFields.add("eEzsigntemplatesignatureType");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to EzsigntemplatesignatureGetObjectV1ResponseMPayload
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!EzsigntemplatesignatureGetObjectV1ResponseMPayload.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EzsigntemplatesignatureGetObjectV1ResponseMPayload is not found in the empty JSON string", EzsigntemplatesignatureGetObjectV1ResponseMPayload.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!EzsigntemplatesignatureGetObjectV1ResponseMPayload.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EzsigntemplatesignatureGetObjectV1ResponseMPayload` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : EzsigntemplatesignatureGetObjectV1ResponseMPayload.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if ((jsonObj.get("tEzsigntemplatesignatureTooltip") != null && !jsonObj.get("tEzsigntemplatesignatureTooltip").isJsonNull()) && !jsonObj.get("tEzsigntemplatesignatureTooltip").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tEzsigntemplatesignatureTooltip` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tEzsigntemplatesignatureTooltip").toString()));
      }
      if ((jsonObj.get("sEzsigntemplatesignatureAttachmentdescription") != null && !jsonObj.get("sEzsigntemplatesignatureAttachmentdescription").isJsonNull()) && !jsonObj.get("sEzsigntemplatesignatureAttachmentdescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sEzsigntemplatesignatureAttachmentdescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sEzsigntemplatesignatureAttachmentdescription").toString()));
      }
      if (jsonObj.get("a_objEzsigntemplatesignaturecustomdate") != null && !jsonObj.get("a_objEzsigntemplatesignaturecustomdate").isJsonNull()) {
        JsonArray jsonArrayaObjEzsigntemplatesignaturecustomdate = jsonObj.getAsJsonArray("a_objEzsigntemplatesignaturecustomdate");
        if (jsonArrayaObjEzsigntemplatesignaturecustomdate != null) {
          // ensure the json data is an array
          if (!jsonObj.get("a_objEzsigntemplatesignaturecustomdate").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `a_objEzsigntemplatesignaturecustomdate` to be an array in the JSON string but got `%s`", jsonObj.get("a_objEzsigntemplatesignaturecustomdate").toString()));
          }

          // validate the optional field `a_objEzsigntemplatesignaturecustomdate` (array)
          for (int i = 0; i < jsonArrayaObjEzsigntemplatesignaturecustomdate.size(); i++) {
            EzsigntemplatesignaturecustomdateResponseCompound.validateJsonObject(jsonArrayaObjEzsigntemplatesignaturecustomdate.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EzsigntemplatesignatureGetObjectV1ResponseMPayload.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EzsigntemplatesignatureGetObjectV1ResponseMPayload' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EzsigntemplatesignatureGetObjectV1ResponseMPayload> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EzsigntemplatesignatureGetObjectV1ResponseMPayload.class));

       return (TypeAdapter<T>) new TypeAdapter<EzsigntemplatesignatureGetObjectV1ResponseMPayload>() {
           @Override
           public void write(JsonWriter out, EzsigntemplatesignatureGetObjectV1ResponseMPayload value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EzsigntemplatesignatureGetObjectV1ResponseMPayload read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EzsigntemplatesignatureGetObjectV1ResponseMPayload given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EzsigntemplatesignatureGetObjectV1ResponseMPayload
  * @throws IOException if the JSON string is invalid with respect to EzsigntemplatesignatureGetObjectV1ResponseMPayload
  */
  public static EzsigntemplatesignatureGetObjectV1ResponseMPayload fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EzsigntemplatesignatureGetObjectV1ResponseMPayload.class);
  }

 /**
  * Convert an instance of EzsigntemplatesignatureGetObjectV1ResponseMPayload to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

