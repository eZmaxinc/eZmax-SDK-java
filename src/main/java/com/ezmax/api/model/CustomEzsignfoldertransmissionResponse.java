/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.ezmax.api.model.CustomEzsignfoldertransmissionSignerResponse;
import com.ezmax.api.model.FieldEEzsignfolderStep;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * An Ezsignfolder Object in the context of an Ezsignbulksendtransmission
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-30T20:25:06.858397322Z[Etc/UTC]", comments = "Generator version: 7.11.0")
public class CustomEzsignfoldertransmissionResponse {
  public static final String SERIALIZED_NAME_PKI_EZSIGNFOLDER_I_D = "pkiEzsignfolderID";
  @SerializedName(SERIALIZED_NAME_PKI_EZSIGNFOLDER_I_D)
  @javax.annotation.Nonnull
  private Integer pkiEzsignfolderID;

  public static final String SERIALIZED_NAME_S_EZSIGNFOLDER_DESCRIPTION = "sEzsignfolderDescription";
  @SerializedName(SERIALIZED_NAME_S_EZSIGNFOLDER_DESCRIPTION)
  @javax.annotation.Nonnull
  private String sEzsignfolderDescription;

  public static final String SERIALIZED_NAME_E_EZSIGNFOLDER_STEP = "eEzsignfolderStep";
  @SerializedName(SERIALIZED_NAME_E_EZSIGNFOLDER_STEP)
  @javax.annotation.Nonnull
  private FieldEEzsignfolderStep eEzsignfolderStep;

  public static final String SERIALIZED_NAME_I_EZSIGNFOLDER_SIGNATURETOTAL = "iEzsignfolderSignaturetotal";
  @SerializedName(SERIALIZED_NAME_I_EZSIGNFOLDER_SIGNATURETOTAL)
  @javax.annotation.Nonnull
  private Integer iEzsignfolderSignaturetotal;

  public static final String SERIALIZED_NAME_I_EZSIGNFOLDER_FORMFIELDTOTAL = "iEzsignfolderFormfieldtotal";
  @SerializedName(SERIALIZED_NAME_I_EZSIGNFOLDER_FORMFIELDTOTAL)
  @javax.annotation.Nonnull
  private Integer iEzsignfolderFormfieldtotal;

  public static final String SERIALIZED_NAME_I_EZSIGNFOLDER_SIGNATURESIGNED = "iEzsignfolderSignaturesigned";
  @SerializedName(SERIALIZED_NAME_I_EZSIGNFOLDER_SIGNATURESIGNED)
  @javax.annotation.Nonnull
  private Integer iEzsignfolderSignaturesigned;

  public static final String SERIALIZED_NAME_A_OBJ_EZSIGNFOLDERTRANSMISSION_SIGNER = "a_objEzsignfoldertransmissionSigner";
  @SerializedName(SERIALIZED_NAME_A_OBJ_EZSIGNFOLDERTRANSMISSION_SIGNER)
  @javax.annotation.Nonnull
  private List<CustomEzsignfoldertransmissionSignerResponse> aObjEzsignfoldertransmissionSigner = new ArrayList<>();

  public CustomEzsignfoldertransmissionResponse() {
  }

  public CustomEzsignfoldertransmissionResponse pkiEzsignfolderID(@javax.annotation.Nonnull Integer pkiEzsignfolderID) {
    this.pkiEzsignfolderID = pkiEzsignfolderID;
    return this;
  }

  /**
   * The unique ID of the Ezsignfolder
   * minimum: 0
   * @return pkiEzsignfolderID
   */
  @javax.annotation.Nonnull
  public Integer getPkiEzsignfolderID() {
    return pkiEzsignfolderID;
  }

  public void setPkiEzsignfolderID(@javax.annotation.Nonnull Integer pkiEzsignfolderID) {
    this.pkiEzsignfolderID = pkiEzsignfolderID;
  }


  public CustomEzsignfoldertransmissionResponse sEzsignfolderDescription(@javax.annotation.Nonnull String sEzsignfolderDescription) {
    this.sEzsignfolderDescription = sEzsignfolderDescription;
    return this;
  }

  /**
   * The description of the Ezsignfolder
   * @return sEzsignfolderDescription
   */
  @javax.annotation.Nonnull
  public String getsEzsignfolderDescription() {
    return sEzsignfolderDescription;
  }

  public void setsEzsignfolderDescription(@javax.annotation.Nonnull String sEzsignfolderDescription) {
    this.sEzsignfolderDescription = sEzsignfolderDescription;
  }


  public CustomEzsignfoldertransmissionResponse eEzsignfolderStep(@javax.annotation.Nonnull FieldEEzsignfolderStep eEzsignfolderStep) {
    this.eEzsignfolderStep = eEzsignfolderStep;
    return this;
  }

  /**
   * Get eEzsignfolderStep
   * @return eEzsignfolderStep
   */
  @javax.annotation.Nonnull
  public FieldEEzsignfolderStep geteEzsignfolderStep() {
    return eEzsignfolderStep;
  }

  public void seteEzsignfolderStep(@javax.annotation.Nonnull FieldEEzsignfolderStep eEzsignfolderStep) {
    this.eEzsignfolderStep = eEzsignfolderStep;
  }


  public CustomEzsignfoldertransmissionResponse iEzsignfolderSignaturetotal(@javax.annotation.Nonnull Integer iEzsignfolderSignaturetotal) {
    this.iEzsignfolderSignaturetotal = iEzsignfolderSignaturetotal;
    return this;
  }

  /**
   * The number of total signatures that were requested in the Ezsignfolder
   * @return iEzsignfolderSignaturetotal
   */
  @javax.annotation.Nonnull
  public Integer getiEzsignfolderSignaturetotal() {
    return iEzsignfolderSignaturetotal;
  }

  public void setiEzsignfolderSignaturetotal(@javax.annotation.Nonnull Integer iEzsignfolderSignaturetotal) {
    this.iEzsignfolderSignaturetotal = iEzsignfolderSignaturetotal;
  }


  public CustomEzsignfoldertransmissionResponse iEzsignfolderFormfieldtotal(@javax.annotation.Nonnull Integer iEzsignfolderFormfieldtotal) {
    this.iEzsignfolderFormfieldtotal = iEzsignfolderFormfieldtotal;
    return this;
  }

  /**
   * The number of total form fields that were requested in the Ezsignfolder
   * @return iEzsignfolderFormfieldtotal
   */
  @javax.annotation.Nonnull
  public Integer getiEzsignfolderFormfieldtotal() {
    return iEzsignfolderFormfieldtotal;
  }

  public void setiEzsignfolderFormfieldtotal(@javax.annotation.Nonnull Integer iEzsignfolderFormfieldtotal) {
    this.iEzsignfolderFormfieldtotal = iEzsignfolderFormfieldtotal;
  }


  public CustomEzsignfoldertransmissionResponse iEzsignfolderSignaturesigned(@javax.annotation.Nonnull Integer iEzsignfolderSignaturesigned) {
    this.iEzsignfolderSignaturesigned = iEzsignfolderSignaturesigned;
    return this;
  }

  /**
   * The number of signatures that were signed in the Ezsignfolder.
   * @return iEzsignfolderSignaturesigned
   */
  @javax.annotation.Nonnull
  public Integer getiEzsignfolderSignaturesigned() {
    return iEzsignfolderSignaturesigned;
  }

  public void setiEzsignfolderSignaturesigned(@javax.annotation.Nonnull Integer iEzsignfolderSignaturesigned) {
    this.iEzsignfolderSignaturesigned = iEzsignfolderSignaturesigned;
  }


  public CustomEzsignfoldertransmissionResponse aObjEzsignfoldertransmissionSigner(@javax.annotation.Nonnull List<CustomEzsignfoldertransmissionSignerResponse> aObjEzsignfoldertransmissionSigner) {
    this.aObjEzsignfoldertransmissionSigner = aObjEzsignfoldertransmissionSigner;
    return this;
  }

  public CustomEzsignfoldertransmissionResponse addAObjEzsignfoldertransmissionSignerItem(CustomEzsignfoldertransmissionSignerResponse aObjEzsignfoldertransmissionSignerItem) {
    if (this.aObjEzsignfoldertransmissionSigner == null) {
      this.aObjEzsignfoldertransmissionSigner = new ArrayList<>();
    }
    this.aObjEzsignfoldertransmissionSigner.add(aObjEzsignfoldertransmissionSignerItem);
    return this;
  }

  /**
   * Get aObjEzsignfoldertransmissionSigner
   * @return aObjEzsignfoldertransmissionSigner
   */
  @javax.annotation.Nonnull
  public List<CustomEzsignfoldertransmissionSignerResponse> getaObjEzsignfoldertransmissionSigner() {
    return aObjEzsignfoldertransmissionSigner;
  }

  public void setaObjEzsignfoldertransmissionSigner(@javax.annotation.Nonnull List<CustomEzsignfoldertransmissionSignerResponse> aObjEzsignfoldertransmissionSigner) {
    this.aObjEzsignfoldertransmissionSigner = aObjEzsignfoldertransmissionSigner;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomEzsignfoldertransmissionResponse customEzsignfoldertransmissionResponse = (CustomEzsignfoldertransmissionResponse) o;
    return Objects.equals(this.pkiEzsignfolderID, customEzsignfoldertransmissionResponse.pkiEzsignfolderID) &&
        Objects.equals(this.sEzsignfolderDescription, customEzsignfoldertransmissionResponse.sEzsignfolderDescription) &&
        Objects.equals(this.eEzsignfolderStep, customEzsignfoldertransmissionResponse.eEzsignfolderStep) &&
        Objects.equals(this.iEzsignfolderSignaturetotal, customEzsignfoldertransmissionResponse.iEzsignfolderSignaturetotal) &&
        Objects.equals(this.iEzsignfolderFormfieldtotal, customEzsignfoldertransmissionResponse.iEzsignfolderFormfieldtotal) &&
        Objects.equals(this.iEzsignfolderSignaturesigned, customEzsignfoldertransmissionResponse.iEzsignfolderSignaturesigned) &&
        Objects.equals(this.aObjEzsignfoldertransmissionSigner, customEzsignfoldertransmissionResponse.aObjEzsignfoldertransmissionSigner);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pkiEzsignfolderID, sEzsignfolderDescription, eEzsignfolderStep, iEzsignfolderSignaturetotal, iEzsignfolderFormfieldtotal, iEzsignfolderSignaturesigned, aObjEzsignfoldertransmissionSigner);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomEzsignfoldertransmissionResponse {\n");
    sb.append("    pkiEzsignfolderID: ").append(toIndentedString(pkiEzsignfolderID)).append("\n");
    sb.append("    sEzsignfolderDescription: ").append(toIndentedString(sEzsignfolderDescription)).append("\n");
    sb.append("    eEzsignfolderStep: ").append(toIndentedString(eEzsignfolderStep)).append("\n");
    sb.append("    iEzsignfolderSignaturetotal: ").append(toIndentedString(iEzsignfolderSignaturetotal)).append("\n");
    sb.append("    iEzsignfolderFormfieldtotal: ").append(toIndentedString(iEzsignfolderFormfieldtotal)).append("\n");
    sb.append("    iEzsignfolderSignaturesigned: ").append(toIndentedString(iEzsignfolderSignaturesigned)).append("\n");
    sb.append("    aObjEzsignfoldertransmissionSigner: ").append(toIndentedString(aObjEzsignfoldertransmissionSigner)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pkiEzsignfolderID");
    openapiFields.add("sEzsignfolderDescription");
    openapiFields.add("eEzsignfolderStep");
    openapiFields.add("iEzsignfolderSignaturetotal");
    openapiFields.add("iEzsignfolderFormfieldtotal");
    openapiFields.add("iEzsignfolderSignaturesigned");
    openapiFields.add("a_objEzsignfoldertransmissionSigner");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("pkiEzsignfolderID");
    openapiRequiredFields.add("sEzsignfolderDescription");
    openapiRequiredFields.add("eEzsignfolderStep");
    openapiRequiredFields.add("iEzsignfolderSignaturetotal");
    openapiRequiredFields.add("iEzsignfolderFormfieldtotal");
    openapiRequiredFields.add("iEzsignfolderSignaturesigned");
    openapiRequiredFields.add("a_objEzsignfoldertransmissionSigner");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CustomEzsignfoldertransmissionResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CustomEzsignfoldertransmissionResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CustomEzsignfoldertransmissionResponse is not found in the empty JSON string", CustomEzsignfoldertransmissionResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CustomEzsignfoldertransmissionResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CustomEzsignfoldertransmissionResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CustomEzsignfoldertransmissionResponse.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("sEzsignfolderDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sEzsignfolderDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sEzsignfolderDescription").toString()));
      }
      // validate the required field `eEzsignfolderStep`
      FieldEEzsignfolderStep.validateJsonElement(jsonObj.get("eEzsignfolderStep"));
      // ensure the json data is an array
      if (!jsonObj.get("a_objEzsignfoldertransmissionSigner").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `a_objEzsignfoldertransmissionSigner` to be an array in the JSON string but got `%s`", jsonObj.get("a_objEzsignfoldertransmissionSigner").toString()));
      }

      JsonArray jsonArrayaObjEzsignfoldertransmissionSigner = jsonObj.getAsJsonArray("a_objEzsignfoldertransmissionSigner");
      // validate the required field `a_objEzsignfoldertransmissionSigner` (array)
      for (int i = 0; i < jsonArrayaObjEzsignfoldertransmissionSigner.size(); i++) {
        CustomEzsignfoldertransmissionSignerResponse.validateJsonElement(jsonArrayaObjEzsignfoldertransmissionSigner.get(i));
      };
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomEzsignfoldertransmissionResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomEzsignfoldertransmissionResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomEzsignfoldertransmissionResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomEzsignfoldertransmissionResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomEzsignfoldertransmissionResponse>() {
           @Override
           public void write(JsonWriter out, CustomEzsignfoldertransmissionResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomEzsignfoldertransmissionResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CustomEzsignfoldertransmissionResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CustomEzsignfoldertransmissionResponse
   * @throws IOException if the JSON string is invalid with respect to CustomEzsignfoldertransmissionResponse
   */
  public static CustomEzsignfoldertransmissionResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomEzsignfoldertransmissionResponse.class);
  }

  /**
   * Convert an instance of CustomEzsignfoldertransmissionResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

