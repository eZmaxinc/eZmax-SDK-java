/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.ezmax.api.model.CustomCommunicationrecipientsrecipientResponse;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * Generic CommunicationrecipientsGroup Response
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-19T17:55:55.222327902Z[Etc/UTC]")
public class CustomCommunicationrecipientsgroupResponse {
  public static final String SERIALIZED_NAME_S_COMMUNICATIONRECIPIENTSGROUP_LABEL = "sCommunicationrecipientsgroupLabel";
  @SerializedName(SERIALIZED_NAME_S_COMMUNICATIONRECIPIENTSGROUP_LABEL)
  private String sCommunicationrecipientsgroupLabel;

  public static final String SERIALIZED_NAME_A_OBJ_COMMUNICATIONRECIPIENTSRECIPIENT = "a_objCommunicationrecipientsrecipient";
  @SerializedName(SERIALIZED_NAME_A_OBJ_COMMUNICATIONRECIPIENTSRECIPIENT)
  private List<CustomCommunicationrecipientsrecipientResponse> aObjCommunicationrecipientsrecipient = new ArrayList<>();

  public CustomCommunicationrecipientsgroupResponse() {
  }

  public CustomCommunicationrecipientsgroupResponse sCommunicationrecipientsgroupLabel(String sCommunicationrecipientsgroupLabel) {
    this.sCommunicationrecipientsgroupLabel = sCommunicationrecipientsgroupLabel;
    return this;
  }

   /**
   * The label for the Communicationrecipientsgroup
   * @return sCommunicationrecipientsgroupLabel
  **/
  @javax.annotation.Nonnull
  public String getsCommunicationrecipientsgroupLabel() {
    return sCommunicationrecipientsgroupLabel;
  }

  public void setsCommunicationrecipientsgroupLabel(String sCommunicationrecipientsgroupLabel) {
    this.sCommunicationrecipientsgroupLabel = sCommunicationrecipientsgroupLabel;
  }


  public CustomCommunicationrecipientsgroupResponse aObjCommunicationrecipientsrecipient(List<CustomCommunicationrecipientsrecipientResponse> aObjCommunicationrecipientsrecipient) {
    this.aObjCommunicationrecipientsrecipient = aObjCommunicationrecipientsrecipient;
    return this;
  }

  public CustomCommunicationrecipientsgroupResponse addAObjCommunicationrecipientsrecipientItem(CustomCommunicationrecipientsrecipientResponse aObjCommunicationrecipientsrecipientItem) {
    if (this.aObjCommunicationrecipientsrecipient == null) {
      this.aObjCommunicationrecipientsrecipient = new ArrayList<>();
    }
    this.aObjCommunicationrecipientsrecipient.add(aObjCommunicationrecipientsrecipientItem);
    return this;
  }

   /**
   * Get aObjCommunicationrecipientsrecipient
   * @return aObjCommunicationrecipientsrecipient
  **/
  @javax.annotation.Nonnull
  public List<CustomCommunicationrecipientsrecipientResponse> getaObjCommunicationrecipientsrecipient() {
    return aObjCommunicationrecipientsrecipient;
  }

  public void setaObjCommunicationrecipientsrecipient(List<CustomCommunicationrecipientsrecipientResponse> aObjCommunicationrecipientsrecipient) {
    this.aObjCommunicationrecipientsrecipient = aObjCommunicationrecipientsrecipient;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomCommunicationrecipientsgroupResponse customCommunicationrecipientsgroupResponse = (CustomCommunicationrecipientsgroupResponse) o;
    return Objects.equals(this.sCommunicationrecipientsgroupLabel, customCommunicationrecipientsgroupResponse.sCommunicationrecipientsgroupLabel) &&
        Objects.equals(this.aObjCommunicationrecipientsrecipient, customCommunicationrecipientsgroupResponse.aObjCommunicationrecipientsrecipient);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sCommunicationrecipientsgroupLabel, aObjCommunicationrecipientsrecipient);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomCommunicationrecipientsgroupResponse {\n");
    sb.append("    sCommunicationrecipientsgroupLabel: ").append(toIndentedString(sCommunicationrecipientsgroupLabel)).append("\n");
    sb.append("    aObjCommunicationrecipientsrecipient: ").append(toIndentedString(aObjCommunicationrecipientsrecipient)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("sCommunicationrecipientsgroupLabel");
    openapiFields.add("a_objCommunicationrecipientsrecipient");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("sCommunicationrecipientsgroupLabel");
    openapiRequiredFields.add("a_objCommunicationrecipientsrecipient");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to CustomCommunicationrecipientsgroupResponse
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CustomCommunicationrecipientsgroupResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CustomCommunicationrecipientsgroupResponse is not found in the empty JSON string", CustomCommunicationrecipientsgroupResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CustomCommunicationrecipientsgroupResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CustomCommunicationrecipientsgroupResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CustomCommunicationrecipientsgroupResponse.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("sCommunicationrecipientsgroupLabel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sCommunicationrecipientsgroupLabel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sCommunicationrecipientsgroupLabel").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("a_objCommunicationrecipientsrecipient").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `a_objCommunicationrecipientsrecipient` to be an array in the JSON string but got `%s`", jsonObj.get("a_objCommunicationrecipientsrecipient").toString()));
      }

      JsonArray jsonArrayaObjCommunicationrecipientsrecipient = jsonObj.getAsJsonArray("a_objCommunicationrecipientsrecipient");
      // validate the required field `a_objCommunicationrecipientsrecipient` (array)
      for (int i = 0; i < jsonArrayaObjCommunicationrecipientsrecipient.size(); i++) {
        CustomCommunicationrecipientsrecipientResponse.validateJsonElement(jsonArrayaObjCommunicationrecipientsrecipient.get(i));
      };
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomCommunicationrecipientsgroupResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomCommunicationrecipientsgroupResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomCommunicationrecipientsgroupResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomCommunicationrecipientsgroupResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomCommunicationrecipientsgroupResponse>() {
           @Override
           public void write(JsonWriter out, CustomCommunicationrecipientsgroupResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomCommunicationrecipientsgroupResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CustomCommunicationrecipientsgroupResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CustomCommunicationrecipientsgroupResponse
  * @throws IOException if the JSON string is invalid with respect to CustomCommunicationrecipientsgroupResponse
  */
  public static CustomCommunicationrecipientsgroupResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomCommunicationrecipientsgroupResponse.class);
  }

 /**
  * Convert an instance of CustomCommunicationrecipientsgroupResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

