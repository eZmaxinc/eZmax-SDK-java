/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * Payload for POST /1/object/ezsigndocument/{pkiEzsigndocumentID}/createEzsignelementsPositionedByWord
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-05T14:47:58.834564157Z[Etc/UTC]", comments = "Generator version: 7.11.0")
public class EzsigndocumentCreateEzsignelementsPositionedByWordV1ResponseMPayload {
  public static final String SERIALIZED_NAME_A_PKI_EZSIGNSIGNATURE_I_D = "a_pkiEzsignsignatureID";
  @SerializedName(SERIALIZED_NAME_A_PKI_EZSIGNSIGNATURE_I_D)
  @javax.annotation.Nonnull
  private List<Integer> aPkiEzsignsignatureID = new ArrayList<>();

  public static final String SERIALIZED_NAME_A_PKI_EZSIGNFORMFIELDGROUP_I_D = "a_pkiEzsignformfieldgroupID";
  @SerializedName(SERIALIZED_NAME_A_PKI_EZSIGNFORMFIELDGROUP_I_D)
  @javax.annotation.Nonnull
  private List<Integer> aPkiEzsignformfieldgroupID = new ArrayList<>();

  public EzsigndocumentCreateEzsignelementsPositionedByWordV1ResponseMPayload() {
  }

  public EzsigndocumentCreateEzsignelementsPositionedByWordV1ResponseMPayload aPkiEzsignsignatureID(@javax.annotation.Nonnull List<Integer> aPkiEzsignsignatureID) {
    this.aPkiEzsignsignatureID = aPkiEzsignsignatureID;
    return this;
  }

  public EzsigndocumentCreateEzsignelementsPositionedByWordV1ResponseMPayload addAPkiEzsignsignatureIDItem(Integer aPkiEzsignsignatureIDItem) {
    if (this.aPkiEzsignsignatureID == null) {
      this.aPkiEzsignsignatureID = new ArrayList<>();
    }
    this.aPkiEzsignsignatureID.add(aPkiEzsignsignatureIDItem);
    return this;
  }

  /**
   * Get aPkiEzsignsignatureID
   * @return aPkiEzsignsignatureID
   */
  @javax.annotation.Nonnull
  public List<Integer> getaPkiEzsignsignatureID() {
    return aPkiEzsignsignatureID;
  }

  public void setaPkiEzsignsignatureID(@javax.annotation.Nonnull List<Integer> aPkiEzsignsignatureID) {
    this.aPkiEzsignsignatureID = aPkiEzsignsignatureID;
  }


  public EzsigndocumentCreateEzsignelementsPositionedByWordV1ResponseMPayload aPkiEzsignformfieldgroupID(@javax.annotation.Nonnull List<Integer> aPkiEzsignformfieldgroupID) {
    this.aPkiEzsignformfieldgroupID = aPkiEzsignformfieldgroupID;
    return this;
  }

  public EzsigndocumentCreateEzsignelementsPositionedByWordV1ResponseMPayload addAPkiEzsignformfieldgroupIDItem(Integer aPkiEzsignformfieldgroupIDItem) {
    if (this.aPkiEzsignformfieldgroupID == null) {
      this.aPkiEzsignformfieldgroupID = new ArrayList<>();
    }
    this.aPkiEzsignformfieldgroupID.add(aPkiEzsignformfieldgroupIDItem);
    return this;
  }

  /**
   * Get aPkiEzsignformfieldgroupID
   * @return aPkiEzsignformfieldgroupID
   */
  @javax.annotation.Nonnull
  public List<Integer> getaPkiEzsignformfieldgroupID() {
    return aPkiEzsignformfieldgroupID;
  }

  public void setaPkiEzsignformfieldgroupID(@javax.annotation.Nonnull List<Integer> aPkiEzsignformfieldgroupID) {
    this.aPkiEzsignformfieldgroupID = aPkiEzsignformfieldgroupID;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EzsigndocumentCreateEzsignelementsPositionedByWordV1ResponseMPayload ezsigndocumentCreateEzsignelementsPositionedByWordV1ResponseMPayload = (EzsigndocumentCreateEzsignelementsPositionedByWordV1ResponseMPayload) o;
    return Objects.equals(this.aPkiEzsignsignatureID, ezsigndocumentCreateEzsignelementsPositionedByWordV1ResponseMPayload.aPkiEzsignsignatureID) &&
        Objects.equals(this.aPkiEzsignformfieldgroupID, ezsigndocumentCreateEzsignelementsPositionedByWordV1ResponseMPayload.aPkiEzsignformfieldgroupID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aPkiEzsignsignatureID, aPkiEzsignformfieldgroupID);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EzsigndocumentCreateEzsignelementsPositionedByWordV1ResponseMPayload {\n");
    sb.append("    aPkiEzsignsignatureID: ").append(toIndentedString(aPkiEzsignsignatureID)).append("\n");
    sb.append("    aPkiEzsignformfieldgroupID: ").append(toIndentedString(aPkiEzsignformfieldgroupID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("a_pkiEzsignsignatureID");
    openapiFields.add("a_pkiEzsignformfieldgroupID");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("a_pkiEzsignsignatureID");
    openapiRequiredFields.add("a_pkiEzsignformfieldgroupID");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EzsigndocumentCreateEzsignelementsPositionedByWordV1ResponseMPayload
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EzsigndocumentCreateEzsignelementsPositionedByWordV1ResponseMPayload.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EzsigndocumentCreateEzsignelementsPositionedByWordV1ResponseMPayload is not found in the empty JSON string", EzsigndocumentCreateEzsignelementsPositionedByWordV1ResponseMPayload.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EzsigndocumentCreateEzsignelementsPositionedByWordV1ResponseMPayload.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EzsigndocumentCreateEzsignelementsPositionedByWordV1ResponseMPayload` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : EzsigndocumentCreateEzsignelementsPositionedByWordV1ResponseMPayload.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the required json array is present
      if (jsonObj.get("a_pkiEzsignsignatureID") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("a_pkiEzsignsignatureID").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `a_pkiEzsignsignatureID` to be an array in the JSON string but got `%s`", jsonObj.get("a_pkiEzsignsignatureID").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("a_pkiEzsignformfieldgroupID") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("a_pkiEzsignformfieldgroupID").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `a_pkiEzsignformfieldgroupID` to be an array in the JSON string but got `%s`", jsonObj.get("a_pkiEzsignformfieldgroupID").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EzsigndocumentCreateEzsignelementsPositionedByWordV1ResponseMPayload.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EzsigndocumentCreateEzsignelementsPositionedByWordV1ResponseMPayload' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EzsigndocumentCreateEzsignelementsPositionedByWordV1ResponseMPayload> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EzsigndocumentCreateEzsignelementsPositionedByWordV1ResponseMPayload.class));

       return (TypeAdapter<T>) new TypeAdapter<EzsigndocumentCreateEzsignelementsPositionedByWordV1ResponseMPayload>() {
           @Override
           public void write(JsonWriter out, EzsigndocumentCreateEzsignelementsPositionedByWordV1ResponseMPayload value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EzsigndocumentCreateEzsignelementsPositionedByWordV1ResponseMPayload read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EzsigndocumentCreateEzsignelementsPositionedByWordV1ResponseMPayload given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EzsigndocumentCreateEzsignelementsPositionedByWordV1ResponseMPayload
   * @throws IOException if the JSON string is invalid with respect to EzsigndocumentCreateEzsignelementsPositionedByWordV1ResponseMPayload
   */
  public static EzsigndocumentCreateEzsignelementsPositionedByWordV1ResponseMPayload fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EzsigndocumentCreateEzsignelementsPositionedByWordV1ResponseMPayload.class);
  }

  /**
   * Convert an instance of EzsigndocumentCreateEzsignelementsPositionedByWordV1ResponseMPayload to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

