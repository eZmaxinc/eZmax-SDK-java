/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.18
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.ezmax.api.model.CommunicationattachmentResponseCompound;
import com.ezmax.api.model.CommunicationexternalrecipientResponseCompound;
import com.ezmax.api.model.CommunicationrecipientResponseCompound;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * CommunicationResponseCompoundAllOf
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-07-27T20:21:45.086864663Z[Etc/UTC]")
public class CommunicationResponseCompoundAllOf {
  public static final String SERIALIZED_NAME_A_OBJ_COMMUNICATIONATTACHMENT = "a_objCommunicationattachment";
  @SerializedName(SERIALIZED_NAME_A_OBJ_COMMUNICATIONATTACHMENT)
  private List<CommunicationattachmentResponseCompound> aObjCommunicationattachment = new ArrayList<>();

  public static final String SERIALIZED_NAME_A_OBJ_COMMUNICATIONRECIPIENT = "a_objCommunicationrecipient";
  @SerializedName(SERIALIZED_NAME_A_OBJ_COMMUNICATIONRECIPIENT)
  private List<CommunicationrecipientResponseCompound> aObjCommunicationrecipient = new ArrayList<>();

  public static final String SERIALIZED_NAME_A_OBJ_COMMUNICATIONEXTERNALRECIPIENT = "a_objCommunicationexternalrecipient";
  @SerializedName(SERIALIZED_NAME_A_OBJ_COMMUNICATIONEXTERNALRECIPIENT)
  private List<CommunicationexternalrecipientResponseCompound> aObjCommunicationexternalrecipient = new ArrayList<>();

  public CommunicationResponseCompoundAllOf() {
  }

  public CommunicationResponseCompoundAllOf aObjCommunicationattachment(List<CommunicationattachmentResponseCompound> aObjCommunicationattachment) {
    
    this.aObjCommunicationattachment = aObjCommunicationattachment;
    return this;
  }

  public CommunicationResponseCompoundAllOf addAObjCommunicationattachmentItem(CommunicationattachmentResponseCompound aObjCommunicationattachmentItem) {
    if (this.aObjCommunicationattachment == null) {
      this.aObjCommunicationattachment = new ArrayList<>();
    }
    this.aObjCommunicationattachment.add(aObjCommunicationattachmentItem);
    return this;
  }

   /**
   * Get aObjCommunicationattachment
   * @return aObjCommunicationattachment
  **/
  @javax.annotation.Nonnull
  public List<CommunicationattachmentResponseCompound> getaObjCommunicationattachment() {
    return aObjCommunicationattachment;
  }


  public void setaObjCommunicationattachment(List<CommunicationattachmentResponseCompound> aObjCommunicationattachment) {
    this.aObjCommunicationattachment = aObjCommunicationattachment;
  }


  public CommunicationResponseCompoundAllOf aObjCommunicationrecipient(List<CommunicationrecipientResponseCompound> aObjCommunicationrecipient) {
    
    this.aObjCommunicationrecipient = aObjCommunicationrecipient;
    return this;
  }

  public CommunicationResponseCompoundAllOf addAObjCommunicationrecipientItem(CommunicationrecipientResponseCompound aObjCommunicationrecipientItem) {
    if (this.aObjCommunicationrecipient == null) {
      this.aObjCommunicationrecipient = new ArrayList<>();
    }
    this.aObjCommunicationrecipient.add(aObjCommunicationrecipientItem);
    return this;
  }

   /**
   * Get aObjCommunicationrecipient
   * @return aObjCommunicationrecipient
  **/
  @javax.annotation.Nonnull
  public List<CommunicationrecipientResponseCompound> getaObjCommunicationrecipient() {
    return aObjCommunicationrecipient;
  }


  public void setaObjCommunicationrecipient(List<CommunicationrecipientResponseCompound> aObjCommunicationrecipient) {
    this.aObjCommunicationrecipient = aObjCommunicationrecipient;
  }


  public CommunicationResponseCompoundAllOf aObjCommunicationexternalrecipient(List<CommunicationexternalrecipientResponseCompound> aObjCommunicationexternalrecipient) {
    
    this.aObjCommunicationexternalrecipient = aObjCommunicationexternalrecipient;
    return this;
  }

  public CommunicationResponseCompoundAllOf addAObjCommunicationexternalrecipientItem(CommunicationexternalrecipientResponseCompound aObjCommunicationexternalrecipientItem) {
    if (this.aObjCommunicationexternalrecipient == null) {
      this.aObjCommunicationexternalrecipient = new ArrayList<>();
    }
    this.aObjCommunicationexternalrecipient.add(aObjCommunicationexternalrecipientItem);
    return this;
  }

   /**
   * Get aObjCommunicationexternalrecipient
   * @return aObjCommunicationexternalrecipient
  **/
  @javax.annotation.Nonnull
  public List<CommunicationexternalrecipientResponseCompound> getaObjCommunicationexternalrecipient() {
    return aObjCommunicationexternalrecipient;
  }


  public void setaObjCommunicationexternalrecipient(List<CommunicationexternalrecipientResponseCompound> aObjCommunicationexternalrecipient) {
    this.aObjCommunicationexternalrecipient = aObjCommunicationexternalrecipient;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommunicationResponseCompoundAllOf communicationResponseCompoundAllOf = (CommunicationResponseCompoundAllOf) o;
    return Objects.equals(this.aObjCommunicationattachment, communicationResponseCompoundAllOf.aObjCommunicationattachment) &&
        Objects.equals(this.aObjCommunicationrecipient, communicationResponseCompoundAllOf.aObjCommunicationrecipient) &&
        Objects.equals(this.aObjCommunicationexternalrecipient, communicationResponseCompoundAllOf.aObjCommunicationexternalrecipient);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aObjCommunicationattachment, aObjCommunicationrecipient, aObjCommunicationexternalrecipient);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommunicationResponseCompoundAllOf {\n");
    sb.append("    aObjCommunicationattachment: ").append(toIndentedString(aObjCommunicationattachment)).append("\n");
    sb.append("    aObjCommunicationrecipient: ").append(toIndentedString(aObjCommunicationrecipient)).append("\n");
    sb.append("    aObjCommunicationexternalrecipient: ").append(toIndentedString(aObjCommunicationexternalrecipient)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("a_objCommunicationattachment");
    openapiFields.add("a_objCommunicationrecipient");
    openapiFields.add("a_objCommunicationexternalrecipient");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("a_objCommunicationattachment");
    openapiRequiredFields.add("a_objCommunicationrecipient");
    openapiRequiredFields.add("a_objCommunicationexternalrecipient");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CommunicationResponseCompoundAllOf
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CommunicationResponseCompoundAllOf.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CommunicationResponseCompoundAllOf is not found in the empty JSON string", CommunicationResponseCompoundAllOf.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!CommunicationResponseCompoundAllOf.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CommunicationResponseCompoundAllOf` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CommunicationResponseCompoundAllOf.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      // ensure the json data is an array
      if (!jsonObj.get("a_objCommunicationattachment").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `a_objCommunicationattachment` to be an array in the JSON string but got `%s`", jsonObj.get("a_objCommunicationattachment").toString()));
      }

      JsonArray jsonArrayaObjCommunicationattachment = jsonObj.getAsJsonArray("a_objCommunicationattachment");
      // validate the required field `a_objCommunicationattachment` (array)
      for (int i = 0; i < jsonArrayaObjCommunicationattachment.size(); i++) {
        CommunicationattachmentResponseCompound.validateJsonObject(jsonArrayaObjCommunicationattachment.get(i).getAsJsonObject());
      };
      // ensure the json data is an array
      if (!jsonObj.get("a_objCommunicationrecipient").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `a_objCommunicationrecipient` to be an array in the JSON string but got `%s`", jsonObj.get("a_objCommunicationrecipient").toString()));
      }

      JsonArray jsonArrayaObjCommunicationrecipient = jsonObj.getAsJsonArray("a_objCommunicationrecipient");
      // validate the required field `a_objCommunicationrecipient` (array)
      for (int i = 0; i < jsonArrayaObjCommunicationrecipient.size(); i++) {
        CommunicationrecipientResponseCompound.validateJsonObject(jsonArrayaObjCommunicationrecipient.get(i).getAsJsonObject());
      };
      // ensure the json data is an array
      if (!jsonObj.get("a_objCommunicationexternalrecipient").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `a_objCommunicationexternalrecipient` to be an array in the JSON string but got `%s`", jsonObj.get("a_objCommunicationexternalrecipient").toString()));
      }

      JsonArray jsonArrayaObjCommunicationexternalrecipient = jsonObj.getAsJsonArray("a_objCommunicationexternalrecipient");
      // validate the required field `a_objCommunicationexternalrecipient` (array)
      for (int i = 0; i < jsonArrayaObjCommunicationexternalrecipient.size(); i++) {
        CommunicationexternalrecipientResponseCompound.validateJsonObject(jsonArrayaObjCommunicationexternalrecipient.get(i).getAsJsonObject());
      };
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CommunicationResponseCompoundAllOf.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CommunicationResponseCompoundAllOf' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CommunicationResponseCompoundAllOf> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CommunicationResponseCompoundAllOf.class));

       return (TypeAdapter<T>) new TypeAdapter<CommunicationResponseCompoundAllOf>() {
           @Override
           public void write(JsonWriter out, CommunicationResponseCompoundAllOf value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CommunicationResponseCompoundAllOf read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CommunicationResponseCompoundAllOf given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CommunicationResponseCompoundAllOf
  * @throws IOException if the JSON string is invalid with respect to CommunicationResponseCompoundAllOf
  */
  public static CommunicationResponseCompoundAllOf fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CommunicationResponseCompoundAllOf.class);
  }

 /**
  * Convert an instance of CommunicationResponseCompoundAllOf to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

