/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.ezmax.api.model.FieldESystemconfigurationEzsign;
import com.ezmax.api.model.FieldESystemconfigurationEzsignofficeplan;
import com.ezmax.api.model.FieldESystemconfigurationLanguage1;
import com.ezmax.api.model.FieldESystemconfigurationLanguage2;
import com.ezmax.api.model.FieldESystemconfigurationNewexternaluseraction;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * A Systemconfiguration Object and children
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-28T01:27:41.601414258Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class SystemconfigurationRequestCompound {
  public static final String SERIALIZED_NAME_PKI_SYSTEMCONFIGURATION_I_D = "pkiSystemconfigurationID";
  @SerializedName(SERIALIZED_NAME_PKI_SYSTEMCONFIGURATION_I_D)
  private Integer pkiSystemconfigurationID;

  public static final String SERIALIZED_NAME_E_SYSTEMCONFIGURATION_NEWEXTERNALUSERACTION = "eSystemconfigurationNewexternaluseraction";
  @SerializedName(SERIALIZED_NAME_E_SYSTEMCONFIGURATION_NEWEXTERNALUSERACTION)
  private FieldESystemconfigurationNewexternaluseraction eSystemconfigurationNewexternaluseraction;

  public static final String SERIALIZED_NAME_E_SYSTEMCONFIGURATION_LANGUAGE1 = "eSystemconfigurationLanguage1";
  @SerializedName(SERIALIZED_NAME_E_SYSTEMCONFIGURATION_LANGUAGE1)
  private FieldESystemconfigurationLanguage1 eSystemconfigurationLanguage1;

  public static final String SERIALIZED_NAME_E_SYSTEMCONFIGURATION_LANGUAGE2 = "eSystemconfigurationLanguage2";
  @SerializedName(SERIALIZED_NAME_E_SYSTEMCONFIGURATION_LANGUAGE2)
  private FieldESystemconfigurationLanguage2 eSystemconfigurationLanguage2;

  public static final String SERIALIZED_NAME_E_SYSTEMCONFIGURATION_EZSIGN = "eSystemconfigurationEzsign";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_E_SYSTEMCONFIGURATION_EZSIGN)
  private FieldESystemconfigurationEzsign eSystemconfigurationEzsign;

  public static final String SERIALIZED_NAME_E_SYSTEMCONFIGURATION_EZSIGNOFFICEPLAN = "eSystemconfigurationEzsignofficeplan";
  @SerializedName(SERIALIZED_NAME_E_SYSTEMCONFIGURATION_EZSIGNOFFICEPLAN)
  private FieldESystemconfigurationEzsignofficeplan eSystemconfigurationEzsignofficeplan;

  public static final String SERIALIZED_NAME_B_SYSTEMCONFIGURATION_EZSIGNPAIDBYOFFICE = "bSystemconfigurationEzsignpaidbyoffice";
  @SerializedName(SERIALIZED_NAME_B_SYSTEMCONFIGURATION_EZSIGNPAIDBYOFFICE)
  private Boolean bSystemconfigurationEzsignpaidbyoffice;

  public static final String SERIALIZED_NAME_B_SYSTEMCONFIGURATION_EZSIGNPERSONNAL = "bSystemconfigurationEzsignpersonnal";
  @SerializedName(SERIALIZED_NAME_B_SYSTEMCONFIGURATION_EZSIGNPERSONNAL)
  private Boolean bSystemconfigurationEzsignpersonnal;

  public static final String SERIALIZED_NAME_B_SYSTEMCONFIGURATION_SSPR = "bSystemconfigurationSspr";
  @SerializedName(SERIALIZED_NAME_B_SYSTEMCONFIGURATION_SSPR)
  private Boolean bSystemconfigurationSspr;

  public static final String SERIALIZED_NAME_DT_SYSTEMCONFIGURATION_READONLYEXPIRATIONSTART = "dtSystemconfigurationReadonlyexpirationstart";
  @SerializedName(SERIALIZED_NAME_DT_SYSTEMCONFIGURATION_READONLYEXPIRATIONSTART)
  private String dtSystemconfigurationReadonlyexpirationstart;

  public static final String SERIALIZED_NAME_DT_SYSTEMCONFIGURATION_READONLYEXPIRATIONEND = "dtSystemconfigurationReadonlyexpirationend";
  @SerializedName(SERIALIZED_NAME_DT_SYSTEMCONFIGURATION_READONLYEXPIRATIONEND)
  private String dtSystemconfigurationReadonlyexpirationend;

  public SystemconfigurationRequestCompound() {
  }

  public SystemconfigurationRequestCompound pkiSystemconfigurationID(Integer pkiSystemconfigurationID) {
    this.pkiSystemconfigurationID = pkiSystemconfigurationID;
    return this;
  }

   /**
   * The unique ID of the Systemconfiguration
   * minimum: 1
   * maximum: 1
   * @return pkiSystemconfigurationID
  **/
  @javax.annotation.Nullable
  public Integer getPkiSystemconfigurationID() {
    return pkiSystemconfigurationID;
  }

  public void setPkiSystemconfigurationID(Integer pkiSystemconfigurationID) {
    this.pkiSystemconfigurationID = pkiSystemconfigurationID;
  }


  public SystemconfigurationRequestCompound eSystemconfigurationNewexternaluseraction(FieldESystemconfigurationNewexternaluseraction eSystemconfigurationNewexternaluseraction) {
    this.eSystemconfigurationNewexternaluseraction = eSystemconfigurationNewexternaluseraction;
    return this;
  }

   /**
   * Get eSystemconfigurationNewexternaluseraction
   * @return eSystemconfigurationNewexternaluseraction
  **/
  @javax.annotation.Nonnull
  public FieldESystemconfigurationNewexternaluseraction geteSystemconfigurationNewexternaluseraction() {
    return eSystemconfigurationNewexternaluseraction;
  }

  public void seteSystemconfigurationNewexternaluseraction(FieldESystemconfigurationNewexternaluseraction eSystemconfigurationNewexternaluseraction) {
    this.eSystemconfigurationNewexternaluseraction = eSystemconfigurationNewexternaluseraction;
  }


  public SystemconfigurationRequestCompound eSystemconfigurationLanguage1(FieldESystemconfigurationLanguage1 eSystemconfigurationLanguage1) {
    this.eSystemconfigurationLanguage1 = eSystemconfigurationLanguage1;
    return this;
  }

   /**
   * Get eSystemconfigurationLanguage1
   * @return eSystemconfigurationLanguage1
  **/
  @javax.annotation.Nonnull
  public FieldESystemconfigurationLanguage1 geteSystemconfigurationLanguage1() {
    return eSystemconfigurationLanguage1;
  }

  public void seteSystemconfigurationLanguage1(FieldESystemconfigurationLanguage1 eSystemconfigurationLanguage1) {
    this.eSystemconfigurationLanguage1 = eSystemconfigurationLanguage1;
  }


  public SystemconfigurationRequestCompound eSystemconfigurationLanguage2(FieldESystemconfigurationLanguage2 eSystemconfigurationLanguage2) {
    this.eSystemconfigurationLanguage2 = eSystemconfigurationLanguage2;
    return this;
  }

   /**
   * Get eSystemconfigurationLanguage2
   * @return eSystemconfigurationLanguage2
  **/
  @javax.annotation.Nonnull
  public FieldESystemconfigurationLanguage2 geteSystemconfigurationLanguage2() {
    return eSystemconfigurationLanguage2;
  }

  public void seteSystemconfigurationLanguage2(FieldESystemconfigurationLanguage2 eSystemconfigurationLanguage2) {
    this.eSystemconfigurationLanguage2 = eSystemconfigurationLanguage2;
  }


  @Deprecated
  public SystemconfigurationRequestCompound eSystemconfigurationEzsign(FieldESystemconfigurationEzsign eSystemconfigurationEzsign) {
    this.eSystemconfigurationEzsign = eSystemconfigurationEzsign;
    return this;
  }

   /**
   * Get eSystemconfigurationEzsign
   * @return eSystemconfigurationEzsign
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nullable
  public FieldESystemconfigurationEzsign geteSystemconfigurationEzsign() {
    return eSystemconfigurationEzsign;
  }

  @Deprecated
  public void seteSystemconfigurationEzsign(FieldESystemconfigurationEzsign eSystemconfigurationEzsign) {
    this.eSystemconfigurationEzsign = eSystemconfigurationEzsign;
  }


  public SystemconfigurationRequestCompound eSystemconfigurationEzsignofficeplan(FieldESystemconfigurationEzsignofficeplan eSystemconfigurationEzsignofficeplan) {
    this.eSystemconfigurationEzsignofficeplan = eSystemconfigurationEzsignofficeplan;
    return this;
  }

   /**
   * Get eSystemconfigurationEzsignofficeplan
   * @return eSystemconfigurationEzsignofficeplan
  **/
  @javax.annotation.Nullable
  public FieldESystemconfigurationEzsignofficeplan geteSystemconfigurationEzsignofficeplan() {
    return eSystemconfigurationEzsignofficeplan;
  }

  public void seteSystemconfigurationEzsignofficeplan(FieldESystemconfigurationEzsignofficeplan eSystemconfigurationEzsignofficeplan) {
    this.eSystemconfigurationEzsignofficeplan = eSystemconfigurationEzsignofficeplan;
  }


  public SystemconfigurationRequestCompound bSystemconfigurationEzsignpaidbyoffice(Boolean bSystemconfigurationEzsignpaidbyoffice) {
    this.bSystemconfigurationEzsignpaidbyoffice = bSystemconfigurationEzsignpaidbyoffice;
    return this;
  }

   /**
   * Whether if Ezsign is paid by the company or not
   * @return bSystemconfigurationEzsignpaidbyoffice
  **/
  @javax.annotation.Nullable
  public Boolean getbSystemconfigurationEzsignpaidbyoffice() {
    return bSystemconfigurationEzsignpaidbyoffice;
  }

  public void setbSystemconfigurationEzsignpaidbyoffice(Boolean bSystemconfigurationEzsignpaidbyoffice) {
    this.bSystemconfigurationEzsignpaidbyoffice = bSystemconfigurationEzsignpaidbyoffice;
  }


  public SystemconfigurationRequestCompound bSystemconfigurationEzsignpersonnal(Boolean bSystemconfigurationEzsignpersonnal) {
    this.bSystemconfigurationEzsignpersonnal = bSystemconfigurationEzsignpersonnal;
    return this;
  }

   /**
   * Whether if we allow the creation of personal files in eZsign
   * @return bSystemconfigurationEzsignpersonnal
  **/
  @javax.annotation.Nonnull
  public Boolean getbSystemconfigurationEzsignpersonnal() {
    return bSystemconfigurationEzsignpersonnal;
  }

  public void setbSystemconfigurationEzsignpersonnal(Boolean bSystemconfigurationEzsignpersonnal) {
    this.bSystemconfigurationEzsignpersonnal = bSystemconfigurationEzsignpersonnal;
  }


  public SystemconfigurationRequestCompound bSystemconfigurationSspr(Boolean bSystemconfigurationSspr) {
    this.bSystemconfigurationSspr = bSystemconfigurationSspr;
    return this;
  }

   /**
   * Whether if we allow SSPR
   * @return bSystemconfigurationSspr
  **/
  @javax.annotation.Nonnull
  public Boolean getbSystemconfigurationSspr() {
    return bSystemconfigurationSspr;
  }

  public void setbSystemconfigurationSspr(Boolean bSystemconfigurationSspr) {
    this.bSystemconfigurationSspr = bSystemconfigurationSspr;
  }


  public SystemconfigurationRequestCompound dtSystemconfigurationReadonlyexpirationstart(String dtSystemconfigurationReadonlyexpirationstart) {
    this.dtSystemconfigurationReadonlyexpirationstart = dtSystemconfigurationReadonlyexpirationstart;
    return this;
  }

   /**
   * The start date where the system will be in read only
   * @return dtSystemconfigurationReadonlyexpirationstart
  **/
  @javax.annotation.Nullable
  public String getDtSystemconfigurationReadonlyexpirationstart() {
    return dtSystemconfigurationReadonlyexpirationstart;
  }

  public void setDtSystemconfigurationReadonlyexpirationstart(String dtSystemconfigurationReadonlyexpirationstart) {
    this.dtSystemconfigurationReadonlyexpirationstart = dtSystemconfigurationReadonlyexpirationstart;
  }


  public SystemconfigurationRequestCompound dtSystemconfigurationReadonlyexpirationend(String dtSystemconfigurationReadonlyexpirationend) {
    this.dtSystemconfigurationReadonlyexpirationend = dtSystemconfigurationReadonlyexpirationend;
    return this;
  }

   /**
   * The end date where the system will be in read only
   * @return dtSystemconfigurationReadonlyexpirationend
  **/
  @javax.annotation.Nullable
  public String getDtSystemconfigurationReadonlyexpirationend() {
    return dtSystemconfigurationReadonlyexpirationend;
  }

  public void setDtSystemconfigurationReadonlyexpirationend(String dtSystemconfigurationReadonlyexpirationend) {
    this.dtSystemconfigurationReadonlyexpirationend = dtSystemconfigurationReadonlyexpirationend;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SystemconfigurationRequestCompound systemconfigurationRequestCompound = (SystemconfigurationRequestCompound) o;
    return Objects.equals(this.pkiSystemconfigurationID, systemconfigurationRequestCompound.pkiSystemconfigurationID) &&
        Objects.equals(this.eSystemconfigurationNewexternaluseraction, systemconfigurationRequestCompound.eSystemconfigurationNewexternaluseraction) &&
        Objects.equals(this.eSystemconfigurationLanguage1, systemconfigurationRequestCompound.eSystemconfigurationLanguage1) &&
        Objects.equals(this.eSystemconfigurationLanguage2, systemconfigurationRequestCompound.eSystemconfigurationLanguage2) &&
        Objects.equals(this.eSystemconfigurationEzsign, systemconfigurationRequestCompound.eSystemconfigurationEzsign) &&
        Objects.equals(this.eSystemconfigurationEzsignofficeplan, systemconfigurationRequestCompound.eSystemconfigurationEzsignofficeplan) &&
        Objects.equals(this.bSystemconfigurationEzsignpaidbyoffice, systemconfigurationRequestCompound.bSystemconfigurationEzsignpaidbyoffice) &&
        Objects.equals(this.bSystemconfigurationEzsignpersonnal, systemconfigurationRequestCompound.bSystemconfigurationEzsignpersonnal) &&
        Objects.equals(this.bSystemconfigurationSspr, systemconfigurationRequestCompound.bSystemconfigurationSspr) &&
        Objects.equals(this.dtSystemconfigurationReadonlyexpirationstart, systemconfigurationRequestCompound.dtSystemconfigurationReadonlyexpirationstart) &&
        Objects.equals(this.dtSystemconfigurationReadonlyexpirationend, systemconfigurationRequestCompound.dtSystemconfigurationReadonlyexpirationend);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pkiSystemconfigurationID, eSystemconfigurationNewexternaluseraction, eSystemconfigurationLanguage1, eSystemconfigurationLanguage2, eSystemconfigurationEzsign, eSystemconfigurationEzsignofficeplan, bSystemconfigurationEzsignpaidbyoffice, bSystemconfigurationEzsignpersonnal, bSystemconfigurationSspr, dtSystemconfigurationReadonlyexpirationstart, dtSystemconfigurationReadonlyexpirationend);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SystemconfigurationRequestCompound {\n");
    sb.append("    pkiSystemconfigurationID: ").append(toIndentedString(pkiSystemconfigurationID)).append("\n");
    sb.append("    eSystemconfigurationNewexternaluseraction: ").append(toIndentedString(eSystemconfigurationNewexternaluseraction)).append("\n");
    sb.append("    eSystemconfigurationLanguage1: ").append(toIndentedString(eSystemconfigurationLanguage1)).append("\n");
    sb.append("    eSystemconfigurationLanguage2: ").append(toIndentedString(eSystemconfigurationLanguage2)).append("\n");
    sb.append("    eSystemconfigurationEzsign: ").append(toIndentedString(eSystemconfigurationEzsign)).append("\n");
    sb.append("    eSystemconfigurationEzsignofficeplan: ").append(toIndentedString(eSystemconfigurationEzsignofficeplan)).append("\n");
    sb.append("    bSystemconfigurationEzsignpaidbyoffice: ").append(toIndentedString(bSystemconfigurationEzsignpaidbyoffice)).append("\n");
    sb.append("    bSystemconfigurationEzsignpersonnal: ").append(toIndentedString(bSystemconfigurationEzsignpersonnal)).append("\n");
    sb.append("    bSystemconfigurationSspr: ").append(toIndentedString(bSystemconfigurationSspr)).append("\n");
    sb.append("    dtSystemconfigurationReadonlyexpirationstart: ").append(toIndentedString(dtSystemconfigurationReadonlyexpirationstart)).append("\n");
    sb.append("    dtSystemconfigurationReadonlyexpirationend: ").append(toIndentedString(dtSystemconfigurationReadonlyexpirationend)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pkiSystemconfigurationID");
    openapiFields.add("eSystemconfigurationNewexternaluseraction");
    openapiFields.add("eSystemconfigurationLanguage1");
    openapiFields.add("eSystemconfigurationLanguage2");
    openapiFields.add("eSystemconfigurationEzsign");
    openapiFields.add("eSystemconfigurationEzsignofficeplan");
    openapiFields.add("bSystemconfigurationEzsignpaidbyoffice");
    openapiFields.add("bSystemconfigurationEzsignpersonnal");
    openapiFields.add("bSystemconfigurationSspr");
    openapiFields.add("dtSystemconfigurationReadonlyexpirationstart");
    openapiFields.add("dtSystemconfigurationReadonlyexpirationend");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("eSystemconfigurationNewexternaluseraction");
    openapiRequiredFields.add("eSystemconfigurationLanguage1");
    openapiRequiredFields.add("eSystemconfigurationLanguage2");
    openapiRequiredFields.add("bSystemconfigurationEzsignpersonnal");
    openapiRequiredFields.add("bSystemconfigurationSspr");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to SystemconfigurationRequestCompound
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SystemconfigurationRequestCompound.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SystemconfigurationRequestCompound is not found in the empty JSON string", SystemconfigurationRequestCompound.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SystemconfigurationRequestCompound.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SystemconfigurationRequestCompound` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : SystemconfigurationRequestCompound.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `eSystemconfigurationNewexternaluseraction`
      FieldESystemconfigurationNewexternaluseraction.validateJsonElement(jsonObj.get("eSystemconfigurationNewexternaluseraction"));
      // validate the required field `eSystemconfigurationLanguage1`
      FieldESystemconfigurationLanguage1.validateJsonElement(jsonObj.get("eSystemconfigurationLanguage1"));
      // validate the required field `eSystemconfigurationLanguage2`
      FieldESystemconfigurationLanguage2.validateJsonElement(jsonObj.get("eSystemconfigurationLanguage2"));
      // validate the optional field `eSystemconfigurationEzsign`
      if (jsonObj.get("eSystemconfigurationEzsign") != null && !jsonObj.get("eSystemconfigurationEzsign").isJsonNull()) {
        FieldESystemconfigurationEzsign.validateJsonElement(jsonObj.get("eSystemconfigurationEzsign"));
      }
      // validate the optional field `eSystemconfigurationEzsignofficeplan`
      if (jsonObj.get("eSystemconfigurationEzsignofficeplan") != null && !jsonObj.get("eSystemconfigurationEzsignofficeplan").isJsonNull()) {
        FieldESystemconfigurationEzsignofficeplan.validateJsonElement(jsonObj.get("eSystemconfigurationEzsignofficeplan"));
      }
      if ((jsonObj.get("dtSystemconfigurationReadonlyexpirationstart") != null && !jsonObj.get("dtSystemconfigurationReadonlyexpirationstart").isJsonNull()) && !jsonObj.get("dtSystemconfigurationReadonlyexpirationstart").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dtSystemconfigurationReadonlyexpirationstart` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dtSystemconfigurationReadonlyexpirationstart").toString()));
      }
      if ((jsonObj.get("dtSystemconfigurationReadonlyexpirationend") != null && !jsonObj.get("dtSystemconfigurationReadonlyexpirationend").isJsonNull()) && !jsonObj.get("dtSystemconfigurationReadonlyexpirationend").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dtSystemconfigurationReadonlyexpirationend` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dtSystemconfigurationReadonlyexpirationend").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SystemconfigurationRequestCompound.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SystemconfigurationRequestCompound' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SystemconfigurationRequestCompound> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SystemconfigurationRequestCompound.class));

       return (TypeAdapter<T>) new TypeAdapter<SystemconfigurationRequestCompound>() {
           @Override
           public void write(JsonWriter out, SystemconfigurationRequestCompound value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SystemconfigurationRequestCompound read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SystemconfigurationRequestCompound given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SystemconfigurationRequestCompound
  * @throws IOException if the JSON string is invalid with respect to SystemconfigurationRequestCompound
  */
  public static SystemconfigurationRequestCompound fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SystemconfigurationRequestCompound.class);
  }

 /**
  * Convert an instance of SystemconfigurationRequestCompound to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

