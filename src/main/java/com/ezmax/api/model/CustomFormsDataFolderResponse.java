/*
 * eZmax API Definition
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.4
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.ezmax.api.model.CustomFormDataDocumentResponse;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * A forms Data Folder Object
 */
@ApiModel(description = "A forms Data Folder Object")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-02-20T18:10:31.233662Z[Etc/UTC]")
public class CustomFormsDataFolderResponse {
  public static final String SERIALIZED_NAME_PKI_EZSIGNFOLDER_I_D = "pkiEzsignfolderID";
  @SerializedName(SERIALIZED_NAME_PKI_EZSIGNFOLDER_I_D)
  private Integer pkiEzsignfolderID;

  public static final String SERIALIZED_NAME_S_EZSIGNFOLDER_DESCRIPTION = "sEzsignfolderDescription";
  @SerializedName(SERIALIZED_NAME_S_EZSIGNFOLDER_DESCRIPTION)
  private String sEzsignfolderDescription;

  public static final String SERIALIZED_NAME_A_OBJ_FORM_DATA_DOCUMENT = "a_objFormDataDocument";
  @SerializedName(SERIALIZED_NAME_A_OBJ_FORM_DATA_DOCUMENT)
  private List<CustomFormDataDocumentResponse> aObjFormDataDocument = new ArrayList<>();

  public CustomFormsDataFolderResponse() { 
  }

  public CustomFormsDataFolderResponse pkiEzsignfolderID(Integer pkiEzsignfolderID) {
    
    this.pkiEzsignfolderID = pkiEzsignfolderID;
    return this;
  }

   /**
   * The unique ID of the Ezsignfolder
   * @return pkiEzsignfolderID
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "33", required = true, value = "The unique ID of the Ezsignfolder")

  public Integer getPkiEzsignfolderID() {
    return pkiEzsignfolderID;
  }


  public void setPkiEzsignfolderID(Integer pkiEzsignfolderID) {
    this.pkiEzsignfolderID = pkiEzsignfolderID;
  }


  public CustomFormsDataFolderResponse sEzsignfolderDescription(String sEzsignfolderDescription) {
    
    this.sEzsignfolderDescription = sEzsignfolderDescription;
    return this;
  }

   /**
   * The description of the Ezsignfolder
   * @return sEzsignfolderDescription
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "Test eZsign Folder", required = true, value = "The description of the Ezsignfolder")

  public String getsEzsignfolderDescription() {
    return sEzsignfolderDescription;
  }


  public void setsEzsignfolderDescription(String sEzsignfolderDescription) {
    this.sEzsignfolderDescription = sEzsignfolderDescription;
  }


  public CustomFormsDataFolderResponse aObjFormDataDocument(List<CustomFormDataDocumentResponse> aObjFormDataDocument) {
    
    this.aObjFormDataDocument = aObjFormDataDocument;
    return this;
  }

  public CustomFormsDataFolderResponse addAObjFormDataDocumentItem(CustomFormDataDocumentResponse aObjFormDataDocumentItem) {
    this.aObjFormDataDocument.add(aObjFormDataDocumentItem);
    return this;
  }

   /**
   * Get aObjFormDataDocument
   * @return aObjFormDataDocument
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<CustomFormDataDocumentResponse> getaObjFormDataDocument() {
    return aObjFormDataDocument;
  }


  public void setaObjFormDataDocument(List<CustomFormDataDocumentResponse> aObjFormDataDocument) {
    this.aObjFormDataDocument = aObjFormDataDocument;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomFormsDataFolderResponse customFormsDataFolderResponse = (CustomFormsDataFolderResponse) o;
    return Objects.equals(this.pkiEzsignfolderID, customFormsDataFolderResponse.pkiEzsignfolderID) &&
        Objects.equals(this.sEzsignfolderDescription, customFormsDataFolderResponse.sEzsignfolderDescription) &&
        Objects.equals(this.aObjFormDataDocument, customFormsDataFolderResponse.aObjFormDataDocument);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pkiEzsignfolderID, sEzsignfolderDescription, aObjFormDataDocument);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomFormsDataFolderResponse {\n");
    sb.append("    pkiEzsignfolderID: ").append(toIndentedString(pkiEzsignfolderID)).append("\n");
    sb.append("    sEzsignfolderDescription: ").append(toIndentedString(sEzsignfolderDescription)).append("\n");
    sb.append("    aObjFormDataDocument: ").append(toIndentedString(aObjFormDataDocument)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pkiEzsignfolderID");
    openapiFields.add("sEzsignfolderDescription");
    openapiFields.add("a_objFormDataDocument");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("pkiEzsignfolderID");
    openapiRequiredFields.add("sEzsignfolderDescription");
    openapiRequiredFields.add("a_objFormDataDocument");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CustomFormsDataFolderResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (CustomFormsDataFolderResponse.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has reuqired fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in CustomFormsDataFolderResponse is not found in the empty JSON string", CustomFormsDataFolderResponse.openapiRequiredFields.toString()));
        }
      }
      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!CustomFormsDataFolderResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CustomFormsDataFolderResponse` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CustomFormsDataFolderResponse.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      JsonArray jsonArrayaObjFormDataDocument = jsonObj.getAsJsonArray("a_objFormDataDocument");
      // validate the optional field `a_objFormDataDocument` (array)
      if (jsonArrayaObjFormDataDocument != null) {
        for (int i = 0; i < jsonArrayaObjFormDataDocument.size(); i++) {
          CustomFormDataDocumentResponse.validateJsonObject(jsonArrayaObjFormDataDocument.get(i).getAsJsonObject());
        };
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomFormsDataFolderResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomFormsDataFolderResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomFormsDataFolderResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomFormsDataFolderResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomFormsDataFolderResponse>() {
           @Override
           public void write(JsonWriter out, CustomFormsDataFolderResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomFormsDataFolderResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CustomFormsDataFolderResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CustomFormsDataFolderResponse
  * @throws IOException if the JSON string is invalid with respect to CustomFormsDataFolderResponse
  */
  public static CustomFormsDataFolderResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomFormsDataFolderResponse.class);
  }

 /**
  * Convert an instance of CustomFormsDataFolderResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

