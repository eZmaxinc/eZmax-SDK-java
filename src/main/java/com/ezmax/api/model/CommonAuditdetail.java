/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.17
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * Gives informations about the user that created the object or the last user to have modified it.  If the object was never modified after creation, both Created and Modified informations will be the same. 
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-05-22T14:56:27.093149753Z[Etc/UTC]")
public class CommonAuditdetail {
  public static final String SERIALIZED_NAME_FKI_USER_I_D = "fkiUserID";
  @SerializedName(SERIALIZED_NAME_FKI_USER_I_D)
  private Integer fkiUserID;

  public static final String SERIALIZED_NAME_FKI_APIKEY_I_D = "fkiApikeyID";
  @SerializedName(SERIALIZED_NAME_FKI_APIKEY_I_D)
  private Integer fkiApikeyID;

  public static final String SERIALIZED_NAME_S_USER_LOGINNAME = "sUserLoginname";
  @SerializedName(SERIALIZED_NAME_S_USER_LOGINNAME)
  private String sUserLoginname;

  public static final String SERIALIZED_NAME_S_USER_LASTNAME = "sUserLastname";
  @SerializedName(SERIALIZED_NAME_S_USER_LASTNAME)
  private String sUserLastname;

  public static final String SERIALIZED_NAME_S_USER_FIRSTNAME = "sUserFirstname";
  @SerializedName(SERIALIZED_NAME_S_USER_FIRSTNAME)
  private String sUserFirstname;

  public static final String SERIALIZED_NAME_S_APIKEY_DESCRIPTION_X = "sApikeyDescriptionX";
  @SerializedName(SERIALIZED_NAME_S_APIKEY_DESCRIPTION_X)
  private String sApikeyDescriptionX;

  public static final String SERIALIZED_NAME_DT_AUDITDETAIL_DATE = "dtAuditdetailDate";
  @SerializedName(SERIALIZED_NAME_DT_AUDITDETAIL_DATE)
  private String dtAuditdetailDate;

  public CommonAuditdetail() {
  }

  public CommonAuditdetail fkiUserID(Integer fkiUserID) {
    
    this.fkiUserID = fkiUserID;
    return this;
  }

   /**
   * The unique ID of the User
   * minimum: 0
   * @return fkiUserID
  **/
  @javax.annotation.Nonnull
  public Integer getFkiUserID() {
    return fkiUserID;
  }


  public void setFkiUserID(Integer fkiUserID) {
    this.fkiUserID = fkiUserID;
  }


  public CommonAuditdetail fkiApikeyID(Integer fkiApikeyID) {
    
    this.fkiApikeyID = fkiApikeyID;
    return this;
  }

   /**
   * The unique ID of the Apikey
   * minimum: 0
   * @return fkiApikeyID
  **/
  @javax.annotation.Nullable
  public Integer getFkiApikeyID() {
    return fkiApikeyID;
  }


  public void setFkiApikeyID(Integer fkiApikeyID) {
    this.fkiApikeyID = fkiApikeyID;
  }


  public CommonAuditdetail sUserLoginname(String sUserLoginname) {
    
    this.sUserLoginname = sUserLoginname;
    return this;
  }

   /**
   * The Login name of the User.
   * @return sUserLoginname
  **/
  @javax.annotation.Nonnull
  public String getsUserLoginname() {
    return sUserLoginname;
  }


  public void setsUserLoginname(String sUserLoginname) {
    this.sUserLoginname = sUserLoginname;
  }


  public CommonAuditdetail sUserLastname(String sUserLastname) {
    
    this.sUserLastname = sUserLastname;
    return this;
  }

   /**
   * The Last name of the user
   * @return sUserLastname
  **/
  @javax.annotation.Nonnull
  public String getsUserLastname() {
    return sUserLastname;
  }


  public void setsUserLastname(String sUserLastname) {
    this.sUserLastname = sUserLastname;
  }


  public CommonAuditdetail sUserFirstname(String sUserFirstname) {
    
    this.sUserFirstname = sUserFirstname;
    return this;
  }

   /**
   * The First name of the user
   * @return sUserFirstname
  **/
  @javax.annotation.Nonnull
  public String getsUserFirstname() {
    return sUserFirstname;
  }


  public void setsUserFirstname(String sUserFirstname) {
    this.sUserFirstname = sUserFirstname;
  }


  public CommonAuditdetail sApikeyDescriptionX(String sApikeyDescriptionX) {
    
    this.sApikeyDescriptionX = sApikeyDescriptionX;
    return this;
  }

   /**
   * The description of the Apikey in the language of the requester
   * @return sApikeyDescriptionX
  **/
  @javax.annotation.Nullable
  public String getsApikeyDescriptionX() {
    return sApikeyDescriptionX;
  }


  public void setsApikeyDescriptionX(String sApikeyDescriptionX) {
    this.sApikeyDescriptionX = sApikeyDescriptionX;
  }


  public CommonAuditdetail dtAuditdetailDate(String dtAuditdetailDate) {
    
    this.dtAuditdetailDate = dtAuditdetailDate;
    return this;
  }

   /**
   * Represent a Date Time. The timezone is the one configured in the User&#39;s profile.
   * @return dtAuditdetailDate
  **/
  @javax.annotation.Nonnull
  public String getDtAuditdetailDate() {
    return dtAuditdetailDate;
  }


  public void setDtAuditdetailDate(String dtAuditdetailDate) {
    this.dtAuditdetailDate = dtAuditdetailDate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommonAuditdetail commonAuditdetail = (CommonAuditdetail) o;
    return Objects.equals(this.fkiUserID, commonAuditdetail.fkiUserID) &&
        Objects.equals(this.fkiApikeyID, commonAuditdetail.fkiApikeyID) &&
        Objects.equals(this.sUserLoginname, commonAuditdetail.sUserLoginname) &&
        Objects.equals(this.sUserLastname, commonAuditdetail.sUserLastname) &&
        Objects.equals(this.sUserFirstname, commonAuditdetail.sUserFirstname) &&
        Objects.equals(this.sApikeyDescriptionX, commonAuditdetail.sApikeyDescriptionX) &&
        Objects.equals(this.dtAuditdetailDate, commonAuditdetail.dtAuditdetailDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fkiUserID, fkiApikeyID, sUserLoginname, sUserLastname, sUserFirstname, sApikeyDescriptionX, dtAuditdetailDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommonAuditdetail {\n");
    sb.append("    fkiUserID: ").append(toIndentedString(fkiUserID)).append("\n");
    sb.append("    fkiApikeyID: ").append(toIndentedString(fkiApikeyID)).append("\n");
    sb.append("    sUserLoginname: ").append(toIndentedString(sUserLoginname)).append("\n");
    sb.append("    sUserLastname: ").append(toIndentedString(sUserLastname)).append("\n");
    sb.append("    sUserFirstname: ").append(toIndentedString(sUserFirstname)).append("\n");
    sb.append("    sApikeyDescriptionX: ").append(toIndentedString(sApikeyDescriptionX)).append("\n");
    sb.append("    dtAuditdetailDate: ").append(toIndentedString(dtAuditdetailDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("fkiUserID");
    openapiFields.add("fkiApikeyID");
    openapiFields.add("sUserLoginname");
    openapiFields.add("sUserLastname");
    openapiFields.add("sUserFirstname");
    openapiFields.add("sApikeyDescriptionX");
    openapiFields.add("dtAuditdetailDate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("fkiUserID");
    openapiRequiredFields.add("sUserLoginname");
    openapiRequiredFields.add("sUserLastname");
    openapiRequiredFields.add("sUserFirstname");
    openapiRequiredFields.add("dtAuditdetailDate");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CommonAuditdetail
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CommonAuditdetail.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CommonAuditdetail is not found in the empty JSON string", CommonAuditdetail.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!CommonAuditdetail.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CommonAuditdetail` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CommonAuditdetail.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("sUserLoginname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sUserLoginname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sUserLoginname").toString()));
      }
      if (!jsonObj.get("sUserLastname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sUserLastname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sUserLastname").toString()));
      }
      if (!jsonObj.get("sUserFirstname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sUserFirstname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sUserFirstname").toString()));
      }
      if ((jsonObj.get("sApikeyDescriptionX") != null && !jsonObj.get("sApikeyDescriptionX").isJsonNull()) && !jsonObj.get("sApikeyDescriptionX").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sApikeyDescriptionX` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sApikeyDescriptionX").toString()));
      }
      if (!jsonObj.get("dtAuditdetailDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dtAuditdetailDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dtAuditdetailDate").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CommonAuditdetail.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CommonAuditdetail' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CommonAuditdetail> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CommonAuditdetail.class));

       return (TypeAdapter<T>) new TypeAdapter<CommonAuditdetail>() {
           @Override
           public void write(JsonWriter out, CommonAuditdetail value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CommonAuditdetail read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CommonAuditdetail given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CommonAuditdetail
  * @throws IOException if the JSON string is invalid with respect to CommonAuditdetail
  */
  public static CommonAuditdetail fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CommonAuditdetail.class);
  }

 /**
  * Convert an instance of CommonAuditdetail to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

