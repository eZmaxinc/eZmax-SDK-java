/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.ezmax.api.model.EnumTextvalidation;
import com.ezmax.api.model.EzsigntemplateelementdependencyResponse;
import com.ezmax.api.model.EzsigntemplatesignatureResponse;
import com.ezmax.api.model.EzsigntemplatesignaturecustomdateResponse;
import com.ezmax.api.model.FieldEEzsigntemplatesignatureAttachmentnamesource;
import com.ezmax.api.model.FieldEEzsigntemplatesignatureConsultationtrigger;
import com.ezmax.api.model.FieldEEzsigntemplatesignatureDependencyrequirement;
import com.ezmax.api.model.FieldEEzsigntemplatesignatureFont;
import com.ezmax.api.model.FieldEEzsigntemplatesignaturePositioning;
import com.ezmax.api.model.FieldEEzsigntemplatesignaturePositioningoccurence;
import com.ezmax.api.model.FieldEEzsigntemplatesignatureTooltipposition;
import com.ezmax.api.model.FieldEEzsigntemplatesignatureType;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * A Ezsigntemplatesignature Object
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-17T15:03:32.455495633Z[Etc/UTC]", comments = "Generator version: 7.10.0")
public class EzsigntemplatesignatureResponseCompound extends EzsigntemplatesignatureResponse {
  public static final String SERIALIZED_NAME_B_EZSIGNTEMPLATESIGNATURE_CUSTOMDATE = "bEzsigntemplatesignatureCustomdate";
  @SerializedName(SERIALIZED_NAME_B_EZSIGNTEMPLATESIGNATURE_CUSTOMDATE)
  @javax.annotation.Nullable
  private Boolean bEzsigntemplatesignatureCustomdate;

  public static final String SERIALIZED_NAME_A_OBJ_EZSIGNTEMPLATESIGNATURECUSTOMDATE = "a_objEzsigntemplatesignaturecustomdate";
  @SerializedName(SERIALIZED_NAME_A_OBJ_EZSIGNTEMPLATESIGNATURECUSTOMDATE)
  @javax.annotation.Nullable
  private List<EzsigntemplatesignaturecustomdateResponseCompound> aObjEzsigntemplatesignaturecustomdate = new ArrayList<>();

  public static final String SERIALIZED_NAME_A_OBJ_EZSIGNTEMPLATEELEMENTDEPENDENCY = "a_objEzsigntemplateelementdependency";
  @SerializedName(SERIALIZED_NAME_A_OBJ_EZSIGNTEMPLATEELEMENTDEPENDENCY)
  @javax.annotation.Nullable
  private List<EzsigntemplateelementdependencyResponseCompound> aObjEzsigntemplateelementdependency = new ArrayList<>();

  public EzsigntemplatesignatureResponseCompound() {
  }

  public EzsigntemplatesignatureResponseCompound bEzsigntemplatesignatureCustomdate(@javax.annotation.Nullable Boolean bEzsigntemplatesignatureCustomdate) {
    this.bEzsigntemplatesignatureCustomdate = bEzsigntemplatesignatureCustomdate;
    return this;
  }

  /**
   * Whether the Ezsigntemplatesignature has a custom date format or not. (Only possible when eEzsigntemplatesignatureType is **Name** or **Handwritten**)
   * @return bEzsigntemplatesignatureCustomdate
   */
  @javax.annotation.Nullable
  public Boolean getbEzsigntemplatesignatureCustomdate() {
    return bEzsigntemplatesignatureCustomdate;
  }

  public void setbEzsigntemplatesignatureCustomdate(@javax.annotation.Nullable Boolean bEzsigntemplatesignatureCustomdate) {
    this.bEzsigntemplatesignatureCustomdate = bEzsigntemplatesignatureCustomdate;
  }


  public EzsigntemplatesignatureResponseCompound aObjEzsigntemplatesignaturecustomdate(@javax.annotation.Nullable List<EzsigntemplatesignaturecustomdateResponseCompound> aObjEzsigntemplatesignaturecustomdate) {
    this.aObjEzsigntemplatesignaturecustomdate = aObjEzsigntemplatesignaturecustomdate;
    return this;
  }

  public EzsigntemplatesignatureResponseCompound addAObjEzsigntemplatesignaturecustomdateItem(EzsigntemplatesignaturecustomdateResponse aObjEzsigntemplatesignaturecustomdateItem) {
    if (this.aObjEzsigntemplatesignaturecustomdate == null) {
      this.aObjEzsigntemplatesignaturecustomdate = new ArrayList<>();
    }
    this.aObjEzsigntemplatesignaturecustomdate.add(aObjEzsigntemplatesignaturecustomdateItem);
    return this;
  }

  /**
   * An array of custom date blocks that will be filled at the time of signature.  Can only be used if bEzsigntemplatesignatureCustomdate is true.  Use an empty array if you don&#39;t want to have a date at all.
   * @return aObjEzsigntemplatesignaturecustomdate
   */
  @javax.annotation.Nullable
  public List<EzsigntemplatesignaturecustomdateResponseCompound> getaObjEzsigntemplatesignaturecustomdate() {
    return aObjEzsigntemplatesignaturecustomdate;
  }

  public void setaObjEzsigntemplatesignaturecustomdate(@javax.annotation.Nullable List<EzsigntemplatesignaturecustomdateResponseCompound> aObjEzsigntemplatesignaturecustomdate) {
    this.aObjEzsigntemplatesignaturecustomdate = aObjEzsigntemplatesignaturecustomdate;
  }


  public EzsigntemplatesignatureResponseCompound aObjEzsigntemplateelementdependency(@javax.annotation.Nullable List<EzsigntemplateelementdependencyResponseCompound> aObjEzsigntemplateelementdependency) {
    this.aObjEzsigntemplateelementdependency = aObjEzsigntemplateelementdependency;
    return this;
  }

  public EzsigntemplatesignatureResponseCompound addAObjEzsigntemplateelementdependencyItem(EzsigntemplateelementdependencyResponse aObjEzsigntemplateelementdependencyItem) {
    if (this.aObjEzsigntemplateelementdependency == null) {
      this.aObjEzsigntemplateelementdependency = new ArrayList<>();
    }
    this.aObjEzsigntemplateelementdependency.add(aObjEzsigntemplateelementdependencyItem);
    return this;
  }

  /**
   * Get aObjEzsigntemplateelementdependency
   * @return aObjEzsigntemplateelementdependency
   */
  @javax.annotation.Nullable
  public List<EzsigntemplateelementdependencyResponseCompound> getaObjEzsigntemplateelementdependency() {
    return aObjEzsigntemplateelementdependency;
  }

  public void setaObjEzsigntemplateelementdependency(@javax.annotation.Nullable List<EzsigntemplateelementdependencyResponseCompound> aObjEzsigntemplateelementdependency) {
    this.aObjEzsigntemplateelementdependency = aObjEzsigntemplateelementdependency;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EzsigntemplatesignatureResponseCompound ezsigntemplatesignatureResponseCompound = (EzsigntemplatesignatureResponseCompound) o;
    return Objects.equals(this.bEzsigntemplatesignatureCustomdate, ezsigntemplatesignatureResponseCompound.bEzsigntemplatesignatureCustomdate) &&
        Objects.equals(this.aObjEzsigntemplatesignaturecustomdate, ezsigntemplatesignatureResponseCompound.aObjEzsigntemplatesignaturecustomdate) &&
        Objects.equals(this.aObjEzsigntemplateelementdependency, ezsigntemplatesignatureResponseCompound.aObjEzsigntemplateelementdependency) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bEzsigntemplatesignatureCustomdate, aObjEzsigntemplatesignaturecustomdate, aObjEzsigntemplateelementdependency, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EzsigntemplatesignatureResponseCompound {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    bEzsigntemplatesignatureCustomdate: ").append(toIndentedString(bEzsigntemplatesignatureCustomdate)).append("\n");
    sb.append("    aObjEzsigntemplatesignaturecustomdate: ").append(toIndentedString(aObjEzsigntemplatesignaturecustomdate)).append("\n");
    sb.append("    aObjEzsigntemplateelementdependency: ").append(toIndentedString(aObjEzsigntemplateelementdependency)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pkiEzsigntemplatesignatureID");
    openapiFields.add("fkiEzsigntemplatedocumentID");
    openapiFields.add("fkiEzsigntemplatesignerID");
    openapiFields.add("fkiEzsigntemplatesignerIDValidation");
    openapiFields.add("bEzsigntemplatesignatureHandwritten");
    openapiFields.add("bEzsigntemplatesignatureReason");
    openapiFields.add("eEzsigntemplatesignaturePositioning");
    openapiFields.add("iEzsigntemplatedocumentpagePagenumber");
    openapiFields.add("iEzsigntemplatesignatureX");
    openapiFields.add("iEzsigntemplatesignatureY");
    openapiFields.add("iEzsigntemplatesignatureWidth");
    openapiFields.add("iEzsigntemplatesignatureHeight");
    openapiFields.add("iEzsigntemplatesignatureStep");
    openapiFields.add("eEzsigntemplatesignatureType");
    openapiFields.add("eEzsigntemplatesignatureConsultationtrigger");
    openapiFields.add("tEzsigntemplatesignatureTooltip");
    openapiFields.add("eEzsigntemplatesignatureTooltipposition");
    openapiFields.add("eEzsigntemplatesignatureFont");
    openapiFields.add("iEzsigntemplatesignatureValidationstep");
    openapiFields.add("sEzsigntemplatesignatureAttachmentdescription");
    openapiFields.add("eEzsigntemplatesignatureAttachmentnamesource");
    openapiFields.add("bEzsigntemplatesignatureRequired");
    openapiFields.add("iEzsigntemplatesignatureMaxlength");
    openapiFields.add("sEzsigntemplatesignatureDefaultvalue");
    openapiFields.add("sEzsigntemplatesignatureRegexp");
    openapiFields.add("eEzsigntemplatesignatureTextvalidation");
    openapiFields.add("sEzsigntemplatesignatureTextvalidationcustommessage");
    openapiFields.add("eEzsigntemplatesignatureDependencyrequirement");
    openapiFields.add("sEzsigntemplatesignaturePositioningpattern");
    openapiFields.add("iEzsigntemplatesignaturePositioningoffsetx");
    openapiFields.add("iEzsigntemplatesignaturePositioningoffsety");
    openapiFields.add("eEzsigntemplatesignaturePositioningoccurence");
    openapiFields.add("bEzsigntemplatesignatureCustomdate");
    openapiFields.add("a_objEzsigntemplatesignaturecustomdate");
    openapiFields.add("a_objEzsigntemplateelementdependency");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("pkiEzsigntemplatesignatureID");
    openapiRequiredFields.add("fkiEzsigntemplatedocumentID");
    openapiRequiredFields.add("fkiEzsigntemplatesignerID");
    openapiRequiredFields.add("iEzsigntemplatedocumentpagePagenumber");
    openapiRequiredFields.add("iEzsigntemplatesignatureStep");
    openapiRequiredFields.add("eEzsigntemplatesignatureType");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EzsigntemplatesignatureResponseCompound
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EzsigntemplatesignatureResponseCompound.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EzsigntemplatesignatureResponseCompound is not found in the empty JSON string", EzsigntemplatesignatureResponseCompound.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EzsigntemplatesignatureResponseCompound.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EzsigntemplatesignatureResponseCompound` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : EzsigntemplatesignatureResponseCompound.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("a_objEzsigntemplatesignaturecustomdate") != null && !jsonObj.get("a_objEzsigntemplatesignaturecustomdate").isJsonNull()) {
        JsonArray jsonArrayaObjEzsigntemplatesignaturecustomdate = jsonObj.getAsJsonArray("a_objEzsigntemplatesignaturecustomdate");
        if (jsonArrayaObjEzsigntemplatesignaturecustomdate != null) {
          // ensure the json data is an array
          if (!jsonObj.get("a_objEzsigntemplatesignaturecustomdate").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `a_objEzsigntemplatesignaturecustomdate` to be an array in the JSON string but got `%s`", jsonObj.get("a_objEzsigntemplatesignaturecustomdate").toString()));
          }

          // validate the optional field `a_objEzsigntemplatesignaturecustomdate` (array)
          for (int i = 0; i < jsonArrayaObjEzsigntemplatesignaturecustomdate.size(); i++) {
            EzsigntemplatesignaturecustomdateResponse.validateJsonElement(jsonArrayaObjEzsigntemplatesignaturecustomdate.get(i));
          };
        }
      }
      if (jsonObj.get("a_objEzsigntemplateelementdependency") != null && !jsonObj.get("a_objEzsigntemplateelementdependency").isJsonNull()) {
        JsonArray jsonArrayaObjEzsigntemplateelementdependency = jsonObj.getAsJsonArray("a_objEzsigntemplateelementdependency");
        if (jsonArrayaObjEzsigntemplateelementdependency != null) {
          // ensure the json data is an array
          if (!jsonObj.get("a_objEzsigntemplateelementdependency").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `a_objEzsigntemplateelementdependency` to be an array in the JSON string but got `%s`", jsonObj.get("a_objEzsigntemplateelementdependency").toString()));
          }

          // validate the optional field `a_objEzsigntemplateelementdependency` (array)
          for (int i = 0; i < jsonArrayaObjEzsigntemplateelementdependency.size(); i++) {
            EzsigntemplateelementdependencyResponse.validateJsonElement(jsonArrayaObjEzsigntemplateelementdependency.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EzsigntemplatesignatureResponseCompound.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EzsigntemplatesignatureResponseCompound' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EzsigntemplatesignatureResponseCompound> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EzsigntemplatesignatureResponseCompound.class));

       return (TypeAdapter<T>) new TypeAdapter<EzsigntemplatesignatureResponseCompound>() {
           @Override
           public void write(JsonWriter out, EzsigntemplatesignatureResponseCompound value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EzsigntemplatesignatureResponseCompound read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EzsigntemplatesignatureResponseCompound given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EzsigntemplatesignatureResponseCompound
   * @throws IOException if the JSON string is invalid with respect to EzsigntemplatesignatureResponseCompound
   */
  public static EzsigntemplatesignatureResponseCompound fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EzsigntemplatesignatureResponseCompound.class);
  }

  /**
   * Convert an instance of EzsigntemplatesignatureResponseCompound to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

