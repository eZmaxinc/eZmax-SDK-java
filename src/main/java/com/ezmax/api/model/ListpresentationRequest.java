/*
 * eZmax API Definition
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.4
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * A Listpresentation element
 */
@ApiModel(description = "A Listpresentation element")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-02-02T19:25:42.673502Z[Etc/UTC]")
public class ListpresentationRequest {
  public static final String SERIALIZED_NAME_S_LISTPRESENTATION_DESCRIPTION = "sListpresentationDescription";
  @SerializedName(SERIALIZED_NAME_S_LISTPRESENTATION_DESCRIPTION)
  private String sListpresentationDescription;

  public static final String SERIALIZED_NAME_S_LISTPRESENTATION_FILTER = "sListpresentationFilter";
  @SerializedName(SERIALIZED_NAME_S_LISTPRESENTATION_FILTER)
  private String sListpresentationFilter;

  public static final String SERIALIZED_NAME_S_LISTPRESENTATION_ORDERBY = "sListpresentationOrderby";
  @SerializedName(SERIALIZED_NAME_S_LISTPRESENTATION_ORDERBY)
  private String sListpresentationOrderby;

  public static final String SERIALIZED_NAME_A_S_COLUMN_NAME = "a_sColumnName";
  @SerializedName(SERIALIZED_NAME_A_S_COLUMN_NAME)
  private List<String> aSColumnName = new ArrayList<String>();

  public static final String SERIALIZED_NAME_I_LISTPRESENTATION_ROW_MAX = "iListpresentationRowMax";
  @SerializedName(SERIALIZED_NAME_I_LISTPRESENTATION_ROW_MAX)
  private Integer iListpresentationRowMax;

  public static final String SERIALIZED_NAME_I_LISTPRESENTATION_ROW_OFFSET = "iListpresentationRowOffset";
  @SerializedName(SERIALIZED_NAME_I_LISTPRESENTATION_ROW_OFFSET)
  private Integer iListpresentationRowOffset;

  public static final String SERIALIZED_NAME_B_LISTPRESENTATION_DEFAULT = "bListpresentationDefault";
  @SerializedName(SERIALIZED_NAME_B_LISTPRESENTATION_DEFAULT)
  private Boolean bListpresentationDefault;

  public ListpresentationRequest() { 
  }

  public ListpresentationRequest sListpresentationDescription(String sListpresentationDescription) {
    
    this.sListpresentationDescription = sListpresentationDescription;
    return this;
  }

   /**
   * A descriptive for the list presentation
   * @return sListpresentationDescription
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "A descriptive for the list presentation")

  public String getsListpresentationDescription() {
    return sListpresentationDescription;
  }


  public void setsListpresentationDescription(String sListpresentationDescription) {
    this.sListpresentationDescription = sListpresentationDescription;
  }


  public ListpresentationRequest sListpresentationFilter(String sListpresentationFilter) {
    
    this.sListpresentationFilter = sListpresentationFilter;
    return this;
  }

   /**
   * The filter to apply to the request to limit results.
   * @return sListpresentationFilter
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "bField1 eq true and iField2 gte 0 and iField2 lte 1000 and sField3 eq 'Other' and eField4 eq 'Paid' and sField5 like '%needle%' and iField6 in '1,2,3' and dtField7 rg '=m,=3mm'", required = true, value = "The filter to apply to the request to limit results.")

  public String getsListpresentationFilter() {
    return sListpresentationFilter;
  }


  public void setsListpresentationFilter(String sListpresentationFilter) {
    this.sListpresentationFilter = sListpresentationFilter;
  }


  public ListpresentationRequest sListpresentationOrderby(String sListpresentationOrderby) {
    
    this.sListpresentationOrderby = sListpresentationOrderby;
    return this;
  }

   /**
   * The order by the user chose
   * @return sListpresentationOrderby
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The order by the user chose")

  public String getsListpresentationOrderby() {
    return sListpresentationOrderby;
  }


  public void setsListpresentationOrderby(String sListpresentationOrderby) {
    this.sListpresentationOrderby = sListpresentationOrderby;
  }


  public ListpresentationRequest aSColumnName(List<String> aSColumnName) {
    
    this.aSColumnName = aSColumnName;
    return this;
  }

  public ListpresentationRequest addASColumnNameItem(String aSColumnNameItem) {
    this.aSColumnName.add(aSColumnNameItem);
    return this;
  }

   /**
   * An array of column names that the user chose to bee visible
   * @return aSColumnName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "An array of column names that the user chose to bee visible")

  public List<String> getaSColumnName() {
    return aSColumnName;
  }


  public void setaSColumnName(List<String> aSColumnName) {
    this.aSColumnName = aSColumnName;
  }


  public ListpresentationRequest iListpresentationRowMax(Integer iListpresentationRowMax) {
    
    this.iListpresentationRowMax = iListpresentationRowMax;
    return this;
  }

   /**
   * The maximum numbers of results to be returned
   * @return iListpresentationRowMax
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "100", required = true, value = "The maximum numbers of results to be returned")

  public Integer getiListpresentationRowMax() {
    return iListpresentationRowMax;
  }


  public void setiListpresentationRowMax(Integer iListpresentationRowMax) {
    this.iListpresentationRowMax = iListpresentationRowMax;
  }


  public ListpresentationRequest iListpresentationRowOffset(Integer iListpresentationRowOffset) {
    
    this.iListpresentationRowOffset = iListpresentationRowOffset;
    return this;
  }

   /**
   * The starting element from where to start retrieving the results. For example if you started at iRowOffset&#x3D;0 and asked for iRowMax&#x3D;100, to get the next 100 results, you could specify iRowOffset&#x3D;100&amp;iRowMax&#x3D;100,
   * @return iListpresentationRowOffset
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "0", required = true, value = "The starting element from where to start retrieving the results. For example if you started at iRowOffset=0 and asked for iRowMax=100, to get the next 100 results, you could specify iRowOffset=100&iRowMax=100,")

  public Integer getiListpresentationRowOffset() {
    return iListpresentationRowOffset;
  }


  public void setiListpresentationRowOffset(Integer iListpresentationRowOffset) {
    this.iListpresentationRowOffset = iListpresentationRowOffset;
  }


  public ListpresentationRequest bListpresentationDefault(Boolean bListpresentationDefault) {
    
    this.bListpresentationDefault = bListpresentationDefault;
    return this;
  }

   /**
   * Set to true if the user chose this Listpresentation as the default one. A single element should be set to true
   * @return bListpresentationDefault
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Set to true if the user chose this Listpresentation as the default one. A single element should be set to true")

  public Boolean getbListpresentationDefault() {
    return bListpresentationDefault;
  }


  public void setbListpresentationDefault(Boolean bListpresentationDefault) {
    this.bListpresentationDefault = bListpresentationDefault;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListpresentationRequest listpresentationRequest = (ListpresentationRequest) o;
    return Objects.equals(this.sListpresentationDescription, listpresentationRequest.sListpresentationDescription) &&
        Objects.equals(this.sListpresentationFilter, listpresentationRequest.sListpresentationFilter) &&
        Objects.equals(this.sListpresentationOrderby, listpresentationRequest.sListpresentationOrderby) &&
        Objects.equals(this.aSColumnName, listpresentationRequest.aSColumnName) &&
        Objects.equals(this.iListpresentationRowMax, listpresentationRequest.iListpresentationRowMax) &&
        Objects.equals(this.iListpresentationRowOffset, listpresentationRequest.iListpresentationRowOffset) &&
        Objects.equals(this.bListpresentationDefault, listpresentationRequest.bListpresentationDefault);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sListpresentationDescription, sListpresentationFilter, sListpresentationOrderby, aSColumnName, iListpresentationRowMax, iListpresentationRowOffset, bListpresentationDefault);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListpresentationRequest {\n");
    sb.append("    sListpresentationDescription: ").append(toIndentedString(sListpresentationDescription)).append("\n");
    sb.append("    sListpresentationFilter: ").append(toIndentedString(sListpresentationFilter)).append("\n");
    sb.append("    sListpresentationOrderby: ").append(toIndentedString(sListpresentationOrderby)).append("\n");
    sb.append("    aSColumnName: ").append(toIndentedString(aSColumnName)).append("\n");
    sb.append("    iListpresentationRowMax: ").append(toIndentedString(iListpresentationRowMax)).append("\n");
    sb.append("    iListpresentationRowOffset: ").append(toIndentedString(iListpresentationRowOffset)).append("\n");
    sb.append("    bListpresentationDefault: ").append(toIndentedString(bListpresentationDefault)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

