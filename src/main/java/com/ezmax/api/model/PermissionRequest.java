/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * A Permission Object
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-04T19:53:18.915192364Z[Etc/UTC]", comments = "Generator version: 7.11.0")
public class PermissionRequest {
  public static final String SERIALIZED_NAME_PKI_PERMISSION_I_D = "pkiPermissionID";
  @SerializedName(SERIALIZED_NAME_PKI_PERMISSION_I_D)
  @javax.annotation.Nullable
  private Integer pkiPermissionID;

  public static final String SERIALIZED_NAME_FKI_USER_I_D = "fkiUserID";
  @SerializedName(SERIALIZED_NAME_FKI_USER_I_D)
  @javax.annotation.Nullable
  private Integer fkiUserID;

  public static final String SERIALIZED_NAME_FKI_APIKEY_I_D = "fkiApikeyID";
  @SerializedName(SERIALIZED_NAME_FKI_APIKEY_I_D)
  @javax.annotation.Nullable
  private Integer fkiApikeyID;

  public static final String SERIALIZED_NAME_FKI_USERGROUP_I_D = "fkiUsergroupID";
  @SerializedName(SERIALIZED_NAME_FKI_USERGROUP_I_D)
  @javax.annotation.Nullable
  private Integer fkiUsergroupID;

  public static final String SERIALIZED_NAME_FKI_COMPANY_I_D = "fkiCompanyID";
  @SerializedName(SERIALIZED_NAME_FKI_COMPANY_I_D)
  @javax.annotation.Nullable
  private Integer fkiCompanyID;

  public static final String SERIALIZED_NAME_FKI_MODULESECTION_I_D = "fkiModulesectionID";
  @SerializedName(SERIALIZED_NAME_FKI_MODULESECTION_I_D)
  @javax.annotation.Nonnull
  private Integer fkiModulesectionID;

  public PermissionRequest() {
  }

  public PermissionRequest pkiPermissionID(@javax.annotation.Nullable Integer pkiPermissionID) {
    this.pkiPermissionID = pkiPermissionID;
    return this;
  }

  /**
   * The unique ID of the Permission
   * minimum: 0
   * maximum: 65535
   * @return pkiPermissionID
   */
  @javax.annotation.Nullable
  public Integer getPkiPermissionID() {
    return pkiPermissionID;
  }

  public void setPkiPermissionID(@javax.annotation.Nullable Integer pkiPermissionID) {
    this.pkiPermissionID = pkiPermissionID;
  }


  public PermissionRequest fkiUserID(@javax.annotation.Nullable Integer fkiUserID) {
    this.fkiUserID = fkiUserID;
    return this;
  }

  /**
   * The unique ID of the User
   * minimum: 0
   * @return fkiUserID
   */
  @javax.annotation.Nullable
  public Integer getFkiUserID() {
    return fkiUserID;
  }

  public void setFkiUserID(@javax.annotation.Nullable Integer fkiUserID) {
    this.fkiUserID = fkiUserID;
  }


  public PermissionRequest fkiApikeyID(@javax.annotation.Nullable Integer fkiApikeyID) {
    this.fkiApikeyID = fkiApikeyID;
    return this;
  }

  /**
   * The unique ID of the Apikey
   * minimum: 0
   * @return fkiApikeyID
   */
  @javax.annotation.Nullable
  public Integer getFkiApikeyID() {
    return fkiApikeyID;
  }

  public void setFkiApikeyID(@javax.annotation.Nullable Integer fkiApikeyID) {
    this.fkiApikeyID = fkiApikeyID;
  }


  public PermissionRequest fkiUsergroupID(@javax.annotation.Nullable Integer fkiUsergroupID) {
    this.fkiUsergroupID = fkiUsergroupID;
    return this;
  }

  /**
   * The unique ID of the Usergroup
   * minimum: 0
   * maximum: 255
   * @return fkiUsergroupID
   */
  @javax.annotation.Nullable
  public Integer getFkiUsergroupID() {
    return fkiUsergroupID;
  }

  public void setFkiUsergroupID(@javax.annotation.Nullable Integer fkiUsergroupID) {
    this.fkiUsergroupID = fkiUsergroupID;
  }


  public PermissionRequest fkiCompanyID(@javax.annotation.Nullable Integer fkiCompanyID) {
    this.fkiCompanyID = fkiCompanyID;
    return this;
  }

  /**
   * The unique ID of the Company
   * minimum: 1
   * maximum: 255
   * @return fkiCompanyID
   */
  @javax.annotation.Nullable
  public Integer getFkiCompanyID() {
    return fkiCompanyID;
  }

  public void setFkiCompanyID(@javax.annotation.Nullable Integer fkiCompanyID) {
    this.fkiCompanyID = fkiCompanyID;
  }


  public PermissionRequest fkiModulesectionID(@javax.annotation.Nonnull Integer fkiModulesectionID) {
    this.fkiModulesectionID = fkiModulesectionID;
    return this;
  }

  /**
   * The unique ID of the Modulesection
   * minimum: 0
   * @return fkiModulesectionID
   */
  @javax.annotation.Nonnull
  public Integer getFkiModulesectionID() {
    return fkiModulesectionID;
  }

  public void setFkiModulesectionID(@javax.annotation.Nonnull Integer fkiModulesectionID) {
    this.fkiModulesectionID = fkiModulesectionID;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PermissionRequest permissionRequest = (PermissionRequest) o;
    return Objects.equals(this.pkiPermissionID, permissionRequest.pkiPermissionID) &&
        Objects.equals(this.fkiUserID, permissionRequest.fkiUserID) &&
        Objects.equals(this.fkiApikeyID, permissionRequest.fkiApikeyID) &&
        Objects.equals(this.fkiUsergroupID, permissionRequest.fkiUsergroupID) &&
        Objects.equals(this.fkiCompanyID, permissionRequest.fkiCompanyID) &&
        Objects.equals(this.fkiModulesectionID, permissionRequest.fkiModulesectionID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pkiPermissionID, fkiUserID, fkiApikeyID, fkiUsergroupID, fkiCompanyID, fkiModulesectionID);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PermissionRequest {\n");
    sb.append("    pkiPermissionID: ").append(toIndentedString(pkiPermissionID)).append("\n");
    sb.append("    fkiUserID: ").append(toIndentedString(fkiUserID)).append("\n");
    sb.append("    fkiApikeyID: ").append(toIndentedString(fkiApikeyID)).append("\n");
    sb.append("    fkiUsergroupID: ").append(toIndentedString(fkiUsergroupID)).append("\n");
    sb.append("    fkiCompanyID: ").append(toIndentedString(fkiCompanyID)).append("\n");
    sb.append("    fkiModulesectionID: ").append(toIndentedString(fkiModulesectionID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pkiPermissionID");
    openapiFields.add("fkiUserID");
    openapiFields.add("fkiApikeyID");
    openapiFields.add("fkiUsergroupID");
    openapiFields.add("fkiCompanyID");
    openapiFields.add("fkiModulesectionID");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("fkiModulesectionID");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PermissionRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PermissionRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PermissionRequest is not found in the empty JSON string", PermissionRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PermissionRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PermissionRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : PermissionRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PermissionRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PermissionRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PermissionRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PermissionRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<PermissionRequest>() {
           @Override
           public void write(JsonWriter out, PermissionRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PermissionRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PermissionRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PermissionRequest
   * @throws IOException if the JSON string is invalid with respect to PermissionRequest
   */
  public static PermissionRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PermissionRequest.class);
  }

  /**
   * Convert an instance of PermissionRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

