/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.ezmax.api.model.AttachmentResponse;
import com.ezmax.api.model.AttachmentResponseCompound;
import com.ezmax.api.model.CommonAudit;
import com.ezmax.api.model.FieldEAttachmentDocumenttype;
import com.ezmax.api.model.FieldEAttachmentPrivacy;
import com.ezmax.api.model.FieldEAttachmentType;
import com.ezmax.api.model.FieldEAttachmentVerified;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * A Custom Attachment Object
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-17T15:03:32.455495633Z[Etc/UTC]", comments = "Generator version: 7.10.0")
public class CustomAttachmentResponse extends AttachmentResponse {
  public static final String SERIALIZED_NAME_OBJ_ATTACHMENT_PROOF = "objAttachmentProof";
  @SerializedName(SERIALIZED_NAME_OBJ_ATTACHMENT_PROOF)
  @javax.annotation.Nullable
  private AttachmentResponseCompound objAttachmentProof;

  public static final String SERIALIZED_NAME_OBJ_ATTACHMENT_PROOFDOCUMENT = "objAttachmentProofdocument";
  @SerializedName(SERIALIZED_NAME_OBJ_ATTACHMENT_PROOFDOCUMENT)
  @javax.annotation.Nullable
  private AttachmentResponseCompound objAttachmentProofdocument;

  public static final String SERIALIZED_NAME_A_OBJ_ATTACHMENT_ATTACHMENT = "a_objAttachmentAttachment";
  @SerializedName(SERIALIZED_NAME_A_OBJ_ATTACHMENT_ATTACHMENT)
  @javax.annotation.Nullable
  private List<AttachmentResponseCompound> aObjAttachmentAttachment = new ArrayList<>();

  public static final String SERIALIZED_NAME_A_OBJ_ATTACHMENT_VERSION = "a_objAttachmentVersion";
  @SerializedName(SERIALIZED_NAME_A_OBJ_ATTACHMENT_VERSION)
  @javax.annotation.Nullable
  private List<AttachmentResponseCompound> aObjAttachmentVersion = new ArrayList<>();

  public CustomAttachmentResponse() {
  }

  public CustomAttachmentResponse objAttachmentProof(@javax.annotation.Nullable AttachmentResponseCompound objAttachmentProof) {
    this.objAttachmentProof = objAttachmentProof;
    return this;
  }

  /**
   * Get objAttachmentProof
   * @return objAttachmentProof
   */
  @javax.annotation.Nullable
  public AttachmentResponseCompound getObjAttachmentProof() {
    return objAttachmentProof;
  }

  public void setObjAttachmentProof(@javax.annotation.Nullable AttachmentResponseCompound objAttachmentProof) {
    this.objAttachmentProof = objAttachmentProof;
  }


  public CustomAttachmentResponse objAttachmentProofdocument(@javax.annotation.Nullable AttachmentResponseCompound objAttachmentProofdocument) {
    this.objAttachmentProofdocument = objAttachmentProofdocument;
    return this;
  }

  /**
   * Get objAttachmentProofdocument
   * @return objAttachmentProofdocument
   */
  @javax.annotation.Nullable
  public AttachmentResponseCompound getObjAttachmentProofdocument() {
    return objAttachmentProofdocument;
  }

  public void setObjAttachmentProofdocument(@javax.annotation.Nullable AttachmentResponseCompound objAttachmentProofdocument) {
    this.objAttachmentProofdocument = objAttachmentProofdocument;
  }


  public CustomAttachmentResponse aObjAttachmentAttachment(@javax.annotation.Nullable List<AttachmentResponseCompound> aObjAttachmentAttachment) {
    this.aObjAttachmentAttachment = aObjAttachmentAttachment;
    return this;
  }

  public CustomAttachmentResponse addAObjAttachmentAttachmentItem(AttachmentResponseCompound aObjAttachmentAttachmentItem) {
    if (this.aObjAttachmentAttachment == null) {
      this.aObjAttachmentAttachment = new ArrayList<>();
    }
    this.aObjAttachmentAttachment.add(aObjAttachmentAttachmentItem);
    return this;
  }

  /**
   * Get aObjAttachmentAttachment
   * @return aObjAttachmentAttachment
   */
  @javax.annotation.Nullable
  public List<AttachmentResponseCompound> getaObjAttachmentAttachment() {
    return aObjAttachmentAttachment;
  }

  public void setaObjAttachmentAttachment(@javax.annotation.Nullable List<AttachmentResponseCompound> aObjAttachmentAttachment) {
    this.aObjAttachmentAttachment = aObjAttachmentAttachment;
  }


  public CustomAttachmentResponse aObjAttachmentVersion(@javax.annotation.Nullable List<AttachmentResponseCompound> aObjAttachmentVersion) {
    this.aObjAttachmentVersion = aObjAttachmentVersion;
    return this;
  }

  public CustomAttachmentResponse addAObjAttachmentVersionItem(AttachmentResponseCompound aObjAttachmentVersionItem) {
    if (this.aObjAttachmentVersion == null) {
      this.aObjAttachmentVersion = new ArrayList<>();
    }
    this.aObjAttachmentVersion.add(aObjAttachmentVersionItem);
    return this;
  }

  /**
   * Get aObjAttachmentVersion
   * @return aObjAttachmentVersion
   */
  @javax.annotation.Nullable
  public List<AttachmentResponseCompound> getaObjAttachmentVersion() {
    return aObjAttachmentVersion;
  }

  public void setaObjAttachmentVersion(@javax.annotation.Nullable List<AttachmentResponseCompound> aObjAttachmentVersion) {
    this.aObjAttachmentVersion = aObjAttachmentVersion;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomAttachmentResponse customAttachmentResponse = (CustomAttachmentResponse) o;
    return Objects.equals(this.objAttachmentProof, customAttachmentResponse.objAttachmentProof) &&
        Objects.equals(this.objAttachmentProofdocument, customAttachmentResponse.objAttachmentProofdocument) &&
        Objects.equals(this.aObjAttachmentAttachment, customAttachmentResponse.aObjAttachmentAttachment) &&
        Objects.equals(this.aObjAttachmentVersion, customAttachmentResponse.aObjAttachmentVersion) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(objAttachmentProof, objAttachmentProofdocument, aObjAttachmentAttachment, aObjAttachmentVersion, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomAttachmentResponse {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    objAttachmentProof: ").append(toIndentedString(objAttachmentProof)).append("\n");
    sb.append("    objAttachmentProofdocument: ").append(toIndentedString(objAttachmentProofdocument)).append("\n");
    sb.append("    aObjAttachmentAttachment: ").append(toIndentedString(aObjAttachmentAttachment)).append("\n");
    sb.append("    aObjAttachmentVersion: ").append(toIndentedString(aObjAttachmentVersion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pkiAttachmentID");
    openapiFields.add("fkiComputerID");
    openapiFields.add("fkiAdjustmentID");
    openapiFields.add("fkiAgentID");
    openapiFields.add("fkiBankaccountID");
    openapiFields.add("fkiBrokerID");
    openapiFields.add("fkiCommissionadvanceID");
    openapiFields.add("fkiCommunicationID");
    openapiFields.add("fkiCustomerID");
    openapiFields.add("fkiCustomertemplateID");
    openapiFields.add("fkiDepositID");
    openapiFields.add("fkiDeposittransitchequeID");
    openapiFields.add("fkiElectronicfundstransferID");
    openapiFields.add("fkiEmployeeID");
    openapiFields.add("fkiExternalbrokerID");
    openapiFields.add("fkiEzcomadvanceserverID");
    openapiFields.add("fkiEzcomcompanyID");
    openapiFields.add("fkiEzsigndocumentID");
    openapiFields.add("fkiGhacqcontractID");
    openapiFields.add("fkiInscriptionID");
    openapiFields.add("fkiInscriptiontempID");
    openapiFields.add("fkiInscriptionnotauthenticatedID");
    openapiFields.add("fkiInvoiceID");
    openapiFields.add("fkiBuyercontractID");
    openapiFields.add("fkiFranchisebrokerID");
    openapiFields.add("fkiFranchiseagenceID");
    openapiFields.add("fkiFranchiseofficeID");
    openapiFields.add("fkiFranchisefranchiseID");
    openapiFields.add("fkiFranchisecomplaintID");
    openapiFields.add("fkiLeadID");
    openapiFields.add("fkiMarketingprogramID");
    openapiFields.add("fkiMarketingfollowID");
    openapiFields.add("fkiNotaryID");
    openapiFields.add("fkiOfficetaxreportID");
    openapiFields.add("fkiOtherincomeID");
    openapiFields.add("fkiPaymentpreparationID");
    openapiFields.add("fkiPurchaseID");
    openapiFields.add("fkiSalaryID");
    openapiFields.add("fkiSupplierID");
    openapiFields.add("fkiTranqcontractID");
    openapiFields.add("fkiTemplateID");
    openapiFields.add("fkiInscriptionchecklistID");
    openapiFields.add("fkiFolderID");
    openapiFields.add("fkiRejectedoffertopurchaseID");
    openapiFields.add("fkiDisclosureID");
    openapiFields.add("fkiReconciliationID");
    openapiFields.add("fkiEzsigndocumentIDReference");
    openapiFields.add("eAttachmentDocumenttype");
    openapiFields.add("sAttachmentName");
    openapiFields.add("eAttachmentPrivacy");
    openapiFields.add("fkiUserIDSpecific");
    openapiFields.add("eAttachmentType");
    openapiFields.add("iAttachmentSize");
    openapiFields.add("iAttachmentEDMmoduleflag");
    openapiFields.add("sAttachmentMD5");
    openapiFields.add("bAttachmentDeleted");
    openapiFields.add("bAttachmentValid");
    openapiFields.add("eAttachmentVerified");
    openapiFields.add("tAttachmentRejectioncomment");
    openapiFields.add("fkiUserIDOwner");
    openapiFields.add("objAudit");
    openapiFields.add("objAttachmentProof");
    openapiFields.add("objAttachmentProofdocument");
    openapiFields.add("a_objAttachmentAttachment");
    openapiFields.add("a_objAttachmentVersion");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("pkiAttachmentID");
    openapiRequiredFields.add("eAttachmentDocumenttype");
    openapiRequiredFields.add("sAttachmentName");
    openapiRequiredFields.add("eAttachmentPrivacy");
    openapiRequiredFields.add("eAttachmentType");
    openapiRequiredFields.add("iAttachmentSize");
    openapiRequiredFields.add("sAttachmentMD5");
    openapiRequiredFields.add("bAttachmentDeleted");
    openapiRequiredFields.add("bAttachmentValid");
    openapiRequiredFields.add("eAttachmentVerified");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CustomAttachmentResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CustomAttachmentResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CustomAttachmentResponse is not found in the empty JSON string", CustomAttachmentResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CustomAttachmentResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CustomAttachmentResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CustomAttachmentResponse.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `objAttachmentProof`
      if (jsonObj.get("objAttachmentProof") != null && !jsonObj.get("objAttachmentProof").isJsonNull()) {
        AttachmentResponseCompound.validateJsonElement(jsonObj.get("objAttachmentProof"));
      }
      // validate the optional field `objAttachmentProofdocument`
      if (jsonObj.get("objAttachmentProofdocument") != null && !jsonObj.get("objAttachmentProofdocument").isJsonNull()) {
        AttachmentResponseCompound.validateJsonElement(jsonObj.get("objAttachmentProofdocument"));
      }
      if (jsonObj.get("a_objAttachmentAttachment") != null && !jsonObj.get("a_objAttachmentAttachment").isJsonNull()) {
        JsonArray jsonArrayaObjAttachmentAttachment = jsonObj.getAsJsonArray("a_objAttachmentAttachment");
        if (jsonArrayaObjAttachmentAttachment != null) {
          // ensure the json data is an array
          if (!jsonObj.get("a_objAttachmentAttachment").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `a_objAttachmentAttachment` to be an array in the JSON string but got `%s`", jsonObj.get("a_objAttachmentAttachment").toString()));
          }

          // validate the optional field `a_objAttachmentAttachment` (array)
          for (int i = 0; i < jsonArrayaObjAttachmentAttachment.size(); i++) {
            AttachmentResponseCompound.validateJsonElement(jsonArrayaObjAttachmentAttachment.get(i));
          };
        }
      }
      if (jsonObj.get("a_objAttachmentVersion") != null && !jsonObj.get("a_objAttachmentVersion").isJsonNull()) {
        JsonArray jsonArrayaObjAttachmentVersion = jsonObj.getAsJsonArray("a_objAttachmentVersion");
        if (jsonArrayaObjAttachmentVersion != null) {
          // ensure the json data is an array
          if (!jsonObj.get("a_objAttachmentVersion").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `a_objAttachmentVersion` to be an array in the JSON string but got `%s`", jsonObj.get("a_objAttachmentVersion").toString()));
          }

          // validate the optional field `a_objAttachmentVersion` (array)
          for (int i = 0; i < jsonArrayaObjAttachmentVersion.size(); i++) {
            AttachmentResponseCompound.validateJsonElement(jsonArrayaObjAttachmentVersion.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomAttachmentResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomAttachmentResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomAttachmentResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomAttachmentResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomAttachmentResponse>() {
           @Override
           public void write(JsonWriter out, CustomAttachmentResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomAttachmentResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CustomAttachmentResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CustomAttachmentResponse
   * @throws IOException if the JSON string is invalid with respect to CustomAttachmentResponse
   */
  public static CustomAttachmentResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomAttachmentResponse.class);
  }

  /**
   * Convert an instance of CustomAttachmentResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

