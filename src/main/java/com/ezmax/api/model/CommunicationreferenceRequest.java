/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * A Communicationreference Object
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-14T23:45:44.203418720Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class CommunicationreferenceRequest {
  public static final String SERIALIZED_NAME_PKI_COMMUNICATIONREFERENCE_I_D = "pkiCommunicationreferenceID";
  @SerializedName(SERIALIZED_NAME_PKI_COMMUNICATIONREFERENCE_I_D)
  private Integer pkiCommunicationreferenceID;

  public static final String SERIALIZED_NAME_FKI_BUYERCONTRACT_I_D = "fkiBuyercontractID";
  @SerializedName(SERIALIZED_NAME_FKI_BUYERCONTRACT_I_D)
  private Integer fkiBuyercontractID;

  public static final String SERIALIZED_NAME_FKI_EZSIGNFOLDER_I_D = "fkiEzsignfolderID";
  @SerializedName(SERIALIZED_NAME_FKI_EZSIGNFOLDER_I_D)
  private Integer fkiEzsignfolderID;

  public static final String SERIALIZED_NAME_FKI_INSCRIPTION_I_D = "fkiInscriptionID";
  @SerializedName(SERIALIZED_NAME_FKI_INSCRIPTION_I_D)
  private Integer fkiInscriptionID;

  public static final String SERIALIZED_NAME_FKI_INSCRIPTIONTEMP_I_D = "fkiInscriptiontempID";
  @SerializedName(SERIALIZED_NAME_FKI_INSCRIPTIONTEMP_I_D)
  private Integer fkiInscriptiontempID;

  public static final String SERIALIZED_NAME_FKI_INVOICE_I_D = "fkiInvoiceID";
  @SerializedName(SERIALIZED_NAME_FKI_INVOICE_I_D)
  private Integer fkiInvoiceID;

  public static final String SERIALIZED_NAME_FKI_OTHERINCOME_I_D = "fkiOtherincomeID";
  @SerializedName(SERIALIZED_NAME_FKI_OTHERINCOME_I_D)
  private Integer fkiOtherincomeID;

  public static final String SERIALIZED_NAME_FKI_ELECTRONICFUNDSTRANSFER_I_D = "fkiElectronicfundstransferID";
  @SerializedName(SERIALIZED_NAME_FKI_ELECTRONICFUNDSTRANSFER_I_D)
  private Integer fkiElectronicfundstransferID;

  public static final String SERIALIZED_NAME_FKI_REJECTEDOFFERTOPURCHASE_I_D = "fkiRejectedoffertopurchaseID";
  @SerializedName(SERIALIZED_NAME_FKI_REJECTEDOFFERTOPURCHASE_I_D)
  private Integer fkiRejectedoffertopurchaseID;

  public CommunicationreferenceRequest() {
  }

  public CommunicationreferenceRequest pkiCommunicationreferenceID(Integer pkiCommunicationreferenceID) {
    this.pkiCommunicationreferenceID = pkiCommunicationreferenceID;
    return this;
  }

   /**
   * The unique ID of the Communicationreference
   * minimum: 0
   * maximum: 4294967295
   * @return pkiCommunicationreferenceID
  **/
  @javax.annotation.Nullable
  public Integer getPkiCommunicationreferenceID() {
    return pkiCommunicationreferenceID;
  }

  public void setPkiCommunicationreferenceID(Integer pkiCommunicationreferenceID) {
    this.pkiCommunicationreferenceID = pkiCommunicationreferenceID;
  }


  public CommunicationreferenceRequest fkiBuyercontractID(Integer fkiBuyercontractID) {
    this.fkiBuyercontractID = fkiBuyercontractID;
    return this;
  }

   /**
   * The unique ID of the Buyercontract
   * minimum: 1
   * maximum: 65535
   * @return fkiBuyercontractID
  **/
  @javax.annotation.Nullable
  public Integer getFkiBuyercontractID() {
    return fkiBuyercontractID;
  }

  public void setFkiBuyercontractID(Integer fkiBuyercontractID) {
    this.fkiBuyercontractID = fkiBuyercontractID;
  }


  public CommunicationreferenceRequest fkiEzsignfolderID(Integer fkiEzsignfolderID) {
    this.fkiEzsignfolderID = fkiEzsignfolderID;
    return this;
  }

   /**
   * The unique ID of the Ezsignfolder
   * minimum: 0
   * @return fkiEzsignfolderID
  **/
  @javax.annotation.Nullable
  public Integer getFkiEzsignfolderID() {
    return fkiEzsignfolderID;
  }

  public void setFkiEzsignfolderID(Integer fkiEzsignfolderID) {
    this.fkiEzsignfolderID = fkiEzsignfolderID;
  }


  public CommunicationreferenceRequest fkiInscriptionID(Integer fkiInscriptionID) {
    this.fkiInscriptionID = fkiInscriptionID;
    return this;
  }

   /**
   * The unique ID of the Inscription.
   * minimum: 0
   * @return fkiInscriptionID
  **/
  @javax.annotation.Nullable
  public Integer getFkiInscriptionID() {
    return fkiInscriptionID;
  }

  public void setFkiInscriptionID(Integer fkiInscriptionID) {
    this.fkiInscriptionID = fkiInscriptionID;
  }


  public CommunicationreferenceRequest fkiInscriptiontempID(Integer fkiInscriptiontempID) {
    this.fkiInscriptiontempID = fkiInscriptiontempID;
    return this;
  }

   /**
   * The unique ID of the Inscriptiontemp
   * minimum: 1
   * maximum: 16777215
   * @return fkiInscriptiontempID
  **/
  @javax.annotation.Nullable
  public Integer getFkiInscriptiontempID() {
    return fkiInscriptiontempID;
  }

  public void setFkiInscriptiontempID(Integer fkiInscriptiontempID) {
    this.fkiInscriptiontempID = fkiInscriptiontempID;
  }


  public CommunicationreferenceRequest fkiInvoiceID(Integer fkiInvoiceID) {
    this.fkiInvoiceID = fkiInvoiceID;
    return this;
  }

   /**
   * The unique ID of the Invoice.
   * minimum: 0
   * @return fkiInvoiceID
  **/
  @javax.annotation.Nullable
  public Integer getFkiInvoiceID() {
    return fkiInvoiceID;
  }

  public void setFkiInvoiceID(Integer fkiInvoiceID) {
    this.fkiInvoiceID = fkiInvoiceID;
  }


  public CommunicationreferenceRequest fkiOtherincomeID(Integer fkiOtherincomeID) {
    this.fkiOtherincomeID = fkiOtherincomeID;
    return this;
  }

   /**
   * The unique ID of the Otherincome
   * minimum: 1
   * maximum: 65535
   * @return fkiOtherincomeID
  **/
  @javax.annotation.Nullable
  public Integer getFkiOtherincomeID() {
    return fkiOtherincomeID;
  }

  public void setFkiOtherincomeID(Integer fkiOtherincomeID) {
    this.fkiOtherincomeID = fkiOtherincomeID;
  }


  public CommunicationreferenceRequest fkiElectronicfundstransferID(Integer fkiElectronicfundstransferID) {
    this.fkiElectronicfundstransferID = fkiElectronicfundstransferID;
    return this;
  }

   /**
   * The unique ID of the Electronicfundstransfer
   * minimum: 1
   * maximum: 65535
   * @return fkiElectronicfundstransferID
  **/
  @javax.annotation.Nullable
  public Integer getFkiElectronicfundstransferID() {
    return fkiElectronicfundstransferID;
  }

  public void setFkiElectronicfundstransferID(Integer fkiElectronicfundstransferID) {
    this.fkiElectronicfundstransferID = fkiElectronicfundstransferID;
  }


  public CommunicationreferenceRequest fkiRejectedoffertopurchaseID(Integer fkiRejectedoffertopurchaseID) {
    this.fkiRejectedoffertopurchaseID = fkiRejectedoffertopurchaseID;
    return this;
  }

   /**
   * The unique ID of the Rejectedoffertopurchase
   * minimum: 1
   * maximum: 65535
   * @return fkiRejectedoffertopurchaseID
  **/
  @javax.annotation.Nullable
  public Integer getFkiRejectedoffertopurchaseID() {
    return fkiRejectedoffertopurchaseID;
  }

  public void setFkiRejectedoffertopurchaseID(Integer fkiRejectedoffertopurchaseID) {
    this.fkiRejectedoffertopurchaseID = fkiRejectedoffertopurchaseID;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommunicationreferenceRequest communicationreferenceRequest = (CommunicationreferenceRequest) o;
    return Objects.equals(this.pkiCommunicationreferenceID, communicationreferenceRequest.pkiCommunicationreferenceID) &&
        Objects.equals(this.fkiBuyercontractID, communicationreferenceRequest.fkiBuyercontractID) &&
        Objects.equals(this.fkiEzsignfolderID, communicationreferenceRequest.fkiEzsignfolderID) &&
        Objects.equals(this.fkiInscriptionID, communicationreferenceRequest.fkiInscriptionID) &&
        Objects.equals(this.fkiInscriptiontempID, communicationreferenceRequest.fkiInscriptiontempID) &&
        Objects.equals(this.fkiInvoiceID, communicationreferenceRequest.fkiInvoiceID) &&
        Objects.equals(this.fkiOtherincomeID, communicationreferenceRequest.fkiOtherincomeID) &&
        Objects.equals(this.fkiElectronicfundstransferID, communicationreferenceRequest.fkiElectronicfundstransferID) &&
        Objects.equals(this.fkiRejectedoffertopurchaseID, communicationreferenceRequest.fkiRejectedoffertopurchaseID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pkiCommunicationreferenceID, fkiBuyercontractID, fkiEzsignfolderID, fkiInscriptionID, fkiInscriptiontempID, fkiInvoiceID, fkiOtherincomeID, fkiElectronicfundstransferID, fkiRejectedoffertopurchaseID);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommunicationreferenceRequest {\n");
    sb.append("    pkiCommunicationreferenceID: ").append(toIndentedString(pkiCommunicationreferenceID)).append("\n");
    sb.append("    fkiBuyercontractID: ").append(toIndentedString(fkiBuyercontractID)).append("\n");
    sb.append("    fkiEzsignfolderID: ").append(toIndentedString(fkiEzsignfolderID)).append("\n");
    sb.append("    fkiInscriptionID: ").append(toIndentedString(fkiInscriptionID)).append("\n");
    sb.append("    fkiInscriptiontempID: ").append(toIndentedString(fkiInscriptiontempID)).append("\n");
    sb.append("    fkiInvoiceID: ").append(toIndentedString(fkiInvoiceID)).append("\n");
    sb.append("    fkiOtherincomeID: ").append(toIndentedString(fkiOtherincomeID)).append("\n");
    sb.append("    fkiElectronicfundstransferID: ").append(toIndentedString(fkiElectronicfundstransferID)).append("\n");
    sb.append("    fkiRejectedoffertopurchaseID: ").append(toIndentedString(fkiRejectedoffertopurchaseID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pkiCommunicationreferenceID");
    openapiFields.add("fkiBuyercontractID");
    openapiFields.add("fkiEzsignfolderID");
    openapiFields.add("fkiInscriptionID");
    openapiFields.add("fkiInscriptiontempID");
    openapiFields.add("fkiInvoiceID");
    openapiFields.add("fkiOtherincomeID");
    openapiFields.add("fkiElectronicfundstransferID");
    openapiFields.add("fkiRejectedoffertopurchaseID");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to CommunicationreferenceRequest
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CommunicationreferenceRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CommunicationreferenceRequest is not found in the empty JSON string", CommunicationreferenceRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CommunicationreferenceRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CommunicationreferenceRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CommunicationreferenceRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CommunicationreferenceRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CommunicationreferenceRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CommunicationreferenceRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CommunicationreferenceRequest>() {
           @Override
           public void write(JsonWriter out, CommunicationreferenceRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CommunicationreferenceRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CommunicationreferenceRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CommunicationreferenceRequest
  * @throws IOException if the JSON string is invalid with respect to CommunicationreferenceRequest
  */
  public static CommunicationreferenceRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CommunicationreferenceRequest.class);
  }

 /**
  * Convert an instance of CommunicationreferenceRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

