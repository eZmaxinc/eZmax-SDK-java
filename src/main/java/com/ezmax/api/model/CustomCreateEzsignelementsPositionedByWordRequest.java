/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * A CreateEzsignelementsPositionedByWord object
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-05T14:47:58.834564157Z[Etc/UTC]", comments = "Generator version: 7.11.0")
public class CustomCreateEzsignelementsPositionedByWordRequest {
  public static final String SERIALIZED_NAME_S_CREATEEZSIGNELEMENTSPOSITIONEDBYWORD_PATTERN = "sCreateezsignelementspositionedbywordPattern";
  @SerializedName(SERIALIZED_NAME_S_CREATEEZSIGNELEMENTSPOSITIONEDBYWORD_PATTERN)
  @javax.annotation.Nonnull
  private String sCreateezsignelementspositionedbywordPattern;

  public static final String SERIALIZED_NAME_I_CREATEEZSIGNELEMENTSPOSITIONEDBYWORD_OFFSETX = "iCreateezsignelementspositionedbywordOffsetx";
  @SerializedName(SERIALIZED_NAME_I_CREATEEZSIGNELEMENTSPOSITIONEDBYWORD_OFFSETX)
  @javax.annotation.Nonnull
  private Integer iCreateezsignelementspositionedbywordOffsetx;

  public static final String SERIALIZED_NAME_I_CREATEEZSIGNELEMENTSPOSITIONEDBYWORD_OFFSETY = "iCreateezsignelementspositionedbywordOffsety";
  @SerializedName(SERIALIZED_NAME_I_CREATEEZSIGNELEMENTSPOSITIONEDBYWORD_OFFSETY)
  @javax.annotation.Nonnull
  private Integer iCreateezsignelementspositionedbywordOffsety;

  /**
   * The occurance in the search to add the ezsign element
   */
  @JsonAdapter(ECreateezsignelementspositionedbywordOccuranceEnum.Adapter.class)
  public enum ECreateezsignelementspositionedbywordOccuranceEnum {
    ALL("All"),
    
    FIRST("First"),
    
    LAST("Last");

    private String value;

    ECreateezsignelementspositionedbywordOccuranceEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ECreateezsignelementspositionedbywordOccuranceEnum fromValue(String value) {
      for (ECreateezsignelementspositionedbywordOccuranceEnum b : ECreateezsignelementspositionedbywordOccuranceEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ECreateezsignelementspositionedbywordOccuranceEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ECreateezsignelementspositionedbywordOccuranceEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ECreateezsignelementspositionedbywordOccuranceEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ECreateezsignelementspositionedbywordOccuranceEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ECreateezsignelementspositionedbywordOccuranceEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_E_CREATEEZSIGNELEMENTSPOSITIONEDBYWORD_OCCURANCE = "eCreateezsignelementspositionedbywordOccurance";
  @SerializedName(SERIALIZED_NAME_E_CREATEEZSIGNELEMENTSPOSITIONEDBYWORD_OCCURANCE)
  @javax.annotation.Nonnull
  private ECreateezsignelementspositionedbywordOccuranceEnum eCreateezsignelementspositionedbywordOccurance;

  public CustomCreateEzsignelementsPositionedByWordRequest() {
  }

  public CustomCreateEzsignelementsPositionedByWordRequest sCreateezsignelementspositionedbywordPattern(@javax.annotation.Nonnull String sCreateezsignelementspositionedbywordPattern) {
    this.sCreateezsignelementspositionedbywordPattern = sCreateezsignelementspositionedbywordPattern;
    return this;
  }

  /**
   * The word to search
   * @return sCreateezsignelementspositionedbywordPattern
   */
  @javax.annotation.Nonnull
  public String getsCreateezsignelementspositionedbywordPattern() {
    return sCreateezsignelementspositionedbywordPattern;
  }

  public void setsCreateezsignelementspositionedbywordPattern(@javax.annotation.Nonnull String sCreateezsignelementspositionedbywordPattern) {
    this.sCreateezsignelementspositionedbywordPattern = sCreateezsignelementspositionedbywordPattern;
  }


  public CustomCreateEzsignelementsPositionedByWordRequest iCreateezsignelementspositionedbywordOffsetx(@javax.annotation.Nonnull Integer iCreateezsignelementspositionedbywordOffsetx) {
    this.iCreateezsignelementspositionedbywordOffsetx = iCreateezsignelementspositionedbywordOffsetx;
    return this;
  }

  /**
   * The X offset
   * @return iCreateezsignelementspositionedbywordOffsetx
   */
  @javax.annotation.Nonnull
  public Integer getiCreateezsignelementspositionedbywordOffsetx() {
    return iCreateezsignelementspositionedbywordOffsetx;
  }

  public void setiCreateezsignelementspositionedbywordOffsetx(@javax.annotation.Nonnull Integer iCreateezsignelementspositionedbywordOffsetx) {
    this.iCreateezsignelementspositionedbywordOffsetx = iCreateezsignelementspositionedbywordOffsetx;
  }


  public CustomCreateEzsignelementsPositionedByWordRequest iCreateezsignelementspositionedbywordOffsety(@javax.annotation.Nonnull Integer iCreateezsignelementspositionedbywordOffsety) {
    this.iCreateezsignelementspositionedbywordOffsety = iCreateezsignelementspositionedbywordOffsety;
    return this;
  }

  /**
   * The Y offset
   * @return iCreateezsignelementspositionedbywordOffsety
   */
  @javax.annotation.Nonnull
  public Integer getiCreateezsignelementspositionedbywordOffsety() {
    return iCreateezsignelementspositionedbywordOffsety;
  }

  public void setiCreateezsignelementspositionedbywordOffsety(@javax.annotation.Nonnull Integer iCreateezsignelementspositionedbywordOffsety) {
    this.iCreateezsignelementspositionedbywordOffsety = iCreateezsignelementspositionedbywordOffsety;
  }


  public CustomCreateEzsignelementsPositionedByWordRequest eCreateezsignelementspositionedbywordOccurance(@javax.annotation.Nonnull ECreateezsignelementspositionedbywordOccuranceEnum eCreateezsignelementspositionedbywordOccurance) {
    this.eCreateezsignelementspositionedbywordOccurance = eCreateezsignelementspositionedbywordOccurance;
    return this;
  }

  /**
   * The occurance in the search to add the ezsign element
   * @return eCreateezsignelementspositionedbywordOccurance
   */
  @javax.annotation.Nonnull
  public ECreateezsignelementspositionedbywordOccuranceEnum geteCreateezsignelementspositionedbywordOccurance() {
    return eCreateezsignelementspositionedbywordOccurance;
  }

  public void seteCreateezsignelementspositionedbywordOccurance(@javax.annotation.Nonnull ECreateezsignelementspositionedbywordOccuranceEnum eCreateezsignelementspositionedbywordOccurance) {
    this.eCreateezsignelementspositionedbywordOccurance = eCreateezsignelementspositionedbywordOccurance;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomCreateEzsignelementsPositionedByWordRequest customCreateEzsignelementsPositionedByWordRequest = (CustomCreateEzsignelementsPositionedByWordRequest) o;
    return Objects.equals(this.sCreateezsignelementspositionedbywordPattern, customCreateEzsignelementsPositionedByWordRequest.sCreateezsignelementspositionedbywordPattern) &&
        Objects.equals(this.iCreateezsignelementspositionedbywordOffsetx, customCreateEzsignelementsPositionedByWordRequest.iCreateezsignelementspositionedbywordOffsetx) &&
        Objects.equals(this.iCreateezsignelementspositionedbywordOffsety, customCreateEzsignelementsPositionedByWordRequest.iCreateezsignelementspositionedbywordOffsety) &&
        Objects.equals(this.eCreateezsignelementspositionedbywordOccurance, customCreateEzsignelementsPositionedByWordRequest.eCreateezsignelementspositionedbywordOccurance);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sCreateezsignelementspositionedbywordPattern, iCreateezsignelementspositionedbywordOffsetx, iCreateezsignelementspositionedbywordOffsety, eCreateezsignelementspositionedbywordOccurance);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomCreateEzsignelementsPositionedByWordRequest {\n");
    sb.append("    sCreateezsignelementspositionedbywordPattern: ").append(toIndentedString(sCreateezsignelementspositionedbywordPattern)).append("\n");
    sb.append("    iCreateezsignelementspositionedbywordOffsetx: ").append(toIndentedString(iCreateezsignelementspositionedbywordOffsetx)).append("\n");
    sb.append("    iCreateezsignelementspositionedbywordOffsety: ").append(toIndentedString(iCreateezsignelementspositionedbywordOffsety)).append("\n");
    sb.append("    eCreateezsignelementspositionedbywordOccurance: ").append(toIndentedString(eCreateezsignelementspositionedbywordOccurance)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("sCreateezsignelementspositionedbywordPattern");
    openapiFields.add("iCreateezsignelementspositionedbywordOffsetx");
    openapiFields.add("iCreateezsignelementspositionedbywordOffsety");
    openapiFields.add("eCreateezsignelementspositionedbywordOccurance");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("sCreateezsignelementspositionedbywordPattern");
    openapiRequiredFields.add("iCreateezsignelementspositionedbywordOffsetx");
    openapiRequiredFields.add("iCreateezsignelementspositionedbywordOffsety");
    openapiRequiredFields.add("eCreateezsignelementspositionedbywordOccurance");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CustomCreateEzsignelementsPositionedByWordRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CustomCreateEzsignelementsPositionedByWordRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CustomCreateEzsignelementsPositionedByWordRequest is not found in the empty JSON string", CustomCreateEzsignelementsPositionedByWordRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CustomCreateEzsignelementsPositionedByWordRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CustomCreateEzsignelementsPositionedByWordRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CustomCreateEzsignelementsPositionedByWordRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("sCreateezsignelementspositionedbywordPattern").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sCreateezsignelementspositionedbywordPattern` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sCreateezsignelementspositionedbywordPattern").toString()));
      }
      if (!jsonObj.get("eCreateezsignelementspositionedbywordOccurance").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `eCreateezsignelementspositionedbywordOccurance` to be a primitive type in the JSON string but got `%s`", jsonObj.get("eCreateezsignelementspositionedbywordOccurance").toString()));
      }
      // validate the required field `eCreateezsignelementspositionedbywordOccurance`
      ECreateezsignelementspositionedbywordOccuranceEnum.validateJsonElement(jsonObj.get("eCreateezsignelementspositionedbywordOccurance"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomCreateEzsignelementsPositionedByWordRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomCreateEzsignelementsPositionedByWordRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomCreateEzsignelementsPositionedByWordRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomCreateEzsignelementsPositionedByWordRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomCreateEzsignelementsPositionedByWordRequest>() {
           @Override
           public void write(JsonWriter out, CustomCreateEzsignelementsPositionedByWordRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomCreateEzsignelementsPositionedByWordRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CustomCreateEzsignelementsPositionedByWordRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CustomCreateEzsignelementsPositionedByWordRequest
   * @throws IOException if the JSON string is invalid with respect to CustomCreateEzsignelementsPositionedByWordRequest
   */
  public static CustomCreateEzsignelementsPositionedByWordRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomCreateEzsignelementsPositionedByWordRequest.class);
  }

  /**
   * Convert an instance of CustomCreateEzsignelementsPositionedByWordRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

