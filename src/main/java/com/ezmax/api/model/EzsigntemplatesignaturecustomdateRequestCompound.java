/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * An Ezsigntemplatesignaturecustomdate Object and children to create a complete structure
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-20T21:23:27.769116941Z[Etc/UTC]", comments = "Generator version: 7.10.0")
public class EzsigntemplatesignaturecustomdateRequestCompound {
  public static final String SERIALIZED_NAME_PKI_EZSIGNTEMPLATESIGNATURECUSTOMDATE_I_D = "pkiEzsigntemplatesignaturecustomdateID";
  @SerializedName(SERIALIZED_NAME_PKI_EZSIGNTEMPLATESIGNATURECUSTOMDATE_I_D)
  @javax.annotation.Nullable
  private Integer pkiEzsigntemplatesignaturecustomdateID;

  public static final String SERIALIZED_NAME_I_EZSIGNTEMPLATESIGNATURECUSTOMDATE_X = "iEzsigntemplatesignaturecustomdateX";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_I_EZSIGNTEMPLATESIGNATURECUSTOMDATE_X)
  @javax.annotation.Nullable
  private Integer iEzsigntemplatesignaturecustomdateX;

  public static final String SERIALIZED_NAME_I_EZSIGNTEMPLATESIGNATURECUSTOMDATE_Y = "iEzsigntemplatesignaturecustomdateY";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_I_EZSIGNTEMPLATESIGNATURECUSTOMDATE_Y)
  @javax.annotation.Nullable
  private Integer iEzsigntemplatesignaturecustomdateY;

  public static final String SERIALIZED_NAME_I_EZSIGNTEMPLATESIGNATURECUSTOMDATE_OFFSETX = "iEzsigntemplatesignaturecustomdateOffsetx";
  @SerializedName(SERIALIZED_NAME_I_EZSIGNTEMPLATESIGNATURECUSTOMDATE_OFFSETX)
  @javax.annotation.Nullable
  private Integer iEzsigntemplatesignaturecustomdateOffsetx;

  public static final String SERIALIZED_NAME_I_EZSIGNTEMPLATESIGNATURECUSTOMDATE_OFFSETY = "iEzsigntemplatesignaturecustomdateOffsety";
  @SerializedName(SERIALIZED_NAME_I_EZSIGNTEMPLATESIGNATURECUSTOMDATE_OFFSETY)
  @javax.annotation.Nullable
  private Integer iEzsigntemplatesignaturecustomdateOffsety;

  public static final String SERIALIZED_NAME_S_EZSIGNTEMPLATESIGNATURECUSTOMDATE_FORMAT = "sEzsigntemplatesignaturecustomdateFormat";
  @SerializedName(SERIALIZED_NAME_S_EZSIGNTEMPLATESIGNATURECUSTOMDATE_FORMAT)
  @javax.annotation.Nonnull
  private String sEzsigntemplatesignaturecustomdateFormat;

  public EzsigntemplatesignaturecustomdateRequestCompound() {
  }

  public EzsigntemplatesignaturecustomdateRequestCompound pkiEzsigntemplatesignaturecustomdateID(@javax.annotation.Nullable Integer pkiEzsigntemplatesignaturecustomdateID) {
    this.pkiEzsigntemplatesignaturecustomdateID = pkiEzsigntemplatesignaturecustomdateID;
    return this;
  }

  /**
   * The unique ID of the Ezsigntemplatesignaturecustomdate
   * minimum: 0
   * @return pkiEzsigntemplatesignaturecustomdateID
   */
  @javax.annotation.Nullable
  public Integer getPkiEzsigntemplatesignaturecustomdateID() {
    return pkiEzsigntemplatesignaturecustomdateID;
  }

  public void setPkiEzsigntemplatesignaturecustomdateID(@javax.annotation.Nullable Integer pkiEzsigntemplatesignaturecustomdateID) {
    this.pkiEzsigntemplatesignaturecustomdateID = pkiEzsigntemplatesignaturecustomdateID;
  }


  @Deprecated
  public EzsigntemplatesignaturecustomdateRequestCompound iEzsigntemplatesignaturecustomdateX(@javax.annotation.Nullable Integer iEzsigntemplatesignaturecustomdateX) {
    this.iEzsigntemplatesignaturecustomdateX = iEzsigntemplatesignaturecustomdateX;
    return this;
  }

  /**
   * The X coordinate (Horizontal) where to put the Ezsigntemplatesignaturecustomdate on the page.  Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the Ezsigntemplatesignaturecustomdate 2 inches from the left border of the page, you would use \&quot;200\&quot; for the X coordinate.
   * minimum: 0
   * @return iEzsigntemplatesignaturecustomdateX
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public Integer getiEzsigntemplatesignaturecustomdateX() {
    return iEzsigntemplatesignaturecustomdateX;
  }

  @Deprecated
  public void setiEzsigntemplatesignaturecustomdateX(@javax.annotation.Nullable Integer iEzsigntemplatesignaturecustomdateX) {
    this.iEzsigntemplatesignaturecustomdateX = iEzsigntemplatesignaturecustomdateX;
  }


  @Deprecated
  public EzsigntemplatesignaturecustomdateRequestCompound iEzsigntemplatesignaturecustomdateY(@javax.annotation.Nullable Integer iEzsigntemplatesignaturecustomdateY) {
    this.iEzsigntemplatesignaturecustomdateY = iEzsigntemplatesignaturecustomdateY;
    return this;
  }

  /**
   * The Y coordinate (Vertical) where to put the Ezsigntemplatesignaturecustomdate on the page.  Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the Ezsigntemplatesignaturecustomdate 3 inches from the top border of the page, you would use \&quot;300\&quot; for the Y coordinate.
   * minimum: 0
   * @return iEzsigntemplatesignaturecustomdateY
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public Integer getiEzsigntemplatesignaturecustomdateY() {
    return iEzsigntemplatesignaturecustomdateY;
  }

  @Deprecated
  public void setiEzsigntemplatesignaturecustomdateY(@javax.annotation.Nullable Integer iEzsigntemplatesignaturecustomdateY) {
    this.iEzsigntemplatesignaturecustomdateY = iEzsigntemplatesignaturecustomdateY;
  }


  public EzsigntemplatesignaturecustomdateRequestCompound iEzsigntemplatesignaturecustomdateOffsetx(@javax.annotation.Nullable Integer iEzsigntemplatesignaturecustomdateOffsetx) {
    this.iEzsigntemplatesignaturecustomdateOffsetx = iEzsigntemplatesignaturecustomdateOffsetx;
    return this;
  }

  /**
   * The X coordinate (Horizontal) where to put the Ezsigntemplatesignaturecustomdate on the page.  Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the Ezsigntemplatesignaturecustomdate 2 inches from the left of the signature, you would use \&quot;200\&quot; for the X coordinate.
   * @return iEzsigntemplatesignaturecustomdateOffsetx
   */
  @javax.annotation.Nullable
  public Integer getiEzsigntemplatesignaturecustomdateOffsetx() {
    return iEzsigntemplatesignaturecustomdateOffsetx;
  }

  public void setiEzsigntemplatesignaturecustomdateOffsetx(@javax.annotation.Nullable Integer iEzsigntemplatesignaturecustomdateOffsetx) {
    this.iEzsigntemplatesignaturecustomdateOffsetx = iEzsigntemplatesignaturecustomdateOffsetx;
  }


  public EzsigntemplatesignaturecustomdateRequestCompound iEzsigntemplatesignaturecustomdateOffsety(@javax.annotation.Nullable Integer iEzsigntemplatesignaturecustomdateOffsety) {
    this.iEzsigntemplatesignaturecustomdateOffsety = iEzsigntemplatesignaturecustomdateOffsety;
    return this;
  }

  /**
   * The X coordinate (Horizontal) where to put the Ezsigntemplatesignaturecustomdate on the page.  Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the Ezsigntemplatesignaturecustomdate 2 inches from the top of the signature, you would use \&quot;200\&quot; for the Y coordinate.
   * @return iEzsigntemplatesignaturecustomdateOffsety
   */
  @javax.annotation.Nullable
  public Integer getiEzsigntemplatesignaturecustomdateOffsety() {
    return iEzsigntemplatesignaturecustomdateOffsety;
  }

  public void setiEzsigntemplatesignaturecustomdateOffsety(@javax.annotation.Nullable Integer iEzsigntemplatesignaturecustomdateOffsety) {
    this.iEzsigntemplatesignaturecustomdateOffsety = iEzsigntemplatesignaturecustomdateOffsety;
  }


  public EzsigntemplatesignaturecustomdateRequestCompound sEzsigntemplatesignaturecustomdateFormat(@javax.annotation.Nonnull String sEzsigntemplatesignaturecustomdateFormat) {
    this.sEzsigntemplatesignaturecustomdateFormat = sEzsigntemplatesignaturecustomdateFormat;
    return this;
  }

  /**
   * The custom date format to use  You can use the codes below and they will be replaced at signature time. Text values like month and day names will be rendered in the proper language. Other text will be left as-is.  The codes examples below are based on the following datetime: Thursday, January 6, 2022 at 08:07:09 EST  For example, the format \&quot;Signature date: {MM}/{DD}/{YYYY} {hh}:{mm}\&quot; would become \&quot;Signature date: 01/06/2022 08:07\&quot;  **Year**  | Code | Example | | - | - | | {YYYY} | 2022 | | {YY} | 22 |  **Month**  | Code | Example | | - | - | | {MonthCapitalize} | Janvier | | {Month} | janvier | | {MM} | 01 | | {M} | 1 |  **Day**  | Code | Example | | - | - | | {DayCapitalize} | Jeudi | | {Day} | jeudi | | {DD} | 06 | | {D} | 6 |  **Hour**  | Code | Example | | - | - | | {hh} | 08 |  **Minute**  | Code | Example | | - | - | | {mm} | 07 |  **Second**  | Code | Example | | - | - | | {ss} | 09 |        **Timezone**  | Code | Example | | - | - | | {Z} | EST |       **Time**  | Code | Example | | - | - | | {Time} | 08:07:09 |   | {TimeZ} | 08:07:09 EST |     **Date**  | Code | Example | | - | - | | {Date} | 2022-01-06 |   | {DateText} | 1er Janvier 2022 |  **Full**  | Code | Example | | - | - | | {DateTime} | 2022-01-06 08:07:09 |   | {DateTimeZ} | 2022-01-06 08:07:09 EST | 
   * @return sEzsigntemplatesignaturecustomdateFormat
   */
  @javax.annotation.Nonnull
  public String getsEzsigntemplatesignaturecustomdateFormat() {
    return sEzsigntemplatesignaturecustomdateFormat;
  }

  public void setsEzsigntemplatesignaturecustomdateFormat(@javax.annotation.Nonnull String sEzsigntemplatesignaturecustomdateFormat) {
    this.sEzsigntemplatesignaturecustomdateFormat = sEzsigntemplatesignaturecustomdateFormat;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EzsigntemplatesignaturecustomdateRequestCompound ezsigntemplatesignaturecustomdateRequestCompound = (EzsigntemplatesignaturecustomdateRequestCompound) o;
    return Objects.equals(this.pkiEzsigntemplatesignaturecustomdateID, ezsigntemplatesignaturecustomdateRequestCompound.pkiEzsigntemplatesignaturecustomdateID) &&
        Objects.equals(this.iEzsigntemplatesignaturecustomdateX, ezsigntemplatesignaturecustomdateRequestCompound.iEzsigntemplatesignaturecustomdateX) &&
        Objects.equals(this.iEzsigntemplatesignaturecustomdateY, ezsigntemplatesignaturecustomdateRequestCompound.iEzsigntemplatesignaturecustomdateY) &&
        Objects.equals(this.iEzsigntemplatesignaturecustomdateOffsetx, ezsigntemplatesignaturecustomdateRequestCompound.iEzsigntemplatesignaturecustomdateOffsetx) &&
        Objects.equals(this.iEzsigntemplatesignaturecustomdateOffsety, ezsigntemplatesignaturecustomdateRequestCompound.iEzsigntemplatesignaturecustomdateOffsety) &&
        Objects.equals(this.sEzsigntemplatesignaturecustomdateFormat, ezsigntemplatesignaturecustomdateRequestCompound.sEzsigntemplatesignaturecustomdateFormat);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pkiEzsigntemplatesignaturecustomdateID, iEzsigntemplatesignaturecustomdateX, iEzsigntemplatesignaturecustomdateY, iEzsigntemplatesignaturecustomdateOffsetx, iEzsigntemplatesignaturecustomdateOffsety, sEzsigntemplatesignaturecustomdateFormat);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EzsigntemplatesignaturecustomdateRequestCompound {\n");
    sb.append("    pkiEzsigntemplatesignaturecustomdateID: ").append(toIndentedString(pkiEzsigntemplatesignaturecustomdateID)).append("\n");
    sb.append("    iEzsigntemplatesignaturecustomdateX: ").append(toIndentedString(iEzsigntemplatesignaturecustomdateX)).append("\n");
    sb.append("    iEzsigntemplatesignaturecustomdateY: ").append(toIndentedString(iEzsigntemplatesignaturecustomdateY)).append("\n");
    sb.append("    iEzsigntemplatesignaturecustomdateOffsetx: ").append(toIndentedString(iEzsigntemplatesignaturecustomdateOffsetx)).append("\n");
    sb.append("    iEzsigntemplatesignaturecustomdateOffsety: ").append(toIndentedString(iEzsigntemplatesignaturecustomdateOffsety)).append("\n");
    sb.append("    sEzsigntemplatesignaturecustomdateFormat: ").append(toIndentedString(sEzsigntemplatesignaturecustomdateFormat)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pkiEzsigntemplatesignaturecustomdateID");
    openapiFields.add("iEzsigntemplatesignaturecustomdateX");
    openapiFields.add("iEzsigntemplatesignaturecustomdateY");
    openapiFields.add("iEzsigntemplatesignaturecustomdateOffsetx");
    openapiFields.add("iEzsigntemplatesignaturecustomdateOffsety");
    openapiFields.add("sEzsigntemplatesignaturecustomdateFormat");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("sEzsigntemplatesignaturecustomdateFormat");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EzsigntemplatesignaturecustomdateRequestCompound
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EzsigntemplatesignaturecustomdateRequestCompound.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EzsigntemplatesignaturecustomdateRequestCompound is not found in the empty JSON string", EzsigntemplatesignaturecustomdateRequestCompound.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EzsigntemplatesignaturecustomdateRequestCompound.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EzsigntemplatesignaturecustomdateRequestCompound` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : EzsigntemplatesignaturecustomdateRequestCompound.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("sEzsigntemplatesignaturecustomdateFormat").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sEzsigntemplatesignaturecustomdateFormat` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sEzsigntemplatesignaturecustomdateFormat").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EzsigntemplatesignaturecustomdateRequestCompound.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EzsigntemplatesignaturecustomdateRequestCompound' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EzsigntemplatesignaturecustomdateRequestCompound> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EzsigntemplatesignaturecustomdateRequestCompound.class));

       return (TypeAdapter<T>) new TypeAdapter<EzsigntemplatesignaturecustomdateRequestCompound>() {
           @Override
           public void write(JsonWriter out, EzsigntemplatesignaturecustomdateRequestCompound value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EzsigntemplatesignaturecustomdateRequestCompound read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EzsigntemplatesignaturecustomdateRequestCompound given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EzsigntemplatesignaturecustomdateRequestCompound
   * @throws IOException if the JSON string is invalid with respect to EzsigntemplatesignaturecustomdateRequestCompound
   */
  public static EzsigntemplatesignaturecustomdateRequestCompound fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EzsigntemplatesignaturecustomdateRequestCompound.class);
  }

  /**
   * Convert an instance of EzsigntemplatesignaturecustomdateRequestCompound to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

