/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.ezmax.api.model.ActivesessionResponse;
import com.ezmax.api.model.ActivesessionResponseCompoundApikey;
import com.ezmax.api.model.ActivesessionResponseCompoundUser;
import com.ezmax.api.model.FieldEActivesessionEzsign;
import com.ezmax.api.model.FieldEActivesessionEzsignaccess;
import com.ezmax.api.model.FieldEActivesessionEzsignprepaid;
import com.ezmax.api.model.FieldEActivesessionOrigin;
import com.ezmax.api.model.FieldEActivesessionRealestateinprogress;
import com.ezmax.api.model.FieldEActivesessionUsertype;
import com.ezmax.api.model.FieldEActivesessionWeekdaystart;
import com.ezmax.api.model.FieldESystemconfigurationEzsignofficeplan;
import com.ezmax.api.model.FieldEUserEzsignaccess;
import com.ezmax.api.model.FieldEUserEzsignprepaid;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * Payload for GET /1/object/activesession/getCurrent
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-17T15:03:32.455495633Z[Etc/UTC]", comments = "Generator version: 7.10.0")
public class ActivesessionResponseCompound extends ActivesessionResponse {
  public static final String SERIALIZED_NAME_FKI_EZSIGNUSER_I_D = "fkiEzsignuserID";
  @SerializedName(SERIALIZED_NAME_FKI_EZSIGNUSER_I_D)
  @javax.annotation.Nullable
  private Integer fkiEzsignuserID;

  public static final String SERIALIZED_NAME_B_SYSTEMCONFIGURATION_EZSIGNPAIDBYOFFICE = "bSystemconfigurationEzsignpaidbyoffice";
  @SerializedName(SERIALIZED_NAME_B_SYSTEMCONFIGURATION_EZSIGNPAIDBYOFFICE)
  @javax.annotation.Nullable
  private Boolean bSystemconfigurationEzsignpaidbyoffice;

  public static final String SERIALIZED_NAME_E_SYSTEMCONFIGURATION_EZSIGNOFFICEPLAN = "eSystemconfigurationEzsignofficeplan";
  @SerializedName(SERIALIZED_NAME_E_SYSTEMCONFIGURATION_EZSIGNOFFICEPLAN)
  @javax.annotation.Nullable
  private FieldESystemconfigurationEzsignofficeplan eSystemconfigurationEzsignofficeplan;

  public static final String SERIALIZED_NAME_E_USER_EZSIGNACCESS = "eUserEzsignaccess";
  @SerializedName(SERIALIZED_NAME_E_USER_EZSIGNACCESS)
  @javax.annotation.Nonnull
  private FieldEUserEzsignaccess eUserEzsignaccess;

  public static final String SERIALIZED_NAME_E_USER_EZSIGNPREPAID = "eUserEzsignprepaid";
  @SerializedName(SERIALIZED_NAME_E_USER_EZSIGNPREPAID)
  @javax.annotation.Nullable
  private FieldEUserEzsignprepaid eUserEzsignprepaid;

  public static final String SERIALIZED_NAME_B_USER_EZSIGNTRIAL = "bUserEzsigntrial";
  @SerializedName(SERIALIZED_NAME_B_USER_EZSIGNTRIAL)
  @javax.annotation.Nullable
  private Boolean bUserEzsigntrial;

  public static final String SERIALIZED_NAME_DT_USER_EZSIGNPREPAIDEXPIRATION = "dtUserEzsignprepaidexpiration";
  @SerializedName(SERIALIZED_NAME_DT_USER_EZSIGNPREPAIDEXPIRATION)
  @javax.annotation.Nullable
  private String dtUserEzsignprepaidexpiration;

  public static final String SERIALIZED_NAME_A_PKI_PERMISSION_I_D = "a_pkiPermissionID";
  @SerializedName(SERIALIZED_NAME_A_PKI_PERMISSION_I_D)
  @javax.annotation.Nonnull
  private List<Integer> aPkiPermissionID = new ArrayList<>();

  public static final String SERIALIZED_NAME_OBJ_USER_REAL = "objUserReal";
  @SerializedName(SERIALIZED_NAME_OBJ_USER_REAL)
  @javax.annotation.Nonnull
  private ActivesessionResponseCompoundUser objUserReal;

  public static final String SERIALIZED_NAME_OBJ_USER_CLONED = "objUserCloned";
  @SerializedName(SERIALIZED_NAME_OBJ_USER_CLONED)
  @javax.annotation.Nullable
  private ActivesessionResponseCompoundUser objUserCloned;

  public static final String SERIALIZED_NAME_OBJ_APIKEY = "objApikey";
  @SerializedName(SERIALIZED_NAME_OBJ_APIKEY)
  @javax.annotation.Nullable
  private ActivesessionResponseCompoundApikey objApikey;

  public static final String SERIALIZED_NAME_A_E_MODULE_INTERNALNAME = "a_eModuleInternalname";
  @SerializedName(SERIALIZED_NAME_A_E_MODULE_INTERNALNAME)
  @javax.annotation.Nonnull
  private List<String> aEModuleInternalname = new ArrayList<>();

  public ActivesessionResponseCompound() {
  }

  public ActivesessionResponseCompound fkiEzsignuserID(@javax.annotation.Nullable Integer fkiEzsignuserID) {
    this.fkiEzsignuserID = fkiEzsignuserID;
    return this;
  }

  /**
   * The unique ID of the Ezsignuser
   * minimum: 0
   * maximum: 65535
   * @return fkiEzsignuserID
   */
  @javax.annotation.Nullable
  public Integer getFkiEzsignuserID() {
    return fkiEzsignuserID;
  }

  public void setFkiEzsignuserID(@javax.annotation.Nullable Integer fkiEzsignuserID) {
    this.fkiEzsignuserID = fkiEzsignuserID;
  }


  public ActivesessionResponseCompound bSystemconfigurationEzsignpaidbyoffice(@javax.annotation.Nullable Boolean bSystemconfigurationEzsignpaidbyoffice) {
    this.bSystemconfigurationEzsignpaidbyoffice = bSystemconfigurationEzsignpaidbyoffice;
    return this;
  }

  /**
   * Whether if Ezsign is paid by the company or not
   * @return bSystemconfigurationEzsignpaidbyoffice
   */
  @javax.annotation.Nullable
  public Boolean getbSystemconfigurationEzsignpaidbyoffice() {
    return bSystemconfigurationEzsignpaidbyoffice;
  }

  public void setbSystemconfigurationEzsignpaidbyoffice(@javax.annotation.Nullable Boolean bSystemconfigurationEzsignpaidbyoffice) {
    this.bSystemconfigurationEzsignpaidbyoffice = bSystemconfigurationEzsignpaidbyoffice;
  }


  public ActivesessionResponseCompound eSystemconfigurationEzsignofficeplan(@javax.annotation.Nullable FieldESystemconfigurationEzsignofficeplan eSystemconfigurationEzsignofficeplan) {
    this.eSystemconfigurationEzsignofficeplan = eSystemconfigurationEzsignofficeplan;
    return this;
  }

  /**
   * Get eSystemconfigurationEzsignofficeplan
   * @return eSystemconfigurationEzsignofficeplan
   */
  @javax.annotation.Nullable
  public FieldESystemconfigurationEzsignofficeplan geteSystemconfigurationEzsignofficeplan() {
    return eSystemconfigurationEzsignofficeplan;
  }

  public void seteSystemconfigurationEzsignofficeplan(@javax.annotation.Nullable FieldESystemconfigurationEzsignofficeplan eSystemconfigurationEzsignofficeplan) {
    this.eSystemconfigurationEzsignofficeplan = eSystemconfigurationEzsignofficeplan;
  }


  public ActivesessionResponseCompound eUserEzsignaccess(@javax.annotation.Nonnull FieldEUserEzsignaccess eUserEzsignaccess) {
    this.eUserEzsignaccess = eUserEzsignaccess;
    return this;
  }

  /**
   * Get eUserEzsignaccess
   * @return eUserEzsignaccess
   */
  @javax.annotation.Nonnull
  public FieldEUserEzsignaccess geteUserEzsignaccess() {
    return eUserEzsignaccess;
  }

  public void seteUserEzsignaccess(@javax.annotation.Nonnull FieldEUserEzsignaccess eUserEzsignaccess) {
    this.eUserEzsignaccess = eUserEzsignaccess;
  }


  public ActivesessionResponseCompound eUserEzsignprepaid(@javax.annotation.Nullable FieldEUserEzsignprepaid eUserEzsignprepaid) {
    this.eUserEzsignprepaid = eUserEzsignprepaid;
    return this;
  }

  /**
   * Get eUserEzsignprepaid
   * @return eUserEzsignprepaid
   */
  @javax.annotation.Nullable
  public FieldEUserEzsignprepaid geteUserEzsignprepaid() {
    return eUserEzsignprepaid;
  }

  public void seteUserEzsignprepaid(@javax.annotation.Nullable FieldEUserEzsignprepaid eUserEzsignprepaid) {
    this.eUserEzsignprepaid = eUserEzsignprepaid;
  }


  public ActivesessionResponseCompound bUserEzsigntrial(@javax.annotation.Nullable Boolean bUserEzsigntrial) {
    this.bUserEzsigntrial = bUserEzsigntrial;
    return this;
  }

  /**
   * Whether the User&#39;s eZsign subscription is a trial
   * @return bUserEzsigntrial
   */
  @javax.annotation.Nullable
  public Boolean getbUserEzsigntrial() {
    return bUserEzsigntrial;
  }

  public void setbUserEzsigntrial(@javax.annotation.Nullable Boolean bUserEzsigntrial) {
    this.bUserEzsigntrial = bUserEzsigntrial;
  }


  public ActivesessionResponseCompound dtUserEzsignprepaidexpiration(@javax.annotation.Nullable String dtUserEzsignprepaidexpiration) {
    this.dtUserEzsignprepaidexpiration = dtUserEzsignprepaidexpiration;
    return this;
  }

  /**
   * The eZsign prepaid expiration date
   * @return dtUserEzsignprepaidexpiration
   */
  @javax.annotation.Nullable
  public String getDtUserEzsignprepaidexpiration() {
    return dtUserEzsignprepaidexpiration;
  }

  public void setDtUserEzsignprepaidexpiration(@javax.annotation.Nullable String dtUserEzsignprepaidexpiration) {
    this.dtUserEzsignprepaidexpiration = dtUserEzsignprepaidexpiration;
  }


  public ActivesessionResponseCompound aPkiPermissionID(@javax.annotation.Nonnull List<Integer> aPkiPermissionID) {
    this.aPkiPermissionID = aPkiPermissionID;
    return this;
  }

  public ActivesessionResponseCompound addAPkiPermissionIDItem(Integer aPkiPermissionIDItem) {
    if (this.aPkiPermissionID == null) {
      this.aPkiPermissionID = new ArrayList<>();
    }
    this.aPkiPermissionID.add(aPkiPermissionIDItem);
    return this;
  }

  /**
   * An array of permissions granted to the user or api key
   * @return aPkiPermissionID
   */
  @javax.annotation.Nonnull
  public List<Integer> getaPkiPermissionID() {
    return aPkiPermissionID;
  }

  public void setaPkiPermissionID(@javax.annotation.Nonnull List<Integer> aPkiPermissionID) {
    this.aPkiPermissionID = aPkiPermissionID;
  }


  public ActivesessionResponseCompound objUserReal(@javax.annotation.Nonnull ActivesessionResponseCompoundUser objUserReal) {
    this.objUserReal = objUserReal;
    return this;
  }

  /**
   * Get objUserReal
   * @return objUserReal
   */
  @javax.annotation.Nonnull
  public ActivesessionResponseCompoundUser getObjUserReal() {
    return objUserReal;
  }

  public void setObjUserReal(@javax.annotation.Nonnull ActivesessionResponseCompoundUser objUserReal) {
    this.objUserReal = objUserReal;
  }


  public ActivesessionResponseCompound objUserCloned(@javax.annotation.Nullable ActivesessionResponseCompoundUser objUserCloned) {
    this.objUserCloned = objUserCloned;
    return this;
  }

  /**
   * Get objUserCloned
   * @return objUserCloned
   */
  @javax.annotation.Nullable
  public ActivesessionResponseCompoundUser getObjUserCloned() {
    return objUserCloned;
  }

  public void setObjUserCloned(@javax.annotation.Nullable ActivesessionResponseCompoundUser objUserCloned) {
    this.objUserCloned = objUserCloned;
  }


  public ActivesessionResponseCompound objApikey(@javax.annotation.Nullable ActivesessionResponseCompoundApikey objApikey) {
    this.objApikey = objApikey;
    return this;
  }

  /**
   * Get objApikey
   * @return objApikey
   */
  @javax.annotation.Nullable
  public ActivesessionResponseCompoundApikey getObjApikey() {
    return objApikey;
  }

  public void setObjApikey(@javax.annotation.Nullable ActivesessionResponseCompoundApikey objApikey) {
    this.objApikey = objApikey;
  }


  public ActivesessionResponseCompound aEModuleInternalname(@javax.annotation.Nonnull List<String> aEModuleInternalname) {
    this.aEModuleInternalname = aEModuleInternalname;
    return this;
  }

  public ActivesessionResponseCompound addAEModuleInternalnameItem(String aEModuleInternalnameItem) {
    if (this.aEModuleInternalname == null) {
      this.aEModuleInternalname = new ArrayList<>();
    }
    this.aEModuleInternalname.add(aEModuleInternalnameItem);
    return this;
  }

  /**
   * An Array of Registered modules.  These are the modules that are Licensed to be used by the User or the API Key.
   * @return aEModuleInternalname
   */
  @javax.annotation.Nonnull
  public List<String> getaEModuleInternalname() {
    return aEModuleInternalname;
  }

  public void setaEModuleInternalname(@javax.annotation.Nonnull List<String> aEModuleInternalname) {
    this.aEModuleInternalname = aEModuleInternalname;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ActivesessionResponseCompound activesessionResponseCompound = (ActivesessionResponseCompound) o;
    return Objects.equals(this.fkiEzsignuserID, activesessionResponseCompound.fkiEzsignuserID) &&
        Objects.equals(this.bSystemconfigurationEzsignpaidbyoffice, activesessionResponseCompound.bSystemconfigurationEzsignpaidbyoffice) &&
        Objects.equals(this.eSystemconfigurationEzsignofficeplan, activesessionResponseCompound.eSystemconfigurationEzsignofficeplan) &&
        Objects.equals(this.eUserEzsignaccess, activesessionResponseCompound.eUserEzsignaccess) &&
        Objects.equals(this.eUserEzsignprepaid, activesessionResponseCompound.eUserEzsignprepaid) &&
        Objects.equals(this.bUserEzsigntrial, activesessionResponseCompound.bUserEzsigntrial) &&
        Objects.equals(this.dtUserEzsignprepaidexpiration, activesessionResponseCompound.dtUserEzsignprepaidexpiration) &&
        Objects.equals(this.aPkiPermissionID, activesessionResponseCompound.aPkiPermissionID) &&
        Objects.equals(this.objUserReal, activesessionResponseCompound.objUserReal) &&
        Objects.equals(this.objUserCloned, activesessionResponseCompound.objUserCloned) &&
        Objects.equals(this.objApikey, activesessionResponseCompound.objApikey) &&
        Objects.equals(this.aEModuleInternalname, activesessionResponseCompound.aEModuleInternalname) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fkiEzsignuserID, bSystemconfigurationEzsignpaidbyoffice, eSystemconfigurationEzsignofficeplan, eUserEzsignaccess, eUserEzsignprepaid, bUserEzsigntrial, dtUserEzsignprepaidexpiration, aPkiPermissionID, objUserReal, objUserCloned, objApikey, aEModuleInternalname, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ActivesessionResponseCompound {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    fkiEzsignuserID: ").append(toIndentedString(fkiEzsignuserID)).append("\n");
    sb.append("    bSystemconfigurationEzsignpaidbyoffice: ").append(toIndentedString(bSystemconfigurationEzsignpaidbyoffice)).append("\n");
    sb.append("    eSystemconfigurationEzsignofficeplan: ").append(toIndentedString(eSystemconfigurationEzsignofficeplan)).append("\n");
    sb.append("    eUserEzsignaccess: ").append(toIndentedString(eUserEzsignaccess)).append("\n");
    sb.append("    eUserEzsignprepaid: ").append(toIndentedString(eUserEzsignprepaid)).append("\n");
    sb.append("    bUserEzsigntrial: ").append(toIndentedString(bUserEzsigntrial)).append("\n");
    sb.append("    dtUserEzsignprepaidexpiration: ").append(toIndentedString(dtUserEzsignprepaidexpiration)).append("\n");
    sb.append("    aPkiPermissionID: ").append(toIndentedString(aPkiPermissionID)).append("\n");
    sb.append("    objUserReal: ").append(toIndentedString(objUserReal)).append("\n");
    sb.append("    objUserCloned: ").append(toIndentedString(objUserCloned)).append("\n");
    sb.append("    objApikey: ").append(toIndentedString(objApikey)).append("\n");
    sb.append("    aEModuleInternalname: ").append(toIndentedString(aEModuleInternalname)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("eActivesessionUsertype");
    openapiFields.add("eActivesessionOrigin");
    openapiFields.add("eActivesessionWeekdaystart");
    openapiFields.add("fkiLanguageID");
    openapiFields.add("sCompanyNameX");
    openapiFields.add("sDepartmentNameX");
    openapiFields.add("bActivesessionDebug");
    openapiFields.add("bActivesessionIssuperadmin");
    openapiFields.add("bActivesessionAttachment");
    openapiFields.add("bActivesessionCanafe");
    openapiFields.add("bActivesessionFinancial");
    openapiFields.add("bActivesessionRealestatecompleted");
    openapiFields.add("eActivesessionEzsign");
    openapiFields.add("eActivesessionEzsignaccess");
    openapiFields.add("eActivesessionEzsignprepaid");
    openapiFields.add("eActivesessionRealestateinprogress");
    openapiFields.add("pksCustomerCode");
    openapiFields.add("fkiSystemconfigurationtypeID");
    openapiFields.add("fkiSignatureID");
    openapiFields.add("fkiEzsignuserID");
    openapiFields.add("bSystemconfigurationEzsignpaidbyoffice");
    openapiFields.add("eSystemconfigurationEzsignofficeplan");
    openapiFields.add("eUserEzsignaccess");
    openapiFields.add("eUserEzsignprepaid");
    openapiFields.add("bUserEzsigntrial");
    openapiFields.add("dtUserEzsignprepaidexpiration");
    openapiFields.add("a_pkiPermissionID");
    openapiFields.add("objUserReal");
    openapiFields.add("objUserCloned");
    openapiFields.add("objApikey");
    openapiFields.add("a_eModuleInternalname");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("eUserEzsignaccess");
    openapiRequiredFields.add("a_pkiPermissionID");
    openapiRequiredFields.add("objUserReal");
    openapiRequiredFields.add("a_eModuleInternalname");
    openapiRequiredFields.add("eActivesessionUsertype");
    openapiRequiredFields.add("eActivesessionOrigin");
    openapiRequiredFields.add("eActivesessionWeekdaystart");
    openapiRequiredFields.add("fkiLanguageID");
    openapiRequiredFields.add("sCompanyNameX");
    openapiRequiredFields.add("sDepartmentNameX");
    openapiRequiredFields.add("bActivesessionDebug");
    openapiRequiredFields.add("bActivesessionIssuperadmin");
    openapiRequiredFields.add("eActivesessionEzsignaccess");
    openapiRequiredFields.add("pksCustomerCode");
    openapiRequiredFields.add("fkiSystemconfigurationtypeID");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ActivesessionResponseCompound
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ActivesessionResponseCompound.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ActivesessionResponseCompound is not found in the empty JSON string", ActivesessionResponseCompound.openapiRequiredFields.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `eSystemconfigurationEzsignofficeplan`
      if (jsonObj.get("eSystemconfigurationEzsignofficeplan") != null && !jsonObj.get("eSystemconfigurationEzsignofficeplan").isJsonNull()) {
        FieldESystemconfigurationEzsignofficeplan.validateJsonElement(jsonObj.get("eSystemconfigurationEzsignofficeplan"));
      }
      // validate the required field `eUserEzsignaccess`
      FieldEUserEzsignaccess.validateJsonElement(jsonObj.get("eUserEzsignaccess"));
      // validate the optional field `eUserEzsignprepaid`
      if (jsonObj.get("eUserEzsignprepaid") != null && !jsonObj.get("eUserEzsignprepaid").isJsonNull()) {
        FieldEUserEzsignprepaid.validateJsonElement(jsonObj.get("eUserEzsignprepaid"));
      }
      if ((jsonObj.get("dtUserEzsignprepaidexpiration") != null && !jsonObj.get("dtUserEzsignprepaidexpiration").isJsonNull()) && !jsonObj.get("dtUserEzsignprepaidexpiration").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dtUserEzsignprepaidexpiration` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dtUserEzsignprepaidexpiration").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("a_pkiPermissionID") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("a_pkiPermissionID").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `a_pkiPermissionID` to be an array in the JSON string but got `%s`", jsonObj.get("a_pkiPermissionID").toString()));
      }
      // validate the required field `objUserReal`
      ActivesessionResponseCompoundUser.validateJsonElement(jsonObj.get("objUserReal"));
      // validate the optional field `objUserCloned`
      if (jsonObj.get("objUserCloned") != null && !jsonObj.get("objUserCloned").isJsonNull()) {
        ActivesessionResponseCompoundUser.validateJsonElement(jsonObj.get("objUserCloned"));
      }
      // validate the optional field `objApikey`
      if (jsonObj.get("objApikey") != null && !jsonObj.get("objApikey").isJsonNull()) {
        ActivesessionResponseCompoundApikey.validateJsonElement(jsonObj.get("objApikey"));
      }
      // ensure the required json array is present
      if (jsonObj.get("a_eModuleInternalname") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("a_eModuleInternalname").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `a_eModuleInternalname` to be an array in the JSON string but got `%s`", jsonObj.get("a_eModuleInternalname").toString()));
      }
  }


  /**
   * Create an instance of ActivesessionResponseCompound given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ActivesessionResponseCompound
   * @throws IOException if the JSON string is invalid with respect to ActivesessionResponseCompound
   */
  public static ActivesessionResponseCompound fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ActivesessionResponseCompound.class);
  }

  /**
   * Convert an instance of ActivesessionResponseCompound to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

