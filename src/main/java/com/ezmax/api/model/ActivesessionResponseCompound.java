/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.ezmax.api.model.ActivesessionResponseCompoundApikey;
import com.ezmax.api.model.ActivesessionResponseCompoundUser;
import com.ezmax.api.model.FieldEActivesessionEzsign;
import com.ezmax.api.model.FieldEActivesessionEzsignaccess;
import com.ezmax.api.model.FieldEActivesessionEzsignprepaid;
import com.ezmax.api.model.FieldEActivesessionOrigin;
import com.ezmax.api.model.FieldEActivesessionRealestateinprogress;
import com.ezmax.api.model.FieldEActivesessionUsertype;
import com.ezmax.api.model.FieldEActivesessionWeekdaystart;
import com.ezmax.api.model.FieldESystemconfigurationEzsignofficeplan;
import com.ezmax.api.model.FieldEUserEzsignaccess;
import com.ezmax.api.model.FieldEUserEzsignprepaid;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * Payload for GET /1/object/activesession/getCurrent
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-29T18:53:15.033493285Z[Etc/UTC]", comments = "Generator version: 7.11.0")
public class ActivesessionResponseCompound {
  public static final String SERIALIZED_NAME_E_ACTIVESESSION_USERTYPE = "eActivesessionUsertype";
  @SerializedName(SERIALIZED_NAME_E_ACTIVESESSION_USERTYPE)
  @javax.annotation.Nonnull
  private FieldEActivesessionUsertype eActivesessionUsertype;

  public static final String SERIALIZED_NAME_E_ACTIVESESSION_ORIGIN = "eActivesessionOrigin";
  @SerializedName(SERIALIZED_NAME_E_ACTIVESESSION_ORIGIN)
  @javax.annotation.Nonnull
  private FieldEActivesessionOrigin eActivesessionOrigin;

  public static final String SERIALIZED_NAME_E_ACTIVESESSION_WEEKDAYSTART = "eActivesessionWeekdaystart";
  @SerializedName(SERIALIZED_NAME_E_ACTIVESESSION_WEEKDAYSTART)
  @javax.annotation.Nonnull
  private FieldEActivesessionWeekdaystart eActivesessionWeekdaystart;

  public static final String SERIALIZED_NAME_FKI_LANGUAGE_I_D = "fkiLanguageID";
  @SerializedName(SERIALIZED_NAME_FKI_LANGUAGE_I_D)
  @javax.annotation.Nonnull
  private Integer fkiLanguageID;

  public static final String SERIALIZED_NAME_S_COMPANY_NAME_X = "sCompanyNameX";
  @SerializedName(SERIALIZED_NAME_S_COMPANY_NAME_X)
  @javax.annotation.Nonnull
  private String sCompanyNameX;

  public static final String SERIALIZED_NAME_S_DEPARTMENT_NAME_X = "sDepartmentNameX";
  @SerializedName(SERIALIZED_NAME_S_DEPARTMENT_NAME_X)
  @javax.annotation.Nonnull
  private String sDepartmentNameX;

  public static final String SERIALIZED_NAME_B_ACTIVESESSION_DEBUG = "bActivesessionDebug";
  @SerializedName(SERIALIZED_NAME_B_ACTIVESESSION_DEBUG)
  @javax.annotation.Nonnull
  private Boolean bActivesessionDebug;

  public static final String SERIALIZED_NAME_B_ACTIVESESSION_ISSUPERADMIN = "bActivesessionIssuperadmin";
  @SerializedName(SERIALIZED_NAME_B_ACTIVESESSION_ISSUPERADMIN)
  @javax.annotation.Nonnull
  private Boolean bActivesessionIssuperadmin;

  public static final String SERIALIZED_NAME_B_ACTIVESESSION_ATTACHMENT = "bActivesessionAttachment";
  @SerializedName(SERIALIZED_NAME_B_ACTIVESESSION_ATTACHMENT)
  @javax.annotation.Nullable
  private Boolean bActivesessionAttachment;

  public static final String SERIALIZED_NAME_B_ACTIVESESSION_CANAFE = "bActivesessionCanafe";
  @SerializedName(SERIALIZED_NAME_B_ACTIVESESSION_CANAFE)
  @javax.annotation.Nullable
  private Boolean bActivesessionCanafe;

  public static final String SERIALIZED_NAME_B_ACTIVESESSION_FINANCIAL = "bActivesessionFinancial";
  @SerializedName(SERIALIZED_NAME_B_ACTIVESESSION_FINANCIAL)
  @javax.annotation.Nullable
  private Boolean bActivesessionFinancial;

  public static final String SERIALIZED_NAME_B_ACTIVESESSION_REALESTATECOMPLETED = "bActivesessionRealestatecompleted";
  @SerializedName(SERIALIZED_NAME_B_ACTIVESESSION_REALESTATECOMPLETED)
  @javax.annotation.Nullable
  private Boolean bActivesessionRealestatecompleted;

  public static final String SERIALIZED_NAME_E_ACTIVESESSION_EZSIGN = "eActivesessionEzsign";
  @SerializedName(SERIALIZED_NAME_E_ACTIVESESSION_EZSIGN)
  @javax.annotation.Nullable
  private FieldEActivesessionEzsign eActivesessionEzsign;

  public static final String SERIALIZED_NAME_E_ACTIVESESSION_EZSIGNACCESS = "eActivesessionEzsignaccess";
  @SerializedName(SERIALIZED_NAME_E_ACTIVESESSION_EZSIGNACCESS)
  @javax.annotation.Nonnull
  private FieldEActivesessionEzsignaccess eActivesessionEzsignaccess;

  public static final String SERIALIZED_NAME_E_ACTIVESESSION_EZSIGNPREPAID = "eActivesessionEzsignprepaid";
  @SerializedName(SERIALIZED_NAME_E_ACTIVESESSION_EZSIGNPREPAID)
  @javax.annotation.Nullable
  private FieldEActivesessionEzsignprepaid eActivesessionEzsignprepaid;

  public static final String SERIALIZED_NAME_E_ACTIVESESSION_REALESTATEINPROGRESS = "eActivesessionRealestateinprogress";
  @SerializedName(SERIALIZED_NAME_E_ACTIVESESSION_REALESTATEINPROGRESS)
  @javax.annotation.Nullable
  private FieldEActivesessionRealestateinprogress eActivesessionRealestateinprogress;

  public static final String SERIALIZED_NAME_PKS_CUSTOMER_CODE = "pksCustomerCode";
  @SerializedName(SERIALIZED_NAME_PKS_CUSTOMER_CODE)
  @javax.annotation.Nonnull
  private String pksCustomerCode;

  public static final String SERIALIZED_NAME_FKI_SYSTEMCONFIGURATIONTYPE_I_D = "fkiSystemconfigurationtypeID";
  @SerializedName(SERIALIZED_NAME_FKI_SYSTEMCONFIGURATIONTYPE_I_D)
  @javax.annotation.Nonnull
  private Integer fkiSystemconfigurationtypeID;

  public static final String SERIALIZED_NAME_FKI_SIGNATURE_I_D = "fkiSignatureID";
  @SerializedName(SERIALIZED_NAME_FKI_SIGNATURE_I_D)
  @javax.annotation.Nullable
  private Integer fkiSignatureID;

  public static final String SERIALIZED_NAME_FKI_EZSIGNUSER_I_D = "fkiEzsignuserID";
  @SerializedName(SERIALIZED_NAME_FKI_EZSIGNUSER_I_D)
  @javax.annotation.Nullable
  private Integer fkiEzsignuserID;

  public static final String SERIALIZED_NAME_B_SYSTEMCONFIGURATION_EZSIGNPAIDBYOFFICE = "bSystemconfigurationEzsignpaidbyoffice";
  @SerializedName(SERIALIZED_NAME_B_SYSTEMCONFIGURATION_EZSIGNPAIDBYOFFICE)
  @javax.annotation.Nullable
  private Boolean bSystemconfigurationEzsignpaidbyoffice;

  public static final String SERIALIZED_NAME_E_SYSTEMCONFIGURATION_EZSIGNOFFICEPLAN = "eSystemconfigurationEzsignofficeplan";
  @SerializedName(SERIALIZED_NAME_E_SYSTEMCONFIGURATION_EZSIGNOFFICEPLAN)
  @javax.annotation.Nullable
  private FieldESystemconfigurationEzsignofficeplan eSystemconfigurationEzsignofficeplan;

  public static final String SERIALIZED_NAME_E_USER_EZSIGNACCESS = "eUserEzsignaccess";
  @SerializedName(SERIALIZED_NAME_E_USER_EZSIGNACCESS)
  @javax.annotation.Nonnull
  private FieldEUserEzsignaccess eUserEzsignaccess;

  public static final String SERIALIZED_NAME_E_USER_EZSIGNPREPAID = "eUserEzsignprepaid";
  @SerializedName(SERIALIZED_NAME_E_USER_EZSIGNPREPAID)
  @javax.annotation.Nullable
  private FieldEUserEzsignprepaid eUserEzsignprepaid;

  public static final String SERIALIZED_NAME_B_USER_EZSIGNTRIAL = "bUserEzsigntrial";
  @SerializedName(SERIALIZED_NAME_B_USER_EZSIGNTRIAL)
  @javax.annotation.Nullable
  private Boolean bUserEzsigntrial;

  public static final String SERIALIZED_NAME_DT_USER_EZSIGNPREPAIDEXPIRATION = "dtUserEzsignprepaidexpiration";
  @SerializedName(SERIALIZED_NAME_DT_USER_EZSIGNPREPAIDEXPIRATION)
  @javax.annotation.Nullable
  private String dtUserEzsignprepaidexpiration;

  public static final String SERIALIZED_NAME_A_PKI_PERMISSION_I_D = "a_pkiPermissionID";
  @SerializedName(SERIALIZED_NAME_A_PKI_PERMISSION_I_D)
  @javax.annotation.Nonnull
  private List<Integer> aPkiPermissionID = new ArrayList<>();

  public static final String SERIALIZED_NAME_OBJ_USER_REAL = "objUserReal";
  @SerializedName(SERIALIZED_NAME_OBJ_USER_REAL)
  @javax.annotation.Nonnull
  private ActivesessionResponseCompoundUser objUserReal;

  public static final String SERIALIZED_NAME_OBJ_USER_CLONED = "objUserCloned";
  @SerializedName(SERIALIZED_NAME_OBJ_USER_CLONED)
  @javax.annotation.Nullable
  private ActivesessionResponseCompoundUser objUserCloned;

  public static final String SERIALIZED_NAME_OBJ_APIKEY = "objApikey";
  @SerializedName(SERIALIZED_NAME_OBJ_APIKEY)
  @javax.annotation.Nullable
  private ActivesessionResponseCompoundApikey objApikey;

  public static final String SERIALIZED_NAME_A_E_MODULE_INTERNALNAME = "a_eModuleInternalname";
  @SerializedName(SERIALIZED_NAME_A_E_MODULE_INTERNALNAME)
  @javax.annotation.Nonnull
  private List<String> aEModuleInternalname = new ArrayList<>();

  public ActivesessionResponseCompound() {
  }

  public ActivesessionResponseCompound eActivesessionUsertype(@javax.annotation.Nonnull FieldEActivesessionUsertype eActivesessionUsertype) {
    this.eActivesessionUsertype = eActivesessionUsertype;
    return this;
  }

  /**
   * Get eActivesessionUsertype
   * @return eActivesessionUsertype
   */
  @javax.annotation.Nonnull
  public FieldEActivesessionUsertype geteActivesessionUsertype() {
    return eActivesessionUsertype;
  }

  public void seteActivesessionUsertype(@javax.annotation.Nonnull FieldEActivesessionUsertype eActivesessionUsertype) {
    this.eActivesessionUsertype = eActivesessionUsertype;
  }


  public ActivesessionResponseCompound eActivesessionOrigin(@javax.annotation.Nonnull FieldEActivesessionOrigin eActivesessionOrigin) {
    this.eActivesessionOrigin = eActivesessionOrigin;
    return this;
  }

  /**
   * Get eActivesessionOrigin
   * @return eActivesessionOrigin
   */
  @javax.annotation.Nonnull
  public FieldEActivesessionOrigin geteActivesessionOrigin() {
    return eActivesessionOrigin;
  }

  public void seteActivesessionOrigin(@javax.annotation.Nonnull FieldEActivesessionOrigin eActivesessionOrigin) {
    this.eActivesessionOrigin = eActivesessionOrigin;
  }


  public ActivesessionResponseCompound eActivesessionWeekdaystart(@javax.annotation.Nonnull FieldEActivesessionWeekdaystart eActivesessionWeekdaystart) {
    this.eActivesessionWeekdaystart = eActivesessionWeekdaystart;
    return this;
  }

  /**
   * Get eActivesessionWeekdaystart
   * @return eActivesessionWeekdaystart
   */
  @javax.annotation.Nonnull
  public FieldEActivesessionWeekdaystart geteActivesessionWeekdaystart() {
    return eActivesessionWeekdaystart;
  }

  public void seteActivesessionWeekdaystart(@javax.annotation.Nonnull FieldEActivesessionWeekdaystart eActivesessionWeekdaystart) {
    this.eActivesessionWeekdaystart = eActivesessionWeekdaystart;
  }


  public ActivesessionResponseCompound fkiLanguageID(@javax.annotation.Nonnull Integer fkiLanguageID) {
    this.fkiLanguageID = fkiLanguageID;
    return this;
  }

  /**
   * The unique ID of the Language.  Valid values:  |Value|Description| |-|-| |1|French| |2|English|
   * minimum: 1
   * maximum: 2
   * @return fkiLanguageID
   */
  @javax.annotation.Nonnull
  public Integer getFkiLanguageID() {
    return fkiLanguageID;
  }

  public void setFkiLanguageID(@javax.annotation.Nonnull Integer fkiLanguageID) {
    this.fkiLanguageID = fkiLanguageID;
  }


  public ActivesessionResponseCompound sCompanyNameX(@javax.annotation.Nonnull String sCompanyNameX) {
    this.sCompanyNameX = sCompanyNameX;
    return this;
  }

  /**
   * The Name of the Company in the language of the requester
   * @return sCompanyNameX
   */
  @javax.annotation.Nonnull
  public String getsCompanyNameX() {
    return sCompanyNameX;
  }

  public void setsCompanyNameX(@javax.annotation.Nonnull String sCompanyNameX) {
    this.sCompanyNameX = sCompanyNameX;
  }


  public ActivesessionResponseCompound sDepartmentNameX(@javax.annotation.Nonnull String sDepartmentNameX) {
    this.sDepartmentNameX = sDepartmentNameX;
    return this;
  }

  /**
   * The Name of the Department in the language of the requester
   * @return sDepartmentNameX
   */
  @javax.annotation.Nonnull
  public String getsDepartmentNameX() {
    return sDepartmentNameX;
  }

  public void setsDepartmentNameX(@javax.annotation.Nonnull String sDepartmentNameX) {
    this.sDepartmentNameX = sDepartmentNameX;
  }


  public ActivesessionResponseCompound bActivesessionDebug(@javax.annotation.Nonnull Boolean bActivesessionDebug) {
    this.bActivesessionDebug = bActivesessionDebug;
    return this;
  }

  /**
   * Whether the active session is in debug or not
   * @return bActivesessionDebug
   */
  @javax.annotation.Nonnull
  public Boolean getbActivesessionDebug() {
    return bActivesessionDebug;
  }

  public void setbActivesessionDebug(@javax.annotation.Nonnull Boolean bActivesessionDebug) {
    this.bActivesessionDebug = bActivesessionDebug;
  }


  public ActivesessionResponseCompound bActivesessionIssuperadmin(@javax.annotation.Nonnull Boolean bActivesessionIssuperadmin) {
    this.bActivesessionIssuperadmin = bActivesessionIssuperadmin;
    return this;
  }

  /**
   * Whether the active session is superadmin or not
   * @return bActivesessionIssuperadmin
   */
  @javax.annotation.Nonnull
  public Boolean getbActivesessionIssuperadmin() {
    return bActivesessionIssuperadmin;
  }

  public void setbActivesessionIssuperadmin(@javax.annotation.Nonnull Boolean bActivesessionIssuperadmin) {
    this.bActivesessionIssuperadmin = bActivesessionIssuperadmin;
  }


  public ActivesessionResponseCompound bActivesessionAttachment(@javax.annotation.Nullable Boolean bActivesessionAttachment) {
    this.bActivesessionAttachment = bActivesessionAttachment;
    return this;
  }

  /**
   * Can access attachment when we clone a user
   * @return bActivesessionAttachment
   */
  @javax.annotation.Nullable
  public Boolean getbActivesessionAttachment() {
    return bActivesessionAttachment;
  }

  public void setbActivesessionAttachment(@javax.annotation.Nullable Boolean bActivesessionAttachment) {
    this.bActivesessionAttachment = bActivesessionAttachment;
  }


  public ActivesessionResponseCompound bActivesessionCanafe(@javax.annotation.Nullable Boolean bActivesessionCanafe) {
    this.bActivesessionCanafe = bActivesessionCanafe;
    return this;
  }

  /**
   * Can access canafe when we clone a user
   * @return bActivesessionCanafe
   */
  @javax.annotation.Nullable
  public Boolean getbActivesessionCanafe() {
    return bActivesessionCanafe;
  }

  public void setbActivesessionCanafe(@javax.annotation.Nullable Boolean bActivesessionCanafe) {
    this.bActivesessionCanafe = bActivesessionCanafe;
  }


  public ActivesessionResponseCompound bActivesessionFinancial(@javax.annotation.Nullable Boolean bActivesessionFinancial) {
    this.bActivesessionFinancial = bActivesessionFinancial;
    return this;
  }

  /**
   * Can access financial element when we clone a user
   * @return bActivesessionFinancial
   */
  @javax.annotation.Nullable
  public Boolean getbActivesessionFinancial() {
    return bActivesessionFinancial;
  }

  public void setbActivesessionFinancial(@javax.annotation.Nullable Boolean bActivesessionFinancial) {
    this.bActivesessionFinancial = bActivesessionFinancial;
  }


  public ActivesessionResponseCompound bActivesessionRealestatecompleted(@javax.annotation.Nullable Boolean bActivesessionRealestatecompleted) {
    this.bActivesessionRealestatecompleted = bActivesessionRealestatecompleted;
    return this;
  }

  /**
   * Can access closed realestate folders when we clone a user
   * @return bActivesessionRealestatecompleted
   */
  @javax.annotation.Nullable
  public Boolean getbActivesessionRealestatecompleted() {
    return bActivesessionRealestatecompleted;
  }

  public void setbActivesessionRealestatecompleted(@javax.annotation.Nullable Boolean bActivesessionRealestatecompleted) {
    this.bActivesessionRealestatecompleted = bActivesessionRealestatecompleted;
  }


  public ActivesessionResponseCompound eActivesessionEzsign(@javax.annotation.Nullable FieldEActivesessionEzsign eActivesessionEzsign) {
    this.eActivesessionEzsign = eActivesessionEzsign;
    return this;
  }

  /**
   * Get eActivesessionEzsign
   * @return eActivesessionEzsign
   */
  @javax.annotation.Nullable
  public FieldEActivesessionEzsign geteActivesessionEzsign() {
    return eActivesessionEzsign;
  }

  public void seteActivesessionEzsign(@javax.annotation.Nullable FieldEActivesessionEzsign eActivesessionEzsign) {
    this.eActivesessionEzsign = eActivesessionEzsign;
  }


  public ActivesessionResponseCompound eActivesessionEzsignaccess(@javax.annotation.Nonnull FieldEActivesessionEzsignaccess eActivesessionEzsignaccess) {
    this.eActivesessionEzsignaccess = eActivesessionEzsignaccess;
    return this;
  }

  /**
   * Get eActivesessionEzsignaccess
   * @return eActivesessionEzsignaccess
   */
  @javax.annotation.Nonnull
  public FieldEActivesessionEzsignaccess geteActivesessionEzsignaccess() {
    return eActivesessionEzsignaccess;
  }

  public void seteActivesessionEzsignaccess(@javax.annotation.Nonnull FieldEActivesessionEzsignaccess eActivesessionEzsignaccess) {
    this.eActivesessionEzsignaccess = eActivesessionEzsignaccess;
  }


  public ActivesessionResponseCompound eActivesessionEzsignprepaid(@javax.annotation.Nullable FieldEActivesessionEzsignprepaid eActivesessionEzsignprepaid) {
    this.eActivesessionEzsignprepaid = eActivesessionEzsignprepaid;
    return this;
  }

  /**
   * Get eActivesessionEzsignprepaid
   * @return eActivesessionEzsignprepaid
   */
  @javax.annotation.Nullable
  public FieldEActivesessionEzsignprepaid geteActivesessionEzsignprepaid() {
    return eActivesessionEzsignprepaid;
  }

  public void seteActivesessionEzsignprepaid(@javax.annotation.Nullable FieldEActivesessionEzsignprepaid eActivesessionEzsignprepaid) {
    this.eActivesessionEzsignprepaid = eActivesessionEzsignprepaid;
  }


  public ActivesessionResponseCompound eActivesessionRealestateinprogress(@javax.annotation.Nullable FieldEActivesessionRealestateinprogress eActivesessionRealestateinprogress) {
    this.eActivesessionRealestateinprogress = eActivesessionRealestateinprogress;
    return this;
  }

  /**
   * Get eActivesessionRealestateinprogress
   * @return eActivesessionRealestateinprogress
   */
  @javax.annotation.Nullable
  public FieldEActivesessionRealestateinprogress geteActivesessionRealestateinprogress() {
    return eActivesessionRealestateinprogress;
  }

  public void seteActivesessionRealestateinprogress(@javax.annotation.Nullable FieldEActivesessionRealestateinprogress eActivesessionRealestateinprogress) {
    this.eActivesessionRealestateinprogress = eActivesessionRealestateinprogress;
  }


  public ActivesessionResponseCompound pksCustomerCode(@javax.annotation.Nonnull String pksCustomerCode) {
    this.pksCustomerCode = pksCustomerCode;
    return this;
  }

  /**
   * The customer code assigned to your account
   * @return pksCustomerCode
   */
  @javax.annotation.Nonnull
  public String getPksCustomerCode() {
    return pksCustomerCode;
  }

  public void setPksCustomerCode(@javax.annotation.Nonnull String pksCustomerCode) {
    this.pksCustomerCode = pksCustomerCode;
  }


  public ActivesessionResponseCompound fkiSystemconfigurationtypeID(@javax.annotation.Nonnull Integer fkiSystemconfigurationtypeID) {
    this.fkiSystemconfigurationtypeID = fkiSystemconfigurationtypeID;
    return this;
  }

  /**
   * The unique ID of the Systemconfigurationtype
   * minimum: 1
   * @return fkiSystemconfigurationtypeID
   */
  @javax.annotation.Nonnull
  public Integer getFkiSystemconfigurationtypeID() {
    return fkiSystemconfigurationtypeID;
  }

  public void setFkiSystemconfigurationtypeID(@javax.annotation.Nonnull Integer fkiSystemconfigurationtypeID) {
    this.fkiSystemconfigurationtypeID = fkiSystemconfigurationtypeID;
  }


  public ActivesessionResponseCompound fkiSignatureID(@javax.annotation.Nullable Integer fkiSignatureID) {
    this.fkiSignatureID = fkiSignatureID;
    return this;
  }

  /**
   * The unique ID of the Signature
   * minimum: 0
   * maximum: 16777215
   * @return fkiSignatureID
   */
  @javax.annotation.Nullable
  public Integer getFkiSignatureID() {
    return fkiSignatureID;
  }

  public void setFkiSignatureID(@javax.annotation.Nullable Integer fkiSignatureID) {
    this.fkiSignatureID = fkiSignatureID;
  }


  public ActivesessionResponseCompound fkiEzsignuserID(@javax.annotation.Nullable Integer fkiEzsignuserID) {
    this.fkiEzsignuserID = fkiEzsignuserID;
    return this;
  }

  /**
   * The unique ID of the Ezsignuser
   * minimum: 0
   * maximum: 65535
   * @return fkiEzsignuserID
   */
  @javax.annotation.Nullable
  public Integer getFkiEzsignuserID() {
    return fkiEzsignuserID;
  }

  public void setFkiEzsignuserID(@javax.annotation.Nullable Integer fkiEzsignuserID) {
    this.fkiEzsignuserID = fkiEzsignuserID;
  }


  public ActivesessionResponseCompound bSystemconfigurationEzsignpaidbyoffice(@javax.annotation.Nullable Boolean bSystemconfigurationEzsignpaidbyoffice) {
    this.bSystemconfigurationEzsignpaidbyoffice = bSystemconfigurationEzsignpaidbyoffice;
    return this;
  }

  /**
   * Whether if Ezsign is paid by the company or not
   * @return bSystemconfigurationEzsignpaidbyoffice
   */
  @javax.annotation.Nullable
  public Boolean getbSystemconfigurationEzsignpaidbyoffice() {
    return bSystemconfigurationEzsignpaidbyoffice;
  }

  public void setbSystemconfigurationEzsignpaidbyoffice(@javax.annotation.Nullable Boolean bSystemconfigurationEzsignpaidbyoffice) {
    this.bSystemconfigurationEzsignpaidbyoffice = bSystemconfigurationEzsignpaidbyoffice;
  }


  public ActivesessionResponseCompound eSystemconfigurationEzsignofficeplan(@javax.annotation.Nullable FieldESystemconfigurationEzsignofficeplan eSystemconfigurationEzsignofficeplan) {
    this.eSystemconfigurationEzsignofficeplan = eSystemconfigurationEzsignofficeplan;
    return this;
  }

  /**
   * Get eSystemconfigurationEzsignofficeplan
   * @return eSystemconfigurationEzsignofficeplan
   */
  @javax.annotation.Nullable
  public FieldESystemconfigurationEzsignofficeplan geteSystemconfigurationEzsignofficeplan() {
    return eSystemconfigurationEzsignofficeplan;
  }

  public void seteSystemconfigurationEzsignofficeplan(@javax.annotation.Nullable FieldESystemconfigurationEzsignofficeplan eSystemconfigurationEzsignofficeplan) {
    this.eSystemconfigurationEzsignofficeplan = eSystemconfigurationEzsignofficeplan;
  }


  public ActivesessionResponseCompound eUserEzsignaccess(@javax.annotation.Nonnull FieldEUserEzsignaccess eUserEzsignaccess) {
    this.eUserEzsignaccess = eUserEzsignaccess;
    return this;
  }

  /**
   * Get eUserEzsignaccess
   * @return eUserEzsignaccess
   */
  @javax.annotation.Nonnull
  public FieldEUserEzsignaccess geteUserEzsignaccess() {
    return eUserEzsignaccess;
  }

  public void seteUserEzsignaccess(@javax.annotation.Nonnull FieldEUserEzsignaccess eUserEzsignaccess) {
    this.eUserEzsignaccess = eUserEzsignaccess;
  }


  public ActivesessionResponseCompound eUserEzsignprepaid(@javax.annotation.Nullable FieldEUserEzsignprepaid eUserEzsignprepaid) {
    this.eUserEzsignprepaid = eUserEzsignprepaid;
    return this;
  }

  /**
   * Get eUserEzsignprepaid
   * @return eUserEzsignprepaid
   */
  @javax.annotation.Nullable
  public FieldEUserEzsignprepaid geteUserEzsignprepaid() {
    return eUserEzsignprepaid;
  }

  public void seteUserEzsignprepaid(@javax.annotation.Nullable FieldEUserEzsignprepaid eUserEzsignprepaid) {
    this.eUserEzsignprepaid = eUserEzsignprepaid;
  }


  public ActivesessionResponseCompound bUserEzsigntrial(@javax.annotation.Nullable Boolean bUserEzsigntrial) {
    this.bUserEzsigntrial = bUserEzsigntrial;
    return this;
  }

  /**
   * Whether the User&#39;s eZsign subscription is a trial
   * @return bUserEzsigntrial
   */
  @javax.annotation.Nullable
  public Boolean getbUserEzsigntrial() {
    return bUserEzsigntrial;
  }

  public void setbUserEzsigntrial(@javax.annotation.Nullable Boolean bUserEzsigntrial) {
    this.bUserEzsigntrial = bUserEzsigntrial;
  }


  public ActivesessionResponseCompound dtUserEzsignprepaidexpiration(@javax.annotation.Nullable String dtUserEzsignprepaidexpiration) {
    this.dtUserEzsignprepaidexpiration = dtUserEzsignprepaidexpiration;
    return this;
  }

  /**
   * The eZsign prepaid expiration date
   * @return dtUserEzsignprepaidexpiration
   */
  @javax.annotation.Nullable
  public String getDtUserEzsignprepaidexpiration() {
    return dtUserEzsignprepaidexpiration;
  }

  public void setDtUserEzsignprepaidexpiration(@javax.annotation.Nullable String dtUserEzsignprepaidexpiration) {
    this.dtUserEzsignprepaidexpiration = dtUserEzsignprepaidexpiration;
  }


  public ActivesessionResponseCompound aPkiPermissionID(@javax.annotation.Nonnull List<Integer> aPkiPermissionID) {
    this.aPkiPermissionID = aPkiPermissionID;
    return this;
  }

  public ActivesessionResponseCompound addAPkiPermissionIDItem(Integer aPkiPermissionIDItem) {
    if (this.aPkiPermissionID == null) {
      this.aPkiPermissionID = new ArrayList<>();
    }
    this.aPkiPermissionID.add(aPkiPermissionIDItem);
    return this;
  }

  /**
   * An array of permissions granted to the user or api key
   * @return aPkiPermissionID
   */
  @javax.annotation.Nonnull
  public List<Integer> getaPkiPermissionID() {
    return aPkiPermissionID;
  }

  public void setaPkiPermissionID(@javax.annotation.Nonnull List<Integer> aPkiPermissionID) {
    this.aPkiPermissionID = aPkiPermissionID;
  }


  public ActivesessionResponseCompound objUserReal(@javax.annotation.Nonnull ActivesessionResponseCompoundUser objUserReal) {
    this.objUserReal = objUserReal;
    return this;
  }

  /**
   * Get objUserReal
   * @return objUserReal
   */
  @javax.annotation.Nonnull
  public ActivesessionResponseCompoundUser getObjUserReal() {
    return objUserReal;
  }

  public void setObjUserReal(@javax.annotation.Nonnull ActivesessionResponseCompoundUser objUserReal) {
    this.objUserReal = objUserReal;
  }


  public ActivesessionResponseCompound objUserCloned(@javax.annotation.Nullable ActivesessionResponseCompoundUser objUserCloned) {
    this.objUserCloned = objUserCloned;
    return this;
  }

  /**
   * Get objUserCloned
   * @return objUserCloned
   */
  @javax.annotation.Nullable
  public ActivesessionResponseCompoundUser getObjUserCloned() {
    return objUserCloned;
  }

  public void setObjUserCloned(@javax.annotation.Nullable ActivesessionResponseCompoundUser objUserCloned) {
    this.objUserCloned = objUserCloned;
  }


  public ActivesessionResponseCompound objApikey(@javax.annotation.Nullable ActivesessionResponseCompoundApikey objApikey) {
    this.objApikey = objApikey;
    return this;
  }

  /**
   * Get objApikey
   * @return objApikey
   */
  @javax.annotation.Nullable
  public ActivesessionResponseCompoundApikey getObjApikey() {
    return objApikey;
  }

  public void setObjApikey(@javax.annotation.Nullable ActivesessionResponseCompoundApikey objApikey) {
    this.objApikey = objApikey;
  }


  public ActivesessionResponseCompound aEModuleInternalname(@javax.annotation.Nonnull List<String> aEModuleInternalname) {
    this.aEModuleInternalname = aEModuleInternalname;
    return this;
  }

  public ActivesessionResponseCompound addAEModuleInternalnameItem(String aEModuleInternalnameItem) {
    if (this.aEModuleInternalname == null) {
      this.aEModuleInternalname = new ArrayList<>();
    }
    this.aEModuleInternalname.add(aEModuleInternalnameItem);
    return this;
  }

  /**
   * An Array of Registered modules.  These are the modules that are Licensed to be used by the User or the API Key.
   * @return aEModuleInternalname
   */
  @javax.annotation.Nonnull
  public List<String> getaEModuleInternalname() {
    return aEModuleInternalname;
  }

  public void setaEModuleInternalname(@javax.annotation.Nonnull List<String> aEModuleInternalname) {
    this.aEModuleInternalname = aEModuleInternalname;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ActivesessionResponseCompound activesessionResponseCompound = (ActivesessionResponseCompound) o;
    return Objects.equals(this.eActivesessionUsertype, activesessionResponseCompound.eActivesessionUsertype) &&
        Objects.equals(this.eActivesessionOrigin, activesessionResponseCompound.eActivesessionOrigin) &&
        Objects.equals(this.eActivesessionWeekdaystart, activesessionResponseCompound.eActivesessionWeekdaystart) &&
        Objects.equals(this.fkiLanguageID, activesessionResponseCompound.fkiLanguageID) &&
        Objects.equals(this.sCompanyNameX, activesessionResponseCompound.sCompanyNameX) &&
        Objects.equals(this.sDepartmentNameX, activesessionResponseCompound.sDepartmentNameX) &&
        Objects.equals(this.bActivesessionDebug, activesessionResponseCompound.bActivesessionDebug) &&
        Objects.equals(this.bActivesessionIssuperadmin, activesessionResponseCompound.bActivesessionIssuperadmin) &&
        Objects.equals(this.bActivesessionAttachment, activesessionResponseCompound.bActivesessionAttachment) &&
        Objects.equals(this.bActivesessionCanafe, activesessionResponseCompound.bActivesessionCanafe) &&
        Objects.equals(this.bActivesessionFinancial, activesessionResponseCompound.bActivesessionFinancial) &&
        Objects.equals(this.bActivesessionRealestatecompleted, activesessionResponseCompound.bActivesessionRealestatecompleted) &&
        Objects.equals(this.eActivesessionEzsign, activesessionResponseCompound.eActivesessionEzsign) &&
        Objects.equals(this.eActivesessionEzsignaccess, activesessionResponseCompound.eActivesessionEzsignaccess) &&
        Objects.equals(this.eActivesessionEzsignprepaid, activesessionResponseCompound.eActivesessionEzsignprepaid) &&
        Objects.equals(this.eActivesessionRealestateinprogress, activesessionResponseCompound.eActivesessionRealestateinprogress) &&
        Objects.equals(this.pksCustomerCode, activesessionResponseCompound.pksCustomerCode) &&
        Objects.equals(this.fkiSystemconfigurationtypeID, activesessionResponseCompound.fkiSystemconfigurationtypeID) &&
        Objects.equals(this.fkiSignatureID, activesessionResponseCompound.fkiSignatureID) &&
        Objects.equals(this.fkiEzsignuserID, activesessionResponseCompound.fkiEzsignuserID) &&
        Objects.equals(this.bSystemconfigurationEzsignpaidbyoffice, activesessionResponseCompound.bSystemconfigurationEzsignpaidbyoffice) &&
        Objects.equals(this.eSystemconfigurationEzsignofficeplan, activesessionResponseCompound.eSystemconfigurationEzsignofficeplan) &&
        Objects.equals(this.eUserEzsignaccess, activesessionResponseCompound.eUserEzsignaccess) &&
        Objects.equals(this.eUserEzsignprepaid, activesessionResponseCompound.eUserEzsignprepaid) &&
        Objects.equals(this.bUserEzsigntrial, activesessionResponseCompound.bUserEzsigntrial) &&
        Objects.equals(this.dtUserEzsignprepaidexpiration, activesessionResponseCompound.dtUserEzsignprepaidexpiration) &&
        Objects.equals(this.aPkiPermissionID, activesessionResponseCompound.aPkiPermissionID) &&
        Objects.equals(this.objUserReal, activesessionResponseCompound.objUserReal) &&
        Objects.equals(this.objUserCloned, activesessionResponseCompound.objUserCloned) &&
        Objects.equals(this.objApikey, activesessionResponseCompound.objApikey) &&
        Objects.equals(this.aEModuleInternalname, activesessionResponseCompound.aEModuleInternalname);
  }

  @Override
  public int hashCode() {
    return Objects.hash(eActivesessionUsertype, eActivesessionOrigin, eActivesessionWeekdaystart, fkiLanguageID, sCompanyNameX, sDepartmentNameX, bActivesessionDebug, bActivesessionIssuperadmin, bActivesessionAttachment, bActivesessionCanafe, bActivesessionFinancial, bActivesessionRealestatecompleted, eActivesessionEzsign, eActivesessionEzsignaccess, eActivesessionEzsignprepaid, eActivesessionRealestateinprogress, pksCustomerCode, fkiSystemconfigurationtypeID, fkiSignatureID, fkiEzsignuserID, bSystemconfigurationEzsignpaidbyoffice, eSystemconfigurationEzsignofficeplan, eUserEzsignaccess, eUserEzsignprepaid, bUserEzsigntrial, dtUserEzsignprepaidexpiration, aPkiPermissionID, objUserReal, objUserCloned, objApikey, aEModuleInternalname);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ActivesessionResponseCompound {\n");
    sb.append("    eActivesessionUsertype: ").append(toIndentedString(eActivesessionUsertype)).append("\n");
    sb.append("    eActivesessionOrigin: ").append(toIndentedString(eActivesessionOrigin)).append("\n");
    sb.append("    eActivesessionWeekdaystart: ").append(toIndentedString(eActivesessionWeekdaystart)).append("\n");
    sb.append("    fkiLanguageID: ").append(toIndentedString(fkiLanguageID)).append("\n");
    sb.append("    sCompanyNameX: ").append(toIndentedString(sCompanyNameX)).append("\n");
    sb.append("    sDepartmentNameX: ").append(toIndentedString(sDepartmentNameX)).append("\n");
    sb.append("    bActivesessionDebug: ").append(toIndentedString(bActivesessionDebug)).append("\n");
    sb.append("    bActivesessionIssuperadmin: ").append(toIndentedString(bActivesessionIssuperadmin)).append("\n");
    sb.append("    bActivesessionAttachment: ").append(toIndentedString(bActivesessionAttachment)).append("\n");
    sb.append("    bActivesessionCanafe: ").append(toIndentedString(bActivesessionCanafe)).append("\n");
    sb.append("    bActivesessionFinancial: ").append(toIndentedString(bActivesessionFinancial)).append("\n");
    sb.append("    bActivesessionRealestatecompleted: ").append(toIndentedString(bActivesessionRealestatecompleted)).append("\n");
    sb.append("    eActivesessionEzsign: ").append(toIndentedString(eActivesessionEzsign)).append("\n");
    sb.append("    eActivesessionEzsignaccess: ").append(toIndentedString(eActivesessionEzsignaccess)).append("\n");
    sb.append("    eActivesessionEzsignprepaid: ").append(toIndentedString(eActivesessionEzsignprepaid)).append("\n");
    sb.append("    eActivesessionRealestateinprogress: ").append(toIndentedString(eActivesessionRealestateinprogress)).append("\n");
    sb.append("    pksCustomerCode: ").append(toIndentedString(pksCustomerCode)).append("\n");
    sb.append("    fkiSystemconfigurationtypeID: ").append(toIndentedString(fkiSystemconfigurationtypeID)).append("\n");
    sb.append("    fkiSignatureID: ").append(toIndentedString(fkiSignatureID)).append("\n");
    sb.append("    fkiEzsignuserID: ").append(toIndentedString(fkiEzsignuserID)).append("\n");
    sb.append("    bSystemconfigurationEzsignpaidbyoffice: ").append(toIndentedString(bSystemconfigurationEzsignpaidbyoffice)).append("\n");
    sb.append("    eSystemconfigurationEzsignofficeplan: ").append(toIndentedString(eSystemconfigurationEzsignofficeplan)).append("\n");
    sb.append("    eUserEzsignaccess: ").append(toIndentedString(eUserEzsignaccess)).append("\n");
    sb.append("    eUserEzsignprepaid: ").append(toIndentedString(eUserEzsignprepaid)).append("\n");
    sb.append("    bUserEzsigntrial: ").append(toIndentedString(bUserEzsigntrial)).append("\n");
    sb.append("    dtUserEzsignprepaidexpiration: ").append(toIndentedString(dtUserEzsignprepaidexpiration)).append("\n");
    sb.append("    aPkiPermissionID: ").append(toIndentedString(aPkiPermissionID)).append("\n");
    sb.append("    objUserReal: ").append(toIndentedString(objUserReal)).append("\n");
    sb.append("    objUserCloned: ").append(toIndentedString(objUserCloned)).append("\n");
    sb.append("    objApikey: ").append(toIndentedString(objApikey)).append("\n");
    sb.append("    aEModuleInternalname: ").append(toIndentedString(aEModuleInternalname)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("eActivesessionUsertype");
    openapiFields.add("eActivesessionOrigin");
    openapiFields.add("eActivesessionWeekdaystart");
    openapiFields.add("fkiLanguageID");
    openapiFields.add("sCompanyNameX");
    openapiFields.add("sDepartmentNameX");
    openapiFields.add("bActivesessionDebug");
    openapiFields.add("bActivesessionIssuperadmin");
    openapiFields.add("bActivesessionAttachment");
    openapiFields.add("bActivesessionCanafe");
    openapiFields.add("bActivesessionFinancial");
    openapiFields.add("bActivesessionRealestatecompleted");
    openapiFields.add("eActivesessionEzsign");
    openapiFields.add("eActivesessionEzsignaccess");
    openapiFields.add("eActivesessionEzsignprepaid");
    openapiFields.add("eActivesessionRealestateinprogress");
    openapiFields.add("pksCustomerCode");
    openapiFields.add("fkiSystemconfigurationtypeID");
    openapiFields.add("fkiSignatureID");
    openapiFields.add("fkiEzsignuserID");
    openapiFields.add("bSystemconfigurationEzsignpaidbyoffice");
    openapiFields.add("eSystemconfigurationEzsignofficeplan");
    openapiFields.add("eUserEzsignaccess");
    openapiFields.add("eUserEzsignprepaid");
    openapiFields.add("bUserEzsigntrial");
    openapiFields.add("dtUserEzsignprepaidexpiration");
    openapiFields.add("a_pkiPermissionID");
    openapiFields.add("objUserReal");
    openapiFields.add("objUserCloned");
    openapiFields.add("objApikey");
    openapiFields.add("a_eModuleInternalname");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("eActivesessionUsertype");
    openapiRequiredFields.add("eActivesessionOrigin");
    openapiRequiredFields.add("eActivesessionWeekdaystart");
    openapiRequiredFields.add("fkiLanguageID");
    openapiRequiredFields.add("sCompanyNameX");
    openapiRequiredFields.add("sDepartmentNameX");
    openapiRequiredFields.add("bActivesessionDebug");
    openapiRequiredFields.add("bActivesessionIssuperadmin");
    openapiRequiredFields.add("eActivesessionEzsignaccess");
    openapiRequiredFields.add("pksCustomerCode");
    openapiRequiredFields.add("fkiSystemconfigurationtypeID");
    openapiRequiredFields.add("eUserEzsignaccess");
    openapiRequiredFields.add("a_pkiPermissionID");
    openapiRequiredFields.add("objUserReal");
    openapiRequiredFields.add("a_eModuleInternalname");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ActivesessionResponseCompound
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ActivesessionResponseCompound.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ActivesessionResponseCompound is not found in the empty JSON string", ActivesessionResponseCompound.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ActivesessionResponseCompound.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ActivesessionResponseCompound` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ActivesessionResponseCompound.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `eActivesessionUsertype`
      FieldEActivesessionUsertype.validateJsonElement(jsonObj.get("eActivesessionUsertype"));
      // validate the required field `eActivesessionOrigin`
      FieldEActivesessionOrigin.validateJsonElement(jsonObj.get("eActivesessionOrigin"));
      // validate the required field `eActivesessionWeekdaystart`
      FieldEActivesessionWeekdaystart.validateJsonElement(jsonObj.get("eActivesessionWeekdaystart"));
      if (!jsonObj.get("sCompanyNameX").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sCompanyNameX` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sCompanyNameX").toString()));
      }
      if (!jsonObj.get("sDepartmentNameX").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sDepartmentNameX` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sDepartmentNameX").toString()));
      }
      // validate the optional field `eActivesessionEzsign`
      if (jsonObj.get("eActivesessionEzsign") != null && !jsonObj.get("eActivesessionEzsign").isJsonNull()) {
        FieldEActivesessionEzsign.validateJsonElement(jsonObj.get("eActivesessionEzsign"));
      }
      // validate the required field `eActivesessionEzsignaccess`
      FieldEActivesessionEzsignaccess.validateJsonElement(jsonObj.get("eActivesessionEzsignaccess"));
      // validate the optional field `eActivesessionEzsignprepaid`
      if (jsonObj.get("eActivesessionEzsignprepaid") != null && !jsonObj.get("eActivesessionEzsignprepaid").isJsonNull()) {
        FieldEActivesessionEzsignprepaid.validateJsonElement(jsonObj.get("eActivesessionEzsignprepaid"));
      }
      // validate the optional field `eActivesessionRealestateinprogress`
      if (jsonObj.get("eActivesessionRealestateinprogress") != null && !jsonObj.get("eActivesessionRealestateinprogress").isJsonNull()) {
        FieldEActivesessionRealestateinprogress.validateJsonElement(jsonObj.get("eActivesessionRealestateinprogress"));
      }
      if (!jsonObj.get("pksCustomerCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pksCustomerCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pksCustomerCode").toString()));
      }
      // validate the optional field `eSystemconfigurationEzsignofficeplan`
      if (jsonObj.get("eSystemconfigurationEzsignofficeplan") != null && !jsonObj.get("eSystemconfigurationEzsignofficeplan").isJsonNull()) {
        FieldESystemconfigurationEzsignofficeplan.validateJsonElement(jsonObj.get("eSystemconfigurationEzsignofficeplan"));
      }
      // validate the required field `eUserEzsignaccess`
      FieldEUserEzsignaccess.validateJsonElement(jsonObj.get("eUserEzsignaccess"));
      // validate the optional field `eUserEzsignprepaid`
      if (jsonObj.get("eUserEzsignprepaid") != null && !jsonObj.get("eUserEzsignprepaid").isJsonNull()) {
        FieldEUserEzsignprepaid.validateJsonElement(jsonObj.get("eUserEzsignprepaid"));
      }
      if ((jsonObj.get("dtUserEzsignprepaidexpiration") != null && !jsonObj.get("dtUserEzsignprepaidexpiration").isJsonNull()) && !jsonObj.get("dtUserEzsignprepaidexpiration").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dtUserEzsignprepaidexpiration` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dtUserEzsignprepaidexpiration").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("a_pkiPermissionID") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("a_pkiPermissionID").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `a_pkiPermissionID` to be an array in the JSON string but got `%s`", jsonObj.get("a_pkiPermissionID").toString()));
      }
      // validate the required field `objUserReal`
      ActivesessionResponseCompoundUser.validateJsonElement(jsonObj.get("objUserReal"));
      // validate the optional field `objUserCloned`
      if (jsonObj.get("objUserCloned") != null && !jsonObj.get("objUserCloned").isJsonNull()) {
        ActivesessionResponseCompoundUser.validateJsonElement(jsonObj.get("objUserCloned"));
      }
      // validate the optional field `objApikey`
      if (jsonObj.get("objApikey") != null && !jsonObj.get("objApikey").isJsonNull()) {
        ActivesessionResponseCompoundApikey.validateJsonElement(jsonObj.get("objApikey"));
      }
      // ensure the required json array is present
      if (jsonObj.get("a_eModuleInternalname") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("a_eModuleInternalname").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `a_eModuleInternalname` to be an array in the JSON string but got `%s`", jsonObj.get("a_eModuleInternalname").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ActivesessionResponseCompound.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ActivesessionResponseCompound' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ActivesessionResponseCompound> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ActivesessionResponseCompound.class));

       return (TypeAdapter<T>) new TypeAdapter<ActivesessionResponseCompound>() {
           @Override
           public void write(JsonWriter out, ActivesessionResponseCompound value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ActivesessionResponseCompound read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ActivesessionResponseCompound given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ActivesessionResponseCompound
   * @throws IOException if the JSON string is invalid with respect to ActivesessionResponseCompound
   */
  public static ActivesessionResponseCompound fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ActivesessionResponseCompound.class);
  }

  /**
   * Convert an instance of ActivesessionResponseCompound to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

