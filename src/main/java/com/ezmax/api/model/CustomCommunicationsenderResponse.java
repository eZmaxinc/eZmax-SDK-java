/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.ezmax.api.model.CustomContactNameResponse;
import com.ezmax.api.model.EmailResponse;
import com.ezmax.api.model.PhoneResponseCompound;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * Generic Communicationsender Response
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-20T18:49:43.941195549Z[Etc/UTC]", comments = "Generator version: 7.10.0")
public class CustomCommunicationsenderResponse {
  public static final String SERIALIZED_NAME_FKI_AGENT_I_D = "fkiAgentID";
  @SerializedName(SERIALIZED_NAME_FKI_AGENT_I_D)
  @javax.annotation.Nullable
  private Integer fkiAgentID;

  public static final String SERIALIZED_NAME_FKI_BROKER_I_D = "fkiBrokerID";
  @SerializedName(SERIALIZED_NAME_FKI_BROKER_I_D)
  @javax.annotation.Nullable
  private Integer fkiBrokerID;

  public static final String SERIALIZED_NAME_FKI_USER_I_D = "fkiUserID";
  @SerializedName(SERIALIZED_NAME_FKI_USER_I_D)
  @javax.annotation.Nullable
  private Integer fkiUserID;

  public static final String SERIALIZED_NAME_FKI_MAILBOXSHARED_I_D = "fkiMailboxsharedID";
  @SerializedName(SERIALIZED_NAME_FKI_MAILBOXSHARED_I_D)
  @javax.annotation.Nullable
  private Integer fkiMailboxsharedID;

  public static final String SERIALIZED_NAME_FKI_PHONELINESHARED_I_D = "fkiPhonelinesharedID";
  @SerializedName(SERIALIZED_NAME_FKI_PHONELINESHARED_I_D)
  @javax.annotation.Nullable
  private Integer fkiPhonelinesharedID;

  /**
   * Gets or Sets eCommunicationsenderObjecttype
   */
  @JsonAdapter(ECommunicationsenderObjecttypeEnum.Adapter.class)
  public enum ECommunicationsenderObjecttypeEnum {
    AGENT("Agent"),
    
    BROKER("Broker"),
    
    USER("User"),
    
    MAILBOXSHARED("Mailboxshared"),
    
    PHONELINESHARED("Phonelineshared");

    private String value;

    ECommunicationsenderObjecttypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ECommunicationsenderObjecttypeEnum fromValue(String value) {
      for (ECommunicationsenderObjecttypeEnum b : ECommunicationsenderObjecttypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ECommunicationsenderObjecttypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ECommunicationsenderObjecttypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ECommunicationsenderObjecttypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ECommunicationsenderObjecttypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ECommunicationsenderObjecttypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_E_COMMUNICATIONSENDER_OBJECTTYPE = "eCommunicationsenderObjecttype";
  @SerializedName(SERIALIZED_NAME_E_COMMUNICATIONSENDER_OBJECTTYPE)
  @javax.annotation.Nonnull
  private ECommunicationsenderObjecttypeEnum eCommunicationsenderObjecttype;

  public static final String SERIALIZED_NAME_OBJ_CONTACT_NAME = "objContactName";
  @SerializedName(SERIALIZED_NAME_OBJ_CONTACT_NAME)
  @javax.annotation.Nonnull
  private CustomContactNameResponse objContactName;

  public static final String SERIALIZED_NAME_OBJ_EMAIL = "objEmail";
  @SerializedName(SERIALIZED_NAME_OBJ_EMAIL)
  @javax.annotation.Nullable
  private EmailResponse objEmail;

  public static final String SERIALIZED_NAME_OBJ_PHONE_FAX = "objPhoneFax";
  @SerializedName(SERIALIZED_NAME_OBJ_PHONE_FAX)
  @javax.annotation.Nullable
  private PhoneResponseCompound objPhoneFax;

  public static final String SERIALIZED_NAME_OBJ_PHONE_S_M_S = "objPhoneSMS";
  @SerializedName(SERIALIZED_NAME_OBJ_PHONE_S_M_S)
  @javax.annotation.Nullable
  private PhoneResponseCompound objPhoneSMS;

  public CustomCommunicationsenderResponse() {
  }

  public CustomCommunicationsenderResponse fkiAgentID(@javax.annotation.Nullable Integer fkiAgentID) {
    this.fkiAgentID = fkiAgentID;
    return this;
  }

  /**
   * The unique ID of the Agent.
   * minimum: 0
   * @return fkiAgentID
   */
  @javax.annotation.Nullable
  public Integer getFkiAgentID() {
    return fkiAgentID;
  }

  public void setFkiAgentID(@javax.annotation.Nullable Integer fkiAgentID) {
    this.fkiAgentID = fkiAgentID;
  }


  public CustomCommunicationsenderResponse fkiBrokerID(@javax.annotation.Nullable Integer fkiBrokerID) {
    this.fkiBrokerID = fkiBrokerID;
    return this;
  }

  /**
   * The unique ID of the Broker.
   * minimum: 0
   * @return fkiBrokerID
   */
  @javax.annotation.Nullable
  public Integer getFkiBrokerID() {
    return fkiBrokerID;
  }

  public void setFkiBrokerID(@javax.annotation.Nullable Integer fkiBrokerID) {
    this.fkiBrokerID = fkiBrokerID;
  }


  public CustomCommunicationsenderResponse fkiUserID(@javax.annotation.Nullable Integer fkiUserID) {
    this.fkiUserID = fkiUserID;
    return this;
  }

  /**
   * The unique ID of the User
   * minimum: 0
   * @return fkiUserID
   */
  @javax.annotation.Nullable
  public Integer getFkiUserID() {
    return fkiUserID;
  }

  public void setFkiUserID(@javax.annotation.Nullable Integer fkiUserID) {
    this.fkiUserID = fkiUserID;
  }


  public CustomCommunicationsenderResponse fkiMailboxsharedID(@javax.annotation.Nullable Integer fkiMailboxsharedID) {
    this.fkiMailboxsharedID = fkiMailboxsharedID;
    return this;
  }

  /**
   * The unique ID of the Mailboxshared
   * minimum: 0
   * maximum: 255
   * @return fkiMailboxsharedID
   */
  @javax.annotation.Nullable
  public Integer getFkiMailboxsharedID() {
    return fkiMailboxsharedID;
  }

  public void setFkiMailboxsharedID(@javax.annotation.Nullable Integer fkiMailboxsharedID) {
    this.fkiMailboxsharedID = fkiMailboxsharedID;
  }


  public CustomCommunicationsenderResponse fkiPhonelinesharedID(@javax.annotation.Nullable Integer fkiPhonelinesharedID) {
    this.fkiPhonelinesharedID = fkiPhonelinesharedID;
    return this;
  }

  /**
   * The unique ID of the Phonelineshared
   * minimum: 0
   * maximum: 255
   * @return fkiPhonelinesharedID
   */
  @javax.annotation.Nullable
  public Integer getFkiPhonelinesharedID() {
    return fkiPhonelinesharedID;
  }

  public void setFkiPhonelinesharedID(@javax.annotation.Nullable Integer fkiPhonelinesharedID) {
    this.fkiPhonelinesharedID = fkiPhonelinesharedID;
  }


  public CustomCommunicationsenderResponse eCommunicationsenderObjecttype(@javax.annotation.Nonnull ECommunicationsenderObjecttypeEnum eCommunicationsenderObjecttype) {
    this.eCommunicationsenderObjecttype = eCommunicationsenderObjecttype;
    return this;
  }

  /**
   * Get eCommunicationsenderObjecttype
   * @return eCommunicationsenderObjecttype
   */
  @javax.annotation.Nonnull
  public ECommunicationsenderObjecttypeEnum geteCommunicationsenderObjecttype() {
    return eCommunicationsenderObjecttype;
  }

  public void seteCommunicationsenderObjecttype(@javax.annotation.Nonnull ECommunicationsenderObjecttypeEnum eCommunicationsenderObjecttype) {
    this.eCommunicationsenderObjecttype = eCommunicationsenderObjecttype;
  }


  public CustomCommunicationsenderResponse objContactName(@javax.annotation.Nonnull CustomContactNameResponse objContactName) {
    this.objContactName = objContactName;
    return this;
  }

  /**
   * Get objContactName
   * @return objContactName
   */
  @javax.annotation.Nonnull
  public CustomContactNameResponse getObjContactName() {
    return objContactName;
  }

  public void setObjContactName(@javax.annotation.Nonnull CustomContactNameResponse objContactName) {
    this.objContactName = objContactName;
  }


  public CustomCommunicationsenderResponse objEmail(@javax.annotation.Nullable EmailResponse objEmail) {
    this.objEmail = objEmail;
    return this;
  }

  /**
   * An Email Object and children to create a complete structure
   * @return objEmail
   */
  @javax.annotation.Nullable
  public EmailResponse getObjEmail() {
    return objEmail;
  }

  public void setObjEmail(@javax.annotation.Nullable EmailResponse objEmail) {
    this.objEmail = objEmail;
  }


  public CustomCommunicationsenderResponse objPhoneFax(@javax.annotation.Nullable PhoneResponseCompound objPhoneFax) {
    this.objPhoneFax = objPhoneFax;
    return this;
  }

  /**
   * Get objPhoneFax
   * @return objPhoneFax
   */
  @javax.annotation.Nullable
  public PhoneResponseCompound getObjPhoneFax() {
    return objPhoneFax;
  }

  public void setObjPhoneFax(@javax.annotation.Nullable PhoneResponseCompound objPhoneFax) {
    this.objPhoneFax = objPhoneFax;
  }


  public CustomCommunicationsenderResponse objPhoneSMS(@javax.annotation.Nullable PhoneResponseCompound objPhoneSMS) {
    this.objPhoneSMS = objPhoneSMS;
    return this;
  }

  /**
   * Get objPhoneSMS
   * @return objPhoneSMS
   */
  @javax.annotation.Nullable
  public PhoneResponseCompound getObjPhoneSMS() {
    return objPhoneSMS;
  }

  public void setObjPhoneSMS(@javax.annotation.Nullable PhoneResponseCompound objPhoneSMS) {
    this.objPhoneSMS = objPhoneSMS;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomCommunicationsenderResponse customCommunicationsenderResponse = (CustomCommunicationsenderResponse) o;
    return Objects.equals(this.fkiAgentID, customCommunicationsenderResponse.fkiAgentID) &&
        Objects.equals(this.fkiBrokerID, customCommunicationsenderResponse.fkiBrokerID) &&
        Objects.equals(this.fkiUserID, customCommunicationsenderResponse.fkiUserID) &&
        Objects.equals(this.fkiMailboxsharedID, customCommunicationsenderResponse.fkiMailboxsharedID) &&
        Objects.equals(this.fkiPhonelinesharedID, customCommunicationsenderResponse.fkiPhonelinesharedID) &&
        Objects.equals(this.eCommunicationsenderObjecttype, customCommunicationsenderResponse.eCommunicationsenderObjecttype) &&
        Objects.equals(this.objContactName, customCommunicationsenderResponse.objContactName) &&
        Objects.equals(this.objEmail, customCommunicationsenderResponse.objEmail) &&
        Objects.equals(this.objPhoneFax, customCommunicationsenderResponse.objPhoneFax) &&
        Objects.equals(this.objPhoneSMS, customCommunicationsenderResponse.objPhoneSMS);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fkiAgentID, fkiBrokerID, fkiUserID, fkiMailboxsharedID, fkiPhonelinesharedID, eCommunicationsenderObjecttype, objContactName, objEmail, objPhoneFax, objPhoneSMS);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomCommunicationsenderResponse {\n");
    sb.append("    fkiAgentID: ").append(toIndentedString(fkiAgentID)).append("\n");
    sb.append("    fkiBrokerID: ").append(toIndentedString(fkiBrokerID)).append("\n");
    sb.append("    fkiUserID: ").append(toIndentedString(fkiUserID)).append("\n");
    sb.append("    fkiMailboxsharedID: ").append(toIndentedString(fkiMailboxsharedID)).append("\n");
    sb.append("    fkiPhonelinesharedID: ").append(toIndentedString(fkiPhonelinesharedID)).append("\n");
    sb.append("    eCommunicationsenderObjecttype: ").append(toIndentedString(eCommunicationsenderObjecttype)).append("\n");
    sb.append("    objContactName: ").append(toIndentedString(objContactName)).append("\n");
    sb.append("    objEmail: ").append(toIndentedString(objEmail)).append("\n");
    sb.append("    objPhoneFax: ").append(toIndentedString(objPhoneFax)).append("\n");
    sb.append("    objPhoneSMS: ").append(toIndentedString(objPhoneSMS)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("fkiAgentID");
    openapiFields.add("fkiBrokerID");
    openapiFields.add("fkiUserID");
    openapiFields.add("fkiMailboxsharedID");
    openapiFields.add("fkiPhonelinesharedID");
    openapiFields.add("eCommunicationsenderObjecttype");
    openapiFields.add("objContactName");
    openapiFields.add("objEmail");
    openapiFields.add("objPhoneFax");
    openapiFields.add("objPhoneSMS");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("eCommunicationsenderObjecttype");
    openapiRequiredFields.add("objContactName");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CustomCommunicationsenderResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CustomCommunicationsenderResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CustomCommunicationsenderResponse is not found in the empty JSON string", CustomCommunicationsenderResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CustomCommunicationsenderResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CustomCommunicationsenderResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CustomCommunicationsenderResponse.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("eCommunicationsenderObjecttype").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `eCommunicationsenderObjecttype` to be a primitive type in the JSON string but got `%s`", jsonObj.get("eCommunicationsenderObjecttype").toString()));
      }
      // validate the required field `eCommunicationsenderObjecttype`
      ECommunicationsenderObjecttypeEnum.validateJsonElement(jsonObj.get("eCommunicationsenderObjecttype"));
      // validate the required field `objContactName`
      CustomContactNameResponse.validateJsonElement(jsonObj.get("objContactName"));
      // validate the optional field `objEmail`
      if (jsonObj.get("objEmail") != null && !jsonObj.get("objEmail").isJsonNull()) {
        EmailResponse.validateJsonElement(jsonObj.get("objEmail"));
      }
      // validate the optional field `objPhoneFax`
      if (jsonObj.get("objPhoneFax") != null && !jsonObj.get("objPhoneFax").isJsonNull()) {
        PhoneResponseCompound.validateJsonElement(jsonObj.get("objPhoneFax"));
      }
      // validate the optional field `objPhoneSMS`
      if (jsonObj.get("objPhoneSMS") != null && !jsonObj.get("objPhoneSMS").isJsonNull()) {
        PhoneResponseCompound.validateJsonElement(jsonObj.get("objPhoneSMS"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomCommunicationsenderResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomCommunicationsenderResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomCommunicationsenderResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomCommunicationsenderResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomCommunicationsenderResponse>() {
           @Override
           public void write(JsonWriter out, CustomCommunicationsenderResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomCommunicationsenderResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CustomCommunicationsenderResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CustomCommunicationsenderResponse
   * @throws IOException if the JSON string is invalid with respect to CustomCommunicationsenderResponse
   */
  public static CustomCommunicationsenderResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomCommunicationsenderResponse.class);
  }

  /**
   * Convert an instance of CustomCommunicationsenderResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

