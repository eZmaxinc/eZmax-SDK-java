/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.ezmax.api.model.CommonAudit;
import com.ezmax.api.model.EzsignfoldertypeResponseV4;
import com.ezmax.api.model.FieldEEzsignfoldertypeCompletion;
import com.ezmax.api.model.FieldEEzsignfoldertypeDisposal;
import com.ezmax.api.model.FieldEEzsignfoldertypeDocumentdependency;
import com.ezmax.api.model.FieldEEzsignfoldertypePdfanoncompliantaction;
import com.ezmax.api.model.FieldEEzsignfoldertypePdfarequirement;
import com.ezmax.api.model.FieldEEzsignfoldertypePrivacylevel;
import com.ezmax.api.model.FieldEEzsignfoldertypeSigneraccess;
import com.ezmax.api.model.MultilingualEzsignfoldertypeName;
import com.ezmax.api.model.UsergroupResponse;
import com.ezmax.api.model.UserlogintypeResponse;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * A Ezsignfoldertype Object
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-17T15:03:32.455495633Z[Etc/UTC]", comments = "Generator version: 7.10.0")
public class EzsignfoldertypeResponseCompoundV4 extends EzsignfoldertypeResponseV4 {
  public static final String SERIALIZED_NAME_A_FKI_USER_I_D_SIGNED = "a_fkiUserIDSigned";
  @SerializedName(SERIALIZED_NAME_A_FKI_USER_I_D_SIGNED)
  @javax.annotation.Nullable
  private List<Integer> aFkiUserIDSigned = new ArrayList<>();

  public static final String SERIALIZED_NAME_A_FKI_USER_I_D_SUMMARY = "a_fkiUserIDSummary";
  @SerializedName(SERIALIZED_NAME_A_FKI_USER_I_D_SUMMARY)
  @javax.annotation.Nullable
  private List<Integer> aFkiUserIDSummary = new ArrayList<>();

  public EzsignfoldertypeResponseCompoundV4() {
  }

  public EzsignfoldertypeResponseCompoundV4 aFkiUserIDSigned(@javax.annotation.Nullable List<Integer> aFkiUserIDSigned) {
    this.aFkiUserIDSigned = aFkiUserIDSigned;
    return this;
  }

  public EzsignfoldertypeResponseCompoundV4 addAFkiUserIDSignedItem(Integer aFkiUserIDSignedItem) {
    if (this.aFkiUserIDSigned == null) {
      this.aFkiUserIDSigned = new ArrayList<>();
    }
    this.aFkiUserIDSigned.add(aFkiUserIDSignedItem);
    return this;
  }

  /**
   * Get aFkiUserIDSigned
   * @return aFkiUserIDSigned
   */
  @javax.annotation.Nullable
  public List<Integer> getaFkiUserIDSigned() {
    return aFkiUserIDSigned;
  }

  public void setaFkiUserIDSigned(@javax.annotation.Nullable List<Integer> aFkiUserIDSigned) {
    this.aFkiUserIDSigned = aFkiUserIDSigned;
  }


  public EzsignfoldertypeResponseCompoundV4 aFkiUserIDSummary(@javax.annotation.Nullable List<Integer> aFkiUserIDSummary) {
    this.aFkiUserIDSummary = aFkiUserIDSummary;
    return this;
  }

  public EzsignfoldertypeResponseCompoundV4 addAFkiUserIDSummaryItem(Integer aFkiUserIDSummaryItem) {
    if (this.aFkiUserIDSummary == null) {
      this.aFkiUserIDSummary = new ArrayList<>();
    }
    this.aFkiUserIDSummary.add(aFkiUserIDSummaryItem);
    return this;
  }

  /**
   * Get aFkiUserIDSummary
   * @return aFkiUserIDSummary
   */
  @javax.annotation.Nullable
  public List<Integer> getaFkiUserIDSummary() {
    return aFkiUserIDSummary;
  }

  public void setaFkiUserIDSummary(@javax.annotation.Nullable List<Integer> aFkiUserIDSummary) {
    this.aFkiUserIDSummary = aFkiUserIDSummary;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EzsignfoldertypeResponseCompoundV4 ezsignfoldertypeResponseCompoundV4 = (EzsignfoldertypeResponseCompoundV4) o;
    return Objects.equals(this.aFkiUserIDSigned, ezsignfoldertypeResponseCompoundV4.aFkiUserIDSigned) &&
        Objects.equals(this.aFkiUserIDSummary, ezsignfoldertypeResponseCompoundV4.aFkiUserIDSummary) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aFkiUserIDSigned, aFkiUserIDSummary, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EzsignfoldertypeResponseCompoundV4 {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    aFkiUserIDSigned: ").append(toIndentedString(aFkiUserIDSigned)).append("\n");
    sb.append("    aFkiUserIDSummary: ").append(toIndentedString(aFkiUserIDSummary)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pkiEzsignfoldertypeID");
    openapiFields.add("objEzsignfoldertypeName");
    openapiFields.add("fkiBrandingID");
    openapiFields.add("fkiBillingentityinternalID");
    openapiFields.add("fkiEzsigntsarequirementID");
    openapiFields.add("fkiFontIDAnnotation");
    openapiFields.add("fkiFontIDFormfield");
    openapiFields.add("fkiFontIDSignature");
    openapiFields.add("fkiPdfalevelIDConvert");
    openapiFields.add("eEzsignfoldertypeDocumentdependency");
    openapiFields.add("sBrandingDescriptionX");
    openapiFields.add("sBillingentityinternalDescriptionX");
    openapiFields.add("sEzsigntsarequirementDescriptionX");
    openapiFields.add("sEmailAddressSigned");
    openapiFields.add("sEmailAddressSummary");
    openapiFields.add("eEzsignfoldertypePdfarequirement");
    openapiFields.add("eEzsignfoldertypePdfanoncompliantaction");
    openapiFields.add("eEzsignfoldertypePrivacylevel");
    openapiFields.add("iEzsignfoldertypeFontsizeannotation");
    openapiFields.add("iEzsignfoldertypeFontsizeformfield");
    openapiFields.add("iEzsignfoldertypeSendreminderfirstdays");
    openapiFields.add("iEzsignfoldertypeSendreminderotherdays");
    openapiFields.add("iEzsignfoldertypeArchivaldays");
    openapiFields.add("eEzsignfoldertypeDisposal");
    openapiFields.add("eEzsignfoldertypeCompletion");
    openapiFields.add("iEzsignfoldertypeDisposaldays");
    openapiFields.add("iEzsignfoldertypeDeadlinedays");
    openapiFields.add("bEzsignfoldertypePrematurelyendautomatically");
    openapiFields.add("iEzsignfoldertypePrematurelyendautomaticallydays");
    openapiFields.add("bEzsignfoldertypeAutomaticsignature");
    openapiFields.add("bEzsignfoldertypeDelegate");
    openapiFields.add("bEzsignfoldertypeDiscussion");
    openapiFields.add("bEzsignfoldertypeLogrecipientinproof");
    openapiFields.add("bEzsignfoldertypeReassignezsignsigner");
    openapiFields.add("bEzsignfoldertypeReassignuser");
    openapiFields.add("bEzsignfoldertypeReassigngroup");
    openapiFields.add("bEzsignfoldertypeSendsignedtoezsignsigner");
    openapiFields.add("bEzsignfoldertypeSendsignedtouser");
    openapiFields.add("bEzsignfoldertypeSendattachmentezsignsigner");
    openapiFields.add("bEzsignfoldertypeSendproofezsignsigner");
    openapiFields.add("bEzsignfoldertypeSendattachmentuser");
    openapiFields.add("bEzsignfoldertypeSendproofuser");
    openapiFields.add("bEzsignfoldertypeSendproofemail");
    openapiFields.add("bEzsignfoldertypeAllowdownloadattachmentezsignsigner");
    openapiFields.add("bEzsignfoldertypeAllowdownloadproofezsignsigner");
    openapiFields.add("bEzsignfoldertypeSendproofreceivealldocument");
    openapiFields.add("bEzsignfoldertypeSendsignedtodocumentowner");
    openapiFields.add("bEzsignfoldertypeSendsignedtofolderowner");
    openapiFields.add("bEzsignfoldertypeSendsignedtofullgroup");
    openapiFields.add("bEzsignfoldertypeSendsignedtolimitedgroup");
    openapiFields.add("bEzsignfoldertypeSendsignedtocolleague");
    openapiFields.add("bEzsignfoldertypeSendsummarytodocumentowner");
    openapiFields.add("bEzsignfoldertypeSendsummarytofolderowner");
    openapiFields.add("bEzsignfoldertypeSendsummarytofullgroup");
    openapiFields.add("bEzsignfoldertypeSendsummarytolimitedgroup");
    openapiFields.add("bEzsignfoldertypeSendsummarytocolleague");
    openapiFields.add("eEzsignfoldertypeSigneraccess");
    openapiFields.add("bEzsignfoldertypeIsactive");
    openapiFields.add("a_fkiPdfalevelID");
    openapiFields.add("a_objUserlogintype");
    openapiFields.add("a_objUsergroupAll");
    openapiFields.add("a_objUsergroupRestricted");
    openapiFields.add("a_objUsergroupTemplate");
    openapiFields.add("objAudit");
    openapiFields.add("a_fkiUserIDSigned");
    openapiFields.add("a_fkiUserIDSummary");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("pkiEzsignfoldertypeID");
    openapiRequiredFields.add("objEzsignfoldertypeName");
    openapiRequiredFields.add("fkiBrandingID");
    openapiRequiredFields.add("sBrandingDescriptionX");
    openapiRequiredFields.add("eEzsignfoldertypePrivacylevel");
    openapiRequiredFields.add("iEzsignfoldertypeArchivaldays");
    openapiRequiredFields.add("eEzsignfoldertypeDisposal");
    openapiRequiredFields.add("eEzsignfoldertypeCompletion");
    openapiRequiredFields.add("iEzsignfoldertypeDeadlinedays");
    openapiRequiredFields.add("bEzsignfoldertypeSendsignedtodocumentowner");
    openapiRequiredFields.add("bEzsignfoldertypeSendsignedtofolderowner");
    openapiRequiredFields.add("bEzsignfoldertypeSendsignedtocolleague");
    openapiRequiredFields.add("bEzsignfoldertypeSendsummarytodocumentowner");
    openapiRequiredFields.add("bEzsignfoldertypeSendsummarytofolderowner");
    openapiRequiredFields.add("bEzsignfoldertypeSendsummarytocolleague");
    openapiRequiredFields.add("bEzsignfoldertypeIsactive");
    openapiRequiredFields.add("a_objUserlogintype");
    openapiRequiredFields.add("objAudit");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EzsignfoldertypeResponseCompoundV4
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EzsignfoldertypeResponseCompoundV4.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EzsignfoldertypeResponseCompoundV4 is not found in the empty JSON string", EzsignfoldertypeResponseCompoundV4.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EzsignfoldertypeResponseCompoundV4.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EzsignfoldertypeResponseCompoundV4` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : EzsignfoldertypeResponseCompoundV4.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("a_fkiUserIDSigned") != null && !jsonObj.get("a_fkiUserIDSigned").isJsonNull() && !jsonObj.get("a_fkiUserIDSigned").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `a_fkiUserIDSigned` to be an array in the JSON string but got `%s`", jsonObj.get("a_fkiUserIDSigned").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("a_fkiUserIDSummary") != null && !jsonObj.get("a_fkiUserIDSummary").isJsonNull() && !jsonObj.get("a_fkiUserIDSummary").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `a_fkiUserIDSummary` to be an array in the JSON string but got `%s`", jsonObj.get("a_fkiUserIDSummary").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EzsignfoldertypeResponseCompoundV4.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EzsignfoldertypeResponseCompoundV4' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EzsignfoldertypeResponseCompoundV4> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EzsignfoldertypeResponseCompoundV4.class));

       return (TypeAdapter<T>) new TypeAdapter<EzsignfoldertypeResponseCompoundV4>() {
           @Override
           public void write(JsonWriter out, EzsignfoldertypeResponseCompoundV4 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EzsignfoldertypeResponseCompoundV4 read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EzsignfoldertypeResponseCompoundV4 given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EzsignfoldertypeResponseCompoundV4
   * @throws IOException if the JSON string is invalid with respect to EzsignfoldertypeResponseCompoundV4
   */
  public static EzsignfoldertypeResponseCompoundV4 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EzsignfoldertypeResponseCompoundV4.class);
  }

  /**
   * Convert an instance of EzsignfoldertypeResponseCompoundV4 to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

