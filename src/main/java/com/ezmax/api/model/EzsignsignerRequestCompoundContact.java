/*
 * eZmax API Definition
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.4
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * A Ezsignsigner-&gt;Contact Object and children to create a complete structure
 */
@ApiModel(description = "A Ezsignsigner->Contact Object and children to create a complete structure")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-27T21:40:38.310231Z[Etc/UTC]")
public class EzsignsignerRequestCompoundContact {
  public static final String SERIALIZED_NAME_S_CONTACT_FIRSTNAME = "sContactFirstname";
  @SerializedName(SERIALIZED_NAME_S_CONTACT_FIRSTNAME)
  private String sContactFirstname;

  public static final String SERIALIZED_NAME_S_CONTACT_LASTNAME = "sContactLastname";
  @SerializedName(SERIALIZED_NAME_S_CONTACT_LASTNAME)
  private String sContactLastname;

  public static final String SERIALIZED_NAME_FKI_LANGUAGE_I_D = "fkiLanguageID";
  @SerializedName(SERIALIZED_NAME_FKI_LANGUAGE_I_D)
  private Integer fkiLanguageID;

  public static final String SERIALIZED_NAME_S_EMAIL_ADDRESS = "sEmailAddress";
  @SerializedName(SERIALIZED_NAME_S_EMAIL_ADDRESS)
  private String sEmailAddress;

  public static final String SERIALIZED_NAME_S_PHONE_NUMBER = "sPhoneNumber";
  @SerializedName(SERIALIZED_NAME_S_PHONE_NUMBER)
  private String sPhoneNumber;

  public static final String SERIALIZED_NAME_S_PHONE_NUMBER_CELL = "sPhoneNumberCell";
  @SerializedName(SERIALIZED_NAME_S_PHONE_NUMBER_CELL)
  private String sPhoneNumberCell;

  public EzsignsignerRequestCompoundContact() { 
  }

  public EzsignsignerRequestCompoundContact sContactFirstname(String sContactFirstname) {
    
    this.sContactFirstname = sContactFirstname;
    return this;
  }

   /**
   * The First name of the contact
   * @return sContactFirstname
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "John", required = true, value = "The First name of the contact")

  public String getsContactFirstname() {
    return sContactFirstname;
  }


  public void setsContactFirstname(String sContactFirstname) {
    this.sContactFirstname = sContactFirstname;
  }


  public EzsignsignerRequestCompoundContact sContactLastname(String sContactLastname) {
    
    this.sContactLastname = sContactLastname;
    return this;
  }

   /**
   * The Last name of the contact
   * @return sContactLastname
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "Doe", required = true, value = "The Last name of the contact")

  public String getsContactLastname() {
    return sContactLastname;
  }


  public void setsContactLastname(String sContactLastname) {
    this.sContactLastname = sContactLastname;
  }


  public EzsignsignerRequestCompoundContact fkiLanguageID(Integer fkiLanguageID) {
    
    this.fkiLanguageID = fkiLanguageID;
    return this;
  }

   /**
   * The unique ID of the Language.  Valid values:  |Value|Description| |-|-| |1|French| |2|English|
   * minimum: 1
   * maximum: 2
   * @return fkiLanguageID
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "2", required = true, value = "The unique ID of the Language.  Valid values:  |Value|Description| |-|-| |1|French| |2|English|")

  public Integer getFkiLanguageID() {
    return fkiLanguageID;
  }


  public void setFkiLanguageID(Integer fkiLanguageID) {
    this.fkiLanguageID = fkiLanguageID;
  }


  public EzsignsignerRequestCompoundContact sEmailAddress(String sEmailAddress) {
    
    this.sEmailAddress = sEmailAddress;
    return this;
  }

   /**
   * The email address.
   * @return sEmailAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "example@domain.com", value = "The email address.")

  public String getsEmailAddress() {
    return sEmailAddress;
  }


  public void setsEmailAddress(String sEmailAddress) {
    this.sEmailAddress = sEmailAddress;
  }


  public EzsignsignerRequestCompoundContact sPhoneNumber(String sPhoneNumber) {
    
    this.sPhoneNumber = sPhoneNumber;
    return this;
  }

   /**
   * The Phone number of the contact. Use format \&quot;5149901516\&quot; for North American Numbers (Without \&quot;1\&quot; for long distance code) you would dial like this: 1-514-990-1516. Use format \&quot;498945233886\&quot; for international numbers (Without \&quot;011\&quot;) you would dial like this: +49 89 452 33 88-6. In this example \&quot;49\&quot; is the country code of Germany.
   * @return sPhoneNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Phone number of the contact. Use format \"5149901516\" for North American Numbers (Without \"1\" for long distance code) you would dial like this: 1-514-990-1516. Use format \"498945233886\" for international numbers (Without \"011\") you would dial like this: +49 89 452 33 88-6. In this example \"49\" is the country code of Germany.")

  public String getsPhoneNumber() {
    return sPhoneNumber;
  }


  public void setsPhoneNumber(String sPhoneNumber) {
    this.sPhoneNumber = sPhoneNumber;
  }


  public EzsignsignerRequestCompoundContact sPhoneNumberCell(String sPhoneNumberCell) {
    
    this.sPhoneNumberCell = sPhoneNumberCell;
    return this;
  }

   /**
   * The Cell Phone number of the contact. Use format \&quot;5149901516\&quot; for North American Numbers (Without \&quot;1\&quot; for long distance code) you would dial like this: 1-514-990-1516. Use format \&quot;498945233886\&quot; for international numbers (Without \&quot;011\&quot;) you would dial like this: +49 89 452 33 88-6. In this example \&quot;49\&quot; is the country code of Germany.
   * @return sPhoneNumberCell
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Cell Phone number of the contact. Use format \"5149901516\" for North American Numbers (Without \"1\" for long distance code) you would dial like this: 1-514-990-1516. Use format \"498945233886\" for international numbers (Without \"011\") you would dial like this: +49 89 452 33 88-6. In this example \"49\" is the country code of Germany.")

  public String getsPhoneNumberCell() {
    return sPhoneNumberCell;
  }


  public void setsPhoneNumberCell(String sPhoneNumberCell) {
    this.sPhoneNumberCell = sPhoneNumberCell;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EzsignsignerRequestCompoundContact ezsignsignerRequestCompoundContact = (EzsignsignerRequestCompoundContact) o;
    return Objects.equals(this.sContactFirstname, ezsignsignerRequestCompoundContact.sContactFirstname) &&
        Objects.equals(this.sContactLastname, ezsignsignerRequestCompoundContact.sContactLastname) &&
        Objects.equals(this.fkiLanguageID, ezsignsignerRequestCompoundContact.fkiLanguageID) &&
        Objects.equals(this.sEmailAddress, ezsignsignerRequestCompoundContact.sEmailAddress) &&
        Objects.equals(this.sPhoneNumber, ezsignsignerRequestCompoundContact.sPhoneNumber) &&
        Objects.equals(this.sPhoneNumberCell, ezsignsignerRequestCompoundContact.sPhoneNumberCell);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sContactFirstname, sContactLastname, fkiLanguageID, sEmailAddress, sPhoneNumber, sPhoneNumberCell);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EzsignsignerRequestCompoundContact {\n");
    sb.append("    sContactFirstname: ").append(toIndentedString(sContactFirstname)).append("\n");
    sb.append("    sContactLastname: ").append(toIndentedString(sContactLastname)).append("\n");
    sb.append("    fkiLanguageID: ").append(toIndentedString(fkiLanguageID)).append("\n");
    sb.append("    sEmailAddress: ").append(toIndentedString(sEmailAddress)).append("\n");
    sb.append("    sPhoneNumber: ").append(toIndentedString(sPhoneNumber)).append("\n");
    sb.append("    sPhoneNumberCell: ").append(toIndentedString(sPhoneNumberCell)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

