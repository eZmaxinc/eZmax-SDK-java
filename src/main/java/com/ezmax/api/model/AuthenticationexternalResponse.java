/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.ezmax.api.model.CommonAudit;
import com.ezmax.api.model.FieldEAuthenticationexternalType;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * A Authenticationexternal Object
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-15T21:36:57.992386529Z[Etc/UTC]", comments = "Generator version: 7.10.0")
public class AuthenticationexternalResponse {
  public static final String SERIALIZED_NAME_PKI_AUTHENTICATIONEXTERNAL_I_D = "pkiAuthenticationexternalID";
  @SerializedName(SERIALIZED_NAME_PKI_AUTHENTICATIONEXTERNAL_I_D)
  @javax.annotation.Nonnull
  private Integer pkiAuthenticationexternalID;

  public static final String SERIALIZED_NAME_S_AUTHENTICATIONEXTERNAL_DESCRIPTION = "sAuthenticationexternalDescription";
  @SerializedName(SERIALIZED_NAME_S_AUTHENTICATIONEXTERNAL_DESCRIPTION)
  @javax.annotation.Nonnull
  private String sAuthenticationexternalDescription;

  public static final String SERIALIZED_NAME_E_AUTHENTICATIONEXTERNAL_TYPE = "eAuthenticationexternalType";
  @SerializedName(SERIALIZED_NAME_E_AUTHENTICATIONEXTERNAL_TYPE)
  @javax.annotation.Nonnull
  private FieldEAuthenticationexternalType eAuthenticationexternalType;

  public static final String SERIALIZED_NAME_B_AUTHENTICATIONEXTERNAL_CONNECTED = "bAuthenticationexternalConnected";
  @SerializedName(SERIALIZED_NAME_B_AUTHENTICATIONEXTERNAL_CONNECTED)
  @javax.annotation.Nullable
  private Boolean bAuthenticationexternalConnected;

  public static final String SERIALIZED_NAME_S_AUTHENTICATIONEXTERNAL_AUTHORIZATIONURL = "sAuthenticationexternalAuthorizationurl";
  @SerializedName(SERIALIZED_NAME_S_AUTHENTICATIONEXTERNAL_AUTHORIZATIONURL)
  @javax.annotation.Nullable
  private String sAuthenticationexternalAuthorizationurl;

  public static final String SERIALIZED_NAME_OBJ_AUDIT = "objAudit";
  @SerializedName(SERIALIZED_NAME_OBJ_AUDIT)
  @javax.annotation.Nonnull
  private CommonAudit objAudit;

  public AuthenticationexternalResponse() {
  }

  public AuthenticationexternalResponse pkiAuthenticationexternalID(@javax.annotation.Nonnull Integer pkiAuthenticationexternalID) {
    this.pkiAuthenticationexternalID = pkiAuthenticationexternalID;
    return this;
  }

  /**
   * The unique ID of the Authenticationexternal
   * minimum: 0
   * maximum: 255
   * @return pkiAuthenticationexternalID
   */
  @javax.annotation.Nonnull
  public Integer getPkiAuthenticationexternalID() {
    return pkiAuthenticationexternalID;
  }

  public void setPkiAuthenticationexternalID(@javax.annotation.Nonnull Integer pkiAuthenticationexternalID) {
    this.pkiAuthenticationexternalID = pkiAuthenticationexternalID;
  }


  public AuthenticationexternalResponse sAuthenticationexternalDescription(@javax.annotation.Nonnull String sAuthenticationexternalDescription) {
    this.sAuthenticationexternalDescription = sAuthenticationexternalDescription;
    return this;
  }

  /**
   * The description of the Authenticationexternal
   * @return sAuthenticationexternalDescription
   */
  @javax.annotation.Nonnull
  public String getsAuthenticationexternalDescription() {
    return sAuthenticationexternalDescription;
  }

  public void setsAuthenticationexternalDescription(@javax.annotation.Nonnull String sAuthenticationexternalDescription) {
    this.sAuthenticationexternalDescription = sAuthenticationexternalDescription;
  }


  public AuthenticationexternalResponse eAuthenticationexternalType(@javax.annotation.Nonnull FieldEAuthenticationexternalType eAuthenticationexternalType) {
    this.eAuthenticationexternalType = eAuthenticationexternalType;
    return this;
  }

  /**
   * Get eAuthenticationexternalType
   * @return eAuthenticationexternalType
   */
  @javax.annotation.Nonnull
  public FieldEAuthenticationexternalType geteAuthenticationexternalType() {
    return eAuthenticationexternalType;
  }

  public void seteAuthenticationexternalType(@javax.annotation.Nonnull FieldEAuthenticationexternalType eAuthenticationexternalType) {
    this.eAuthenticationexternalType = eAuthenticationexternalType;
  }


  public AuthenticationexternalResponse bAuthenticationexternalConnected(@javax.annotation.Nullable Boolean bAuthenticationexternalConnected) {
    this.bAuthenticationexternalConnected = bAuthenticationexternalConnected;
    return this;
  }

  /**
   * Whether the Authenticationexternal has been connected or not
   * @return bAuthenticationexternalConnected
   */
  @javax.annotation.Nullable
  public Boolean getbAuthenticationexternalConnected() {
    return bAuthenticationexternalConnected;
  }

  public void setbAuthenticationexternalConnected(@javax.annotation.Nullable Boolean bAuthenticationexternalConnected) {
    this.bAuthenticationexternalConnected = bAuthenticationexternalConnected;
  }


  public AuthenticationexternalResponse sAuthenticationexternalAuthorizationurl(@javax.annotation.Nullable String sAuthenticationexternalAuthorizationurl) {
    this.sAuthenticationexternalAuthorizationurl = sAuthenticationexternalAuthorizationurl;
    return this;
  }

  /**
   * The url to authorize the Authenticationexternal
   * @return sAuthenticationexternalAuthorizationurl
   */
  @javax.annotation.Nullable
  public String getsAuthenticationexternalAuthorizationurl() {
    return sAuthenticationexternalAuthorizationurl;
  }

  public void setsAuthenticationexternalAuthorizationurl(@javax.annotation.Nullable String sAuthenticationexternalAuthorizationurl) {
    this.sAuthenticationexternalAuthorizationurl = sAuthenticationexternalAuthorizationurl;
  }


  public AuthenticationexternalResponse objAudit(@javax.annotation.Nonnull CommonAudit objAudit) {
    this.objAudit = objAudit;
    return this;
  }

  /**
   * Get objAudit
   * @return objAudit
   */
  @javax.annotation.Nonnull
  public CommonAudit getObjAudit() {
    return objAudit;
  }

  public void setObjAudit(@javax.annotation.Nonnull CommonAudit objAudit) {
    this.objAudit = objAudit;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthenticationexternalResponse authenticationexternalResponse = (AuthenticationexternalResponse) o;
    return Objects.equals(this.pkiAuthenticationexternalID, authenticationexternalResponse.pkiAuthenticationexternalID) &&
        Objects.equals(this.sAuthenticationexternalDescription, authenticationexternalResponse.sAuthenticationexternalDescription) &&
        Objects.equals(this.eAuthenticationexternalType, authenticationexternalResponse.eAuthenticationexternalType) &&
        Objects.equals(this.bAuthenticationexternalConnected, authenticationexternalResponse.bAuthenticationexternalConnected) &&
        Objects.equals(this.sAuthenticationexternalAuthorizationurl, authenticationexternalResponse.sAuthenticationexternalAuthorizationurl) &&
        Objects.equals(this.objAudit, authenticationexternalResponse.objAudit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pkiAuthenticationexternalID, sAuthenticationexternalDescription, eAuthenticationexternalType, bAuthenticationexternalConnected, sAuthenticationexternalAuthorizationurl, objAudit);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuthenticationexternalResponse {\n");
    sb.append("    pkiAuthenticationexternalID: ").append(toIndentedString(pkiAuthenticationexternalID)).append("\n");
    sb.append("    sAuthenticationexternalDescription: ").append(toIndentedString(sAuthenticationexternalDescription)).append("\n");
    sb.append("    eAuthenticationexternalType: ").append(toIndentedString(eAuthenticationexternalType)).append("\n");
    sb.append("    bAuthenticationexternalConnected: ").append(toIndentedString(bAuthenticationexternalConnected)).append("\n");
    sb.append("    sAuthenticationexternalAuthorizationurl: ").append(toIndentedString(sAuthenticationexternalAuthorizationurl)).append("\n");
    sb.append("    objAudit: ").append(toIndentedString(objAudit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pkiAuthenticationexternalID");
    openapiFields.add("sAuthenticationexternalDescription");
    openapiFields.add("eAuthenticationexternalType");
    openapiFields.add("bAuthenticationexternalConnected");
    openapiFields.add("sAuthenticationexternalAuthorizationurl");
    openapiFields.add("objAudit");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("pkiAuthenticationexternalID");
    openapiRequiredFields.add("sAuthenticationexternalDescription");
    openapiRequiredFields.add("eAuthenticationexternalType");
    openapiRequiredFields.add("objAudit");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AuthenticationexternalResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AuthenticationexternalResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AuthenticationexternalResponse is not found in the empty JSON string", AuthenticationexternalResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AuthenticationexternalResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AuthenticationexternalResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AuthenticationexternalResponse.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("sAuthenticationexternalDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sAuthenticationexternalDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sAuthenticationexternalDescription").toString()));
      }
      // validate the required field `eAuthenticationexternalType`
      FieldEAuthenticationexternalType.validateJsonElement(jsonObj.get("eAuthenticationexternalType"));
      if ((jsonObj.get("sAuthenticationexternalAuthorizationurl") != null && !jsonObj.get("sAuthenticationexternalAuthorizationurl").isJsonNull()) && !jsonObj.get("sAuthenticationexternalAuthorizationurl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sAuthenticationexternalAuthorizationurl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sAuthenticationexternalAuthorizationurl").toString()));
      }
      // validate the required field `objAudit`
      CommonAudit.validateJsonElement(jsonObj.get("objAudit"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AuthenticationexternalResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AuthenticationexternalResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AuthenticationexternalResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AuthenticationexternalResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<AuthenticationexternalResponse>() {
           @Override
           public void write(JsonWriter out, AuthenticationexternalResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AuthenticationexternalResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AuthenticationexternalResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AuthenticationexternalResponse
   * @throws IOException if the JSON string is invalid with respect to AuthenticationexternalResponse
   */
  public static AuthenticationexternalResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AuthenticationexternalResponse.class);
  }

  /**
   * Convert an instance of AuthenticationexternalResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

