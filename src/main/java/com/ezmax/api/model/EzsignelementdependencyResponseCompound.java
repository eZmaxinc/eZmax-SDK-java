/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.ezmax.api.model.FieldEEzsignelementdependencyOperator;
import com.ezmax.api.model.FieldEEzsignelementdependencyValidation;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * An Ezsignelementdependency Object and children to create a complete structure
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-14T22:02:49.990345163Z[Etc/UTC]", comments = "Generator version: 7.9.0")
public class EzsignelementdependencyResponseCompound {
  public static final String SERIALIZED_NAME_PKI_EZSIGNELEMENTDEPENDENCY_I_D = "pkiEzsignelementdependencyID";
  @SerializedName(SERIALIZED_NAME_PKI_EZSIGNELEMENTDEPENDENCY_I_D)
  private Integer pkiEzsignelementdependencyID;

  public static final String SERIALIZED_NAME_FKI_EZSIGNFORMFIELD_I_D = "fkiEzsignformfieldID";
  @SerializedName(SERIALIZED_NAME_FKI_EZSIGNFORMFIELD_I_D)
  private Integer fkiEzsignformfieldID;

  public static final String SERIALIZED_NAME_FKI_EZSIGNSIGNATURE_I_D = "fkiEzsignsignatureID";
  @SerializedName(SERIALIZED_NAME_FKI_EZSIGNSIGNATURE_I_D)
  private Integer fkiEzsignsignatureID;

  public static final String SERIALIZED_NAME_FKI_EZSIGNFORMFIELD_I_D_VALIDATION = "fkiEzsignformfieldIDValidation";
  @SerializedName(SERIALIZED_NAME_FKI_EZSIGNFORMFIELD_I_D_VALIDATION)
  private Integer fkiEzsignformfieldIDValidation;

  public static final String SERIALIZED_NAME_FKI_EZSIGNFORMFIELDGROUP_I_D_VALIDATION = "fkiEzsignformfieldgroupIDValidation";
  @SerializedName(SERIALIZED_NAME_FKI_EZSIGNFORMFIELDGROUP_I_D_VALIDATION)
  private Integer fkiEzsignformfieldgroupIDValidation;

  public static final String SERIALIZED_NAME_E_EZSIGNELEMENTDEPENDENCY_VALIDATION = "eEzsignelementdependencyValidation";
  @SerializedName(SERIALIZED_NAME_E_EZSIGNELEMENTDEPENDENCY_VALIDATION)
  private FieldEEzsignelementdependencyValidation eEzsignelementdependencyValidation;

  public static final String SERIALIZED_NAME_B_EZSIGNELEMENTDEPENDENCY_SELECTED = "bEzsignelementdependencySelected";
  @SerializedName(SERIALIZED_NAME_B_EZSIGNELEMENTDEPENDENCY_SELECTED)
  private Boolean bEzsignelementdependencySelected;

  public static final String SERIALIZED_NAME_E_EZSIGNELEMENTDEPENDENCY_OPERATOR = "eEzsignelementdependencyOperator";
  @SerializedName(SERIALIZED_NAME_E_EZSIGNELEMENTDEPENDENCY_OPERATOR)
  private FieldEEzsignelementdependencyOperator eEzsignelementdependencyOperator;

  public static final String SERIALIZED_NAME_S_EZSIGNELEMENTDEPENDENCY_VALUE = "sEzsignelementdependencyValue";
  @SerializedName(SERIALIZED_NAME_S_EZSIGNELEMENTDEPENDENCY_VALUE)
  private String sEzsignelementdependencyValue;

  public EzsignelementdependencyResponseCompound() {
  }

  public EzsignelementdependencyResponseCompound pkiEzsignelementdependencyID(Integer pkiEzsignelementdependencyID) {
    this.pkiEzsignelementdependencyID = pkiEzsignelementdependencyID;
    return this;
  }

  /**
   * The unique ID of the Ezsignelementdependency
   * minimum: 0
   * maximum: 16777215
   * @return pkiEzsignelementdependencyID
   */
  @javax.annotation.Nonnull
  public Integer getPkiEzsignelementdependencyID() {
    return pkiEzsignelementdependencyID;
  }

  public void setPkiEzsignelementdependencyID(Integer pkiEzsignelementdependencyID) {
    this.pkiEzsignelementdependencyID = pkiEzsignelementdependencyID;
  }


  public EzsignelementdependencyResponseCompound fkiEzsignformfieldID(Integer fkiEzsignformfieldID) {
    this.fkiEzsignformfieldID = fkiEzsignformfieldID;
    return this;
  }

  /**
   * The unique ID of the Ezsignformfield
   * minimum: 0
   * @return fkiEzsignformfieldID
   */
  @javax.annotation.Nullable
  public Integer getFkiEzsignformfieldID() {
    return fkiEzsignformfieldID;
  }

  public void setFkiEzsignformfieldID(Integer fkiEzsignformfieldID) {
    this.fkiEzsignformfieldID = fkiEzsignformfieldID;
  }


  public EzsignelementdependencyResponseCompound fkiEzsignsignatureID(Integer fkiEzsignsignatureID) {
    this.fkiEzsignsignatureID = fkiEzsignsignatureID;
    return this;
  }

  /**
   * The unique ID of the Ezsignsignature
   * minimum: 0
   * @return fkiEzsignsignatureID
   */
  @javax.annotation.Nullable
  public Integer getFkiEzsignsignatureID() {
    return fkiEzsignsignatureID;
  }

  public void setFkiEzsignsignatureID(Integer fkiEzsignsignatureID) {
    this.fkiEzsignsignatureID = fkiEzsignsignatureID;
  }


  public EzsignelementdependencyResponseCompound fkiEzsignformfieldIDValidation(Integer fkiEzsignformfieldIDValidation) {
    this.fkiEzsignformfieldIDValidation = fkiEzsignformfieldIDValidation;
    return this;
  }

  /**
   * The unique ID of the Ezsignformfield
   * minimum: 0
   * @return fkiEzsignformfieldIDValidation
   */
  @javax.annotation.Nullable
  public Integer getFkiEzsignformfieldIDValidation() {
    return fkiEzsignformfieldIDValidation;
  }

  public void setFkiEzsignformfieldIDValidation(Integer fkiEzsignformfieldIDValidation) {
    this.fkiEzsignformfieldIDValidation = fkiEzsignformfieldIDValidation;
  }


  public EzsignelementdependencyResponseCompound fkiEzsignformfieldgroupIDValidation(Integer fkiEzsignformfieldgroupIDValidation) {
    this.fkiEzsignformfieldgroupIDValidation = fkiEzsignformfieldgroupIDValidation;
    return this;
  }

  /**
   * The unique ID of the Ezsignformfieldgroup
   * minimum: 0
   * @return fkiEzsignformfieldgroupIDValidation
   */
  @javax.annotation.Nullable
  public Integer getFkiEzsignformfieldgroupIDValidation() {
    return fkiEzsignformfieldgroupIDValidation;
  }

  public void setFkiEzsignformfieldgroupIDValidation(Integer fkiEzsignformfieldgroupIDValidation) {
    this.fkiEzsignformfieldgroupIDValidation = fkiEzsignformfieldgroupIDValidation;
  }


  public EzsignelementdependencyResponseCompound eEzsignelementdependencyValidation(FieldEEzsignelementdependencyValidation eEzsignelementdependencyValidation) {
    this.eEzsignelementdependencyValidation = eEzsignelementdependencyValidation;
    return this;
  }

  /**
   * Get eEzsignelementdependencyValidation
   * @return eEzsignelementdependencyValidation
   */
  @javax.annotation.Nonnull
  public FieldEEzsignelementdependencyValidation geteEzsignelementdependencyValidation() {
    return eEzsignelementdependencyValidation;
  }

  public void seteEzsignelementdependencyValidation(FieldEEzsignelementdependencyValidation eEzsignelementdependencyValidation) {
    this.eEzsignelementdependencyValidation = eEzsignelementdependencyValidation;
  }


  public EzsignelementdependencyResponseCompound bEzsignelementdependencySelected(Boolean bEzsignelementdependencySelected) {
    this.bEzsignelementdependencySelected = bEzsignelementdependencySelected;
    return this;
  }

  /**
   * Whether if it&#39;s selected or not when using eEzsignelementdependencyValidation &#x3D; Selected
   * @return bEzsignelementdependencySelected
   */
  @javax.annotation.Nullable
  public Boolean getbEzsignelementdependencySelected() {
    return bEzsignelementdependencySelected;
  }

  public void setbEzsignelementdependencySelected(Boolean bEzsignelementdependencySelected) {
    this.bEzsignelementdependencySelected = bEzsignelementdependencySelected;
  }


  public EzsignelementdependencyResponseCompound eEzsignelementdependencyOperator(FieldEEzsignelementdependencyOperator eEzsignelementdependencyOperator) {
    this.eEzsignelementdependencyOperator = eEzsignelementdependencyOperator;
    return this;
  }

  /**
   * Get eEzsignelementdependencyOperator
   * @return eEzsignelementdependencyOperator
   */
  @javax.annotation.Nullable
  public FieldEEzsignelementdependencyOperator geteEzsignelementdependencyOperator() {
    return eEzsignelementdependencyOperator;
  }

  public void seteEzsignelementdependencyOperator(FieldEEzsignelementdependencyOperator eEzsignelementdependencyOperator) {
    this.eEzsignelementdependencyOperator = eEzsignelementdependencyOperator;
  }


  public EzsignelementdependencyResponseCompound sEzsignelementdependencyValue(String sEzsignelementdependencyValue) {
    this.sEzsignelementdependencyValue = sEzsignelementdependencyValue;
    return this;
  }

  /**
   * The value of the Ezsignelementdependency
   * @return sEzsignelementdependencyValue
   */
  @javax.annotation.Nullable
  public String getsEzsignelementdependencyValue() {
    return sEzsignelementdependencyValue;
  }

  public void setsEzsignelementdependencyValue(String sEzsignelementdependencyValue) {
    this.sEzsignelementdependencyValue = sEzsignelementdependencyValue;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EzsignelementdependencyResponseCompound ezsignelementdependencyResponseCompound = (EzsignelementdependencyResponseCompound) o;
    return Objects.equals(this.pkiEzsignelementdependencyID, ezsignelementdependencyResponseCompound.pkiEzsignelementdependencyID) &&
        Objects.equals(this.fkiEzsignformfieldID, ezsignelementdependencyResponseCompound.fkiEzsignformfieldID) &&
        Objects.equals(this.fkiEzsignsignatureID, ezsignelementdependencyResponseCompound.fkiEzsignsignatureID) &&
        Objects.equals(this.fkiEzsignformfieldIDValidation, ezsignelementdependencyResponseCompound.fkiEzsignformfieldIDValidation) &&
        Objects.equals(this.fkiEzsignformfieldgroupIDValidation, ezsignelementdependencyResponseCompound.fkiEzsignformfieldgroupIDValidation) &&
        Objects.equals(this.eEzsignelementdependencyValidation, ezsignelementdependencyResponseCompound.eEzsignelementdependencyValidation) &&
        Objects.equals(this.bEzsignelementdependencySelected, ezsignelementdependencyResponseCompound.bEzsignelementdependencySelected) &&
        Objects.equals(this.eEzsignelementdependencyOperator, ezsignelementdependencyResponseCompound.eEzsignelementdependencyOperator) &&
        Objects.equals(this.sEzsignelementdependencyValue, ezsignelementdependencyResponseCompound.sEzsignelementdependencyValue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pkiEzsignelementdependencyID, fkiEzsignformfieldID, fkiEzsignsignatureID, fkiEzsignformfieldIDValidation, fkiEzsignformfieldgroupIDValidation, eEzsignelementdependencyValidation, bEzsignelementdependencySelected, eEzsignelementdependencyOperator, sEzsignelementdependencyValue);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EzsignelementdependencyResponseCompound {\n");
    sb.append("    pkiEzsignelementdependencyID: ").append(toIndentedString(pkiEzsignelementdependencyID)).append("\n");
    sb.append("    fkiEzsignformfieldID: ").append(toIndentedString(fkiEzsignformfieldID)).append("\n");
    sb.append("    fkiEzsignsignatureID: ").append(toIndentedString(fkiEzsignsignatureID)).append("\n");
    sb.append("    fkiEzsignformfieldIDValidation: ").append(toIndentedString(fkiEzsignformfieldIDValidation)).append("\n");
    sb.append("    fkiEzsignformfieldgroupIDValidation: ").append(toIndentedString(fkiEzsignformfieldgroupIDValidation)).append("\n");
    sb.append("    eEzsignelementdependencyValidation: ").append(toIndentedString(eEzsignelementdependencyValidation)).append("\n");
    sb.append("    bEzsignelementdependencySelected: ").append(toIndentedString(bEzsignelementdependencySelected)).append("\n");
    sb.append("    eEzsignelementdependencyOperator: ").append(toIndentedString(eEzsignelementdependencyOperator)).append("\n");
    sb.append("    sEzsignelementdependencyValue: ").append(toIndentedString(sEzsignelementdependencyValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pkiEzsignelementdependencyID");
    openapiFields.add("fkiEzsignformfieldID");
    openapiFields.add("fkiEzsignsignatureID");
    openapiFields.add("fkiEzsignformfieldIDValidation");
    openapiFields.add("fkiEzsignformfieldgroupIDValidation");
    openapiFields.add("eEzsignelementdependencyValidation");
    openapiFields.add("bEzsignelementdependencySelected");
    openapiFields.add("eEzsignelementdependencyOperator");
    openapiFields.add("sEzsignelementdependencyValue");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("pkiEzsignelementdependencyID");
    openapiRequiredFields.add("eEzsignelementdependencyValidation");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EzsignelementdependencyResponseCompound
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EzsignelementdependencyResponseCompound.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EzsignelementdependencyResponseCompound is not found in the empty JSON string", EzsignelementdependencyResponseCompound.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EzsignelementdependencyResponseCompound.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EzsignelementdependencyResponseCompound` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : EzsignelementdependencyResponseCompound.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `eEzsignelementdependencyValidation`
      FieldEEzsignelementdependencyValidation.validateJsonElement(jsonObj.get("eEzsignelementdependencyValidation"));
      // validate the optional field `eEzsignelementdependencyOperator`
      if (jsonObj.get("eEzsignelementdependencyOperator") != null && !jsonObj.get("eEzsignelementdependencyOperator").isJsonNull()) {
        FieldEEzsignelementdependencyOperator.validateJsonElement(jsonObj.get("eEzsignelementdependencyOperator"));
      }
      if ((jsonObj.get("sEzsignelementdependencyValue") != null && !jsonObj.get("sEzsignelementdependencyValue").isJsonNull()) && !jsonObj.get("sEzsignelementdependencyValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sEzsignelementdependencyValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sEzsignelementdependencyValue").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EzsignelementdependencyResponseCompound.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EzsignelementdependencyResponseCompound' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EzsignelementdependencyResponseCompound> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EzsignelementdependencyResponseCompound.class));

       return (TypeAdapter<T>) new TypeAdapter<EzsignelementdependencyResponseCompound>() {
           @Override
           public void write(JsonWriter out, EzsignelementdependencyResponseCompound value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EzsignelementdependencyResponseCompound read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EzsignelementdependencyResponseCompound given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EzsignelementdependencyResponseCompound
   * @throws IOException if the JSON string is invalid with respect to EzsignelementdependencyResponseCompound
   */
  public static EzsignelementdependencyResponseCompound fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EzsignelementdependencyResponseCompound.class);
  }

  /**
   * Convert an instance of EzsignelementdependencyResponseCompound to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

