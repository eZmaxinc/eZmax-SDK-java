/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * A Ezsigntemplatepackagemembership Object
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-07T19:20:13.445471985Z[Etc/UTC]", comments = "Generator version: 7.12.0")
public class EzsigntemplatepackagemembershipResponse {
  public static final String SERIALIZED_NAME_PKI_EZSIGNTEMPLATEPACKAGEMEMBERSHIP_I_D = "pkiEzsigntemplatepackagemembershipID";
  @SerializedName(SERIALIZED_NAME_PKI_EZSIGNTEMPLATEPACKAGEMEMBERSHIP_I_D)
  @javax.annotation.Nonnull
  private Integer pkiEzsigntemplatepackagemembershipID;

  public static final String SERIALIZED_NAME_FKI_EZSIGNTEMPLATEPACKAGE_I_D = "fkiEzsigntemplatepackageID";
  @SerializedName(SERIALIZED_NAME_FKI_EZSIGNTEMPLATEPACKAGE_I_D)
  @javax.annotation.Nonnull
  private Integer fkiEzsigntemplatepackageID;

  public static final String SERIALIZED_NAME_FKI_EZSIGNTEMPLATE_I_D = "fkiEzsigntemplateID";
  @SerializedName(SERIALIZED_NAME_FKI_EZSIGNTEMPLATE_I_D)
  @javax.annotation.Nonnull
  private Integer fkiEzsigntemplateID;

  public static final String SERIALIZED_NAME_I_EZSIGNTEMPLATEPACKAGEMEMBERSHIP_ORDER = "iEzsigntemplatepackagemembershipOrder";
  @SerializedName(SERIALIZED_NAME_I_EZSIGNTEMPLATEPACKAGEMEMBERSHIP_ORDER)
  @javax.annotation.Nonnull
  private Integer iEzsigntemplatepackagemembershipOrder;

  public EzsigntemplatepackagemembershipResponse() {
  }

  public EzsigntemplatepackagemembershipResponse pkiEzsigntemplatepackagemembershipID(@javax.annotation.Nonnull Integer pkiEzsigntemplatepackagemembershipID) {
    this.pkiEzsigntemplatepackagemembershipID = pkiEzsigntemplatepackagemembershipID;
    return this;
  }

  /**
   * The unique ID of the Ezsigntemplatepackagemembership
   * minimum: 0
   * @return pkiEzsigntemplatepackagemembershipID
   */
  @javax.annotation.Nonnull
  public Integer getPkiEzsigntemplatepackagemembershipID() {
    return pkiEzsigntemplatepackagemembershipID;
  }

  public void setPkiEzsigntemplatepackagemembershipID(@javax.annotation.Nonnull Integer pkiEzsigntemplatepackagemembershipID) {
    this.pkiEzsigntemplatepackagemembershipID = pkiEzsigntemplatepackagemembershipID;
  }


  public EzsigntemplatepackagemembershipResponse fkiEzsigntemplatepackageID(@javax.annotation.Nonnull Integer fkiEzsigntemplatepackageID) {
    this.fkiEzsigntemplatepackageID = fkiEzsigntemplatepackageID;
    return this;
  }

  /**
   * The unique ID of the Ezsigntemplatepackage
   * minimum: 0
   * @return fkiEzsigntemplatepackageID
   */
  @javax.annotation.Nonnull
  public Integer getFkiEzsigntemplatepackageID() {
    return fkiEzsigntemplatepackageID;
  }

  public void setFkiEzsigntemplatepackageID(@javax.annotation.Nonnull Integer fkiEzsigntemplatepackageID) {
    this.fkiEzsigntemplatepackageID = fkiEzsigntemplatepackageID;
  }


  public EzsigntemplatepackagemembershipResponse fkiEzsigntemplateID(@javax.annotation.Nonnull Integer fkiEzsigntemplateID) {
    this.fkiEzsigntemplateID = fkiEzsigntemplateID;
    return this;
  }

  /**
   * The unique ID of the Ezsigntemplate
   * minimum: 0
   * @return fkiEzsigntemplateID
   */
  @javax.annotation.Nonnull
  public Integer getFkiEzsigntemplateID() {
    return fkiEzsigntemplateID;
  }

  public void setFkiEzsigntemplateID(@javax.annotation.Nonnull Integer fkiEzsigntemplateID) {
    this.fkiEzsigntemplateID = fkiEzsigntemplateID;
  }


  public EzsigntemplatepackagemembershipResponse iEzsigntemplatepackagemembershipOrder(@javax.annotation.Nonnull Integer iEzsigntemplatepackagemembershipOrder) {
    this.iEzsigntemplatepackagemembershipOrder = iEzsigntemplatepackagemembershipOrder;
    return this;
  }

  /**
   * The order in which the Ezsigntemplate will be imported when using an Ezsigntemplatepackage.
   * minimum: 1
   * @return iEzsigntemplatepackagemembershipOrder
   */
  @javax.annotation.Nonnull
  public Integer getiEzsigntemplatepackagemembershipOrder() {
    return iEzsigntemplatepackagemembershipOrder;
  }

  public void setiEzsigntemplatepackagemembershipOrder(@javax.annotation.Nonnull Integer iEzsigntemplatepackagemembershipOrder) {
    this.iEzsigntemplatepackagemembershipOrder = iEzsigntemplatepackagemembershipOrder;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EzsigntemplatepackagemembershipResponse ezsigntemplatepackagemembershipResponse = (EzsigntemplatepackagemembershipResponse) o;
    return Objects.equals(this.pkiEzsigntemplatepackagemembershipID, ezsigntemplatepackagemembershipResponse.pkiEzsigntemplatepackagemembershipID) &&
        Objects.equals(this.fkiEzsigntemplatepackageID, ezsigntemplatepackagemembershipResponse.fkiEzsigntemplatepackageID) &&
        Objects.equals(this.fkiEzsigntemplateID, ezsigntemplatepackagemembershipResponse.fkiEzsigntemplateID) &&
        Objects.equals(this.iEzsigntemplatepackagemembershipOrder, ezsigntemplatepackagemembershipResponse.iEzsigntemplatepackagemembershipOrder);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pkiEzsigntemplatepackagemembershipID, fkiEzsigntemplatepackageID, fkiEzsigntemplateID, iEzsigntemplatepackagemembershipOrder);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EzsigntemplatepackagemembershipResponse {\n");
    sb.append("    pkiEzsigntemplatepackagemembershipID: ").append(toIndentedString(pkiEzsigntemplatepackagemembershipID)).append("\n");
    sb.append("    fkiEzsigntemplatepackageID: ").append(toIndentedString(fkiEzsigntemplatepackageID)).append("\n");
    sb.append("    fkiEzsigntemplateID: ").append(toIndentedString(fkiEzsigntemplateID)).append("\n");
    sb.append("    iEzsigntemplatepackagemembershipOrder: ").append(toIndentedString(iEzsigntemplatepackagemembershipOrder)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pkiEzsigntemplatepackagemembershipID");
    openapiFields.add("fkiEzsigntemplatepackageID");
    openapiFields.add("fkiEzsigntemplateID");
    openapiFields.add("iEzsigntemplatepackagemembershipOrder");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("pkiEzsigntemplatepackagemembershipID");
    openapiRequiredFields.add("fkiEzsigntemplatepackageID");
    openapiRequiredFields.add("fkiEzsigntemplateID");
    openapiRequiredFields.add("iEzsigntemplatepackagemembershipOrder");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EzsigntemplatepackagemembershipResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EzsigntemplatepackagemembershipResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EzsigntemplatepackagemembershipResponse is not found in the empty JSON string", EzsigntemplatepackagemembershipResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EzsigntemplatepackagemembershipResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EzsigntemplatepackagemembershipResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : EzsigntemplatepackagemembershipResponse.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EzsigntemplatepackagemembershipResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EzsigntemplatepackagemembershipResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EzsigntemplatepackagemembershipResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EzsigntemplatepackagemembershipResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<EzsigntemplatepackagemembershipResponse>() {
           @Override
           public void write(JsonWriter out, EzsigntemplatepackagemembershipResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EzsigntemplatepackagemembershipResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EzsigntemplatepackagemembershipResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EzsigntemplatepackagemembershipResponse
   * @throws IOException if the JSON string is invalid with respect to EzsigntemplatepackagemembershipResponse
   */
  public static EzsigntemplatepackagemembershipResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EzsigntemplatepackagemembershipResponse.class);
  }

  /**
   * Convert an instance of EzsigntemplatepackagemembershipResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

