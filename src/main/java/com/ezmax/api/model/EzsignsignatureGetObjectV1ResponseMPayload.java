/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.14
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.ezmax.api.model.EzsignsignatureResponseCompound;
import com.ezmax.api.model.EzsignsignaturecustomdateResponseCompound;
import com.ezmax.api.model.FieldEEzsignsignatureAttachmentnamesource;
import com.ezmax.api.model.FieldEEzsignsignatureFont;
import com.ezmax.api.model.FieldEEzsignsignatureTooltipposition;
import com.ezmax.api.model.FieldEEzsignsignatureType;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * Payload for GET /1/object/ezsignsignature/{pkiEzsignsignatureID}
 */
@ApiModel(description = "Payload for GET /1/object/ezsignsignature/{pkiEzsignsignatureID}")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-01T21:58:46.009232Z[Etc/UTC]")
public class EzsignsignatureGetObjectV1ResponseMPayload {
  public static final String SERIALIZED_NAME_PKI_EZSIGNSIGNATURE_I_D = "pkiEzsignsignatureID";
  @SerializedName(SERIALIZED_NAME_PKI_EZSIGNSIGNATURE_I_D)
  private Integer pkiEzsignsignatureID;

  public static final String SERIALIZED_NAME_FKI_EZSIGNDOCUMENT_I_D = "fkiEzsigndocumentID";
  @SerializedName(SERIALIZED_NAME_FKI_EZSIGNDOCUMENT_I_D)
  private Integer fkiEzsigndocumentID;

  public static final String SERIALIZED_NAME_FKI_EZSIGNFOLDERSIGNERASSOCIATION_I_D = "fkiEzsignfoldersignerassociationID";
  @SerializedName(SERIALIZED_NAME_FKI_EZSIGNFOLDERSIGNERASSOCIATION_I_D)
  private Integer fkiEzsignfoldersignerassociationID;

  public static final String SERIALIZED_NAME_I_EZSIGNPAGE_PAGENUMBER = "iEzsignpagePagenumber";
  @SerializedName(SERIALIZED_NAME_I_EZSIGNPAGE_PAGENUMBER)
  private Integer iEzsignpagePagenumber;

  public static final String SERIALIZED_NAME_I_EZSIGNSIGNATURE_X = "iEzsignsignatureX";
  @SerializedName(SERIALIZED_NAME_I_EZSIGNSIGNATURE_X)
  private Integer iEzsignsignatureX;

  public static final String SERIALIZED_NAME_I_EZSIGNSIGNATURE_Y = "iEzsignsignatureY";
  @SerializedName(SERIALIZED_NAME_I_EZSIGNSIGNATURE_Y)
  private Integer iEzsignsignatureY;

  public static final String SERIALIZED_NAME_I_EZSIGNSIGNATURE_STEP = "iEzsignsignatureStep";
  @SerializedName(SERIALIZED_NAME_I_EZSIGNSIGNATURE_STEP)
  private Integer iEzsignsignatureStep;

  public static final String SERIALIZED_NAME_E_EZSIGNSIGNATURE_TYPE = "eEzsignsignatureType";
  @SerializedName(SERIALIZED_NAME_E_EZSIGNSIGNATURE_TYPE)
  private FieldEEzsignsignatureType eEzsignsignatureType;

  public static final String SERIALIZED_NAME_T_EZSIGNSIGNATURE_TOOLTIP = "tEzsignsignatureTooltip";
  @SerializedName(SERIALIZED_NAME_T_EZSIGNSIGNATURE_TOOLTIP)
  private String tEzsignsignatureTooltip;

  public static final String SERIALIZED_NAME_E_EZSIGNSIGNATURE_TOOLTIPPOSITION = "eEzsignsignatureTooltipposition";
  @SerializedName(SERIALIZED_NAME_E_EZSIGNSIGNATURE_TOOLTIPPOSITION)
  private FieldEEzsignsignatureTooltipposition eEzsignsignatureTooltipposition;

  public static final String SERIALIZED_NAME_E_EZSIGNSIGNATURE_FONT = "eEzsignsignatureFont";
  @SerializedName(SERIALIZED_NAME_E_EZSIGNSIGNATURE_FONT)
  private FieldEEzsignsignatureFont eEzsignsignatureFont;

  public static final String SERIALIZED_NAME_I_EZSIGNSIGNATURE_VALIDATIONSTEP = "iEzsignsignatureValidationstep";
  @SerializedName(SERIALIZED_NAME_I_EZSIGNSIGNATURE_VALIDATIONSTEP)
  private Integer iEzsignsignatureValidationstep;

  public static final String SERIALIZED_NAME_S_EZSIGNSIGNATURE_ATTACHMENTDESCRIPTION = "sEzsignsignatureAttachmentdescription";
  @SerializedName(SERIALIZED_NAME_S_EZSIGNSIGNATURE_ATTACHMENTDESCRIPTION)
  private String sEzsignsignatureAttachmentdescription;

  public static final String SERIALIZED_NAME_E_EZSIGNSIGNATURE_ATTACHMENTNAMESOURCE = "eEzsignsignatureAttachmentnamesource";
  @SerializedName(SERIALIZED_NAME_E_EZSIGNSIGNATURE_ATTACHMENTNAMESOURCE)
  private FieldEEzsignsignatureAttachmentnamesource eEzsignsignatureAttachmentnamesource;

  public static final String SERIALIZED_NAME_B_EZSIGNSIGNATURE_REQUIRED = "bEzsignsignatureRequired";
  @SerializedName(SERIALIZED_NAME_B_EZSIGNSIGNATURE_REQUIRED)
  private Boolean bEzsignsignatureRequired;

  public static final String SERIALIZED_NAME_FKI_EZSIGNFOLDERSIGNERASSOCIATION_I_D_VALIDATION = "fkiEzsignfoldersignerassociationIDValidation";
  @SerializedName(SERIALIZED_NAME_FKI_EZSIGNFOLDERSIGNERASSOCIATION_I_D_VALIDATION)
  private Integer fkiEzsignfoldersignerassociationIDValidation;

  public static final String SERIALIZED_NAME_B_EZSIGNSIGNATURE_CUSTOMDATE = "bEzsignsignatureCustomdate";
  @SerializedName(SERIALIZED_NAME_B_EZSIGNSIGNATURE_CUSTOMDATE)
  private Boolean bEzsignsignatureCustomdate;

  public static final String SERIALIZED_NAME_A_OBJ_EZSIGNSIGNATURECUSTOMDATE = "a_objEzsignsignaturecustomdate";
  @SerializedName(SERIALIZED_NAME_A_OBJ_EZSIGNSIGNATURECUSTOMDATE)
  private List<EzsignsignaturecustomdateResponseCompound> aObjEzsignsignaturecustomdate = null;

  public EzsignsignatureGetObjectV1ResponseMPayload() { 
  }

  public EzsignsignatureGetObjectV1ResponseMPayload pkiEzsignsignatureID(Integer pkiEzsignsignatureID) {
    
    this.pkiEzsignsignatureID = pkiEzsignsignatureID;
    return this;
  }

   /**
   * The unique ID of the Ezsignsignature
   * minimum: 0
   * @return pkiEzsignsignatureID
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "49", required = true, value = "The unique ID of the Ezsignsignature")

  public Integer getPkiEzsignsignatureID() {
    return pkiEzsignsignatureID;
  }


  public void setPkiEzsignsignatureID(Integer pkiEzsignsignatureID) {
    this.pkiEzsignsignatureID = pkiEzsignsignatureID;
  }


  public EzsignsignatureGetObjectV1ResponseMPayload fkiEzsigndocumentID(Integer fkiEzsigndocumentID) {
    
    this.fkiEzsigndocumentID = fkiEzsigndocumentID;
    return this;
  }

   /**
   * The unique ID of the Ezsigndocument
   * minimum: 0
   * @return fkiEzsigndocumentID
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "97", required = true, value = "The unique ID of the Ezsigndocument")

  public Integer getFkiEzsigndocumentID() {
    return fkiEzsigndocumentID;
  }


  public void setFkiEzsigndocumentID(Integer fkiEzsigndocumentID) {
    this.fkiEzsigndocumentID = fkiEzsigndocumentID;
  }


  public EzsignsignatureGetObjectV1ResponseMPayload fkiEzsignfoldersignerassociationID(Integer fkiEzsignfoldersignerassociationID) {
    
    this.fkiEzsignfoldersignerassociationID = fkiEzsignfoldersignerassociationID;
    return this;
  }

   /**
   * The unique ID of the Ezsignfoldersignerassociation
   * minimum: 0
   * @return fkiEzsignfoldersignerassociationID
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "20", required = true, value = "The unique ID of the Ezsignfoldersignerassociation")

  public Integer getFkiEzsignfoldersignerassociationID() {
    return fkiEzsignfoldersignerassociationID;
  }


  public void setFkiEzsignfoldersignerassociationID(Integer fkiEzsignfoldersignerassociationID) {
    this.fkiEzsignfoldersignerassociationID = fkiEzsignfoldersignerassociationID;
  }


  public EzsignsignatureGetObjectV1ResponseMPayload iEzsignpagePagenumber(Integer iEzsignpagePagenumber) {
    
    this.iEzsignpagePagenumber = iEzsignpagePagenumber;
    return this;
  }

   /**
   * The page number in the Ezsigndocument
   * minimum: 1
   * @return iEzsignpagePagenumber
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1", required = true, value = "The page number in the Ezsigndocument")

  public Integer getiEzsignpagePagenumber() {
    return iEzsignpagePagenumber;
  }


  public void setiEzsignpagePagenumber(Integer iEzsignpagePagenumber) {
    this.iEzsignpagePagenumber = iEzsignpagePagenumber;
  }


  public EzsignsignatureGetObjectV1ResponseMPayload iEzsignsignatureX(Integer iEzsignsignatureX) {
    
    this.iEzsignsignatureX = iEzsignsignatureX;
    return this;
  }

   /**
   * The X coordinate (Horizontal) where to put the Ezsignsignature on the page.  Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the Ezsignsignature 2 inches from the left border of the page, you would use \&quot;200\&quot; for the X coordinate.
   * minimum: 0
   * @return iEzsignsignatureX
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "200", required = true, value = "The X coordinate (Horizontal) where to put the Ezsignsignature on the page.  Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the Ezsignsignature 2 inches from the left border of the page, you would use \"200\" for the X coordinate.")

  public Integer getiEzsignsignatureX() {
    return iEzsignsignatureX;
  }


  public void setiEzsignsignatureX(Integer iEzsignsignatureX) {
    this.iEzsignsignatureX = iEzsignsignatureX;
  }


  public EzsignsignatureGetObjectV1ResponseMPayload iEzsignsignatureY(Integer iEzsignsignatureY) {
    
    this.iEzsignsignatureY = iEzsignsignatureY;
    return this;
  }

   /**
   * The Y coordinate (Vertical) where to put the Ezsignsignature on the page.  Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the Ezsignsignature 3 inches from the top border of the page, you would use \&quot;300\&quot; for the Y coordinate.
   * minimum: 0
   * @return iEzsignsignatureY
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "300", required = true, value = "The Y coordinate (Vertical) where to put the Ezsignsignature on the page.  Coordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the Ezsignsignature 3 inches from the top border of the page, you would use \"300\" for the Y coordinate.")

  public Integer getiEzsignsignatureY() {
    return iEzsignsignatureY;
  }


  public void setiEzsignsignatureY(Integer iEzsignsignatureY) {
    this.iEzsignsignatureY = iEzsignsignatureY;
  }


  public EzsignsignatureGetObjectV1ResponseMPayload iEzsignsignatureStep(Integer iEzsignsignatureStep) {
    
    this.iEzsignsignatureStep = iEzsignsignatureStep;
    return this;
  }

   /**
   * The step when the Ezsignsigner will be invited to sign
   * @return iEzsignsignatureStep
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1", required = true, value = "The step when the Ezsignsigner will be invited to sign")

  public Integer getiEzsignsignatureStep() {
    return iEzsignsignatureStep;
  }


  public void setiEzsignsignatureStep(Integer iEzsignsignatureStep) {
    this.iEzsignsignatureStep = iEzsignsignatureStep;
  }


  public EzsignsignatureGetObjectV1ResponseMPayload eEzsignsignatureType(FieldEEzsignsignatureType eEzsignsignatureType) {
    
    this.eEzsignsignatureType = eEzsignsignatureType;
    return this;
  }

   /**
   * Get eEzsignsignatureType
   * @return eEzsignsignatureType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public FieldEEzsignsignatureType geteEzsignsignatureType() {
    return eEzsignsignatureType;
  }


  public void seteEzsignsignatureType(FieldEEzsignsignatureType eEzsignsignatureType) {
    this.eEzsignsignatureType = eEzsignsignatureType;
  }


  public EzsignsignatureGetObjectV1ResponseMPayload tEzsignsignatureTooltip(String tEzsignsignatureTooltip) {
    
    this.tEzsignsignatureTooltip = tEzsignsignatureTooltip;
    return this;
  }

   /**
   * A tooltip that will be presented to Ezsignsigner about the Ezsignsignature
   * @return tEzsignsignatureTooltip
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Please sign here if you agree to the terms", value = "A tooltip that will be presented to Ezsignsigner about the Ezsignsignature")

  public String gettEzsignsignatureTooltip() {
    return tEzsignsignatureTooltip;
  }


  public void settEzsignsignatureTooltip(String tEzsignsignatureTooltip) {
    this.tEzsignsignatureTooltip = tEzsignsignatureTooltip;
  }


  public EzsignsignatureGetObjectV1ResponseMPayload eEzsignsignatureTooltipposition(FieldEEzsignsignatureTooltipposition eEzsignsignatureTooltipposition) {
    
    this.eEzsignsignatureTooltipposition = eEzsignsignatureTooltipposition;
    return this;
  }

   /**
   * Get eEzsignsignatureTooltipposition
   * @return eEzsignsignatureTooltipposition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FieldEEzsignsignatureTooltipposition geteEzsignsignatureTooltipposition() {
    return eEzsignsignatureTooltipposition;
  }


  public void seteEzsignsignatureTooltipposition(FieldEEzsignsignatureTooltipposition eEzsignsignatureTooltipposition) {
    this.eEzsignsignatureTooltipposition = eEzsignsignatureTooltipposition;
  }


  public EzsignsignatureGetObjectV1ResponseMPayload eEzsignsignatureFont(FieldEEzsignsignatureFont eEzsignsignatureFont) {
    
    this.eEzsignsignatureFont = eEzsignsignatureFont;
    return this;
  }

   /**
   * Get eEzsignsignatureFont
   * @return eEzsignsignatureFont
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FieldEEzsignsignatureFont geteEzsignsignatureFont() {
    return eEzsignsignatureFont;
  }


  public void seteEzsignsignatureFont(FieldEEzsignsignatureFont eEzsignsignatureFont) {
    this.eEzsignsignatureFont = eEzsignsignatureFont;
  }


  public EzsignsignatureGetObjectV1ResponseMPayload iEzsignsignatureValidationstep(Integer iEzsignsignatureValidationstep) {
    
    this.iEzsignsignatureValidationstep = iEzsignsignatureValidationstep;
    return this;
  }

   /**
   * The step when the Ezsignsigner will be invited to validate the Ezsignsignature of eEzsignsignatureType Attachments
   * @return iEzsignsignatureValidationstep
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "The step when the Ezsignsigner will be invited to validate the Ezsignsignature of eEzsignsignatureType Attachments")

  public Integer getiEzsignsignatureValidationstep() {
    return iEzsignsignatureValidationstep;
  }


  public void setiEzsignsignatureValidationstep(Integer iEzsignsignatureValidationstep) {
    this.iEzsignsignatureValidationstep = iEzsignsignatureValidationstep;
  }


  public EzsignsignatureGetObjectV1ResponseMPayload sEzsignsignatureAttachmentdescription(String sEzsignsignatureAttachmentdescription) {
    
    this.sEzsignsignatureAttachmentdescription = sEzsignsignatureAttachmentdescription;
    return this;
  }

   /**
   * The description attached to the attachment name added in Ezsignsignature of eEzsignsignatureType Attachments
   * @return sEzsignsignatureAttachmentdescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Attachment", value = "The description attached to the attachment name added in Ezsignsignature of eEzsignsignatureType Attachments")

  public String getsEzsignsignatureAttachmentdescription() {
    return sEzsignsignatureAttachmentdescription;
  }


  public void setsEzsignsignatureAttachmentdescription(String sEzsignsignatureAttachmentdescription) {
    this.sEzsignsignatureAttachmentdescription = sEzsignsignatureAttachmentdescription;
  }


  public EzsignsignatureGetObjectV1ResponseMPayload eEzsignsignatureAttachmentnamesource(FieldEEzsignsignatureAttachmentnamesource eEzsignsignatureAttachmentnamesource) {
    
    this.eEzsignsignatureAttachmentnamesource = eEzsignsignatureAttachmentnamesource;
    return this;
  }

   /**
   * Get eEzsignsignatureAttachmentnamesource
   * @return eEzsignsignatureAttachmentnamesource
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FieldEEzsignsignatureAttachmentnamesource geteEzsignsignatureAttachmentnamesource() {
    return eEzsignsignatureAttachmentnamesource;
  }


  public void seteEzsignsignatureAttachmentnamesource(FieldEEzsignsignatureAttachmentnamesource eEzsignsignatureAttachmentnamesource) {
    this.eEzsignsignatureAttachmentnamesource = eEzsignsignatureAttachmentnamesource;
  }


  public EzsignsignatureGetObjectV1ResponseMPayload bEzsignsignatureRequired(Boolean bEzsignsignatureRequired) {
    
    this.bEzsignsignatureRequired = bEzsignsignatureRequired;
    return this;
  }

   /**
   * Whether the Ezsignsignature is required or not. This field is relevant only with Ezsignsignature with eEzsignsignatureType &#x3D; Attachments.
   * @return bEzsignsignatureRequired
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the Ezsignsignature is required or not. This field is relevant only with Ezsignsignature with eEzsignsignatureType = Attachments.")

  public Boolean getbEzsignsignatureRequired() {
    return bEzsignsignatureRequired;
  }


  public void setbEzsignsignatureRequired(Boolean bEzsignsignatureRequired) {
    this.bEzsignsignatureRequired = bEzsignsignatureRequired;
  }


  public EzsignsignatureGetObjectV1ResponseMPayload fkiEzsignfoldersignerassociationIDValidation(Integer fkiEzsignfoldersignerassociationIDValidation) {
    
    this.fkiEzsignfoldersignerassociationIDValidation = fkiEzsignfoldersignerassociationIDValidation;
    return this;
  }

   /**
   * The unique ID of the Ezsignfoldersignerassociation
   * minimum: 0
   * @return fkiEzsignfoldersignerassociationIDValidation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "20", value = "The unique ID of the Ezsignfoldersignerassociation")

  public Integer getFkiEzsignfoldersignerassociationIDValidation() {
    return fkiEzsignfoldersignerassociationIDValidation;
  }


  public void setFkiEzsignfoldersignerassociationIDValidation(Integer fkiEzsignfoldersignerassociationIDValidation) {
    this.fkiEzsignfoldersignerassociationIDValidation = fkiEzsignfoldersignerassociationIDValidation;
  }


  public EzsignsignatureGetObjectV1ResponseMPayload bEzsignsignatureCustomdate(Boolean bEzsignsignatureCustomdate) {
    
    this.bEzsignsignatureCustomdate = bEzsignsignatureCustomdate;
    return this;
  }

   /**
   * Whether the Ezsignsignature has a custom date format or not. (Only possible when eEzsignsignatureType is **Name** or **Handwritten**)
   * @return bEzsignsignatureCustomdate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the Ezsignsignature has a custom date format or not. (Only possible when eEzsignsignatureType is **Name** or **Handwritten**)")

  public Boolean getbEzsignsignatureCustomdate() {
    return bEzsignsignatureCustomdate;
  }


  public void setbEzsignsignatureCustomdate(Boolean bEzsignsignatureCustomdate) {
    this.bEzsignsignatureCustomdate = bEzsignsignatureCustomdate;
  }


  public EzsignsignatureGetObjectV1ResponseMPayload aObjEzsignsignaturecustomdate(List<EzsignsignaturecustomdateResponseCompound> aObjEzsignsignaturecustomdate) {
    
    this.aObjEzsignsignaturecustomdate = aObjEzsignsignaturecustomdate;
    return this;
  }

  public EzsignsignatureGetObjectV1ResponseMPayload addAObjEzsignsignaturecustomdateItem(EzsignsignaturecustomdateResponseCompound aObjEzsignsignaturecustomdateItem) {
    if (this.aObjEzsignsignaturecustomdate == null) {
      this.aObjEzsignsignaturecustomdate = new ArrayList<>();
    }
    this.aObjEzsignsignaturecustomdate.add(aObjEzsignsignaturecustomdateItem);
    return this;
  }

   /**
   * An array of custom date blocks that will be filled at the time of signature.  Can only be used if bEzsignsignatureCustomdate is true.  Use an empty array if you don&#39;t want to have a date at all.
   * @return aObjEzsignsignaturecustomdate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of custom date blocks that will be filled at the time of signature.  Can only be used if bEzsignsignatureCustomdate is true.  Use an empty array if you don't want to have a date at all.")

  public List<EzsignsignaturecustomdateResponseCompound> getaObjEzsignsignaturecustomdate() {
    return aObjEzsignsignaturecustomdate;
  }


  public void setaObjEzsignsignaturecustomdate(List<EzsignsignaturecustomdateResponseCompound> aObjEzsignsignaturecustomdate) {
    this.aObjEzsignsignaturecustomdate = aObjEzsignsignaturecustomdate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EzsignsignatureGetObjectV1ResponseMPayload ezsignsignatureGetObjectV1ResponseMPayload = (EzsignsignatureGetObjectV1ResponseMPayload) o;
    return Objects.equals(this.pkiEzsignsignatureID, ezsignsignatureGetObjectV1ResponseMPayload.pkiEzsignsignatureID) &&
        Objects.equals(this.fkiEzsigndocumentID, ezsignsignatureGetObjectV1ResponseMPayload.fkiEzsigndocumentID) &&
        Objects.equals(this.fkiEzsignfoldersignerassociationID, ezsignsignatureGetObjectV1ResponseMPayload.fkiEzsignfoldersignerassociationID) &&
        Objects.equals(this.iEzsignpagePagenumber, ezsignsignatureGetObjectV1ResponseMPayload.iEzsignpagePagenumber) &&
        Objects.equals(this.iEzsignsignatureX, ezsignsignatureGetObjectV1ResponseMPayload.iEzsignsignatureX) &&
        Objects.equals(this.iEzsignsignatureY, ezsignsignatureGetObjectV1ResponseMPayload.iEzsignsignatureY) &&
        Objects.equals(this.iEzsignsignatureStep, ezsignsignatureGetObjectV1ResponseMPayload.iEzsignsignatureStep) &&
        Objects.equals(this.eEzsignsignatureType, ezsignsignatureGetObjectV1ResponseMPayload.eEzsignsignatureType) &&
        Objects.equals(this.tEzsignsignatureTooltip, ezsignsignatureGetObjectV1ResponseMPayload.tEzsignsignatureTooltip) &&
        Objects.equals(this.eEzsignsignatureTooltipposition, ezsignsignatureGetObjectV1ResponseMPayload.eEzsignsignatureTooltipposition) &&
        Objects.equals(this.eEzsignsignatureFont, ezsignsignatureGetObjectV1ResponseMPayload.eEzsignsignatureFont) &&
        Objects.equals(this.iEzsignsignatureValidationstep, ezsignsignatureGetObjectV1ResponseMPayload.iEzsignsignatureValidationstep) &&
        Objects.equals(this.sEzsignsignatureAttachmentdescription, ezsignsignatureGetObjectV1ResponseMPayload.sEzsignsignatureAttachmentdescription) &&
        Objects.equals(this.eEzsignsignatureAttachmentnamesource, ezsignsignatureGetObjectV1ResponseMPayload.eEzsignsignatureAttachmentnamesource) &&
        Objects.equals(this.bEzsignsignatureRequired, ezsignsignatureGetObjectV1ResponseMPayload.bEzsignsignatureRequired) &&
        Objects.equals(this.fkiEzsignfoldersignerassociationIDValidation, ezsignsignatureGetObjectV1ResponseMPayload.fkiEzsignfoldersignerassociationIDValidation) &&
        Objects.equals(this.bEzsignsignatureCustomdate, ezsignsignatureGetObjectV1ResponseMPayload.bEzsignsignatureCustomdate) &&
        Objects.equals(this.aObjEzsignsignaturecustomdate, ezsignsignatureGetObjectV1ResponseMPayload.aObjEzsignsignaturecustomdate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pkiEzsignsignatureID, fkiEzsigndocumentID, fkiEzsignfoldersignerassociationID, iEzsignpagePagenumber, iEzsignsignatureX, iEzsignsignatureY, iEzsignsignatureStep, eEzsignsignatureType, tEzsignsignatureTooltip, eEzsignsignatureTooltipposition, eEzsignsignatureFont, iEzsignsignatureValidationstep, sEzsignsignatureAttachmentdescription, eEzsignsignatureAttachmentnamesource, bEzsignsignatureRequired, fkiEzsignfoldersignerassociationIDValidation, bEzsignsignatureCustomdate, aObjEzsignsignaturecustomdate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EzsignsignatureGetObjectV1ResponseMPayload {\n");
    sb.append("    pkiEzsignsignatureID: ").append(toIndentedString(pkiEzsignsignatureID)).append("\n");
    sb.append("    fkiEzsigndocumentID: ").append(toIndentedString(fkiEzsigndocumentID)).append("\n");
    sb.append("    fkiEzsignfoldersignerassociationID: ").append(toIndentedString(fkiEzsignfoldersignerassociationID)).append("\n");
    sb.append("    iEzsignpagePagenumber: ").append(toIndentedString(iEzsignpagePagenumber)).append("\n");
    sb.append("    iEzsignsignatureX: ").append(toIndentedString(iEzsignsignatureX)).append("\n");
    sb.append("    iEzsignsignatureY: ").append(toIndentedString(iEzsignsignatureY)).append("\n");
    sb.append("    iEzsignsignatureStep: ").append(toIndentedString(iEzsignsignatureStep)).append("\n");
    sb.append("    eEzsignsignatureType: ").append(toIndentedString(eEzsignsignatureType)).append("\n");
    sb.append("    tEzsignsignatureTooltip: ").append(toIndentedString(tEzsignsignatureTooltip)).append("\n");
    sb.append("    eEzsignsignatureTooltipposition: ").append(toIndentedString(eEzsignsignatureTooltipposition)).append("\n");
    sb.append("    eEzsignsignatureFont: ").append(toIndentedString(eEzsignsignatureFont)).append("\n");
    sb.append("    iEzsignsignatureValidationstep: ").append(toIndentedString(iEzsignsignatureValidationstep)).append("\n");
    sb.append("    sEzsignsignatureAttachmentdescription: ").append(toIndentedString(sEzsignsignatureAttachmentdescription)).append("\n");
    sb.append("    eEzsignsignatureAttachmentnamesource: ").append(toIndentedString(eEzsignsignatureAttachmentnamesource)).append("\n");
    sb.append("    bEzsignsignatureRequired: ").append(toIndentedString(bEzsignsignatureRequired)).append("\n");
    sb.append("    fkiEzsignfoldersignerassociationIDValidation: ").append(toIndentedString(fkiEzsignfoldersignerassociationIDValidation)).append("\n");
    sb.append("    bEzsignsignatureCustomdate: ").append(toIndentedString(bEzsignsignatureCustomdate)).append("\n");
    sb.append("    aObjEzsignsignaturecustomdate: ").append(toIndentedString(aObjEzsignsignaturecustomdate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pkiEzsignsignatureID");
    openapiFields.add("fkiEzsigndocumentID");
    openapiFields.add("fkiEzsignfoldersignerassociationID");
    openapiFields.add("iEzsignpagePagenumber");
    openapiFields.add("iEzsignsignatureX");
    openapiFields.add("iEzsignsignatureY");
    openapiFields.add("iEzsignsignatureStep");
    openapiFields.add("eEzsignsignatureType");
    openapiFields.add("tEzsignsignatureTooltip");
    openapiFields.add("eEzsignsignatureTooltipposition");
    openapiFields.add("eEzsignsignatureFont");
    openapiFields.add("iEzsignsignatureValidationstep");
    openapiFields.add("sEzsignsignatureAttachmentdescription");
    openapiFields.add("eEzsignsignatureAttachmentnamesource");
    openapiFields.add("bEzsignsignatureRequired");
    openapiFields.add("fkiEzsignfoldersignerassociationIDValidation");
    openapiFields.add("bEzsignsignatureCustomdate");
    openapiFields.add("a_objEzsignsignaturecustomdate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("pkiEzsignsignatureID");
    openapiRequiredFields.add("fkiEzsigndocumentID");
    openapiRequiredFields.add("fkiEzsignfoldersignerassociationID");
    openapiRequiredFields.add("iEzsignpagePagenumber");
    openapiRequiredFields.add("iEzsignsignatureX");
    openapiRequiredFields.add("iEzsignsignatureY");
    openapiRequiredFields.add("iEzsignsignatureStep");
    openapiRequiredFields.add("eEzsignsignatureType");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to EzsignsignatureGetObjectV1ResponseMPayload
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (EzsignsignatureGetObjectV1ResponseMPayload.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in EzsignsignatureGetObjectV1ResponseMPayload is not found in the empty JSON string", EzsignsignatureGetObjectV1ResponseMPayload.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!EzsignsignatureGetObjectV1ResponseMPayload.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EzsignsignatureGetObjectV1ResponseMPayload` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : EzsignsignatureGetObjectV1ResponseMPayload.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (jsonObj.get("tEzsignsignatureTooltip") != null && !jsonObj.get("tEzsignsignatureTooltip").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tEzsignsignatureTooltip` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tEzsignsignatureTooltip").toString()));
      }
      if (jsonObj.get("sEzsignsignatureAttachmentdescription") != null && !jsonObj.get("sEzsignsignatureAttachmentdescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sEzsignsignatureAttachmentdescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sEzsignsignatureAttachmentdescription").toString()));
      }
      JsonArray jsonArrayaObjEzsignsignaturecustomdate = jsonObj.getAsJsonArray("a_objEzsignsignaturecustomdate");
      if (jsonArrayaObjEzsignsignaturecustomdate != null) {
        // ensure the json data is an array
        if (!jsonObj.get("a_objEzsignsignaturecustomdate").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `a_objEzsignsignaturecustomdate` to be an array in the JSON string but got `%s`", jsonObj.get("a_objEzsignsignaturecustomdate").toString()));
        }

        // validate the optional field `a_objEzsignsignaturecustomdate` (array)
        for (int i = 0; i < jsonArrayaObjEzsignsignaturecustomdate.size(); i++) {
          EzsignsignaturecustomdateResponseCompound.validateJsonObject(jsonArrayaObjEzsignsignaturecustomdate.get(i).getAsJsonObject());
        };
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EzsignsignatureGetObjectV1ResponseMPayload.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EzsignsignatureGetObjectV1ResponseMPayload' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EzsignsignatureGetObjectV1ResponseMPayload> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EzsignsignatureGetObjectV1ResponseMPayload.class));

       return (TypeAdapter<T>) new TypeAdapter<EzsignsignatureGetObjectV1ResponseMPayload>() {
           @Override
           public void write(JsonWriter out, EzsignsignatureGetObjectV1ResponseMPayload value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EzsignsignatureGetObjectV1ResponseMPayload read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EzsignsignatureGetObjectV1ResponseMPayload given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EzsignsignatureGetObjectV1ResponseMPayload
  * @throws IOException if the JSON string is invalid with respect to EzsignsignatureGetObjectV1ResponseMPayload
  */
  public static EzsignsignatureGetObjectV1ResponseMPayload fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EzsignsignatureGetObjectV1ResponseMPayload.class);
  }

 /**
  * Convert an instance of EzsignsignatureGetObjectV1ResponseMPayload to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

