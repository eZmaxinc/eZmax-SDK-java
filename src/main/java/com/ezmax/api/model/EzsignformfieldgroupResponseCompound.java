/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.ezmax.api.model.CustomDropdownElementResponse;
import com.ezmax.api.model.EnumTextvalidation;
import com.ezmax.api.model.EzsignformfieldResponseCompound;
import com.ezmax.api.model.EzsignformfieldgroupResponse;
import com.ezmax.api.model.EzsignformfieldgroupsignerResponse;
import com.ezmax.api.model.FieldEEzsignformfieldgroupSignerrequirement;
import com.ezmax.api.model.FieldEEzsignformfieldgroupTooltipposition;
import com.ezmax.api.model.FieldEEzsignformfieldgroupType;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * An Ezsignformfieldgroup Object and children to create a complete structure
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-17T15:03:32.455495633Z[Etc/UTC]", comments = "Generator version: 7.10.0")
public class EzsignformfieldgroupResponseCompound extends EzsignformfieldgroupResponse {
  public static final String SERIALIZED_NAME_A_OBJ_EZSIGNFORMFIELD = "a_objEzsignformfield";
  @SerializedName(SERIALIZED_NAME_A_OBJ_EZSIGNFORMFIELD)
  @javax.annotation.Nonnull
  private List<EzsignformfieldResponseCompound> aObjEzsignformfield = new ArrayList<>();

  public static final String SERIALIZED_NAME_A_OBJ_DROPDOWN_ELEMENT = "a_objDropdownElement";
  @SerializedName(SERIALIZED_NAME_A_OBJ_DROPDOWN_ELEMENT)
  @javax.annotation.Nullable
  private List<CustomDropdownElementResponseCompound> aObjDropdownElement = new ArrayList<>();

  public static final String SERIALIZED_NAME_A_OBJ_EZSIGNFORMFIELDGROUPSIGNER = "a_objEzsignformfieldgroupsigner";
  @SerializedName(SERIALIZED_NAME_A_OBJ_EZSIGNFORMFIELDGROUPSIGNER)
  @javax.annotation.Nonnull
  private List<EzsignformfieldgroupsignerResponseCompound> aObjEzsignformfieldgroupsigner = new ArrayList<>();

  public EzsignformfieldgroupResponseCompound() {
  }

  public EzsignformfieldgroupResponseCompound aObjEzsignformfield(@javax.annotation.Nonnull List<EzsignformfieldResponseCompound> aObjEzsignformfield) {
    this.aObjEzsignformfield = aObjEzsignformfield;
    return this;
  }

  public EzsignformfieldgroupResponseCompound addAObjEzsignformfieldItem(EzsignformfieldResponseCompound aObjEzsignformfieldItem) {
    if (this.aObjEzsignformfield == null) {
      this.aObjEzsignformfield = new ArrayList<>();
    }
    this.aObjEzsignformfield.add(aObjEzsignformfieldItem);
    return this;
  }

  /**
   * Get aObjEzsignformfield
   * @return aObjEzsignformfield
   */
  @javax.annotation.Nonnull
  public List<EzsignformfieldResponseCompound> getaObjEzsignformfield() {
    return aObjEzsignformfield;
  }

  public void setaObjEzsignformfield(@javax.annotation.Nonnull List<EzsignformfieldResponseCompound> aObjEzsignformfield) {
    this.aObjEzsignformfield = aObjEzsignformfield;
  }


  public EzsignformfieldgroupResponseCompound aObjDropdownElement(@javax.annotation.Nullable List<CustomDropdownElementResponseCompound> aObjDropdownElement) {
    this.aObjDropdownElement = aObjDropdownElement;
    return this;
  }

  public EzsignformfieldgroupResponseCompound addAObjDropdownElementItem(CustomDropdownElementResponse aObjDropdownElementItem) {
    if (this.aObjDropdownElement == null) {
      this.aObjDropdownElement = new ArrayList<>();
    }
    this.aObjDropdownElement.add(aObjDropdownElementItem);
    return this;
  }

  /**
   * Get aObjDropdownElement
   * @return aObjDropdownElement
   */
  @javax.annotation.Nullable
  public List<CustomDropdownElementResponseCompound> getaObjDropdownElement() {
    return aObjDropdownElement;
  }

  public void setaObjDropdownElement(@javax.annotation.Nullable List<CustomDropdownElementResponseCompound> aObjDropdownElement) {
    this.aObjDropdownElement = aObjDropdownElement;
  }


  public EzsignformfieldgroupResponseCompound aObjEzsignformfieldgroupsigner(@javax.annotation.Nonnull List<EzsignformfieldgroupsignerResponseCompound> aObjEzsignformfieldgroupsigner) {
    this.aObjEzsignformfieldgroupsigner = aObjEzsignformfieldgroupsigner;
    return this;
  }

  public EzsignformfieldgroupResponseCompound addAObjEzsignformfieldgroupsignerItem(EzsignformfieldgroupsignerResponse aObjEzsignformfieldgroupsignerItem) {
    if (this.aObjEzsignformfieldgroupsigner == null) {
      this.aObjEzsignformfieldgroupsigner = new ArrayList<>();
    }
    this.aObjEzsignformfieldgroupsigner.add(aObjEzsignformfieldgroupsignerItem);
    return this;
  }

  /**
   * Get aObjEzsignformfieldgroupsigner
   * @return aObjEzsignformfieldgroupsigner
   */
  @javax.annotation.Nonnull
  public List<EzsignformfieldgroupsignerResponseCompound> getaObjEzsignformfieldgroupsigner() {
    return aObjEzsignformfieldgroupsigner;
  }

  public void setaObjEzsignformfieldgroupsigner(@javax.annotation.Nonnull List<EzsignformfieldgroupsignerResponseCompound> aObjEzsignformfieldgroupsigner) {
    this.aObjEzsignformfieldgroupsigner = aObjEzsignformfieldgroupsigner;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EzsignformfieldgroupResponseCompound ezsignformfieldgroupResponseCompound = (EzsignformfieldgroupResponseCompound) o;
    return Objects.equals(this.aObjEzsignformfield, ezsignformfieldgroupResponseCompound.aObjEzsignformfield) &&
        Objects.equals(this.aObjDropdownElement, ezsignformfieldgroupResponseCompound.aObjDropdownElement) &&
        Objects.equals(this.aObjEzsignformfieldgroupsigner, ezsignformfieldgroupResponseCompound.aObjEzsignformfieldgroupsigner) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aObjEzsignformfield, aObjDropdownElement, aObjEzsignformfieldgroupsigner, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EzsignformfieldgroupResponseCompound {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    aObjEzsignformfield: ").append(toIndentedString(aObjEzsignformfield)).append("\n");
    sb.append("    aObjDropdownElement: ").append(toIndentedString(aObjDropdownElement)).append("\n");
    sb.append("    aObjEzsignformfieldgroupsigner: ").append(toIndentedString(aObjEzsignformfieldgroupsigner)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pkiEzsignformfieldgroupID");
    openapiFields.add("fkiEzsigndocumentID");
    openapiFields.add("eEzsignformfieldgroupType");
    openapiFields.add("eEzsignformfieldgroupSignerrequirement");
    openapiFields.add("sEzsignformfieldgroupLabel");
    openapiFields.add("iEzsignformfieldgroupStep");
    openapiFields.add("sEzsignformfieldgroupDefaultvalue");
    openapiFields.add("iEzsignformfieldgroupFilledmin");
    openapiFields.add("iEzsignformfieldgroupFilledmax");
    openapiFields.add("bEzsignformfieldgroupReadonly");
    openapiFields.add("iEzsignformfieldgroupMaxlength");
    openapiFields.add("bEzsignformfieldgroupEncrypted");
    openapiFields.add("eEzsignformfieldgroupTextvalidation");
    openapiFields.add("sEzsignformfieldgroupRegexp");
    openapiFields.add("sEzsignformfieldgroupTextvalidationcustommessage");
    openapiFields.add("tEzsignformfieldgroupTooltip");
    openapiFields.add("eEzsignformfieldgroupTooltipposition");
    openapiFields.add("a_objEzsignformfield");
    openapiFields.add("a_objDropdownElement");
    openapiFields.add("a_objEzsignformfieldgroupsigner");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("a_objEzsignformfield");
    openapiRequiredFields.add("a_objEzsignformfieldgroupsigner");
    openapiRequiredFields.add("pkiEzsignformfieldgroupID");
    openapiRequiredFields.add("fkiEzsigndocumentID");
    openapiRequiredFields.add("eEzsignformfieldgroupType");
    openapiRequiredFields.add("sEzsignformfieldgroupLabel");
    openapiRequiredFields.add("iEzsignformfieldgroupStep");
    openapiRequiredFields.add("iEzsignformfieldgroupFilledmin");
    openapiRequiredFields.add("iEzsignformfieldgroupFilledmax");
    openapiRequiredFields.add("bEzsignformfieldgroupReadonly");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EzsignformfieldgroupResponseCompound
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EzsignformfieldgroupResponseCompound.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EzsignformfieldgroupResponseCompound is not found in the empty JSON string", EzsignformfieldgroupResponseCompound.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EzsignformfieldgroupResponseCompound.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EzsignformfieldgroupResponseCompound` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : EzsignformfieldgroupResponseCompound.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the json data is an array
      if (!jsonObj.get("a_objEzsignformfield").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `a_objEzsignformfield` to be an array in the JSON string but got `%s`", jsonObj.get("a_objEzsignformfield").toString()));
      }

      JsonArray jsonArrayaObjEzsignformfield = jsonObj.getAsJsonArray("a_objEzsignformfield");
      // validate the required field `a_objEzsignformfield` (array)
      for (int i = 0; i < jsonArrayaObjEzsignformfield.size(); i++) {
        EzsignformfieldResponseCompound.validateJsonElement(jsonArrayaObjEzsignformfield.get(i));
      };
      if (jsonObj.get("a_objDropdownElement") != null && !jsonObj.get("a_objDropdownElement").isJsonNull()) {
        JsonArray jsonArrayaObjDropdownElement = jsonObj.getAsJsonArray("a_objDropdownElement");
        if (jsonArrayaObjDropdownElement != null) {
          // ensure the json data is an array
          if (!jsonObj.get("a_objDropdownElement").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `a_objDropdownElement` to be an array in the JSON string but got `%s`", jsonObj.get("a_objDropdownElement").toString()));
          }

          // validate the optional field `a_objDropdownElement` (array)
          for (int i = 0; i < jsonArrayaObjDropdownElement.size(); i++) {
            CustomDropdownElementResponse.validateJsonElement(jsonArrayaObjDropdownElement.get(i));
          };
        }
      }
      // ensure the json data is an array
      if (!jsonObj.get("a_objEzsignformfieldgroupsigner").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `a_objEzsignformfieldgroupsigner` to be an array in the JSON string but got `%s`", jsonObj.get("a_objEzsignformfieldgroupsigner").toString()));
      }

      JsonArray jsonArrayaObjEzsignformfieldgroupsigner = jsonObj.getAsJsonArray("a_objEzsignformfieldgroupsigner");
      // validate the required field `a_objEzsignformfieldgroupsigner` (array)
      for (int i = 0; i < jsonArrayaObjEzsignformfieldgroupsigner.size(); i++) {
        EzsignformfieldgroupsignerResponse.validateJsonElement(jsonArrayaObjEzsignformfieldgroupsigner.get(i));
      };
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EzsignformfieldgroupResponseCompound.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EzsignformfieldgroupResponseCompound' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EzsignformfieldgroupResponseCompound> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EzsignformfieldgroupResponseCompound.class));

       return (TypeAdapter<T>) new TypeAdapter<EzsignformfieldgroupResponseCompound>() {
           @Override
           public void write(JsonWriter out, EzsignformfieldgroupResponseCompound value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EzsignformfieldgroupResponseCompound read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EzsignformfieldgroupResponseCompound given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EzsignformfieldgroupResponseCompound
   * @throws IOException if the JSON string is invalid with respect to EzsignformfieldgroupResponseCompound
   */
  public static EzsignformfieldgroupResponseCompound fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EzsignformfieldgroupResponseCompound.class);
  }

  /**
   * Convert an instance of EzsignformfieldgroupResponseCompound to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

