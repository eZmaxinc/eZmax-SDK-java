/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.ezmax.api.model.CommonAudit;
import com.ezmax.api.model.CustomEzsignfoldertypeResponse;
import com.ezmax.api.model.CustomTimezoneWithCodeResponse;
import com.ezmax.api.model.FieldEEzsignfolderCompletion;
import com.ezmax.api.model.FieldEEzsignfolderSendreminderfrequency;
import com.ezmax.api.model.FieldEEzsignfolderStep;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * An Ezsignfolder Object and children to create a complete structure
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-16T17:00:54.231192679Z[Etc/UTC]", comments = "Generator version: 7.10.0")
public class EzsignfolderResponseCompound {
  public static final String SERIALIZED_NAME_PKI_EZSIGNFOLDER_I_D = "pkiEzsignfolderID";
  @SerializedName(SERIALIZED_NAME_PKI_EZSIGNFOLDER_I_D)
  @javax.annotation.Nonnull
  private Integer pkiEzsignfolderID;

  public static final String SERIALIZED_NAME_FKI_EZSIGNFOLDERTYPE_I_D = "fkiEzsignfoldertypeID";
  @SerializedName(SERIALIZED_NAME_FKI_EZSIGNFOLDERTYPE_I_D)
  @javax.annotation.Nullable
  private Integer fkiEzsignfoldertypeID;

  public static final String SERIALIZED_NAME_OBJ_EZSIGNFOLDERTYPE = "objEzsignfoldertype";
  @SerializedName(SERIALIZED_NAME_OBJ_EZSIGNFOLDERTYPE)
  @javax.annotation.Nullable
  private CustomEzsignfoldertypeResponse objEzsignfoldertype;

  public static final String SERIALIZED_NAME_FKI_TIMEZONE_I_D = "fkiTimezoneID";
  @SerializedName(SERIALIZED_NAME_FKI_TIMEZONE_I_D)
  @javax.annotation.Nullable
  private Integer fkiTimezoneID;

  public static final String SERIALIZED_NAME_E_EZSIGNFOLDER_COMPLETION = "eEzsignfolderCompletion";
  @SerializedName(SERIALIZED_NAME_E_EZSIGNFOLDER_COMPLETION)
  @javax.annotation.Nonnull
  private FieldEEzsignfolderCompletion eEzsignfolderCompletion;

  public static final String SERIALIZED_NAME_S_EZSIGNFOLDERTYPE_NAME_X = "sEzsignfoldertypeNameX";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_S_EZSIGNFOLDERTYPE_NAME_X)
  @javax.annotation.Nullable
  private String sEzsignfoldertypeNameX;

  public static final String SERIALIZED_NAME_FKI_BILLINGENTITYINTERNAL_I_D = "fkiBillingentityinternalID";
  @SerializedName(SERIALIZED_NAME_FKI_BILLINGENTITYINTERNAL_I_D)
  @javax.annotation.Nullable
  private Integer fkiBillingentityinternalID;

  public static final String SERIALIZED_NAME_S_BILLINGENTITYINTERNAL_DESCRIPTION_X = "sBillingentityinternalDescriptionX";
  @SerializedName(SERIALIZED_NAME_S_BILLINGENTITYINTERNAL_DESCRIPTION_X)
  @javax.annotation.Nullable
  private String sBillingentityinternalDescriptionX;

  public static final String SERIALIZED_NAME_FKI_EZSIGNTSAREQUIREMENT_I_D = "fkiEzsigntsarequirementID";
  @SerializedName(SERIALIZED_NAME_FKI_EZSIGNTSAREQUIREMENT_I_D)
  @javax.annotation.Nullable
  private Integer fkiEzsigntsarequirementID;

  public static final String SERIALIZED_NAME_S_EZSIGNTSAREQUIREMENT_DESCRIPTION_X = "sEzsigntsarequirementDescriptionX";
  @SerializedName(SERIALIZED_NAME_S_EZSIGNTSAREQUIREMENT_DESCRIPTION_X)
  @javax.annotation.Nullable
  private String sEzsigntsarequirementDescriptionX;

  public static final String SERIALIZED_NAME_S_EZSIGNFOLDER_DESCRIPTION = "sEzsignfolderDescription";
  @SerializedName(SERIALIZED_NAME_S_EZSIGNFOLDER_DESCRIPTION)
  @javax.annotation.Nonnull
  private String sEzsignfolderDescription;

  public static final String SERIALIZED_NAME_T_EZSIGNFOLDER_NOTE = "tEzsignfolderNote";
  @SerializedName(SERIALIZED_NAME_T_EZSIGNFOLDER_NOTE)
  @javax.annotation.Nullable
  private String tEzsignfolderNote;

  public static final String SERIALIZED_NAME_B_EZSIGNFOLDER_ISDISPOSABLE = "bEzsignfolderIsdisposable";
  @SerializedName(SERIALIZED_NAME_B_EZSIGNFOLDER_ISDISPOSABLE)
  @javax.annotation.Nullable
  private Boolean bEzsignfolderIsdisposable;

  public static final String SERIALIZED_NAME_E_EZSIGNFOLDER_SENDREMINDERFREQUENCY = "eEzsignfolderSendreminderfrequency";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_E_EZSIGNFOLDER_SENDREMINDERFREQUENCY)
  @javax.annotation.Nullable
  private FieldEEzsignfolderSendreminderfrequency eEzsignfolderSendreminderfrequency;

  public static final String SERIALIZED_NAME_I_EZSIGNFOLDER_SENDREMINDERFIRSTDAYS = "iEzsignfolderSendreminderfirstdays";
  @SerializedName(SERIALIZED_NAME_I_EZSIGNFOLDER_SENDREMINDERFIRSTDAYS)
  @javax.annotation.Nullable
  private Integer iEzsignfolderSendreminderfirstdays;

  public static final String SERIALIZED_NAME_I_EZSIGNFOLDER_SENDREMINDEROTHERDAYS = "iEzsignfolderSendreminderotherdays";
  @SerializedName(SERIALIZED_NAME_I_EZSIGNFOLDER_SENDREMINDEROTHERDAYS)
  @javax.annotation.Nullable
  private Integer iEzsignfolderSendreminderotherdays;

  public static final String SERIALIZED_NAME_DT_EZSIGNFOLDER_DELAYEDSENDDATE = "dtEzsignfolderDelayedsenddate";
  @SerializedName(SERIALIZED_NAME_DT_EZSIGNFOLDER_DELAYEDSENDDATE)
  @javax.annotation.Nullable
  private String dtEzsignfolderDelayedsenddate;

  public static final String SERIALIZED_NAME_DT_EZSIGNFOLDER_DUEDATE = "dtEzsignfolderDuedate";
  @SerializedName(SERIALIZED_NAME_DT_EZSIGNFOLDER_DUEDATE)
  @javax.annotation.Nullable
  private String dtEzsignfolderDuedate;

  public static final String SERIALIZED_NAME_DT_EZSIGNFOLDER_SENTDATE = "dtEzsignfolderSentdate";
  @SerializedName(SERIALIZED_NAME_DT_EZSIGNFOLDER_SENTDATE)
  @javax.annotation.Nullable
  private String dtEzsignfolderSentdate;

  public static final String SERIALIZED_NAME_DT_EZSIGNFOLDER_SCHEDULEDARCHIVE = "dtEzsignfolderScheduledarchive";
  @SerializedName(SERIALIZED_NAME_DT_EZSIGNFOLDER_SCHEDULEDARCHIVE)
  @javax.annotation.Nullable
  private String dtEzsignfolderScheduledarchive;

  public static final String SERIALIZED_NAME_DT_EZSIGNFOLDER_SCHEDULEDDISPOSE = "dtEzsignfolderScheduleddispose";
  @SerializedName(SERIALIZED_NAME_DT_EZSIGNFOLDER_SCHEDULEDDISPOSE)
  @javax.annotation.Nullable
  private String dtEzsignfolderScheduleddispose;

  public static final String SERIALIZED_NAME_E_EZSIGNFOLDER_STEP = "eEzsignfolderStep";
  @SerializedName(SERIALIZED_NAME_E_EZSIGNFOLDER_STEP)
  @javax.annotation.Nullable
  private FieldEEzsignfolderStep eEzsignfolderStep;

  public static final String SERIALIZED_NAME_DT_EZSIGNFOLDER_CLOSE = "dtEzsignfolderClose";
  @SerializedName(SERIALIZED_NAME_DT_EZSIGNFOLDER_CLOSE)
  @javax.annotation.Nullable
  private String dtEzsignfolderClose;

  public static final String SERIALIZED_NAME_T_EZSIGNFOLDER_MESSAGE = "tEzsignfolderMessage";
  @SerializedName(SERIALIZED_NAME_T_EZSIGNFOLDER_MESSAGE)
  @javax.annotation.Nullable
  private String tEzsignfolderMessage;

  public static final String SERIALIZED_NAME_OBJ_AUDIT = "objAudit";
  @SerializedName(SERIALIZED_NAME_OBJ_AUDIT)
  @javax.annotation.Nullable
  private CommonAudit objAudit;

  public static final String SERIALIZED_NAME_S_EZSIGNFOLDER_EXTERNALID = "sEzsignfolderExternalid";
  @SerializedName(SERIALIZED_NAME_S_EZSIGNFOLDER_EXTERNALID)
  @javax.annotation.Nullable
  private String sEzsignfolderExternalid;

  public static final String SERIALIZED_NAME_OBJ_TIMEZONE = "objTimezone";
  @SerializedName(SERIALIZED_NAME_OBJ_TIMEZONE)
  @javax.annotation.Nullable
  private CustomTimezoneWithCodeResponse objTimezone;

  public EzsignfolderResponseCompound() {
  }

  public EzsignfolderResponseCompound pkiEzsignfolderID(@javax.annotation.Nonnull Integer pkiEzsignfolderID) {
    this.pkiEzsignfolderID = pkiEzsignfolderID;
    return this;
  }

  /**
   * The unique ID of the Ezsignfolder
   * minimum: 0
   * @return pkiEzsignfolderID
   */
  @javax.annotation.Nonnull
  public Integer getPkiEzsignfolderID() {
    return pkiEzsignfolderID;
  }

  public void setPkiEzsignfolderID(@javax.annotation.Nonnull Integer pkiEzsignfolderID) {
    this.pkiEzsignfolderID = pkiEzsignfolderID;
  }


  public EzsignfolderResponseCompound fkiEzsignfoldertypeID(@javax.annotation.Nullable Integer fkiEzsignfoldertypeID) {
    this.fkiEzsignfoldertypeID = fkiEzsignfoldertypeID;
    return this;
  }

  /**
   * The unique ID of the Ezsignfoldertype.
   * minimum: 0
   * maximum: 65535
   * @return fkiEzsignfoldertypeID
   */
  @javax.annotation.Nullable
  public Integer getFkiEzsignfoldertypeID() {
    return fkiEzsignfoldertypeID;
  }

  public void setFkiEzsignfoldertypeID(@javax.annotation.Nullable Integer fkiEzsignfoldertypeID) {
    this.fkiEzsignfoldertypeID = fkiEzsignfoldertypeID;
  }


  public EzsignfolderResponseCompound objEzsignfoldertype(@javax.annotation.Nullable CustomEzsignfoldertypeResponse objEzsignfoldertype) {
    this.objEzsignfoldertype = objEzsignfoldertype;
    return this;
  }

  /**
   * Get objEzsignfoldertype
   * @return objEzsignfoldertype
   */
  @javax.annotation.Nullable
  public CustomEzsignfoldertypeResponse getObjEzsignfoldertype() {
    return objEzsignfoldertype;
  }

  public void setObjEzsignfoldertype(@javax.annotation.Nullable CustomEzsignfoldertypeResponse objEzsignfoldertype) {
    this.objEzsignfoldertype = objEzsignfoldertype;
  }


  public EzsignfolderResponseCompound fkiTimezoneID(@javax.annotation.Nullable Integer fkiTimezoneID) {
    this.fkiTimezoneID = fkiTimezoneID;
    return this;
  }

  /**
   * The unique ID of the Timezone
   * minimum: 0
   * @return fkiTimezoneID
   */
  @javax.annotation.Nullable
  public Integer getFkiTimezoneID() {
    return fkiTimezoneID;
  }

  public void setFkiTimezoneID(@javax.annotation.Nullable Integer fkiTimezoneID) {
    this.fkiTimezoneID = fkiTimezoneID;
  }


  public EzsignfolderResponseCompound eEzsignfolderCompletion(@javax.annotation.Nonnull FieldEEzsignfolderCompletion eEzsignfolderCompletion) {
    this.eEzsignfolderCompletion = eEzsignfolderCompletion;
    return this;
  }

  /**
   * Get eEzsignfolderCompletion
   * @return eEzsignfolderCompletion
   */
  @javax.annotation.Nonnull
  public FieldEEzsignfolderCompletion geteEzsignfolderCompletion() {
    return eEzsignfolderCompletion;
  }

  public void seteEzsignfolderCompletion(@javax.annotation.Nonnull FieldEEzsignfolderCompletion eEzsignfolderCompletion) {
    this.eEzsignfolderCompletion = eEzsignfolderCompletion;
  }


  @Deprecated
  public EzsignfolderResponseCompound sEzsignfoldertypeNameX(@javax.annotation.Nullable String sEzsignfoldertypeNameX) {
    this.sEzsignfoldertypeNameX = sEzsignfoldertypeNameX;
    return this;
  }

  /**
   * Get sEzsignfoldertypeNameX
   * @return sEzsignfoldertypeNameX
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getsEzsignfoldertypeNameX() {
    return sEzsignfoldertypeNameX;
  }

  @Deprecated
  public void setsEzsignfoldertypeNameX(@javax.annotation.Nullable String sEzsignfoldertypeNameX) {
    this.sEzsignfoldertypeNameX = sEzsignfoldertypeNameX;
  }


  public EzsignfolderResponseCompound fkiBillingentityinternalID(@javax.annotation.Nullable Integer fkiBillingentityinternalID) {
    this.fkiBillingentityinternalID = fkiBillingentityinternalID;
    return this;
  }

  /**
   * The unique ID of the Billingentityinternal.
   * minimum: 0
   * @return fkiBillingentityinternalID
   */
  @javax.annotation.Nullable
  public Integer getFkiBillingentityinternalID() {
    return fkiBillingentityinternalID;
  }

  public void setFkiBillingentityinternalID(@javax.annotation.Nullable Integer fkiBillingentityinternalID) {
    this.fkiBillingentityinternalID = fkiBillingentityinternalID;
  }


  public EzsignfolderResponseCompound sBillingentityinternalDescriptionX(@javax.annotation.Nullable String sBillingentityinternalDescriptionX) {
    this.sBillingentityinternalDescriptionX = sBillingentityinternalDescriptionX;
    return this;
  }

  /**
   * The description of the Billingentityinternal in the language of the requester
   * @return sBillingentityinternalDescriptionX
   */
  @javax.annotation.Nullable
  public String getsBillingentityinternalDescriptionX() {
    return sBillingentityinternalDescriptionX;
  }

  public void setsBillingentityinternalDescriptionX(@javax.annotation.Nullable String sBillingentityinternalDescriptionX) {
    this.sBillingentityinternalDescriptionX = sBillingentityinternalDescriptionX;
  }


  public EzsignfolderResponseCompound fkiEzsigntsarequirementID(@javax.annotation.Nullable Integer fkiEzsigntsarequirementID) {
    this.fkiEzsigntsarequirementID = fkiEzsigntsarequirementID;
    return this;
  }

  /**
   * The unique ID of the Ezsigntsarequirement.  Determine if a Time Stamping Authority should add a timestamp on each of the signature. Valid values:  |Value|Description| |-|-| |1|No. TSA Timestamping will requested. This will make all signatures a lot faster since no round-trip to the TSA server will be required. Timestamping will be made using eZsign server&#39;s time.| |2|Best effort. Timestamping from a Time Stamping Authority will be requested but is not mandatory. In the very improbable case it cannot be completed, the timestamping will be made using eZsign server&#39;s time. **Additional fee applies**| |3|Mandatory. Timestamping from a Time Stamping Authority will be requested and is mandatory. In the very improbable case it cannot be completed, the signature will fail and the user will be asked to retry. **Additional fee applies**|
   * minimum: 1
   * maximum: 3
   * @return fkiEzsigntsarequirementID
   */
  @javax.annotation.Nullable
  public Integer getFkiEzsigntsarequirementID() {
    return fkiEzsigntsarequirementID;
  }

  public void setFkiEzsigntsarequirementID(@javax.annotation.Nullable Integer fkiEzsigntsarequirementID) {
    this.fkiEzsigntsarequirementID = fkiEzsigntsarequirementID;
  }


  public EzsignfolderResponseCompound sEzsigntsarequirementDescriptionX(@javax.annotation.Nullable String sEzsigntsarequirementDescriptionX) {
    this.sEzsigntsarequirementDescriptionX = sEzsigntsarequirementDescriptionX;
    return this;
  }

  /**
   * The description of the Ezsigntsarequirement in the language of the requester
   * @return sEzsigntsarequirementDescriptionX
   */
  @javax.annotation.Nullable
  public String getsEzsigntsarequirementDescriptionX() {
    return sEzsigntsarequirementDescriptionX;
  }

  public void setsEzsigntsarequirementDescriptionX(@javax.annotation.Nullable String sEzsigntsarequirementDescriptionX) {
    this.sEzsigntsarequirementDescriptionX = sEzsigntsarequirementDescriptionX;
  }


  public EzsignfolderResponseCompound sEzsignfolderDescription(@javax.annotation.Nonnull String sEzsignfolderDescription) {
    this.sEzsignfolderDescription = sEzsignfolderDescription;
    return this;
  }

  /**
   * The description of the Ezsignfolder
   * @return sEzsignfolderDescription
   */
  @javax.annotation.Nonnull
  public String getsEzsignfolderDescription() {
    return sEzsignfolderDescription;
  }

  public void setsEzsignfolderDescription(@javax.annotation.Nonnull String sEzsignfolderDescription) {
    this.sEzsignfolderDescription = sEzsignfolderDescription;
  }


  public EzsignfolderResponseCompound tEzsignfolderNote(@javax.annotation.Nullable String tEzsignfolderNote) {
    this.tEzsignfolderNote = tEzsignfolderNote;
    return this;
  }

  /**
   * Note about the Ezsignfolder
   * @return tEzsignfolderNote
   */
  @javax.annotation.Nullable
  public String gettEzsignfolderNote() {
    return tEzsignfolderNote;
  }

  public void settEzsignfolderNote(@javax.annotation.Nullable String tEzsignfolderNote) {
    this.tEzsignfolderNote = tEzsignfolderNote;
  }


  public EzsignfolderResponseCompound bEzsignfolderIsdisposable(@javax.annotation.Nullable Boolean bEzsignfolderIsdisposable) {
    this.bEzsignfolderIsdisposable = bEzsignfolderIsdisposable;
    return this;
  }

  /**
   * If the Ezsigndocument can be disposed
   * @return bEzsignfolderIsdisposable
   */
  @javax.annotation.Nullable
  public Boolean getbEzsignfolderIsdisposable() {
    return bEzsignfolderIsdisposable;
  }

  public void setbEzsignfolderIsdisposable(@javax.annotation.Nullable Boolean bEzsignfolderIsdisposable) {
    this.bEzsignfolderIsdisposable = bEzsignfolderIsdisposable;
  }


  @Deprecated
  public EzsignfolderResponseCompound eEzsignfolderSendreminderfrequency(@javax.annotation.Nullable FieldEEzsignfolderSendreminderfrequency eEzsignfolderSendreminderfrequency) {
    this.eEzsignfolderSendreminderfrequency = eEzsignfolderSendreminderfrequency;
    return this;
  }

  /**
   * Get eEzsignfolderSendreminderfrequency
   * @return eEzsignfolderSendreminderfrequency
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public FieldEEzsignfolderSendreminderfrequency geteEzsignfolderSendreminderfrequency() {
    return eEzsignfolderSendreminderfrequency;
  }

  @Deprecated
  public void seteEzsignfolderSendreminderfrequency(@javax.annotation.Nullable FieldEEzsignfolderSendreminderfrequency eEzsignfolderSendreminderfrequency) {
    this.eEzsignfolderSendreminderfrequency = eEzsignfolderSendreminderfrequency;
  }


  public EzsignfolderResponseCompound iEzsignfolderSendreminderfirstdays(@javax.annotation.Nullable Integer iEzsignfolderSendreminderfirstdays) {
    this.iEzsignfolderSendreminderfirstdays = iEzsignfolderSendreminderfirstdays;
    return this;
  }

  /**
   * The number of days before the the first reminder sending
   * minimum: 0
   * maximum: 255
   * @return iEzsignfolderSendreminderfirstdays
   */
  @javax.annotation.Nullable
  public Integer getiEzsignfolderSendreminderfirstdays() {
    return iEzsignfolderSendreminderfirstdays;
  }

  public void setiEzsignfolderSendreminderfirstdays(@javax.annotation.Nullable Integer iEzsignfolderSendreminderfirstdays) {
    this.iEzsignfolderSendreminderfirstdays = iEzsignfolderSendreminderfirstdays;
  }


  public EzsignfolderResponseCompound iEzsignfolderSendreminderotherdays(@javax.annotation.Nullable Integer iEzsignfolderSendreminderotherdays) {
    this.iEzsignfolderSendreminderotherdays = iEzsignfolderSendreminderotherdays;
    return this;
  }

  /**
   * The number of days after the first reminder sending
   * minimum: 0
   * maximum: 255
   * @return iEzsignfolderSendreminderotherdays
   */
  @javax.annotation.Nullable
  public Integer getiEzsignfolderSendreminderotherdays() {
    return iEzsignfolderSendreminderotherdays;
  }

  public void setiEzsignfolderSendreminderotherdays(@javax.annotation.Nullable Integer iEzsignfolderSendreminderotherdays) {
    this.iEzsignfolderSendreminderotherdays = iEzsignfolderSendreminderotherdays;
  }


  public EzsignfolderResponseCompound dtEzsignfolderDelayedsenddate(@javax.annotation.Nullable String dtEzsignfolderDelayedsenddate) {
    this.dtEzsignfolderDelayedsenddate = dtEzsignfolderDelayedsenddate;
    return this;
  }

  /**
   * The date and time at which the Ezsignfolder will be sent in the future.
   * @return dtEzsignfolderDelayedsenddate
   */
  @javax.annotation.Nullable
  public String getDtEzsignfolderDelayedsenddate() {
    return dtEzsignfolderDelayedsenddate;
  }

  public void setDtEzsignfolderDelayedsenddate(@javax.annotation.Nullable String dtEzsignfolderDelayedsenddate) {
    this.dtEzsignfolderDelayedsenddate = dtEzsignfolderDelayedsenddate;
  }


  public EzsignfolderResponseCompound dtEzsignfolderDuedate(@javax.annotation.Nullable String dtEzsignfolderDuedate) {
    this.dtEzsignfolderDuedate = dtEzsignfolderDuedate;
    return this;
  }

  /**
   * The maximum date and time at which the Ezsignfolder can be signed.
   * @return dtEzsignfolderDuedate
   */
  @javax.annotation.Nullable
  public String getDtEzsignfolderDuedate() {
    return dtEzsignfolderDuedate;
  }

  public void setDtEzsignfolderDuedate(@javax.annotation.Nullable String dtEzsignfolderDuedate) {
    this.dtEzsignfolderDuedate = dtEzsignfolderDuedate;
  }


  public EzsignfolderResponseCompound dtEzsignfolderSentdate(@javax.annotation.Nullable String dtEzsignfolderSentdate) {
    this.dtEzsignfolderSentdate = dtEzsignfolderSentdate;
    return this;
  }

  /**
   * The date and time at which the Ezsignfolder was sent the last time.
   * @return dtEzsignfolderSentdate
   */
  @javax.annotation.Nullable
  public String getDtEzsignfolderSentdate() {
    return dtEzsignfolderSentdate;
  }

  public void setDtEzsignfolderSentdate(@javax.annotation.Nullable String dtEzsignfolderSentdate) {
    this.dtEzsignfolderSentdate = dtEzsignfolderSentdate;
  }


  public EzsignfolderResponseCompound dtEzsignfolderScheduledarchive(@javax.annotation.Nullable String dtEzsignfolderScheduledarchive) {
    this.dtEzsignfolderScheduledarchive = dtEzsignfolderScheduledarchive;
    return this;
  }

  /**
   * The scheduled date and time at which the Ezsignfolder should be archived.
   * @return dtEzsignfolderScheduledarchive
   */
  @javax.annotation.Nullable
  public String getDtEzsignfolderScheduledarchive() {
    return dtEzsignfolderScheduledarchive;
  }

  public void setDtEzsignfolderScheduledarchive(@javax.annotation.Nullable String dtEzsignfolderScheduledarchive) {
    this.dtEzsignfolderScheduledarchive = dtEzsignfolderScheduledarchive;
  }


  public EzsignfolderResponseCompound dtEzsignfolderScheduleddispose(@javax.annotation.Nullable String dtEzsignfolderScheduleddispose) {
    this.dtEzsignfolderScheduleddispose = dtEzsignfolderScheduleddispose;
    return this;
  }

  /**
   * The scheduled date at which the Ezsignfolder should be Disposed.
   * @return dtEzsignfolderScheduleddispose
   */
  @javax.annotation.Nullable
  public String getDtEzsignfolderScheduleddispose() {
    return dtEzsignfolderScheduleddispose;
  }

  public void setDtEzsignfolderScheduleddispose(@javax.annotation.Nullable String dtEzsignfolderScheduleddispose) {
    this.dtEzsignfolderScheduleddispose = dtEzsignfolderScheduleddispose;
  }


  public EzsignfolderResponseCompound eEzsignfolderStep(@javax.annotation.Nullable FieldEEzsignfolderStep eEzsignfolderStep) {
    this.eEzsignfolderStep = eEzsignfolderStep;
    return this;
  }

  /**
   * Get eEzsignfolderStep
   * @return eEzsignfolderStep
   */
  @javax.annotation.Nullable
  public FieldEEzsignfolderStep geteEzsignfolderStep() {
    return eEzsignfolderStep;
  }

  public void seteEzsignfolderStep(@javax.annotation.Nullable FieldEEzsignfolderStep eEzsignfolderStep) {
    this.eEzsignfolderStep = eEzsignfolderStep;
  }


  public EzsignfolderResponseCompound dtEzsignfolderClose(@javax.annotation.Nullable String dtEzsignfolderClose) {
    this.dtEzsignfolderClose = dtEzsignfolderClose;
    return this;
  }

  /**
   * The date and time at which the Ezsignfolder was closed. Either by applying the last signature or by completing it prematurely.
   * @return dtEzsignfolderClose
   */
  @javax.annotation.Nullable
  public String getDtEzsignfolderClose() {
    return dtEzsignfolderClose;
  }

  public void setDtEzsignfolderClose(@javax.annotation.Nullable String dtEzsignfolderClose) {
    this.dtEzsignfolderClose = dtEzsignfolderClose;
  }


  public EzsignfolderResponseCompound tEzsignfolderMessage(@javax.annotation.Nullable String tEzsignfolderMessage) {
    this.tEzsignfolderMessage = tEzsignfolderMessage;
    return this;
  }

  /**
   * A custom text message that will be added to the email sent.
   * @return tEzsignfolderMessage
   */
  @javax.annotation.Nullable
  public String gettEzsignfolderMessage() {
    return tEzsignfolderMessage;
  }

  public void settEzsignfolderMessage(@javax.annotation.Nullable String tEzsignfolderMessage) {
    this.tEzsignfolderMessage = tEzsignfolderMessage;
  }


  public EzsignfolderResponseCompound objAudit(@javax.annotation.Nullable CommonAudit objAudit) {
    this.objAudit = objAudit;
    return this;
  }

  /**
   * Get objAudit
   * @return objAudit
   */
  @javax.annotation.Nullable
  public CommonAudit getObjAudit() {
    return objAudit;
  }

  public void setObjAudit(@javax.annotation.Nullable CommonAudit objAudit) {
    this.objAudit = objAudit;
  }


  public EzsignfolderResponseCompound sEzsignfolderExternalid(@javax.annotation.Nullable String sEzsignfolderExternalid) {
    this.sEzsignfolderExternalid = sEzsignfolderExternalid;
    return this;
  }

  /**
   * This field can be used to store an External ID from the client&#39;s system.  Anything can be stored in this field, it will never be evaluated by the eZmax system and will be returned AS-IS.  To store multiple values, consider using a JSON formatted structure, a URL encoded string, a CSV or any other custom format. 
   * @return sEzsignfolderExternalid
   */
  @javax.annotation.Nullable
  public String getsEzsignfolderExternalid() {
    return sEzsignfolderExternalid;
  }

  public void setsEzsignfolderExternalid(@javax.annotation.Nullable String sEzsignfolderExternalid) {
    this.sEzsignfolderExternalid = sEzsignfolderExternalid;
  }


  public EzsignfolderResponseCompound objTimezone(@javax.annotation.Nullable CustomTimezoneWithCodeResponse objTimezone) {
    this.objTimezone = objTimezone;
    return this;
  }

  /**
   * Get objTimezone
   * @return objTimezone
   */
  @javax.annotation.Nullable
  public CustomTimezoneWithCodeResponse getObjTimezone() {
    return objTimezone;
  }

  public void setObjTimezone(@javax.annotation.Nullable CustomTimezoneWithCodeResponse objTimezone) {
    this.objTimezone = objTimezone;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EzsignfolderResponseCompound ezsignfolderResponseCompound = (EzsignfolderResponseCompound) o;
    return Objects.equals(this.pkiEzsignfolderID, ezsignfolderResponseCompound.pkiEzsignfolderID) &&
        Objects.equals(this.fkiEzsignfoldertypeID, ezsignfolderResponseCompound.fkiEzsignfoldertypeID) &&
        Objects.equals(this.objEzsignfoldertype, ezsignfolderResponseCompound.objEzsignfoldertype) &&
        Objects.equals(this.fkiTimezoneID, ezsignfolderResponseCompound.fkiTimezoneID) &&
        Objects.equals(this.eEzsignfolderCompletion, ezsignfolderResponseCompound.eEzsignfolderCompletion) &&
        Objects.equals(this.sEzsignfoldertypeNameX, ezsignfolderResponseCompound.sEzsignfoldertypeNameX) &&
        Objects.equals(this.fkiBillingentityinternalID, ezsignfolderResponseCompound.fkiBillingentityinternalID) &&
        Objects.equals(this.sBillingentityinternalDescriptionX, ezsignfolderResponseCompound.sBillingentityinternalDescriptionX) &&
        Objects.equals(this.fkiEzsigntsarequirementID, ezsignfolderResponseCompound.fkiEzsigntsarequirementID) &&
        Objects.equals(this.sEzsigntsarequirementDescriptionX, ezsignfolderResponseCompound.sEzsigntsarequirementDescriptionX) &&
        Objects.equals(this.sEzsignfolderDescription, ezsignfolderResponseCompound.sEzsignfolderDescription) &&
        Objects.equals(this.tEzsignfolderNote, ezsignfolderResponseCompound.tEzsignfolderNote) &&
        Objects.equals(this.bEzsignfolderIsdisposable, ezsignfolderResponseCompound.bEzsignfolderIsdisposable) &&
        Objects.equals(this.eEzsignfolderSendreminderfrequency, ezsignfolderResponseCompound.eEzsignfolderSendreminderfrequency) &&
        Objects.equals(this.iEzsignfolderSendreminderfirstdays, ezsignfolderResponseCompound.iEzsignfolderSendreminderfirstdays) &&
        Objects.equals(this.iEzsignfolderSendreminderotherdays, ezsignfolderResponseCompound.iEzsignfolderSendreminderotherdays) &&
        Objects.equals(this.dtEzsignfolderDelayedsenddate, ezsignfolderResponseCompound.dtEzsignfolderDelayedsenddate) &&
        Objects.equals(this.dtEzsignfolderDuedate, ezsignfolderResponseCompound.dtEzsignfolderDuedate) &&
        Objects.equals(this.dtEzsignfolderSentdate, ezsignfolderResponseCompound.dtEzsignfolderSentdate) &&
        Objects.equals(this.dtEzsignfolderScheduledarchive, ezsignfolderResponseCompound.dtEzsignfolderScheduledarchive) &&
        Objects.equals(this.dtEzsignfolderScheduleddispose, ezsignfolderResponseCompound.dtEzsignfolderScheduleddispose) &&
        Objects.equals(this.eEzsignfolderStep, ezsignfolderResponseCompound.eEzsignfolderStep) &&
        Objects.equals(this.dtEzsignfolderClose, ezsignfolderResponseCompound.dtEzsignfolderClose) &&
        Objects.equals(this.tEzsignfolderMessage, ezsignfolderResponseCompound.tEzsignfolderMessage) &&
        Objects.equals(this.objAudit, ezsignfolderResponseCompound.objAudit) &&
        Objects.equals(this.sEzsignfolderExternalid, ezsignfolderResponseCompound.sEzsignfolderExternalid) &&
        Objects.equals(this.objTimezone, ezsignfolderResponseCompound.objTimezone);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pkiEzsignfolderID, fkiEzsignfoldertypeID, objEzsignfoldertype, fkiTimezoneID, eEzsignfolderCompletion, sEzsignfoldertypeNameX, fkiBillingentityinternalID, sBillingentityinternalDescriptionX, fkiEzsigntsarequirementID, sEzsigntsarequirementDescriptionX, sEzsignfolderDescription, tEzsignfolderNote, bEzsignfolderIsdisposable, eEzsignfolderSendreminderfrequency, iEzsignfolderSendreminderfirstdays, iEzsignfolderSendreminderotherdays, dtEzsignfolderDelayedsenddate, dtEzsignfolderDuedate, dtEzsignfolderSentdate, dtEzsignfolderScheduledarchive, dtEzsignfolderScheduleddispose, eEzsignfolderStep, dtEzsignfolderClose, tEzsignfolderMessage, objAudit, sEzsignfolderExternalid, objTimezone);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EzsignfolderResponseCompound {\n");
    sb.append("    pkiEzsignfolderID: ").append(toIndentedString(pkiEzsignfolderID)).append("\n");
    sb.append("    fkiEzsignfoldertypeID: ").append(toIndentedString(fkiEzsignfoldertypeID)).append("\n");
    sb.append("    objEzsignfoldertype: ").append(toIndentedString(objEzsignfoldertype)).append("\n");
    sb.append("    fkiTimezoneID: ").append(toIndentedString(fkiTimezoneID)).append("\n");
    sb.append("    eEzsignfolderCompletion: ").append(toIndentedString(eEzsignfolderCompletion)).append("\n");
    sb.append("    sEzsignfoldertypeNameX: ").append(toIndentedString(sEzsignfoldertypeNameX)).append("\n");
    sb.append("    fkiBillingentityinternalID: ").append(toIndentedString(fkiBillingentityinternalID)).append("\n");
    sb.append("    sBillingentityinternalDescriptionX: ").append(toIndentedString(sBillingentityinternalDescriptionX)).append("\n");
    sb.append("    fkiEzsigntsarequirementID: ").append(toIndentedString(fkiEzsigntsarequirementID)).append("\n");
    sb.append("    sEzsigntsarequirementDescriptionX: ").append(toIndentedString(sEzsigntsarequirementDescriptionX)).append("\n");
    sb.append("    sEzsignfolderDescription: ").append(toIndentedString(sEzsignfolderDescription)).append("\n");
    sb.append("    tEzsignfolderNote: ").append(toIndentedString(tEzsignfolderNote)).append("\n");
    sb.append("    bEzsignfolderIsdisposable: ").append(toIndentedString(bEzsignfolderIsdisposable)).append("\n");
    sb.append("    eEzsignfolderSendreminderfrequency: ").append(toIndentedString(eEzsignfolderSendreminderfrequency)).append("\n");
    sb.append("    iEzsignfolderSendreminderfirstdays: ").append(toIndentedString(iEzsignfolderSendreminderfirstdays)).append("\n");
    sb.append("    iEzsignfolderSendreminderotherdays: ").append(toIndentedString(iEzsignfolderSendreminderotherdays)).append("\n");
    sb.append("    dtEzsignfolderDelayedsenddate: ").append(toIndentedString(dtEzsignfolderDelayedsenddate)).append("\n");
    sb.append("    dtEzsignfolderDuedate: ").append(toIndentedString(dtEzsignfolderDuedate)).append("\n");
    sb.append("    dtEzsignfolderSentdate: ").append(toIndentedString(dtEzsignfolderSentdate)).append("\n");
    sb.append("    dtEzsignfolderScheduledarchive: ").append(toIndentedString(dtEzsignfolderScheduledarchive)).append("\n");
    sb.append("    dtEzsignfolderScheduleddispose: ").append(toIndentedString(dtEzsignfolderScheduleddispose)).append("\n");
    sb.append("    eEzsignfolderStep: ").append(toIndentedString(eEzsignfolderStep)).append("\n");
    sb.append("    dtEzsignfolderClose: ").append(toIndentedString(dtEzsignfolderClose)).append("\n");
    sb.append("    tEzsignfolderMessage: ").append(toIndentedString(tEzsignfolderMessage)).append("\n");
    sb.append("    objAudit: ").append(toIndentedString(objAudit)).append("\n");
    sb.append("    sEzsignfolderExternalid: ").append(toIndentedString(sEzsignfolderExternalid)).append("\n");
    sb.append("    objTimezone: ").append(toIndentedString(objTimezone)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pkiEzsignfolderID");
    openapiFields.add("fkiEzsignfoldertypeID");
    openapiFields.add("objEzsignfoldertype");
    openapiFields.add("fkiTimezoneID");
    openapiFields.add("eEzsignfolderCompletion");
    openapiFields.add("sEzsignfoldertypeNameX");
    openapiFields.add("fkiBillingentityinternalID");
    openapiFields.add("sBillingentityinternalDescriptionX");
    openapiFields.add("fkiEzsigntsarequirementID");
    openapiFields.add("sEzsigntsarequirementDescriptionX");
    openapiFields.add("sEzsignfolderDescription");
    openapiFields.add("tEzsignfolderNote");
    openapiFields.add("bEzsignfolderIsdisposable");
    openapiFields.add("eEzsignfolderSendreminderfrequency");
    openapiFields.add("iEzsignfolderSendreminderfirstdays");
    openapiFields.add("iEzsignfolderSendreminderotherdays");
    openapiFields.add("dtEzsignfolderDelayedsenddate");
    openapiFields.add("dtEzsignfolderDuedate");
    openapiFields.add("dtEzsignfolderSentdate");
    openapiFields.add("dtEzsignfolderScheduledarchive");
    openapiFields.add("dtEzsignfolderScheduleddispose");
    openapiFields.add("eEzsignfolderStep");
    openapiFields.add("dtEzsignfolderClose");
    openapiFields.add("tEzsignfolderMessage");
    openapiFields.add("objAudit");
    openapiFields.add("sEzsignfolderExternalid");
    openapiFields.add("objTimezone");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("pkiEzsignfolderID");
    openapiRequiredFields.add("eEzsignfolderCompletion");
    openapiRequiredFields.add("sEzsignfolderDescription");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EzsignfolderResponseCompound
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EzsignfolderResponseCompound.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EzsignfolderResponseCompound is not found in the empty JSON string", EzsignfolderResponseCompound.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EzsignfolderResponseCompound.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EzsignfolderResponseCompound` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : EzsignfolderResponseCompound.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `objEzsignfoldertype`
      if (jsonObj.get("objEzsignfoldertype") != null && !jsonObj.get("objEzsignfoldertype").isJsonNull()) {
        CustomEzsignfoldertypeResponse.validateJsonElement(jsonObj.get("objEzsignfoldertype"));
      }
      // validate the required field `eEzsignfolderCompletion`
      FieldEEzsignfolderCompletion.validateJsonElement(jsonObj.get("eEzsignfolderCompletion"));
      if ((jsonObj.get("sEzsignfoldertypeNameX") != null && !jsonObj.get("sEzsignfoldertypeNameX").isJsonNull()) && !jsonObj.get("sEzsignfoldertypeNameX").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sEzsignfoldertypeNameX` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sEzsignfoldertypeNameX").toString()));
      }
      if ((jsonObj.get("sBillingentityinternalDescriptionX") != null && !jsonObj.get("sBillingentityinternalDescriptionX").isJsonNull()) && !jsonObj.get("sBillingentityinternalDescriptionX").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sBillingentityinternalDescriptionX` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sBillingentityinternalDescriptionX").toString()));
      }
      if ((jsonObj.get("sEzsigntsarequirementDescriptionX") != null && !jsonObj.get("sEzsigntsarequirementDescriptionX").isJsonNull()) && !jsonObj.get("sEzsigntsarequirementDescriptionX").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sEzsigntsarequirementDescriptionX` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sEzsigntsarequirementDescriptionX").toString()));
      }
      if (!jsonObj.get("sEzsignfolderDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sEzsignfolderDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sEzsignfolderDescription").toString()));
      }
      if ((jsonObj.get("tEzsignfolderNote") != null && !jsonObj.get("tEzsignfolderNote").isJsonNull()) && !jsonObj.get("tEzsignfolderNote").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tEzsignfolderNote` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tEzsignfolderNote").toString()));
      }
      // validate the optional field `eEzsignfolderSendreminderfrequency`
      if (jsonObj.get("eEzsignfolderSendreminderfrequency") != null && !jsonObj.get("eEzsignfolderSendreminderfrequency").isJsonNull()) {
        FieldEEzsignfolderSendreminderfrequency.validateJsonElement(jsonObj.get("eEzsignfolderSendreminderfrequency"));
      }
      if ((jsonObj.get("dtEzsignfolderDelayedsenddate") != null && !jsonObj.get("dtEzsignfolderDelayedsenddate").isJsonNull()) && !jsonObj.get("dtEzsignfolderDelayedsenddate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dtEzsignfolderDelayedsenddate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dtEzsignfolderDelayedsenddate").toString()));
      }
      if ((jsonObj.get("dtEzsignfolderDuedate") != null && !jsonObj.get("dtEzsignfolderDuedate").isJsonNull()) && !jsonObj.get("dtEzsignfolderDuedate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dtEzsignfolderDuedate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dtEzsignfolderDuedate").toString()));
      }
      if ((jsonObj.get("dtEzsignfolderSentdate") != null && !jsonObj.get("dtEzsignfolderSentdate").isJsonNull()) && !jsonObj.get("dtEzsignfolderSentdate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dtEzsignfolderSentdate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dtEzsignfolderSentdate").toString()));
      }
      if ((jsonObj.get("dtEzsignfolderScheduledarchive") != null && !jsonObj.get("dtEzsignfolderScheduledarchive").isJsonNull()) && !jsonObj.get("dtEzsignfolderScheduledarchive").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dtEzsignfolderScheduledarchive` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dtEzsignfolderScheduledarchive").toString()));
      }
      if ((jsonObj.get("dtEzsignfolderScheduleddispose") != null && !jsonObj.get("dtEzsignfolderScheduleddispose").isJsonNull()) && !jsonObj.get("dtEzsignfolderScheduleddispose").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dtEzsignfolderScheduleddispose` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dtEzsignfolderScheduleddispose").toString()));
      }
      // validate the optional field `eEzsignfolderStep`
      if (jsonObj.get("eEzsignfolderStep") != null && !jsonObj.get("eEzsignfolderStep").isJsonNull()) {
        FieldEEzsignfolderStep.validateJsonElement(jsonObj.get("eEzsignfolderStep"));
      }
      if ((jsonObj.get("dtEzsignfolderClose") != null && !jsonObj.get("dtEzsignfolderClose").isJsonNull()) && !jsonObj.get("dtEzsignfolderClose").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dtEzsignfolderClose` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dtEzsignfolderClose").toString()));
      }
      if ((jsonObj.get("tEzsignfolderMessage") != null && !jsonObj.get("tEzsignfolderMessage").isJsonNull()) && !jsonObj.get("tEzsignfolderMessage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tEzsignfolderMessage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tEzsignfolderMessage").toString()));
      }
      // validate the optional field `objAudit`
      if (jsonObj.get("objAudit") != null && !jsonObj.get("objAudit").isJsonNull()) {
        CommonAudit.validateJsonElement(jsonObj.get("objAudit"));
      }
      if ((jsonObj.get("sEzsignfolderExternalid") != null && !jsonObj.get("sEzsignfolderExternalid").isJsonNull()) && !jsonObj.get("sEzsignfolderExternalid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sEzsignfolderExternalid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sEzsignfolderExternalid").toString()));
      }
      // validate the optional field `objTimezone`
      if (jsonObj.get("objTimezone") != null && !jsonObj.get("objTimezone").isJsonNull()) {
        CustomTimezoneWithCodeResponse.validateJsonElement(jsonObj.get("objTimezone"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EzsignfolderResponseCompound.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EzsignfolderResponseCompound' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EzsignfolderResponseCompound> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EzsignfolderResponseCompound.class));

       return (TypeAdapter<T>) new TypeAdapter<EzsignfolderResponseCompound>() {
           @Override
           public void write(JsonWriter out, EzsignfolderResponseCompound value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EzsignfolderResponseCompound read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EzsignfolderResponseCompound given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EzsignfolderResponseCompound
   * @throws IOException if the JSON string is invalid with respect to EzsignfolderResponseCompound
   */
  public static EzsignfolderResponseCompound fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EzsignfolderResponseCompound.class);
  }

  /**
   * Convert an instance of EzsignfolderResponseCompound to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

