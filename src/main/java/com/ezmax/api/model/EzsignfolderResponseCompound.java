/*
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ezmax.api.model;

import java.util.Objects;
import com.ezmax.api.model.CommonAudit;
import com.ezmax.api.model.CustomEzsignfoldertypeResponse;
import com.ezmax.api.model.CustomTimezoneWithCodeResponse;
import com.ezmax.api.model.EzsignfolderResponse;
import com.ezmax.api.model.FieldEEzsignfolderCompletion;
import com.ezmax.api.model.FieldEEzsignfolderSendreminderfrequency;
import com.ezmax.api.model.FieldEEzsignfolderStep;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import eZmaxAPI.JSON;

/**
 * An Ezsignfolder Object and children to create a complete structure
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-17T15:03:32.455495633Z[Etc/UTC]", comments = "Generator version: 7.10.0")
public class EzsignfolderResponseCompound extends EzsignfolderResponse {
  public static final String SERIALIZED_NAME_OBJ_TIMEZONE = "objTimezone";
  @SerializedName(SERIALIZED_NAME_OBJ_TIMEZONE)
  @javax.annotation.Nullable
  private CustomTimezoneWithCodeResponse objTimezone;

  public EzsignfolderResponseCompound() {
  }

  public EzsignfolderResponseCompound objTimezone(@javax.annotation.Nullable CustomTimezoneWithCodeResponse objTimezone) {
    this.objTimezone = objTimezone;
    return this;
  }

  /**
   * Get objTimezone
   * @return objTimezone
   */
  @javax.annotation.Nullable
  public CustomTimezoneWithCodeResponse getObjTimezone() {
    return objTimezone;
  }

  public void setObjTimezone(@javax.annotation.Nullable CustomTimezoneWithCodeResponse objTimezone) {
    this.objTimezone = objTimezone;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EzsignfolderResponseCompound ezsignfolderResponseCompound = (EzsignfolderResponseCompound) o;
    return Objects.equals(this.objTimezone, ezsignfolderResponseCompound.objTimezone) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(objTimezone, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EzsignfolderResponseCompound {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    objTimezone: ").append(toIndentedString(objTimezone)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pkiEzsignfolderID");
    openapiFields.add("fkiEzsignfoldertypeID");
    openapiFields.add("objEzsignfoldertype");
    openapiFields.add("fkiTimezoneID");
    openapiFields.add("eEzsignfolderCompletion");
    openapiFields.add("sEzsignfoldertypeNameX");
    openapiFields.add("fkiBillingentityinternalID");
    openapiFields.add("sBillingentityinternalDescriptionX");
    openapiFields.add("fkiEzsigntsarequirementID");
    openapiFields.add("sEzsigntsarequirementDescriptionX");
    openapiFields.add("sEzsignfolderDescription");
    openapiFields.add("tEzsignfolderNote");
    openapiFields.add("bEzsignfolderIsdisposable");
    openapiFields.add("eEzsignfolderSendreminderfrequency");
    openapiFields.add("iEzsignfolderSendreminderfirstdays");
    openapiFields.add("iEzsignfolderSendreminderotherdays");
    openapiFields.add("dtEzsignfolderDelayedsenddate");
    openapiFields.add("dtEzsignfolderDuedate");
    openapiFields.add("dtEzsignfolderSentdate");
    openapiFields.add("dtEzsignfolderScheduledarchive");
    openapiFields.add("dtEzsignfolderScheduleddispose");
    openapiFields.add("eEzsignfolderStep");
    openapiFields.add("dtEzsignfolderClose");
    openapiFields.add("tEzsignfolderMessage");
    openapiFields.add("objAudit");
    openapiFields.add("sEzsignfolderExternalid");
    openapiFields.add("objTimezone");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("pkiEzsignfolderID");
    openapiRequiredFields.add("eEzsignfolderCompletion");
    openapiRequiredFields.add("sEzsignfolderDescription");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EzsignfolderResponseCompound
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EzsignfolderResponseCompound.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EzsignfolderResponseCompound is not found in the empty JSON string", EzsignfolderResponseCompound.openapiRequiredFields.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `objTimezone`
      if (jsonObj.get("objTimezone") != null && !jsonObj.get("objTimezone").isJsonNull()) {
        CustomTimezoneWithCodeResponse.validateJsonElement(jsonObj.get("objTimezone"));
      }
  }


  /**
   * Create an instance of EzsignfolderResponseCompound given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EzsignfolderResponseCompound
   * @throws IOException if the JSON string is invalid with respect to EzsignfolderResponseCompound
   */
  public static EzsignfolderResponseCompound fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EzsignfolderResponseCompound.class);
  }

  /**
   * Convert an instance of EzsignfolderResponseCompound to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

